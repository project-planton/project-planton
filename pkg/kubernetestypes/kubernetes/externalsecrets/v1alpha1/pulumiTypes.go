// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type ClusterSecretStoreType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SecretStoreSpec defines the desired state of SecretStore.
	Spec *ClusterSecretStoreSpec `pulumi:"spec"`
	// SecretStoreStatus defines the observed state of the SecretStore.
	Status *ClusterSecretStoreStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreType
func (val *ClusterSecretStoreType) Defaults() *ClusterSecretStoreType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type ClusterSecretStoreMetadata struct {
}

// SecretStoreSpec defines the desired state of SecretStore.
type ClusterSecretStoreSpec struct {
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller *string `pulumi:"controller"`
	// Used to configure the provider. Only one provider may be set
	Provider ClusterSecretStoreSpecProvider `pulumi:"provider"`
	// Used to configure http retries if failed
	RetrySettings *ClusterSecretStoreSpecRetrySettings `pulumi:"retrySettings"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpec
func (val *ClusterSecretStoreSpec) Defaults() *ClusterSecretStoreSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Provider = *tmp.Provider.Defaults()

	return &tmp
}

// ClusterSecretStoreSpecInput is an input type that accepts ClusterSecretStoreSpecArgs and ClusterSecretStoreSpecOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecInput` via:
//
//	ClusterSecretStoreSpecArgs{...}
type ClusterSecretStoreSpecInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecOutput() ClusterSecretStoreSpecOutput
	ToClusterSecretStoreSpecOutputWithContext(context.Context) ClusterSecretStoreSpecOutput
}

// SecretStoreSpec defines the desired state of SecretStore.
type ClusterSecretStoreSpecArgs struct {
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller pulumi.StringPtrInput `pulumi:"controller"`
	// Used to configure the provider. Only one provider may be set
	Provider ClusterSecretStoreSpecProviderInput `pulumi:"provider"`
	// Used to configure http retries if failed
	RetrySettings ClusterSecretStoreSpecRetrySettingsPtrInput `pulumi:"retrySettings"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecArgs
func (val *ClusterSecretStoreSpecArgs) Defaults() *ClusterSecretStoreSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ClusterSecretStoreSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpec)(nil)).Elem()
}

func (i ClusterSecretStoreSpecArgs) ToClusterSecretStoreSpecOutput() ClusterSecretStoreSpecOutput {
	return i.ToClusterSecretStoreSpecOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecArgs) ToClusterSecretStoreSpecOutputWithContext(ctx context.Context) ClusterSecretStoreSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecOutput)
}

func (i ClusterSecretStoreSpecArgs) ToClusterSecretStoreSpecPtrOutput() ClusterSecretStoreSpecPtrOutput {
	return i.ToClusterSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecArgs) ToClusterSecretStoreSpecPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecOutput).ToClusterSecretStoreSpecPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecPtrInput is an input type that accepts ClusterSecretStoreSpecArgs, ClusterSecretStoreSpecPtr and ClusterSecretStoreSpecPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecPtrInput` via:
//
//	        ClusterSecretStoreSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecPtrOutput() ClusterSecretStoreSpecPtrOutput
	ToClusterSecretStoreSpecPtrOutputWithContext(context.Context) ClusterSecretStoreSpecPtrOutput
}

type clusterSecretStoreSpecPtrType ClusterSecretStoreSpecArgs

func ClusterSecretStoreSpecPtr(v *ClusterSecretStoreSpecArgs) ClusterSecretStoreSpecPtrInput {
	return (*clusterSecretStoreSpecPtrType)(v)
}

func (*clusterSecretStoreSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpec)(nil)).Elem()
}

func (i *clusterSecretStoreSpecPtrType) ToClusterSecretStoreSpecPtrOutput() ClusterSecretStoreSpecPtrOutput {
	return i.ToClusterSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecPtrType) ToClusterSecretStoreSpecPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecPtrOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type ClusterSecretStoreSpecOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpec)(nil)).Elem()
}

func (o ClusterSecretStoreSpecOutput) ToClusterSecretStoreSpecOutput() ClusterSecretStoreSpecOutput {
	return o
}

func (o ClusterSecretStoreSpecOutput) ToClusterSecretStoreSpecOutputWithContext(ctx context.Context) ClusterSecretStoreSpecOutput {
	return o
}

func (o ClusterSecretStoreSpecOutput) ToClusterSecretStoreSpecPtrOutput() ClusterSecretStoreSpecPtrOutput {
	return o.ToClusterSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecOutput) ToClusterSecretStoreSpecPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpec) *ClusterSecretStoreSpec {
		return &v
	}).(ClusterSecretStoreSpecPtrOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o ClusterSecretStoreSpecOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpec) *string { return v.Controller }).(pulumi.StringPtrOutput)
}

// Used to configure the provider. Only one provider may be set
func (o ClusterSecretStoreSpecOutput) Provider() ClusterSecretStoreSpecProviderOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpec) ClusterSecretStoreSpecProvider { return v.Provider }).(ClusterSecretStoreSpecProviderOutput)
}

// Used to configure http retries if failed
func (o ClusterSecretStoreSpecOutput) RetrySettings() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpec) *ClusterSecretStoreSpecRetrySettings { return v.RetrySettings }).(ClusterSecretStoreSpecRetrySettingsPtrOutput)
}

type ClusterSecretStoreSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpec)(nil)).Elem()
}

func (o ClusterSecretStoreSpecPtrOutput) ToClusterSecretStoreSpecPtrOutput() ClusterSecretStoreSpecPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecPtrOutput) ToClusterSecretStoreSpecPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecPtrOutput) Elem() ClusterSecretStoreSpecOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpec) ClusterSecretStoreSpec {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpec
		return ret
	}).(ClusterSecretStoreSpecOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o ClusterSecretStoreSpecPtrOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpec) *string {
		if v == nil {
			return nil
		}
		return v.Controller
	}).(pulumi.StringPtrOutput)
}

// Used to configure the provider. Only one provider may be set
func (o ClusterSecretStoreSpecPtrOutput) Provider() ClusterSecretStoreSpecProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpec) *ClusterSecretStoreSpecProvider {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(ClusterSecretStoreSpecProviderPtrOutput)
}

// Used to configure http retries if failed
func (o ClusterSecretStoreSpecPtrOutput) RetrySettings() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpec) *ClusterSecretStoreSpecRetrySettings {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(ClusterSecretStoreSpecRetrySettingsPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type ClusterSecretStoreSpecProvider struct {
	// Akeyless configures this store to sync secrets using Akeyless Vault provider
	Akeyless *ClusterSecretStoreSpecProviderAkeyless `pulumi:"akeyless"`
	// Alibaba configures this store to sync secrets using Alibaba Cloud provider
	Alibaba *ClusterSecretStoreSpecProviderAlibaba `pulumi:"alibaba"`
	// AWS configures this store to sync secrets using AWS Secret Manager provider
	Aws *ClusterSecretStoreSpecProviderAws `pulumi:"aws"`
	// AzureKV configures this store to sync secrets using Azure Key Vault provider
	Azurekv *ClusterSecretStoreSpecProviderAzurekv `pulumi:"azurekv"`
	// Fake configures a store with static key/value pairs
	Fake *ClusterSecretStoreSpecProviderFake `pulumi:"fake"`
	// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
	Gcpsm *ClusterSecretStoreSpecProviderGcpsm `pulumi:"gcpsm"`
	// GitLab configures this store to sync secrets using GitLab Variables provider
	Gitlab *ClusterSecretStoreSpecProviderGitlab `pulumi:"gitlab"`
	// IBM configures this store to sync secrets using IBM Cloud provider
	Ibm *ClusterSecretStoreSpecProviderIbm `pulumi:"ibm"`
	// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
	Kubernetes *ClusterSecretStoreSpecProviderKubernetes `pulumi:"kubernetes"`
	// Oracle configures this store to sync secrets using Oracle Vault provider
	Oracle *ClusterSecretStoreSpecProviderOracle `pulumi:"oracle"`
	// Configures a store to sync secrets with a Password Depot instance.
	Passworddepot *ClusterSecretStoreSpecProviderPassworddepot `pulumi:"passworddepot"`
	// Vault configures this store to sync secrets using Hashi provider
	Vault *ClusterSecretStoreSpecProviderVault `pulumi:"vault"`
	// Webhook configures this store to sync secrets using a generic templated webhook
	Webhook *ClusterSecretStoreSpecProviderWebhook `pulumi:"webhook"`
	// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
	Yandexlockbox *ClusterSecretStoreSpecProviderYandexlockbox `pulumi:"yandexlockbox"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProvider
func (val *ClusterSecretStoreSpecProvider) Defaults() *ClusterSecretStoreSpecProvider {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Azurekv = tmp.Azurekv.Defaults()

	tmp.Kubernetes = tmp.Kubernetes.Defaults()

	tmp.Vault = tmp.Vault.Defaults()

	return &tmp
}

// ClusterSecretStoreSpecProviderInput is an input type that accepts ClusterSecretStoreSpecProviderArgs and ClusterSecretStoreSpecProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderInput` via:
//
//	ClusterSecretStoreSpecProviderArgs{...}
type ClusterSecretStoreSpecProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOutput() ClusterSecretStoreSpecProviderOutput
	ToClusterSecretStoreSpecProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOutput
}

// Used to configure the provider. Only one provider may be set
type ClusterSecretStoreSpecProviderArgs struct {
	// Akeyless configures this store to sync secrets using Akeyless Vault provider
	Akeyless ClusterSecretStoreSpecProviderAkeylessPtrInput `pulumi:"akeyless"`
	// Alibaba configures this store to sync secrets using Alibaba Cloud provider
	Alibaba ClusterSecretStoreSpecProviderAlibabaPtrInput `pulumi:"alibaba"`
	// AWS configures this store to sync secrets using AWS Secret Manager provider
	Aws ClusterSecretStoreSpecProviderAwsPtrInput `pulumi:"aws"`
	// AzureKV configures this store to sync secrets using Azure Key Vault provider
	Azurekv ClusterSecretStoreSpecProviderAzurekvPtrInput `pulumi:"azurekv"`
	// Fake configures a store with static key/value pairs
	Fake ClusterSecretStoreSpecProviderFakePtrInput `pulumi:"fake"`
	// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
	Gcpsm ClusterSecretStoreSpecProviderGcpsmPtrInput `pulumi:"gcpsm"`
	// GitLab configures this store to sync secrets using GitLab Variables provider
	Gitlab ClusterSecretStoreSpecProviderGitlabPtrInput `pulumi:"gitlab"`
	// IBM configures this store to sync secrets using IBM Cloud provider
	Ibm ClusterSecretStoreSpecProviderIbmPtrInput `pulumi:"ibm"`
	// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
	Kubernetes ClusterSecretStoreSpecProviderKubernetesPtrInput `pulumi:"kubernetes"`
	// Oracle configures this store to sync secrets using Oracle Vault provider
	Oracle ClusterSecretStoreSpecProviderOraclePtrInput `pulumi:"oracle"`
	// Configures a store to sync secrets with a Password Depot instance.
	Passworddepot ClusterSecretStoreSpecProviderPassworddepotPtrInput `pulumi:"passworddepot"`
	// Vault configures this store to sync secrets using Hashi provider
	Vault ClusterSecretStoreSpecProviderVaultPtrInput `pulumi:"vault"`
	// Webhook configures this store to sync secrets using a generic templated webhook
	Webhook ClusterSecretStoreSpecProviderWebhookPtrInput `pulumi:"webhook"`
	// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
	Yandexlockbox ClusterSecretStoreSpecProviderYandexlockboxPtrInput `pulumi:"yandexlockbox"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderArgs
func (val *ClusterSecretStoreSpecProviderArgs) Defaults() *ClusterSecretStoreSpecProviderArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ClusterSecretStoreSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderArgs) ToClusterSecretStoreSpecProviderOutput() ClusterSecretStoreSpecProviderOutput {
	return i.ToClusterSecretStoreSpecProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderArgs) ToClusterSecretStoreSpecProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOutput)
}

func (i ClusterSecretStoreSpecProviderArgs) ToClusterSecretStoreSpecProviderPtrOutput() ClusterSecretStoreSpecProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderArgs) ToClusterSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOutput).ToClusterSecretStoreSpecProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderArgs, ClusterSecretStoreSpecProviderPtr and ClusterSecretStoreSpecProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPtrOutput() ClusterSecretStoreSpecProviderPtrOutput
	ToClusterSecretStoreSpecProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPtrOutput
}

type clusterSecretStoreSpecProviderPtrType ClusterSecretStoreSpecProviderArgs

func ClusterSecretStoreSpecProviderPtr(v *ClusterSecretStoreSpecProviderArgs) ClusterSecretStoreSpecProviderPtrInput {
	return (*clusterSecretStoreSpecProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderPtrType) ToClusterSecretStoreSpecProviderPtrOutput() ClusterSecretStoreSpecProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderPtrType) ToClusterSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type ClusterSecretStoreSpecProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOutput) ToClusterSecretStoreSpecProviderOutput() ClusterSecretStoreSpecProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOutput) ToClusterSecretStoreSpecProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOutput) ToClusterSecretStoreSpecProviderPtrOutput() ClusterSecretStoreSpecProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOutput) ToClusterSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
func (o ClusterSecretStoreSpecProviderOutput) Akeyless() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAkeyless { return v.Akeyless }).(ClusterSecretStoreSpecProviderAkeylessPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
func (o ClusterSecretStoreSpecProviderOutput) Alibaba() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAlibaba { return v.Alibaba }).(ClusterSecretStoreSpecProviderAlibabaPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
func (o ClusterSecretStoreSpecProviderOutput) Aws() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAws { return v.Aws }).(ClusterSecretStoreSpecProviderAwsPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
func (o ClusterSecretStoreSpecProviderOutput) Azurekv() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAzurekv { return v.Azurekv }).(ClusterSecretStoreSpecProviderAzurekvPtrOutput)
}

// Fake configures a store with static key/value pairs
func (o ClusterSecretStoreSpecProviderOutput) Fake() ClusterSecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderFake { return v.Fake }).(ClusterSecretStoreSpecProviderFakePtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
func (o ClusterSecretStoreSpecProviderOutput) Gcpsm() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderGcpsm { return v.Gcpsm }).(ClusterSecretStoreSpecProviderGcpsmPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
func (o ClusterSecretStoreSpecProviderOutput) Gitlab() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderGitlab { return v.Gitlab }).(ClusterSecretStoreSpecProviderGitlabPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
func (o ClusterSecretStoreSpecProviderOutput) Ibm() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderIbm { return v.Ibm }).(ClusterSecretStoreSpecProviderIbmPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
func (o ClusterSecretStoreSpecProviderOutput) Kubernetes() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderKubernetes { return v.Kubernetes }).(ClusterSecretStoreSpecProviderKubernetesPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
func (o ClusterSecretStoreSpecProviderOutput) Oracle() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderOracle { return v.Oracle }).(ClusterSecretStoreSpecProviderOraclePtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
func (o ClusterSecretStoreSpecProviderOutput) Passworddepot() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderPassworddepot {
		return v.Passworddepot
	}).(ClusterSecretStoreSpecProviderPassworddepotPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
func (o ClusterSecretStoreSpecProviderOutput) Vault() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderVault { return v.Vault }).(ClusterSecretStoreSpecProviderVaultPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
func (o ClusterSecretStoreSpecProviderOutput) Webhook() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderWebhook { return v.Webhook }).(ClusterSecretStoreSpecProviderWebhookPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
func (o ClusterSecretStoreSpecProviderOutput) Yandexlockbox() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderYandexlockbox {
		return v.Yandexlockbox
	}).(ClusterSecretStoreSpecProviderYandexlockboxPtrOutput)
}

type ClusterSecretStoreSpecProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPtrOutput) ToClusterSecretStoreSpecProviderPtrOutput() ClusterSecretStoreSpecProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPtrOutput) ToClusterSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) ClusterSecretStoreSpecProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProvider
		return ret
	}).(ClusterSecretStoreSpecProviderOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Akeyless() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAkeyless {
		if v == nil {
			return nil
		}
		return v.Akeyless
	}).(ClusterSecretStoreSpecProviderAkeylessPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Alibaba() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAlibaba {
		if v == nil {
			return nil
		}
		return v.Alibaba
	}).(ClusterSecretStoreSpecProviderAlibabaPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Aws() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAws {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(ClusterSecretStoreSpecProviderAwsPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Azurekv() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderAzurekv {
		if v == nil {
			return nil
		}
		return v.Azurekv
	}).(ClusterSecretStoreSpecProviderAzurekvPtrOutput)
}

// Fake configures a store with static key/value pairs
func (o ClusterSecretStoreSpecProviderPtrOutput) Fake() ClusterSecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderFake {
		if v == nil {
			return nil
		}
		return v.Fake
	}).(ClusterSecretStoreSpecProviderFakePtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Gcpsm() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderGcpsm {
		if v == nil {
			return nil
		}
		return v.Gcpsm
	}).(ClusterSecretStoreSpecProviderGcpsmPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Gitlab() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderGitlab {
		if v == nil {
			return nil
		}
		return v.Gitlab
	}).(ClusterSecretStoreSpecProviderGitlabPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Ibm() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderIbm {
		if v == nil {
			return nil
		}
		return v.Ibm
	}).(ClusterSecretStoreSpecProviderIbmPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Kubernetes() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(ClusterSecretStoreSpecProviderKubernetesPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Oracle() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderOracle {
		if v == nil {
			return nil
		}
		return v.Oracle
	}).(ClusterSecretStoreSpecProviderOraclePtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
func (o ClusterSecretStoreSpecProviderPtrOutput) Passworddepot() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderPassworddepot {
		if v == nil {
			return nil
		}
		return v.Passworddepot
	}).(ClusterSecretStoreSpecProviderPassworddepotPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Vault() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(ClusterSecretStoreSpecProviderVaultPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
func (o ClusterSecretStoreSpecProviderPtrOutput) Webhook() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderWebhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(ClusterSecretStoreSpecProviderWebhookPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
func (o ClusterSecretStoreSpecProviderPtrOutput) Yandexlockbox() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProvider) *ClusterSecretStoreSpecProviderYandexlockbox {
		if v == nil {
			return nil
		}
		return v.Yandexlockbox
	}).(ClusterSecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type ClusterSecretStoreSpecProviderAkeyless struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL string `pulumi:"akeylessGWApiURL"`
	// Auth configures how the operator authenticates with Akeyless.
	AuthSecretRef ClusterSecretStoreSpecProviderAkeylessAuthSecretRef `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
	CaProvider *ClusterSecretStoreSpecProviderAkeylessCaProvider `pulumi:"caProvider"`
}

// ClusterSecretStoreSpecProviderAkeylessInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessArgs and ClusterSecretStoreSpecProviderAkeylessOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessArgs{...}
type ClusterSecretStoreSpecProviderAkeylessInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessOutput() ClusterSecretStoreSpecProviderAkeylessOutput
	ToClusterSecretStoreSpecProviderAkeylessOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessOutput
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type ClusterSecretStoreSpecProviderAkeylessArgs struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL pulumi.StringInput `pulumi:"akeylessGWApiURL"`
	// Auth configures how the operator authenticates with Akeyless.
	AuthSecretRef ClusterSecretStoreSpecProviderAkeylessAuthSecretRefInput `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
	CaProvider ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput `pulumi:"caProvider"`
}

func (ClusterSecretStoreSpecProviderAkeylessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessArgs) ToClusterSecretStoreSpecProviderAkeylessOutput() ClusterSecretStoreSpecProviderAkeylessOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessArgs) ToClusterSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessArgs) ToClusterSecretStoreSpecProviderAkeylessPtrOutput() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessArgs) ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessOutput).ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessArgs, ClusterSecretStoreSpecProviderAkeylessPtr and ClusterSecretStoreSpecProviderAkeylessPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessPtrOutput() ClusterSecretStoreSpecProviderAkeylessPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessPtrType ClusterSecretStoreSpecProviderAkeylessArgs

func ClusterSecretStoreSpecProviderAkeylessPtr(v *ClusterSecretStoreSpecProviderAkeylessArgs) ClusterSecretStoreSpecProviderAkeylessPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessPtrType) ToClusterSecretStoreSpecProviderAkeylessPtrOutput() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessPtrType) ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type ClusterSecretStoreSpecProviderAkeylessOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessOutput) ToClusterSecretStoreSpecProviderAkeylessOutput() ClusterSecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessOutput) ToClusterSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessOutput) ToClusterSecretStoreSpecProviderAkeylessPtrOutput() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessOutput) ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeyless) *ClusterSecretStoreSpecProviderAkeyless {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o ClusterSecretStoreSpecProviderAkeylessOutput) AkeylessGWApiURL() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeyless) string { return v.AkeylessGWApiURL }).(pulumi.StringOutput)
}

// Auth configures how the operator authenticates with Akeyless.
func (o ClusterSecretStoreSpecProviderAkeylessOutput) AuthSecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeyless) ClusterSecretStoreSpecProviderAkeylessAuthSecretRef {
		return v.AuthSecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderAkeylessOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeyless) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
func (o ClusterSecretStoreSpecProviderAkeylessOutput) CaProvider() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeyless) *ClusterSecretStoreSpecProviderAkeylessCaProvider {
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) ToClusterSecretStoreSpecProviderAkeylessPtrOutput() ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) ToClusterSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeyless) ClusterSecretStoreSpecProviderAkeyless {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeyless
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return &v.AkeylessGWApiURL
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) AuthSecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeyless) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.AuthSecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
func (o ClusterSecretStoreSpecProviderAkeylessPtrOutput) CaProvider() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeyless) *ClusterSecretStoreSpecProviderAkeylessCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRef struct {
	// Kubernetes authenticates with Akeyless by passing the ServiceAccount
	// token stored in the named Secret resource.
	KubernetesAuth *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth `pulumi:"kubernetesAuth"`
	// Reference to a Secret that contains the details
	// to authenticate with Akeyless.
	SecretRef *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs struct {
	// Kubernetes authenticates with Akeyless by passing the ServiceAccount
	// token stored in the named Secret resource.
	KubernetesAuth ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput `pulumi:"kubernetesAuth"`
	// Reference to a Secret that contains the details
	// to authenticate with Akeyless.
	SecretRef ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) KubernetesAuth() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return v.KubernetesAuth
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput) SecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) ClusterSecretStoreSpecProviderAkeylessAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) KubernetesAuth() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v == nil {
			return nil
		}
		return v.KubernetesAuth
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) SecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID string `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName string `pulumi:"k8sConfName"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Akeyless. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Akeyless. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef `pulumi:"serviceAccountRef"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID pulumi.StringInput `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName pulumi.StringInput `pulumi:"k8sConfName"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Akeyless. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Akeyless. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) AccessID() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) string { return v.AccessID }).(pulumi.StringOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) K8sConfName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) string { return v.K8sConfName }).(pulumi.StringOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) SecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AccessID
	}).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return &v.K8sConfName
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef struct {
	// The SecretAccessID is used for authentication
	AccessID *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId `pulumi:"accessID"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessType *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType `pulumi:"accessType"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessTypeParam *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam `pulumi:"accessTypeParam"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs struct {
	// The SecretAccessID is used for authentication
	AccessID ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput `pulumi:"accessID"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput `pulumi:"accessType"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessTypeParam ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput `pulumi:"accessTypeParam"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// The SecretAccessID is used for authentication
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessID() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		return v.AccessID
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessType() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return v.AccessType
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessTypeParam() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return v.AccessTypeParam
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

// The SecretAccessID is used for authentication
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessID() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessType() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v == nil {
			return nil
		}
		return v.AccessType
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessTypeParam() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v == nil {
			return nil
		}
		return v.AccessTypeParam
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The SecretAccessID is used for authentication
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput
}

// The SecretAccessID is used for authentication
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// The SecretAccessID is used for authentication
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput).ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs, ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr and ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs

func ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type ClusterSecretStoreSpecProviderAkeylessCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// ClusterSecretStoreSpecProviderAkeylessCaProviderInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessCaProviderArgs and ClusterSecretStoreSpecProviderAkeylessCaProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessCaProviderInput` via:
//
//	ClusterSecretStoreSpecProviderAkeylessCaProviderArgs{...}
type ClusterSecretStoreSpecProviderAkeylessCaProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessCaProviderOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderOutput
	ToClusterSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderOutput
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type ClusterSecretStoreSpecProviderAkeylessCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ToClusterSecretStoreSpecProviderAkeylessCaProviderOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ToClusterSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessCaProviderOutput)
}

func (i ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessCaProviderOutput).ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAkeylessCaProviderArgs, ClusterSecretStoreSpecProviderAkeylessCaProviderPtr and ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAkeylessCaProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput
	ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput
}

type clusterSecretStoreSpecProviderAkeylessCaProviderPtrType ClusterSecretStoreSpecProviderAkeylessCaProviderArgs

func ClusterSecretStoreSpecProviderAkeylessCaProviderPtr(v *ClusterSecretStoreSpecProviderAkeylessCaProviderArgs) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput {
	return (*clusterSecretStoreSpecProviderAkeylessCaProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAkeylessCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAkeylessCaProviderPtrType) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAkeylessCaProviderPtrType) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type ClusterSecretStoreSpecProviderAkeylessCaProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAkeylessCaProvider) *ClusterSecretStoreSpecProviderAkeylessCaProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAkeylessCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput() ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderAkeylessCaProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessCaProvider) ClusterSecretStoreSpecProviderAkeylessCaProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAkeylessCaProvider
		return ret
	}).(ClusterSecretStoreSpecProviderAkeylessCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type ClusterSecretStoreSpecProviderAlibaba struct {
	// AlibabaAuth contains a secretRef for credentials.
	Auth ClusterSecretStoreSpecProviderAlibabaAuth `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID string `pulumi:"regionID"`
}

// ClusterSecretStoreSpecProviderAlibabaInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaArgs and ClusterSecretStoreSpecProviderAlibabaOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaArgs{...}
type ClusterSecretStoreSpecProviderAlibabaInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaOutput() ClusterSecretStoreSpecProviderAlibabaOutput
	ToClusterSecretStoreSpecProviderAlibabaOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaOutput
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type ClusterSecretStoreSpecProviderAlibabaArgs struct {
	// AlibabaAuth contains a secretRef for credentials.
	Auth ClusterSecretStoreSpecProviderAlibabaAuthInput `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID pulumi.StringInput `pulumi:"regionID"`
}

func (ClusterSecretStoreSpecProviderAlibabaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaArgs) ToClusterSecretStoreSpecProviderAlibabaOutput() ClusterSecretStoreSpecProviderAlibabaOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaArgs) ToClusterSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaArgs) ToClusterSecretStoreSpecProviderAlibabaPtrOutput() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaArgs) ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaOutput).ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaArgs, ClusterSecretStoreSpecProviderAlibabaPtr and ClusterSecretStoreSpecProviderAlibabaPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaPtrOutput() ClusterSecretStoreSpecProviderAlibabaPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaPtrType ClusterSecretStoreSpecProviderAlibabaArgs

func ClusterSecretStoreSpecProviderAlibabaPtr(v *ClusterSecretStoreSpecProviderAlibabaArgs) ClusterSecretStoreSpecProviderAlibabaPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaPtrType) ToClusterSecretStoreSpecProviderAlibabaPtrOutput() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaPtrType) ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type ClusterSecretStoreSpecProviderAlibabaOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaOutput) ToClusterSecretStoreSpecProviderAlibabaOutput() ClusterSecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaOutput) ToClusterSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaOutput) ToClusterSecretStoreSpecProviderAlibabaPtrOutput() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaOutput) ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibaba) *ClusterSecretStoreSpecProviderAlibaba {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
func (o ClusterSecretStoreSpecProviderAlibabaOutput) Auth() ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibaba) ClusterSecretStoreSpecProviderAlibabaAuth { return v.Auth }).(ClusterSecretStoreSpecProviderAlibabaAuthOutput)
}

// Alibaba Region to be used for the provider
func (o ClusterSecretStoreSpecProviderAlibabaOutput) RegionID() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibaba) string { return v.RegionID }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderAlibabaPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaPtrOutput) ToClusterSecretStoreSpecProviderAlibabaPtrOutput() ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaPtrOutput) ToClusterSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibaba) ClusterSecretStoreSpecProviderAlibaba {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibaba
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaOutput)
}

// AlibabaAuth contains a secretRef for credentials.
func (o ClusterSecretStoreSpecProviderAlibabaPtrOutput) Auth() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibaba) *ClusterSecretStoreSpecProviderAlibabaAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Alibaba Region to be used for the provider
func (o ClusterSecretStoreSpecProviderAlibabaPtrOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibaba) *string {
		if v == nil {
			return nil
		}
		return &v.RegionID
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type ClusterSecretStoreSpecProviderAlibabaAuth struct {
	// Authenticate against Alibaba using RRSA.
	Rrsa *ClusterSecretStoreSpecProviderAlibabaAuthRrsa `pulumi:"rrsa"`
	// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
	SecretRef *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderAlibabaAuthInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthArgs and ClusterSecretStoreSpecProviderAlibabaAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaAuthArgs{...}
type ClusterSecretStoreSpecProviderAlibabaAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthOutput() ClusterSecretStoreSpecProviderAlibabaAuthOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthOutput
}

// AlibabaAuth contains a secretRef for credentials.
type ClusterSecretStoreSpecProviderAlibabaAuthArgs struct {
	// Authenticate against Alibaba using RRSA.
	Rrsa ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput `pulumi:"rrsa"`
	// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
	SecretRef ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderAlibabaAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthArgs) ToClusterSecretStoreSpecProviderAlibabaAuthOutput() ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthArgs) ToClusterSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthArgs) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthArgs) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthOutput).ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthArgs, ClusterSecretStoreSpecProviderAlibabaAuthPtr and ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaAuthPtrType ClusterSecretStoreSpecProviderAlibabaAuthArgs

func ClusterSecretStoreSpecProviderAlibabaAuthPtr(v *ClusterSecretStoreSpecProviderAlibabaAuthArgs) ClusterSecretStoreSpecProviderAlibabaAuthPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type ClusterSecretStoreSpecProviderAlibabaAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) ToClusterSecretStoreSpecProviderAlibabaAuthOutput() ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) ToClusterSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibabaAuth) *ClusterSecretStoreSpecProviderAlibabaAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Authenticate against Alibaba using RRSA.
func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) Rrsa() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuth) *ClusterSecretStoreSpecProviderAlibabaAuthRrsa {
		return v.Rrsa
	}).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
func (o ClusterSecretStoreSpecProviderAlibabaAuthOutput) SecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuth) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuth) ClusterSecretStoreSpecProviderAlibabaAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibabaAuth
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaAuthOutput)
}

// Authenticate against Alibaba using RRSA.
func (o ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) Rrsa() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuth) *ClusterSecretStoreSpecProviderAlibabaAuthRrsa {
		if v == nil {
			return nil
		}
		return v.Rrsa
	}).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
func (o ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuth) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type ClusterSecretStoreSpecProviderAlibabaAuthRrsa struct {
	OidcProviderArn   string `pulumi:"oidcProviderArn"`
	OidcTokenFilePath string `pulumi:"oidcTokenFilePath"`
	RoleArn           string `pulumi:"roleArn"`
	SessionName       string `pulumi:"sessionName"`
}

// ClusterSecretStoreSpecProviderAlibabaAuthRrsaInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs and ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthRrsaInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
type ClusterSecretStoreSpecProviderAlibabaAuthRrsaInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput
}

// Authenticate against Alibaba using RRSA.
type ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs struct {
	OidcProviderArn   pulumi.StringInput `pulumi:"oidcProviderArn"`
	OidcTokenFilePath pulumi.StringInput `pulumi:"oidcTokenFilePath"`
	RoleArn           pulumi.StringInput `pulumi:"roleArn"`
	SessionName       pulumi.StringInput `pulumi:"sessionName"`
}

func (ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput).ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs, ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtr and ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaAuthRrsaPtrType ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs

func ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtr(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaAuthRrsaPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaAuthRrsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthRrsaPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthRrsaPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibabaAuthRrsa) *ClusterSecretStoreSpecProviderAlibabaAuthRrsa {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthRrsa) string { return v.OidcProviderArn }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcTokenFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthRrsa) string { return v.OidcTokenFilePath }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthRrsa) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput) SessionName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthRrsa) string { return v.SessionName }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsa) ClusterSecretStoreSpecProviderAlibabaAuthRrsa {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibabaAuthRrsa
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.OidcProviderArn
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.OidcTokenFilePath
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.SessionName
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRef struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef `pulumi:"accessKeyIDSecretRef"`
	// The AccessKeySecret is used for authentication
	AccessKeySecretSecretRef ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef `pulumi:"accessKeySecretSecretRef"`
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput `pulumi:"accessKeyIDSecretRef"`
	// The AccessKeySecret is used for authentication
	AccessKeySecretSecretRef ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput `pulumi:"accessKeySecretSecretRef"`
}

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput).ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs, ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtr and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrType ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs

func ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeyIDSecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		return v.AccessKeyIDSecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The AccessKeySecret is used for authentication
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeySecretSecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return v.AccessKeySecretSecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) ClusterSecretStoreSpecProviderAlibabaAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibabaAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

// The AccessKeyID is used for authentication
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeyIDSecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessKeyIDSecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeySecret is used for authentication
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeySecretSecretRef() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRef) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessKeySecretSecretRef
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{...}
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput).ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs, ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtr and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs

func ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtr(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeySecret is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
}

// The AccessKeySecret is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput).ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs, ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr and ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs

func ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeySecret is used for authentication
type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type ClusterSecretStoreSpecProviderAws struct {
	// Auth defines the information necessary to authenticate against AWS
	// if not set aws sdk will infer credentials from your environment
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	Auth *ClusterSecretStoreSpecProviderAwsAuth `pulumi:"auth"`
	// AWS Region to be used for the provider
	Region string `pulumi:"region"`
	// Role is a Role ARN which the SecretManager provider will assume
	Role *string `pulumi:"role"`
	// Service defines which service should be used to fetch the secrets
	Service string `pulumi:"service"`
}

// ClusterSecretStoreSpecProviderAwsInput is an input type that accepts ClusterSecretStoreSpecProviderAwsArgs and ClusterSecretStoreSpecProviderAwsOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsInput` via:
//
//	ClusterSecretStoreSpecProviderAwsArgs{...}
type ClusterSecretStoreSpecProviderAwsInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsOutput() ClusterSecretStoreSpecProviderAwsOutput
	ToClusterSecretStoreSpecProviderAwsOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsOutput
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type ClusterSecretStoreSpecProviderAwsArgs struct {
	// Auth defines the information necessary to authenticate against AWS
	// if not set aws sdk will infer credentials from your environment
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	Auth ClusterSecretStoreSpecProviderAwsAuthPtrInput `pulumi:"auth"`
	// AWS Region to be used for the provider
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the SecretManager provider will assume
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Service defines which service should be used to fetch the secrets
	Service pulumi.StringInput `pulumi:"service"`
}

func (ClusterSecretStoreSpecProviderAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAws)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsArgs) ToClusterSecretStoreSpecProviderAwsOutput() ClusterSecretStoreSpecProviderAwsOutput {
	return i.ToClusterSecretStoreSpecProviderAwsOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsArgs) ToClusterSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsOutput)
}

func (i ClusterSecretStoreSpecProviderAwsArgs) ToClusterSecretStoreSpecProviderAwsPtrOutput() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsArgs) ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsOutput).ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsArgs, ClusterSecretStoreSpecProviderAwsPtr and ClusterSecretStoreSpecProviderAwsPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsPtrOutput() ClusterSecretStoreSpecProviderAwsPtrOutput
	ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsPtrOutput
}

type clusterSecretStoreSpecProviderAwsPtrType ClusterSecretStoreSpecProviderAwsArgs

func ClusterSecretStoreSpecProviderAwsPtr(v *ClusterSecretStoreSpecProviderAwsArgs) ClusterSecretStoreSpecProviderAwsPtrInput {
	return (*clusterSecretStoreSpecProviderAwsPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAws)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsPtrType) ToClusterSecretStoreSpecProviderAwsPtrOutput() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsPtrType) ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type ClusterSecretStoreSpecProviderAwsOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAws)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsOutput) ToClusterSecretStoreSpecProviderAwsOutput() ClusterSecretStoreSpecProviderAwsOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsOutput) ToClusterSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsOutput) ToClusterSecretStoreSpecProviderAwsPtrOutput() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsOutput) ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAws) *ClusterSecretStoreSpecProviderAws {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterSecretStoreSpecProviderAwsOutput) Auth() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAws) *ClusterSecretStoreSpecProviderAwsAuth { return v.Auth }).(ClusterSecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS Region to be used for the provider
func (o ClusterSecretStoreSpecProviderAwsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAws) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the SecretManager provider will assume
func (o ClusterSecretStoreSpecProviderAwsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAws) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o ClusterSecretStoreSpecProviderAwsOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAws) string { return v.Service }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderAwsPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAws)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsPtrOutput) ToClusterSecretStoreSpecProviderAwsPtrOutput() ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsPtrOutput) ToClusterSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAws) ClusterSecretStoreSpecProviderAws {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAws
		return ret
	}).(ClusterSecretStoreSpecProviderAwsOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o ClusterSecretStoreSpecProviderAwsPtrOutput) Auth() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAws) *ClusterSecretStoreSpecProviderAwsAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ClusterSecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS Region to be used for the provider
func (o ClusterSecretStoreSpecProviderAwsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the SecretManager provider will assume
func (o ClusterSecretStoreSpecProviderAwsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o ClusterSecretStoreSpecProviderAwsPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterSecretStoreSpecProviderAwsAuth struct {
	// Authenticate against AWS using service account tokens.
	Jwt *ClusterSecretStoreSpecProviderAwsAuthJwt `pulumi:"jwt"`
	// AWSAuthSecretRef holds secret references for AWS credentials
	// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
	SecretRef *ClusterSecretStoreSpecProviderAwsAuthSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderAwsAuthInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthArgs and ClusterSecretStoreSpecProviderAwsAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthOutput() ClusterSecretStoreSpecProviderAwsAuthOutput
	ToClusterSecretStoreSpecProviderAwsAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthOutput
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterSecretStoreSpecProviderAwsAuthArgs struct {
	// Authenticate against AWS using service account tokens.
	Jwt ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput `pulumi:"jwt"`
	// AWSAuthSecretRef holds secret references for AWS credentials
	// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
	SecretRef ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderAwsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthArgs) ToClusterSecretStoreSpecProviderAwsAuthOutput() ClusterSecretStoreSpecProviderAwsAuthOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthArgs) ToClusterSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthArgs) ToClusterSecretStoreSpecProviderAwsAuthPtrOutput() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthArgs) ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthOutput).ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthArgs, ClusterSecretStoreSpecProviderAwsAuthPtr and ClusterSecretStoreSpecProviderAwsAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthPtrOutput() ClusterSecretStoreSpecProviderAwsAuthPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthPtrType ClusterSecretStoreSpecProviderAwsAuthArgs

func ClusterSecretStoreSpecProviderAwsAuthPtr(v *ClusterSecretStoreSpecProviderAwsAuthArgs) ClusterSecretStoreSpecProviderAwsAuthPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthPtrType) ToClusterSecretStoreSpecProviderAwsAuthPtrOutput() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthPtrType) ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type ClusterSecretStoreSpecProviderAwsAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthOutput) ToClusterSecretStoreSpecProviderAwsAuthOutput() ClusterSecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthOutput) ToClusterSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthOutput) ToClusterSecretStoreSpecProviderAwsAuthPtrOutput() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthOutput) ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuth) *ClusterSecretStoreSpecProviderAwsAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthPtrOutput)
}

// Authenticate against AWS using service account tokens.
func (o ClusterSecretStoreSpecProviderAwsAuthOutput) Jwt() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuth) *ClusterSecretStoreSpecProviderAwsAuthJwt { return v.Jwt }).(ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
func (o ClusterSecretStoreSpecProviderAwsAuthOutput) SecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuth) *ClusterSecretStoreSpecProviderAwsAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthPtrOutput() ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuth) ClusterSecretStoreSpecProviderAwsAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuth
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthOutput)
}

// Authenticate against AWS using service account tokens.
func (o ClusterSecretStoreSpecProviderAwsAuthPtrOutput) Jwt() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuth) *ClusterSecretStoreSpecProviderAwsAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
func (o ClusterSecretStoreSpecProviderAwsAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuth) *ClusterSecretStoreSpecProviderAwsAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// Authenticate against AWS using service account tokens.
type ClusterSecretStoreSpecProviderAwsAuthJwt struct {
	// A reference to a ServiceAccount resource.
	ServiceAccountRef *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef `pulumi:"serviceAccountRef"`
}

// ClusterSecretStoreSpecProviderAwsAuthJwtInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthJwtArgs and ClusterSecretStoreSpecProviderAwsAuthJwtOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthJwtInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthJwtArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthJwtInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthJwtOutput() ClusterSecretStoreSpecProviderAwsAuthJwtOutput
	ToClusterSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtOutput
}

// Authenticate against AWS using service account tokens.
type ClusterSecretStoreSpecProviderAwsAuthJwtArgs struct {
	// A reference to a ServiceAccount resource.
	ServiceAccountRef ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtOutput() ClusterSecretStoreSpecProviderAwsAuthJwtOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtOutput).ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthJwtArgs, ClusterSecretStoreSpecProviderAwsAuthJwtPtr and ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthJwtArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthJwtPtrType ClusterSecretStoreSpecProviderAwsAuthJwtArgs

func ClusterSecretStoreSpecProviderAwsAuthJwtPtr(v *ClusterSecretStoreSpecProviderAwsAuthJwtArgs) ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthJwtPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthJwtPtrType) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthJwtPtrType) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// Authenticate against AWS using service account tokens.
type ClusterSecretStoreSpecProviderAwsAuthJwtOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtOutput() ClusterSecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuthJwt) *ClusterSecretStoreSpecProviderAwsAuthJwt {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthJwt) *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthJwtOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwt) ClusterSecretStoreSpecProviderAwsAuthJwt {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuthJwt
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwt) *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs and ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput).ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs, ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr and ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs

func ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type ClusterSecretStoreSpecProviderAwsAuthSecretRef struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef `pulumi:"accessKeyIDSecretRef"`
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs and ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput `pulumi:"accessKeyIDSecretRef"`
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput).ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs, ClusterSecretStoreSpecProviderAwsAuthSecretRefPtr and ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthSecretRefPtrType ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs

func ClusterSecretStoreSpecProviderAwsAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuthSecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) AccessKeyIDSecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		return v.AccessKeyIDSecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput) SecretAccessKeySecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRef) ClusterSecretStoreSpecProviderAwsAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput)
}

// The AccessKeyID is used for authentication
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) AccessKeyIDSecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput) SecretAccessKeySecretRef() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs and ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput).ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs, ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtr and ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs

func ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtr(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs and ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput).ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs, ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr and ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs

func ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type ClusterSecretStoreSpecProviderAzurekv struct {
	// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
	AuthSecretRef *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType *string `pulumi:"authType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId *string `pulumi:"identityId"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
	TenantId *string `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl string `pulumi:"vaultUrl"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderAzurekv
func (val *ClusterSecretStoreSpecProviderAzurekv) Defaults() *ClusterSecretStoreSpecProviderAzurekv {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthType == nil {
		authType_ := "ServicePrincipal"
		tmp.AuthType = &authType_
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderAzurekvInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvArgs and ClusterSecretStoreSpecProviderAzurekvOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvInput` via:
//
//	ClusterSecretStoreSpecProviderAzurekvArgs{...}
type ClusterSecretStoreSpecProviderAzurekvInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvOutput() ClusterSecretStoreSpecProviderAzurekvOutput
	ToClusterSecretStoreSpecProviderAzurekvOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvOutput
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type ClusterSecretStoreSpecProviderAzurekvArgs struct {
	// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
	AuthSecretRef ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl pulumi.StringInput `pulumi:"vaultUrl"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderAzurekvArgs
func (val *ClusterSecretStoreSpecProviderAzurekvArgs) Defaults() *ClusterSecretStoreSpecProviderAzurekvArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthType == nil {
		tmp.AuthType = pulumi.StringPtr("ServicePrincipal")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderAzurekvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAzurekvArgs) ToClusterSecretStoreSpecProviderAzurekvOutput() ClusterSecretStoreSpecProviderAzurekvOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvArgs) ToClusterSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvOutput)
}

func (i ClusterSecretStoreSpecProviderAzurekvArgs) ToClusterSecretStoreSpecProviderAzurekvPtrOutput() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvArgs) ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvOutput).ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAzurekvPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvArgs, ClusterSecretStoreSpecProviderAzurekvPtr and ClusterSecretStoreSpecProviderAzurekvPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAzurekvArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAzurekvPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvPtrOutput() ClusterSecretStoreSpecProviderAzurekvPtrOutput
	ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvPtrOutput
}

type clusterSecretStoreSpecProviderAzurekvPtrType ClusterSecretStoreSpecProviderAzurekvArgs

func ClusterSecretStoreSpecProviderAzurekvPtr(v *ClusterSecretStoreSpecProviderAzurekvArgs) ClusterSecretStoreSpecProviderAzurekvPtrInput {
	return (*clusterSecretStoreSpecProviderAzurekvPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAzurekvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAzurekvPtrType) ToClusterSecretStoreSpecProviderAzurekvPtrOutput() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAzurekvPtrType) ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type ClusterSecretStoreSpecProviderAzurekvOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvOutput) ToClusterSecretStoreSpecProviderAzurekvOutput() ClusterSecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvOutput) ToClusterSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvOutput) ToClusterSecretStoreSpecProviderAzurekvPtrOutput() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAzurekvOutput) ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAzurekv) *ClusterSecretStoreSpecProviderAzurekv {
		return &v
	}).(ClusterSecretStoreSpecProviderAzurekvPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
func (o ClusterSecretStoreSpecProviderAzurekvOutput) AuthSecretRef() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef {
		return v.AuthSecretRef
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o ClusterSecretStoreSpecProviderAzurekvOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o ClusterSecretStoreSpecProviderAzurekvOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o ClusterSecretStoreSpecProviderAzurekvOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
func (o ClusterSecretStoreSpecProviderAzurekvOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o ClusterSecretStoreSpecProviderAzurekvOutput) VaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekv) string { return v.VaultUrl }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderAzurekvPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) ToClusterSecretStoreSpecProviderAzurekvPtrOutput() ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) ToClusterSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) Elem() ClusterSecretStoreSpecProviderAzurekvOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) ClusterSecretStoreSpecProviderAzurekv {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAzurekv
		return ret
	}).(ClusterSecretStoreSpecProviderAzurekvOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) AuthSecretRef() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o ClusterSecretStoreSpecProviderAzurekvPtrOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return &v.VaultUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRef struct {
	// The Azure clientId of the service principle used for authentication.
	ClientId *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId `pulumi:"clientId"`
	// The Azure ClientSecret of the service principle used for authentication.
	ClientSecret *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret `pulumi:"clientSecret"`
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs struct {
	// The Azure clientId of the service principle used for authentication.
	ClientId ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput `pulumi:"clientId"`
	// The Azure ClientSecret of the service principle used for authentication.
	ClientSecret ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput `pulumi:"clientSecret"`
}

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput).ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs, ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtr and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrType ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs

func ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientId() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return v.ClientId
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientSecret() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return v.ClientSecret
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) ClusterSecretStoreSpecProviderAzurekvAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAzurekvAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

// The Azure clientId of the service principle used for authentication.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientId() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientSecret() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRef) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput` via:
//
//	ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
}

// The Azure clientId of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput).ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs, ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
}

type clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs

func ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput {
	return (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return &v
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Elem() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId
		return ret
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput` via:
//
//	ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
}

// The Azure ClientSecret of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput).ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs, ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr and ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
	ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
}

type clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs

func ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput {
	return (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return &v
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Elem() ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret
		return ret
	}).(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderAzurekvServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderAzurekvServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs and ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderAzurekvServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput).ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs, ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtr and ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrType ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs

func ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) ClusterSecretStoreSpecProviderAzurekvServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderAzurekvServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Fake configures a store with static key/value pairs
type ClusterSecretStoreSpecProviderFake struct {
	Data []ClusterSecretStoreSpecProviderFakeData `pulumi:"data"`
}

// ClusterSecretStoreSpecProviderFakeInput is an input type that accepts ClusterSecretStoreSpecProviderFakeArgs and ClusterSecretStoreSpecProviderFakeOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderFakeInput` via:
//
//	ClusterSecretStoreSpecProviderFakeArgs{...}
type ClusterSecretStoreSpecProviderFakeInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderFakeOutput() ClusterSecretStoreSpecProviderFakeOutput
	ToClusterSecretStoreSpecProviderFakeOutputWithContext(context.Context) ClusterSecretStoreSpecProviderFakeOutput
}

// Fake configures a store with static key/value pairs
type ClusterSecretStoreSpecProviderFakeArgs struct {
	Data ClusterSecretStoreSpecProviderFakeDataArrayInput `pulumi:"data"`
}

func (ClusterSecretStoreSpecProviderFakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderFake)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderFakeArgs) ToClusterSecretStoreSpecProviderFakeOutput() ClusterSecretStoreSpecProviderFakeOutput {
	return i.ToClusterSecretStoreSpecProviderFakeOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderFakeArgs) ToClusterSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderFakeOutput)
}

func (i ClusterSecretStoreSpecProviderFakeArgs) ToClusterSecretStoreSpecProviderFakePtrOutput() ClusterSecretStoreSpecProviderFakePtrOutput {
	return i.ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderFakeArgs) ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderFakeOutput).ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderFakePtrInput is an input type that accepts ClusterSecretStoreSpecProviderFakeArgs, ClusterSecretStoreSpecProviderFakePtr and ClusterSecretStoreSpecProviderFakePtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderFakePtrInput` via:
//
//	        ClusterSecretStoreSpecProviderFakeArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderFakePtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderFakePtrOutput() ClusterSecretStoreSpecProviderFakePtrOutput
	ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderFakePtrOutput
}

type clusterSecretStoreSpecProviderFakePtrType ClusterSecretStoreSpecProviderFakeArgs

func ClusterSecretStoreSpecProviderFakePtr(v *ClusterSecretStoreSpecProviderFakeArgs) ClusterSecretStoreSpecProviderFakePtrInput {
	return (*clusterSecretStoreSpecProviderFakePtrType)(v)
}

func (*clusterSecretStoreSpecProviderFakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderFake)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderFakePtrType) ToClusterSecretStoreSpecProviderFakePtrOutput() ClusterSecretStoreSpecProviderFakePtrOutput {
	return i.ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderFakePtrType) ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderFakePtrOutput)
}

// Fake configures a store with static key/value pairs
type ClusterSecretStoreSpecProviderFakeOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderFakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderFake)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderFakeOutput) ToClusterSecretStoreSpecProviderFakeOutput() ClusterSecretStoreSpecProviderFakeOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeOutput) ToClusterSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeOutput) ToClusterSecretStoreSpecProviderFakePtrOutput() ClusterSecretStoreSpecProviderFakePtrOutput {
	return o.ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderFakeOutput) ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderFake) *ClusterSecretStoreSpecProviderFake {
		return &v
	}).(ClusterSecretStoreSpecProviderFakePtrOutput)
}

func (o ClusterSecretStoreSpecProviderFakeOutput) Data() ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderFake) []ClusterSecretStoreSpecProviderFakeData { return v.Data }).(ClusterSecretStoreSpecProviderFakeDataArrayOutput)
}

type ClusterSecretStoreSpecProviderFakePtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderFakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderFake)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderFakePtrOutput) ToClusterSecretStoreSpecProviderFakePtrOutput() ClusterSecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakePtrOutput) ToClusterSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakePtrOutput) Elem() ClusterSecretStoreSpecProviderFakeOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderFake) ClusterSecretStoreSpecProviderFake {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderFake
		return ret
	}).(ClusterSecretStoreSpecProviderFakeOutput)
}

func (o ClusterSecretStoreSpecProviderFakePtrOutput) Data() ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderFake) []ClusterSecretStoreSpecProviderFakeData {
		if v == nil {
			return nil
		}
		return v.Data
	}).(ClusterSecretStoreSpecProviderFakeDataArrayOutput)
}

type ClusterSecretStoreSpecProviderFakeData struct {
	Key      string            `pulumi:"key"`
	Value    *string           `pulumi:"value"`
	ValueMap map[string]string `pulumi:"valueMap"`
	Version  *string           `pulumi:"version"`
}

// ClusterSecretStoreSpecProviderFakeDataInput is an input type that accepts ClusterSecretStoreSpecProviderFakeDataArgs and ClusterSecretStoreSpecProviderFakeDataOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderFakeDataInput` via:
//
//	ClusterSecretStoreSpecProviderFakeDataArgs{...}
type ClusterSecretStoreSpecProviderFakeDataInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderFakeDataOutput() ClusterSecretStoreSpecProviderFakeDataOutput
	ToClusterSecretStoreSpecProviderFakeDataOutputWithContext(context.Context) ClusterSecretStoreSpecProviderFakeDataOutput
}

type ClusterSecretStoreSpecProviderFakeDataArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
	ValueMap pulumi.StringMapInput `pulumi:"valueMap"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (ClusterSecretStoreSpecProviderFakeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderFakeDataArgs) ToClusterSecretStoreSpecProviderFakeDataOutput() ClusterSecretStoreSpecProviderFakeDataOutput {
	return i.ToClusterSecretStoreSpecProviderFakeDataOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderFakeDataArgs) ToClusterSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderFakeDataOutput)
}

// ClusterSecretStoreSpecProviderFakeDataArrayInput is an input type that accepts ClusterSecretStoreSpecProviderFakeDataArray and ClusterSecretStoreSpecProviderFakeDataArrayOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderFakeDataArrayInput` via:
//
//	ClusterSecretStoreSpecProviderFakeDataArray{ ClusterSecretStoreSpecProviderFakeDataArgs{...} }
type ClusterSecretStoreSpecProviderFakeDataArrayInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderFakeDataArrayOutput() ClusterSecretStoreSpecProviderFakeDataArrayOutput
	ToClusterSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Context) ClusterSecretStoreSpecProviderFakeDataArrayOutput
}

type ClusterSecretStoreSpecProviderFakeDataArray []ClusterSecretStoreSpecProviderFakeDataInput

func (ClusterSecretStoreSpecProviderFakeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderFakeDataArray) ToClusterSecretStoreSpecProviderFakeDataArrayOutput() ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return i.ToClusterSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderFakeDataArray) ToClusterSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderFakeDataArrayOutput)
}

type ClusterSecretStoreSpecProviderFakeDataOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderFakeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) ToClusterSecretStoreSpecProviderFakeDataOutput() ClusterSecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) ToClusterSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderFakeData) string { return v.Key }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderFakeData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) ValueMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderFakeData) map[string]string { return v.ValueMap }).(pulumi.StringMapOutput)
}

func (o ClusterSecretStoreSpecProviderFakeDataOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderFakeData) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderFakeDataArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderFakeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderFakeDataArrayOutput) ToClusterSecretStoreSpecProviderFakeDataArrayOutput() ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeDataArrayOutput) ToClusterSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderFakeDataArrayOutput) Index(i pulumi.IntInput) ClusterSecretStoreSpecProviderFakeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSecretStoreSpecProviderFakeData {
		return vs[0].([]ClusterSecretStoreSpecProviderFakeData)[vs[1].(int)]
	}).(ClusterSecretStoreSpecProviderFakeDataOutput)
}

type ClusterSecretStoreSpecProviderFakeDataValueMap struct {
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type ClusterSecretStoreSpecProviderGcpsm struct {
	// Auth defines the information necessary to authenticate against GCP
	Auth *ClusterSecretStoreSpecProviderGcpsmAuth `pulumi:"auth"`
	// ProjectID project where secret is located
	ProjectID *string `pulumi:"projectID"`
}

// ClusterSecretStoreSpecProviderGcpsmInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmArgs and ClusterSecretStoreSpecProviderGcpsmOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmArgs{...}
type ClusterSecretStoreSpecProviderGcpsmInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmOutput() ClusterSecretStoreSpecProviderGcpsmOutput
	ToClusterSecretStoreSpecProviderGcpsmOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmOutput
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type ClusterSecretStoreSpecProviderGcpsmArgs struct {
	// Auth defines the information necessary to authenticate against GCP
	Auth ClusterSecretStoreSpecProviderGcpsmAuthPtrInput `pulumi:"auth"`
	// ProjectID project where secret is located
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (ClusterSecretStoreSpecProviderGcpsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmArgs) ToClusterSecretStoreSpecProviderGcpsmOutput() ClusterSecretStoreSpecProviderGcpsmOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmArgs) ToClusterSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmArgs) ToClusterSecretStoreSpecProviderGcpsmPtrOutput() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmArgs) ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmOutput).ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmArgs, ClusterSecretStoreSpecProviderGcpsmPtr and ClusterSecretStoreSpecProviderGcpsmPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmPtrOutput() ClusterSecretStoreSpecProviderGcpsmPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmPtrType ClusterSecretStoreSpecProviderGcpsmArgs

func ClusterSecretStoreSpecProviderGcpsmPtr(v *ClusterSecretStoreSpecProviderGcpsmArgs) ClusterSecretStoreSpecProviderGcpsmPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmPtrType) ToClusterSecretStoreSpecProviderGcpsmPtrOutput() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmPtrType) ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type ClusterSecretStoreSpecProviderGcpsmOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmOutput) ToClusterSecretStoreSpecProviderGcpsmOutput() ClusterSecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmOutput) ToClusterSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmOutput) ToClusterSecretStoreSpecProviderGcpsmPtrOutput() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmOutput) ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsm) *ClusterSecretStoreSpecProviderGcpsm {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
func (o ClusterSecretStoreSpecProviderGcpsmOutput) Auth() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsm) *ClusterSecretStoreSpecProviderGcpsmAuth { return v.Auth }).(ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// ProjectID project where secret is located
func (o ClusterSecretStoreSpecProviderGcpsmOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsm) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmPtrOutput) ToClusterSecretStoreSpecProviderGcpsmPtrOutput() ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmPtrOutput) ToClusterSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsm) ClusterSecretStoreSpecProviderGcpsm {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsm
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmOutput)
}

// Auth defines the information necessary to authenticate against GCP
func (o ClusterSecretStoreSpecProviderGcpsmPtrOutput) Auth() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsm) *ClusterSecretStoreSpecProviderGcpsmAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// ProjectID project where secret is located
func (o ClusterSecretStoreSpecProviderGcpsmPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsm) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type ClusterSecretStoreSpecProviderGcpsmAuth struct {
	SecretRef        *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef        `pulumi:"secretRef"`
	WorkloadIdentity *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity `pulumi:"workloadIdentity"`
}

// ClusterSecretStoreSpecProviderGcpsmAuthInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthArgs and ClusterSecretStoreSpecProviderGcpsmAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmAuthArgs{...}
type ClusterSecretStoreSpecProviderGcpsmAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthOutput() ClusterSecretStoreSpecProviderGcpsmAuthOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthOutput
}

// Auth defines the information necessary to authenticate against GCP
type ClusterSecretStoreSpecProviderGcpsmAuthArgs struct {
	SecretRef        ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput        `pulumi:"secretRef"`
	WorkloadIdentity ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput `pulumi:"workloadIdentity"`
}

func (ClusterSecretStoreSpecProviderGcpsmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthArgs) ToClusterSecretStoreSpecProviderGcpsmAuthOutput() ClusterSecretStoreSpecProviderGcpsmAuthOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthArgs) ToClusterSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthArgs) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthArgs) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthOutput).ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthArgs, ClusterSecretStoreSpecProviderGcpsmAuthPtr and ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmAuthPtrType ClusterSecretStoreSpecProviderGcpsmAuthArgs

func ClusterSecretStoreSpecProviderGcpsmAuthPtr(v *ClusterSecretStoreSpecProviderGcpsmAuthArgs) ClusterSecretStoreSpecProviderGcpsmAuthPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type ClusterSecretStoreSpecProviderGcpsmAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) ToClusterSecretStoreSpecProviderGcpsmAuthOutput() ClusterSecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) ToClusterSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsmAuth) *ClusterSecretStoreSpecProviderGcpsmAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) SecretRef() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuth) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthOutput) WorkloadIdentity() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuth) *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return v.WorkloadIdentity
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuth) ClusterSecretStoreSpecProviderGcpsmAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsmAuth
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmAuthOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuth) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput) WorkloadIdentity() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuth) *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthSecretRef struct {
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// ClusterSecretStoreSpecProviderGcpsmAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs and ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput
}

type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs struct {
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput).ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs, ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtr and ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrType ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs

func ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsmAuthSecretRef) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput) SecretAccessKeySecretRef() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthSecretRef) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef) ClusterSecretStoreSpecProviderGcpsmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsmAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) SecretAccessKeySecretRef() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRef) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs and ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput).ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs, ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr and ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs

func ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity struct {
	ClusterLocation  string  `pulumi:"clusterLocation"`
	ClusterName      string  `pulumi:"clusterName"`
	ClusterProjectID *string `pulumi:"clusterProjectID"`
	// A reference to a ServiceAccount resource.
	ServiceAccountRef ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef `pulumi:"serviceAccountRef"`
}

// ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs and ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
}

type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs struct {
	ClusterLocation  pulumi.StringInput    `pulumi:"clusterLocation"`
	ClusterName      pulumi.StringInput    `pulumi:"clusterName"`
	ClusterProjectID pulumi.StringPtrInput `pulumi:"clusterProjectID"`
	// A reference to a ServiceAccount resource.
	ServiceAccountRef ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput `pulumi:"serviceAccountRef"`
}

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput).ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs, ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr and ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs

func ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterLocation() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) string { return v.ClusterLocation }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string { return v.ClusterProjectID }).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterLocation
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClusterProjectID
	}).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs and ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput).ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs, ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr and ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs

func ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type ClusterSecretStoreSpecProviderGitlab struct {
	// Auth configures how secret-manager authenticates with a GitLab instance.
	Auth ClusterSecretStoreSpecProviderGitlabAuth `pulumi:"auth"`
	// ProjectID specifies a project where secrets are located.
	ProjectID *string `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url *string `pulumi:"url"`
}

// ClusterSecretStoreSpecProviderGitlabInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabArgs and ClusterSecretStoreSpecProviderGitlabOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabInput` via:
//
//	ClusterSecretStoreSpecProviderGitlabArgs{...}
type ClusterSecretStoreSpecProviderGitlabInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabOutput() ClusterSecretStoreSpecProviderGitlabOutput
	ToClusterSecretStoreSpecProviderGitlabOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabOutput
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type ClusterSecretStoreSpecProviderGitlabArgs struct {
	// Auth configures how secret-manager authenticates with a GitLab instance.
	Auth ClusterSecretStoreSpecProviderGitlabAuthInput `pulumi:"auth"`
	// ProjectID specifies a project where secrets are located.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClusterSecretStoreSpecProviderGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGitlabArgs) ToClusterSecretStoreSpecProviderGitlabOutput() ClusterSecretStoreSpecProviderGitlabOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabArgs) ToClusterSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabOutput)
}

func (i ClusterSecretStoreSpecProviderGitlabArgs) ToClusterSecretStoreSpecProviderGitlabPtrOutput() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabArgs) ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabOutput).ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGitlabPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabArgs, ClusterSecretStoreSpecProviderGitlabPtr and ClusterSecretStoreSpecProviderGitlabPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGitlabArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGitlabPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabPtrOutput() ClusterSecretStoreSpecProviderGitlabPtrOutput
	ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabPtrOutput
}

type clusterSecretStoreSpecProviderGitlabPtrType ClusterSecretStoreSpecProviderGitlabArgs

func ClusterSecretStoreSpecProviderGitlabPtr(v *ClusterSecretStoreSpecProviderGitlabArgs) ClusterSecretStoreSpecProviderGitlabPtrInput {
	return (*clusterSecretStoreSpecProviderGitlabPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGitlabPtrType) ToClusterSecretStoreSpecProviderGitlabPtrOutput() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGitlabPtrType) ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type ClusterSecretStoreSpecProviderGitlabOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabOutput) ToClusterSecretStoreSpecProviderGitlabOutput() ClusterSecretStoreSpecProviderGitlabOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabOutput) ToClusterSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabOutput) ToClusterSecretStoreSpecProviderGitlabPtrOutput() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGitlabOutput) ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGitlab) *ClusterSecretStoreSpecProviderGitlab {
		return &v
	}).(ClusterSecretStoreSpecProviderGitlabPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
func (o ClusterSecretStoreSpecProviderGitlabOutput) Auth() ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlab) ClusterSecretStoreSpecProviderGitlabAuth { return v.Auth }).(ClusterSecretStoreSpecProviderGitlabAuthOutput)
}

// ProjectID specifies a project where secrets are located.
func (o ClusterSecretStoreSpecProviderGitlabOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlab) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o ClusterSecretStoreSpecProviderGitlabOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlab) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGitlabPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) ToClusterSecretStoreSpecProviderGitlabPtrOutput() ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) ToClusterSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) Elem() ClusterSecretStoreSpecProviderGitlabOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlab) ClusterSecretStoreSpecProviderGitlab {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGitlab
		return ret
	}).(ClusterSecretStoreSpecProviderGitlabOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) Auth() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlab) *ClusterSecretStoreSpecProviderGitlabAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderGitlabAuthPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o ClusterSecretStoreSpecProviderGitlabPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type ClusterSecretStoreSpecProviderGitlabAuth struct {
	SecretRef ClusterSecretStoreSpecProviderGitlabAuthSecretRef `pulumi:"SecretRef"`
}

// ClusterSecretStoreSpecProviderGitlabAuthInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthArgs and ClusterSecretStoreSpecProviderGitlabAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthInput` via:
//
//	ClusterSecretStoreSpecProviderGitlabAuthArgs{...}
type ClusterSecretStoreSpecProviderGitlabAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthOutput() ClusterSecretStoreSpecProviderGitlabAuthOutput
	ToClusterSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthOutput
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type ClusterSecretStoreSpecProviderGitlabAuthArgs struct {
	SecretRef ClusterSecretStoreSpecProviderGitlabAuthSecretRefInput `pulumi:"SecretRef"`
}

func (ClusterSecretStoreSpecProviderGitlabAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGitlabAuthArgs) ToClusterSecretStoreSpecProviderGitlabAuthOutput() ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthArgs) ToClusterSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthOutput)
}

func (i ClusterSecretStoreSpecProviderGitlabAuthArgs) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthArgs) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthOutput).ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGitlabAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthArgs, ClusterSecretStoreSpecProviderGitlabAuthPtr and ClusterSecretStoreSpecProviderGitlabAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGitlabAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGitlabAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput
	ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthPtrOutput
}

type clusterSecretStoreSpecProviderGitlabAuthPtrType ClusterSecretStoreSpecProviderGitlabAuthArgs

func ClusterSecretStoreSpecProviderGitlabAuthPtr(v *ClusterSecretStoreSpecProviderGitlabAuthArgs) ClusterSecretStoreSpecProviderGitlabAuthPtrInput {
	return (*clusterSecretStoreSpecProviderGitlabAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGitlabAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGitlabAuthPtrType) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGitlabAuthPtrType) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type ClusterSecretStoreSpecProviderGitlabAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthOutput) ToClusterSecretStoreSpecProviderGitlabAuthOutput() ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthOutput) ToClusterSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthOutput) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGitlabAuthOutput) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGitlabAuth) *ClusterSecretStoreSpecProviderGitlabAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderGitlabAuthPtrOutput)
}

func (o ClusterSecretStoreSpecProviderGitlabAuthOutput) SecretRef() ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlabAuth) ClusterSecretStoreSpecProviderGitlabAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

type ClusterSecretStoreSpecProviderGitlabAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderGitlabAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuth) ClusterSecretStoreSpecProviderGitlabAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGitlabAuth
		return ret
	}).(ClusterSecretStoreSpecProviderGitlabAuthOutput)
}

func (o ClusterSecretStoreSpecProviderGitlabAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuth) *ClusterSecretStoreSpecProviderGitlabAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderGitlabAuthSecretRef struct {
	// AccessToken is used for authentication.
	AccessToken *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken `pulumi:"accessToken"`
}

// ClusterSecretStoreSpecProviderGitlabAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs and ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput
}

type ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs struct {
	// AccessToken is used for authentication.
	AccessToken ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput `pulumi:"accessToken"`
}

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput).ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs, ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtr and ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderGitlabAuthSecretRefPtrType ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs

func ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderGitlabAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGitlabAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGitlabAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGitlabAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGitlabAuthSecretRef) *ClusterSecretStoreSpecProviderGitlabAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

// AccessToken is used for authentication.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput) AccessToken() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlabAuthSecretRef) *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return v.AccessToken
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

type ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRef) ClusterSecretStoreSpecProviderGitlabAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGitlabAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

// AccessToken is used for authentication.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) AccessToken() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRef) *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs and ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput` via:
//
//	ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
}

// AccessToken is used for authentication.
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput).ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput is an input type that accepts ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs, ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr and ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
	ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
}

type clusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs

func ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput {
	return (*clusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType)(v)
}

func (*clusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return &v
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Elem() ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken
		return ret
	}).(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type ClusterSecretStoreSpecProviderIbm struct {
	// Auth configures how secret-manager authenticates with the IBM secrets manager.
	Auth ClusterSecretStoreSpecProviderIbmAuth `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// ClusterSecretStoreSpecProviderIbmInput is an input type that accepts ClusterSecretStoreSpecProviderIbmArgs and ClusterSecretStoreSpecProviderIbmOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmInput` via:
//
//	ClusterSecretStoreSpecProviderIbmArgs{...}
type ClusterSecretStoreSpecProviderIbmInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmOutput() ClusterSecretStoreSpecProviderIbmOutput
	ToClusterSecretStoreSpecProviderIbmOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmOutput
}

// IBM configures this store to sync secrets using IBM Cloud provider
type ClusterSecretStoreSpecProviderIbmArgs struct {
	// Auth configures how secret-manager authenticates with the IBM secrets manager.
	Auth ClusterSecretStoreSpecProviderIbmAuthInput `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (ClusterSecretStoreSpecProviderIbmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderIbmArgs) ToClusterSecretStoreSpecProviderIbmOutput() ClusterSecretStoreSpecProviderIbmOutput {
	return i.ToClusterSecretStoreSpecProviderIbmOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmArgs) ToClusterSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmOutput)
}

func (i ClusterSecretStoreSpecProviderIbmArgs) ToClusterSecretStoreSpecProviderIbmPtrOutput() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmArgs) ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmOutput).ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderIbmPtrInput is an input type that accepts ClusterSecretStoreSpecProviderIbmArgs, ClusterSecretStoreSpecProviderIbmPtr and ClusterSecretStoreSpecProviderIbmPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderIbmArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderIbmPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmPtrOutput() ClusterSecretStoreSpecProviderIbmPtrOutput
	ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmPtrOutput
}

type clusterSecretStoreSpecProviderIbmPtrType ClusterSecretStoreSpecProviderIbmArgs

func ClusterSecretStoreSpecProviderIbmPtr(v *ClusterSecretStoreSpecProviderIbmArgs) ClusterSecretStoreSpecProviderIbmPtrInput {
	return (*clusterSecretStoreSpecProviderIbmPtrType)(v)
}

func (*clusterSecretStoreSpecProviderIbmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderIbmPtrType) ToClusterSecretStoreSpecProviderIbmPtrOutput() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderIbmPtrType) ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type ClusterSecretStoreSpecProviderIbmOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmOutput) ToClusterSecretStoreSpecProviderIbmOutput() ClusterSecretStoreSpecProviderIbmOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmOutput) ToClusterSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmOutput) ToClusterSecretStoreSpecProviderIbmPtrOutput() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o.ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderIbmOutput) ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderIbm) *ClusterSecretStoreSpecProviderIbm {
		return &v
	}).(ClusterSecretStoreSpecProviderIbmPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
func (o ClusterSecretStoreSpecProviderIbmOutput) Auth() ClusterSecretStoreSpecProviderIbmAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbm) ClusterSecretStoreSpecProviderIbmAuth { return v.Auth }).(ClusterSecretStoreSpecProviderIbmAuthOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o ClusterSecretStoreSpecProviderIbmOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbm) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderIbmPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmPtrOutput) ToClusterSecretStoreSpecProviderIbmPtrOutput() ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmPtrOutput) ToClusterSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmPtrOutput) Elem() ClusterSecretStoreSpecProviderIbmOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbm) ClusterSecretStoreSpecProviderIbm {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderIbm
		return ret
	}).(ClusterSecretStoreSpecProviderIbmOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
func (o ClusterSecretStoreSpecProviderIbmPtrOutput) Auth() ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbm) *ClusterSecretStoreSpecProviderIbmAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderIbmAuthPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o ClusterSecretStoreSpecProviderIbmPtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbm) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type ClusterSecretStoreSpecProviderIbmAuth struct {
	SecretRef ClusterSecretStoreSpecProviderIbmAuthSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderIbmAuthInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthArgs and ClusterSecretStoreSpecProviderIbmAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthInput` via:
//
//	ClusterSecretStoreSpecProviderIbmAuthArgs{...}
type ClusterSecretStoreSpecProviderIbmAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthOutput() ClusterSecretStoreSpecProviderIbmAuthOutput
	ToClusterSecretStoreSpecProviderIbmAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthOutput
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type ClusterSecretStoreSpecProviderIbmAuthArgs struct {
	SecretRef ClusterSecretStoreSpecProviderIbmAuthSecretRefInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderIbmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderIbmAuthArgs) ToClusterSecretStoreSpecProviderIbmAuthOutput() ClusterSecretStoreSpecProviderIbmAuthOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthArgs) ToClusterSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthOutput)
}

func (i ClusterSecretStoreSpecProviderIbmAuthArgs) ToClusterSecretStoreSpecProviderIbmAuthPtrOutput() ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthArgs) ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthOutput).ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderIbmAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthArgs, ClusterSecretStoreSpecProviderIbmAuthPtr and ClusterSecretStoreSpecProviderIbmAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderIbmAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderIbmAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthPtrOutput() ClusterSecretStoreSpecProviderIbmAuthPtrOutput
	ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthPtrOutput
}

type clusterSecretStoreSpecProviderIbmAuthPtrType ClusterSecretStoreSpecProviderIbmAuthArgs

func ClusterSecretStoreSpecProviderIbmAuthPtr(v *ClusterSecretStoreSpecProviderIbmAuthArgs) ClusterSecretStoreSpecProviderIbmAuthPtrInput {
	return (*clusterSecretStoreSpecProviderIbmAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderIbmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderIbmAuthPtrType) ToClusterSecretStoreSpecProviderIbmAuthPtrOutput() ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderIbmAuthPtrType) ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type ClusterSecretStoreSpecProviderIbmAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthOutput) ToClusterSecretStoreSpecProviderIbmAuthOutput() ClusterSecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthOutput) ToClusterSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthOutput) ToClusterSecretStoreSpecProviderIbmAuthPtrOutput() ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderIbmAuthOutput) ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderIbmAuth) *ClusterSecretStoreSpecProviderIbmAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderIbmAuthPtrOutput)
}

func (o ClusterSecretStoreSpecProviderIbmAuthOutput) SecretRef() ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbmAuth) ClusterSecretStoreSpecProviderIbmAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput)
}

type ClusterSecretStoreSpecProviderIbmAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthPtrOutput() ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderIbmAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuth) ClusterSecretStoreSpecProviderIbmAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderIbmAuth
		return ret
	}).(ClusterSecretStoreSpecProviderIbmAuthOutput)
}

func (o ClusterSecretStoreSpecProviderIbmAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuth) *ClusterSecretStoreSpecProviderIbmAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderIbmAuthSecretRef struct {
	// The SecretAccessKey is used for authentication
	SecretApiKeySecretRef *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef `pulumi:"secretApiKeySecretRef"`
}

// ClusterSecretStoreSpecProviderIbmAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs and ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderIbmAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput
}

type ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs struct {
	// The SecretAccessKey is used for authentication
	SecretApiKeySecretRef ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput `pulumi:"secretApiKeySecretRef"`
}

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput).ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs, ClusterSecretStoreSpecProviderIbmAuthSecretRefPtr and ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderIbmAuthSecretRefPtrType ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs

func ClusterSecretStoreSpecProviderIbmAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderIbmAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderIbmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderIbmAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderIbmAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderIbmAuthSecretRef) *ClusterSecretStoreSpecProviderIbmAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput) SecretApiKeySecretRef() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbmAuthSecretRef) *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return v.SecretApiKeySecretRef
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRef) ClusterSecretStoreSpecProviderIbmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderIbmAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput)
}

// The SecretAccessKey is used for authentication
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput) SecretApiKeySecretRef() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRef) *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretApiKeySecretRef
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs and ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
	ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput).ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs, ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr and ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
	ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
}

type clusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs

func ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type ClusterSecretStoreSpecProviderKubernetes struct {
	// Auth configures how secret-manager authenticates with a Kubernetes instance.
	Auth ClusterSecretStoreSpecProviderKubernetesAuth `pulumi:"auth"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace *string `pulumi:"remoteNamespace"`
	// configures the Kubernetes server Address.
	Server *ClusterSecretStoreSpecProviderKubernetesServer `pulumi:"server"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderKubernetes
func (val *ClusterSecretStoreSpecProviderKubernetes) Defaults() *ClusterSecretStoreSpecProviderKubernetes {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RemoteNamespace == nil {
		remoteNamespace_ := "default"
		tmp.RemoteNamespace = &remoteNamespace_
	}
	tmp.Server = tmp.Server.Defaults()

	return &tmp
}

// ClusterSecretStoreSpecProviderKubernetesInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesArgs and ClusterSecretStoreSpecProviderKubernetesOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesArgs{...}
type ClusterSecretStoreSpecProviderKubernetesInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesOutput() ClusterSecretStoreSpecProviderKubernetesOutput
	ToClusterSecretStoreSpecProviderKubernetesOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesOutput
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type ClusterSecretStoreSpecProviderKubernetesArgs struct {
	// Auth configures how secret-manager authenticates with a Kubernetes instance.
	Auth ClusterSecretStoreSpecProviderKubernetesAuthInput `pulumi:"auth"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace pulumi.StringPtrInput `pulumi:"remoteNamespace"`
	// configures the Kubernetes server Address.
	Server ClusterSecretStoreSpecProviderKubernetesServerPtrInput `pulumi:"server"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderKubernetesArgs
func (val *ClusterSecretStoreSpecProviderKubernetesArgs) Defaults() *ClusterSecretStoreSpecProviderKubernetesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RemoteNamespace == nil {
		tmp.RemoteNamespace = pulumi.StringPtr("default")
	}

	return &tmp
}
func (ClusterSecretStoreSpecProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesArgs) ToClusterSecretStoreSpecProviderKubernetesOutput() ClusterSecretStoreSpecProviderKubernetesOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesArgs) ToClusterSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesArgs) ToClusterSecretStoreSpecProviderKubernetesPtrOutput() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesArgs) ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesOutput).ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesArgs, ClusterSecretStoreSpecProviderKubernetesPtr and ClusterSecretStoreSpecProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesPtrOutput() ClusterSecretStoreSpecProviderKubernetesPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesPtrType ClusterSecretStoreSpecProviderKubernetesArgs

func ClusterSecretStoreSpecProviderKubernetesPtr(v *ClusterSecretStoreSpecProviderKubernetesArgs) ClusterSecretStoreSpecProviderKubernetesPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesPtrType) ToClusterSecretStoreSpecProviderKubernetesPtrOutput() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesPtrType) ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type ClusterSecretStoreSpecProviderKubernetesOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesOutput) ToClusterSecretStoreSpecProviderKubernetesOutput() ClusterSecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesOutput) ToClusterSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesOutput) ToClusterSecretStoreSpecProviderKubernetesPtrOutput() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesOutput) ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetes) *ClusterSecretStoreSpecProviderKubernetes {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
func (o ClusterSecretStoreSpecProviderKubernetesOutput) Auth() ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetes) ClusterSecretStoreSpecProviderKubernetesAuth {
		return v.Auth
	}).(ClusterSecretStoreSpecProviderKubernetesAuthOutput)
}

// Remote namespace to fetch the secrets from
func (o ClusterSecretStoreSpecProviderKubernetesOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetes) *string { return v.RemoteNamespace }).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
func (o ClusterSecretStoreSpecProviderKubernetesOutput) Server() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetes) *ClusterSecretStoreSpecProviderKubernetesServer {
		return v.Server
	}).(ClusterSecretStoreSpecProviderKubernetesServerPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) ToClusterSecretStoreSpecProviderKubernetesPtrOutput() ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) ToClusterSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetes) ClusterSecretStoreSpecProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetes
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) Auth() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetes) *ClusterSecretStoreSpecProviderKubernetesAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.RemoteNamespace
	}).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
func (o ClusterSecretStoreSpecProviderKubernetesPtrOutput) Server() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetes) *ClusterSecretStoreSpecProviderKubernetesServer {
		if v == nil {
			return nil
		}
		return v.Server
	}).(ClusterSecretStoreSpecProviderKubernetesServerPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type ClusterSecretStoreSpecProviderKubernetesAuth struct {
	// has both clientCert and clientKey as secretKeySelector
	Cert *ClusterSecretStoreSpecProviderKubernetesAuthCert `pulumi:"cert"`
	// points to a service account that should be used for authentication
	ServiceAccount *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount `pulumi:"serviceAccount"`
	// use static token to authenticate with
	Token *ClusterSecretStoreSpecProviderKubernetesAuthToken `pulumi:"token"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthArgs and ClusterSecretStoreSpecProviderKubernetesAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthOutput() ClusterSecretStoreSpecProviderKubernetesAuthOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthOutput
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type ClusterSecretStoreSpecProviderKubernetesAuthArgs struct {
	// has both clientCert and clientKey as secretKeySelector
	Cert ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput `pulumi:"cert"`
	// points to a service account that should be used for authentication
	ServiceAccount ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput `pulumi:"serviceAccount"`
	// use static token to authenticate with
	Token ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput `pulumi:"token"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthArgs) ToClusterSecretStoreSpecProviderKubernetesAuthOutput() ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthArgs) ToClusterSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthArgs) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthArgs) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthOutput).ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthArgs, ClusterSecretStoreSpecProviderKubernetesAuthPtr and ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthPtrType ClusterSecretStoreSpecProviderKubernetesAuthArgs

func ClusterSecretStoreSpecProviderKubernetesAuthPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthArgs) ClusterSecretStoreSpecProviderKubernetesAuthPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type ClusterSecretStoreSpecProviderKubernetesAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) ToClusterSecretStoreSpecProviderKubernetesAuthOutput() ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) ToClusterSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) Cert() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthCert {
		return v.Cert
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// points to a service account that should be used for authentication
func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) ServiceAccount() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount {
		return v.ServiceAccount
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// use static token to authenticate with
func (o ClusterSecretStoreSpecProviderKubernetesAuthOutput) Token() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthToken {
		return v.Token
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuth) ClusterSecretStoreSpecProviderKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuth
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthOutput)
}

// has both clientCert and clientKey as secretKeySelector
func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) Cert() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// points to a service account that should be used for authentication
func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) ServiceAccount() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// use static token to authenticate with
func (o ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput) Token() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuth) *ClusterSecretStoreSpecProviderKubernetesAuthToken {
		if v == nil {
			return nil
		}
		return v.Token
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type ClusterSecretStoreSpecProviderKubernetesAuthCert struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientCert *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert `pulumi:"clientCert"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientKey *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey `pulumi:"clientKey"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertArgs and ClusterSecretStoreSpecProviderKubernetesAuthCertOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthCertArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthCertInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertOutput
}

// has both clientCert and clientKey as secretKeySelector
type ClusterSecretStoreSpecProviderKubernetesAuthCertArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientCert ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput `pulumi:"clientCert"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientKey ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput `pulumi:"clientKey"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertOutput).ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertArgs, ClusterSecretStoreSpecProviderKubernetesAuthCertPtr and ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthCertArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthCertPtrType ClusterSecretStoreSpecProviderKubernetesAuthCertArgs

func ClusterSecretStoreSpecProviderKubernetesAuthCertPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthCertArgs) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthCertPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type ClusterSecretStoreSpecProviderKubernetesAuthCertOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthCert) *ClusterSecretStoreSpecProviderKubernetesAuthCert {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ClientCert() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCert) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert {
		return v.ClientCert
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertOutput) ClientKey() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCert) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey {
		return v.ClientKey
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthCertOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCert) ClusterSecretStoreSpecProviderKubernetesAuthCert {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthCert
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientCert() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCert) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientKey() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCert) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs and ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput).ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs, ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtr and ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrType ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs

func ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs and ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput).ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs, ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtr and ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrType ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs

func ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// points to a service account that should be used for authentication
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount struct {
	// A reference to a ServiceAccount resource.
	ServiceAccount *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount `pulumi:"serviceAccount"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs and ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput
}

// points to a service account that should be used for authentication
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs struct {
	// A reference to a ServiceAccount resource.
	ServiceAccount ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput `pulumi:"serviceAccount"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput).ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs, ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtr and ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrType ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs

func ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// points to a service account that should be used for authentication
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ServiceAccount() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		return v.ServiceAccount
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

// A reference to a ServiceAccount resource.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ServiceAccount() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccount) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs and ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput).ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs, ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtr and ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs

func ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// use static token to authenticate with
type ClusterSecretStoreSpecProviderKubernetesAuthToken struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	BearerToken *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken `pulumi:"bearerToken"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthTokenInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs and ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthTokenInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthTokenInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput
}

// use static token to authenticate with
type ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	BearerToken ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput `pulumi:"bearerToken"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput).ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs, ClusterSecretStoreSpecProviderKubernetesAuthTokenPtr and ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthTokenPtrType ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs

func ClusterSecretStoreSpecProviderKubernetesAuthTokenPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthTokenPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthTokenPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthTokenPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// use static token to authenticate with
type ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthToken) *ClusterSecretStoreSpecProviderKubernetesAuthToken {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput) BearerToken() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthToken) *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return v.BearerToken
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthToken) ClusterSecretStoreSpecProviderKubernetesAuthToken {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthToken
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput) BearerToken() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthToken) *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs and ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput).ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs, ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr and ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs

func ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
type ClusterSecretStoreSpecProviderKubernetesServer struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle *string `pulumi:"caBundle"`
	// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
	CaProvider *ClusterSecretStoreSpecProviderKubernetesServerCaProvider `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderKubernetesServer
func (val *ClusterSecretStoreSpecProviderKubernetesServer) Defaults() *ClusterSecretStoreSpecProviderKubernetesServer {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Url == nil {
		url_ := "kubernetes.default"
		tmp.Url = &url_
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderKubernetesServerInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesServerArgs and ClusterSecretStoreSpecProviderKubernetesServerOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesServerInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesServerArgs{...}
type ClusterSecretStoreSpecProviderKubernetesServerInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesServerOutput() ClusterSecretStoreSpecProviderKubernetesServerOutput
	ToClusterSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesServerOutput
}

// configures the Kubernetes server Address.
type ClusterSecretStoreSpecProviderKubernetesServerArgs struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
	CaProvider ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderKubernetesServerArgs
func (val *ClusterSecretStoreSpecProviderKubernetesServerArgs) Defaults() *ClusterSecretStoreSpecProviderKubernetesServerArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Url == nil {
		tmp.Url = pulumi.StringPtr("kubernetes.default")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderKubernetesServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesServerArgs) ToClusterSecretStoreSpecProviderKubernetesServerOutput() ClusterSecretStoreSpecProviderKubernetesServerOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesServerArgs) ToClusterSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesServerArgs) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesServerArgs) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerOutput).ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesServerPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesServerArgs, ClusterSecretStoreSpecProviderKubernetesServerPtr and ClusterSecretStoreSpecProviderKubernetesServerPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesServerPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesServerArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesServerPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesServerPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesServerPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesServerPtrType ClusterSecretStoreSpecProviderKubernetesServerArgs

func ClusterSecretStoreSpecProviderKubernetesServerPtr(v *ClusterSecretStoreSpecProviderKubernetesServerArgs) ClusterSecretStoreSpecProviderKubernetesServerPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesServerPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesServerPtrType) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesServerPtrType) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerPtrOutput)
}

// configures the Kubernetes server Address.
type ClusterSecretStoreSpecProviderKubernetesServerOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) ToClusterSecretStoreSpecProviderKubernetesServerOutput() ClusterSecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) ToClusterSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesServer) *ClusterSecretStoreSpecProviderKubernetesServer {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesServerPtrOutput)
}

// CABundle is a base64-encoded CA certificate
func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServer) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) CaProvider() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServer) *ClusterSecretStoreSpecProviderKubernetesServerCaProvider {
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o ClusterSecretStoreSpecProviderKubernetesServerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderKubernetesServerPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) ToClusterSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesServerOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServer) ClusterSecretStoreSpecProviderKubernetesServer {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesServer
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesServerOutput)
}

// CABundle is a base64-encoded CA certificate
func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) CaProvider() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServer) *ClusterSecretStoreSpecProviderKubernetesServerCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o ClusterSecretStoreSpecProviderKubernetesServerPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type ClusterSecretStoreSpecProviderKubernetesServerCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// ClusterSecretStoreSpecProviderKubernetesServerCaProviderInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs and ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesServerCaProviderInput` via:
//
//	ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
type ClusterSecretStoreSpecProviderKubernetesServerCaProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput
	ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

func (i ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput).ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs, ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtr and ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
	ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
}

type clusterSecretStoreSpecProviderKubernetesServerCaProviderPtrType ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs

func ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtr(v *ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput {
	return (*clusterSecretStoreSpecProviderKubernetesServerCaProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderKubernetesServerCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderKubernetesServerCaProviderPtrType) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderKubernetesServerCaProviderPtrType) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *ClusterSecretStoreSpecProviderKubernetesServerCaProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServerCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderKubernetesServerCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServerCaProvider) ClusterSecretStoreSpecProviderKubernetesServerCaProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderKubernetesServerCaProvider
		return ret
	}).(ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type ClusterSecretStoreSpecProviderOracle struct {
	// Auth configures how secret-manager authenticates with the Oracle Vault.
	// If empty, instance principal is used. Optionally, the authenticating principal type
	// and/or user data may be supplied for the use of workload identity and user principal.
	Auth *ClusterSecretStoreSpecProviderOracleAuth `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment *string `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType *string `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region string `pulumi:"region"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef *ClusterSecretStoreSpecProviderOracleServiceAccountRef `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault string `pulumi:"vault"`
}

// ClusterSecretStoreSpecProviderOracleInput is an input type that accepts ClusterSecretStoreSpecProviderOracleArgs and ClusterSecretStoreSpecProviderOracleOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleInput` via:
//
//	ClusterSecretStoreSpecProviderOracleArgs{...}
type ClusterSecretStoreSpecProviderOracleInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleOutput() ClusterSecretStoreSpecProviderOracleOutput
	ToClusterSecretStoreSpecProviderOracleOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleOutput
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type ClusterSecretStoreSpecProviderOracleArgs struct {
	// Auth configures how secret-manager authenticates with the Oracle Vault.
	// If empty, instance principal is used. Optionally, the authenticating principal type
	// and/or user data may be supplied for the use of workload identity and user principal.
	Auth ClusterSecretStoreSpecProviderOracleAuthPtrInput `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment pulumi.StringPtrInput `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region pulumi.StringInput `pulumi:"region"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault pulumi.StringInput `pulumi:"vault"`
}

func (ClusterSecretStoreSpecProviderOracleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleArgs) ToClusterSecretStoreSpecProviderOracleOutput() ClusterSecretStoreSpecProviderOracleOutput {
	return i.ToClusterSecretStoreSpecProviderOracleOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleArgs) ToClusterSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleOutput)
}

func (i ClusterSecretStoreSpecProviderOracleArgs) ToClusterSecretStoreSpecProviderOraclePtrOutput() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return i.ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleArgs) ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleOutput).ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOraclePtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleArgs, ClusterSecretStoreSpecProviderOraclePtr and ClusterSecretStoreSpecProviderOraclePtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOraclePtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOraclePtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOraclePtrOutput() ClusterSecretStoreSpecProviderOraclePtrOutput
	ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOraclePtrOutput
}

type clusterSecretStoreSpecProviderOraclePtrType ClusterSecretStoreSpecProviderOracleArgs

func ClusterSecretStoreSpecProviderOraclePtr(v *ClusterSecretStoreSpecProviderOracleArgs) ClusterSecretStoreSpecProviderOraclePtrInput {
	return (*clusterSecretStoreSpecProviderOraclePtrType)(v)
}

func (*clusterSecretStoreSpecProviderOraclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOraclePtrType) ToClusterSecretStoreSpecProviderOraclePtrOutput() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return i.ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOraclePtrType) ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOraclePtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type ClusterSecretStoreSpecProviderOracleOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleOutput) ToClusterSecretStoreSpecProviderOracleOutput() ClusterSecretStoreSpecProviderOracleOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleOutput) ToClusterSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleOutput) ToClusterSecretStoreSpecProviderOraclePtrOutput() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o.ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleOutput) ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracle) *ClusterSecretStoreSpecProviderOracle {
		return &v
	}).(ClusterSecretStoreSpecProviderOraclePtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
func (o ClusterSecretStoreSpecProviderOracleOutput) Auth() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) *ClusterSecretStoreSpecProviderOracleAuth { return v.Auth }).(ClusterSecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o ClusterSecretStoreSpecProviderOracleOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) *string { return v.Compartment }).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o ClusterSecretStoreSpecProviderOracleOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o ClusterSecretStoreSpecProviderOracleOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o ClusterSecretStoreSpecProviderOracleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) string { return v.Region }).(pulumi.StringOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o ClusterSecretStoreSpecProviderOracleOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) *ClusterSecretStoreSpecProviderOracleServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o ClusterSecretStoreSpecProviderOracleOutput) Vault() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracle) string { return v.Vault }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderOraclePtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOraclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOraclePtrOutput) ToClusterSecretStoreSpecProviderOraclePtrOutput() ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOraclePtrOutput) ToClusterSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOraclePtrOutput) Elem() ClusterSecretStoreSpecProviderOracleOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) ClusterSecretStoreSpecProviderOracle {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracle
		return ret
	}).(ClusterSecretStoreSpecProviderOracleOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) Auth() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *ClusterSecretStoreSpecProviderOracleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ClusterSecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.Compartment
	}).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *ClusterSecretStoreSpecProviderOracleServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o ClusterSecretStoreSpecProviderOraclePtrOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return &v.Vault
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type ClusterSecretStoreSpecProviderOracleAuth struct {
	// SecretRef to pass through sensitive information.
	SecretRef ClusterSecretStoreSpecProviderOracleAuthSecretRef `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy string `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User string `pulumi:"user"`
}

// ClusterSecretStoreSpecProviderOracleAuthInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthArgs and ClusterSecretStoreSpecProviderOracleAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthInput` via:
//
//	ClusterSecretStoreSpecProviderOracleAuthArgs{...}
type ClusterSecretStoreSpecProviderOracleAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthOutput() ClusterSecretStoreSpecProviderOracleAuthOutput
	ToClusterSecretStoreSpecProviderOracleAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthOutput
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type ClusterSecretStoreSpecProviderOracleAuthArgs struct {
	// SecretRef to pass through sensitive information.
	SecretRef ClusterSecretStoreSpecProviderOracleAuthSecretRefInput `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy pulumi.StringInput `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User pulumi.StringInput `pulumi:"user"`
}

func (ClusterSecretStoreSpecProviderOracleAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleAuthArgs) ToClusterSecretStoreSpecProviderOracleAuthOutput() ClusterSecretStoreSpecProviderOracleAuthOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthArgs) ToClusterSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthOutput)
}

func (i ClusterSecretStoreSpecProviderOracleAuthArgs) ToClusterSecretStoreSpecProviderOracleAuthPtrOutput() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthArgs) ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthOutput).ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOracleAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthArgs, ClusterSecretStoreSpecProviderOracleAuthPtr and ClusterSecretStoreSpecProviderOracleAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOracleAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthPtrOutput() ClusterSecretStoreSpecProviderOracleAuthPtrOutput
	ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthPtrOutput
}

type clusterSecretStoreSpecProviderOracleAuthPtrType ClusterSecretStoreSpecProviderOracleAuthArgs

func ClusterSecretStoreSpecProviderOracleAuthPtr(v *ClusterSecretStoreSpecProviderOracleAuthArgs) ClusterSecretStoreSpecProviderOracleAuthPtrInput {
	return (*clusterSecretStoreSpecProviderOracleAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderOracleAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOracleAuthPtrType) ToClusterSecretStoreSpecProviderOracleAuthPtrOutput() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOracleAuthPtrType) ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type ClusterSecretStoreSpecProviderOracleAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthOutput) ToClusterSecretStoreSpecProviderOracleAuthOutput() ClusterSecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthOutput) ToClusterSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthOutput) ToClusterSecretStoreSpecProviderOracleAuthPtrOutput() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleAuthOutput) ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracleAuth) *ClusterSecretStoreSpecProviderOracleAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderOracleAuthPtrOutput)
}

// SecretRef to pass through sensitive information.
func (o ClusterSecretStoreSpecProviderOracleAuthOutput) SecretRef() ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuth) ClusterSecretStoreSpecProviderOracleAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o ClusterSecretStoreSpecProviderOracleAuthOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuth) string { return v.Tenancy }).(pulumi.StringOutput)
}

// User is an access OCID specific to the account.
func (o ClusterSecretStoreSpecProviderOracleAuthOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuth) string { return v.User }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderOracleAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthPtrOutput() ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderOracleAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuth) ClusterSecretStoreSpecProviderOracleAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracleAuth
		return ret
	}).(ClusterSecretStoreSpecProviderOracleAuthOutput)
}

// SecretRef to pass through sensitive information.
func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuth) *ClusterSecretStoreSpecProviderOracleAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Tenancy
	}).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o ClusterSecretStoreSpecProviderOracleAuthPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

// SecretRef to pass through sensitive information.
type ClusterSecretStoreSpecProviderOracleAuthSecretRef struct {
	// Fingerprint is the fingerprint of the API private key.
	Fingerprint ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint `pulumi:"fingerprint"`
	// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
	Privatekey ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey `pulumi:"privatekey"`
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs and ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderOracleAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput
}

// SecretRef to pass through sensitive information.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs struct {
	// Fingerprint is the fingerprint of the API private key.
	Fingerprint ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintInput `pulumi:"fingerprint"`
	// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
	Privatekey ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput `pulumi:"privatekey"`
}

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput).ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs, ClusterSecretStoreSpecProviderOracleAuthSecretRefPtr and ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderOracleAuthSecretRefPtrType ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs

func ClusterSecretStoreSpecProviderOracleAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderOracleAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderOracleAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// SecretRef to pass through sensitive information.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracleAuthSecretRef) *ClusterSecretStoreSpecProviderOracleAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) Fingerprint() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRef) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return v.Fingerprint
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput) Privatekey() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRef) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return v.Privatekey
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

type ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRef) ClusterSecretStoreSpecProviderOracleAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracleAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput)
}

// Fingerprint is the fingerprint of the API private key.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Fingerprint() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRef) *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v == nil {
			return nil
		}
		return &v.Fingerprint
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Privatekey() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRef) *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v == nil {
			return nil
		}
		return &v.Privatekey
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs and ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintInput` via:
//
//	ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
}

// Fingerprint is the fingerprint of the API private key.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput).ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs, ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr and ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
}

type clusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs

func ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput {
	return (*clusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType)(v)
}

func (*clusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return &v
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Elem() ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint
		return ret
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs and ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput` via:
//
//	ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput).ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs, ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr and ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
	ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
}

type clusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs

func ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput {
	return (*clusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType)(v)
}

func (*clusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return &v
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Elem() ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey
		return ret
	}).(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderOracleServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderOracleServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs and ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderOracleServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput).ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs, ClusterSecretStoreSpecProviderOracleServiceAccountRefPtr and ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderOracleServiceAccountRefPtrType ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs

func ClusterSecretStoreSpecProviderOracleServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderOracleServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderOracleServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderOracleServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderOracleServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderOracleServiceAccountRef) *ClusterSecretStoreSpecProviderOracleServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderOracleServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleServiceAccountRef) ClusterSecretStoreSpecProviderOracleServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderOracleServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepot struct {
	// Auth configures how secret-manager authenticates with a Password Depot instance.
	Auth ClusterSecretStoreSpecProviderPassworddepotAuth `pulumi:"auth"`
	// Database to use as source
	Database string `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host string `pulumi:"host"`
}

// ClusterSecretStoreSpecProviderPassworddepotInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotArgs and ClusterSecretStoreSpecProviderPassworddepotOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotInput` via:
//
//	ClusterSecretStoreSpecProviderPassworddepotArgs{...}
type ClusterSecretStoreSpecProviderPassworddepotInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotOutput() ClusterSecretStoreSpecProviderPassworddepotOutput
	ToClusterSecretStoreSpecProviderPassworddepotOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotOutput
}

// Configures a store to sync secrets with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepotArgs struct {
	// Auth configures how secret-manager authenticates with a Password Depot instance.
	Auth ClusterSecretStoreSpecProviderPassworddepotAuthInput `pulumi:"auth"`
	// Database to use as source
	Database pulumi.StringInput `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host pulumi.StringInput `pulumi:"host"`
}

func (ClusterSecretStoreSpecProviderPassworddepotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderPassworddepotArgs) ToClusterSecretStoreSpecProviderPassworddepotOutput() ClusterSecretStoreSpecProviderPassworddepotOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotArgs) ToClusterSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotOutput)
}

func (i ClusterSecretStoreSpecProviderPassworddepotArgs) ToClusterSecretStoreSpecProviderPassworddepotPtrOutput() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotArgs) ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotOutput).ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderPassworddepotPtrInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotArgs, ClusterSecretStoreSpecProviderPassworddepotPtr and ClusterSecretStoreSpecProviderPassworddepotPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderPassworddepotArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderPassworddepotPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotPtrOutput() ClusterSecretStoreSpecProviderPassworddepotPtrOutput
	ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotPtrOutput
}

type clusterSecretStoreSpecProviderPassworddepotPtrType ClusterSecretStoreSpecProviderPassworddepotArgs

func ClusterSecretStoreSpecProviderPassworddepotPtr(v *ClusterSecretStoreSpecProviderPassworddepotArgs) ClusterSecretStoreSpecProviderPassworddepotPtrInput {
	return (*clusterSecretStoreSpecProviderPassworddepotPtrType)(v)
}

func (*clusterSecretStoreSpecProviderPassworddepotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderPassworddepotPtrType) ToClusterSecretStoreSpecProviderPassworddepotPtrOutput() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderPassworddepotPtrType) ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepotOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotOutput) ToClusterSecretStoreSpecProviderPassworddepotOutput() ClusterSecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotOutput) ToClusterSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotOutput) ToClusterSecretStoreSpecProviderPassworddepotPtrOutput() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderPassworddepotOutput) ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderPassworddepot) *ClusterSecretStoreSpecProviderPassworddepot {
		return &v
	}).(ClusterSecretStoreSpecProviderPassworddepotPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
func (o ClusterSecretStoreSpecProviderPassworddepotOutput) Auth() ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepot) ClusterSecretStoreSpecProviderPassworddepotAuth {
		return v.Auth
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthOutput)
}

// Database to use as source
func (o ClusterSecretStoreSpecProviderPassworddepotOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepot) string { return v.Database }).(pulumi.StringOutput)
}

// URL configures the Password Depot instance URL.
func (o ClusterSecretStoreSpecProviderPassworddepotOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepot) string { return v.Host }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotPtrOutput() ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) Elem() ClusterSecretStoreSpecProviderPassworddepotOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepot) ClusterSecretStoreSpecProviderPassworddepot {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderPassworddepot
		return ret
	}).(ClusterSecretStoreSpecProviderPassworddepotOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) Auth() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepot) *ClusterSecretStoreSpecProviderPassworddepotAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Database to use as source
func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o ClusterSecretStoreSpecProviderPassworddepotPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepotAuth struct {
	SecretRef ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderPassworddepotAuthInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthArgs and ClusterSecretStoreSpecProviderPassworddepotAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthInput` via:
//
//	ClusterSecretStoreSpecProviderPassworddepotAuthArgs{...}
type ClusterSecretStoreSpecProviderPassworddepotAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthOutput() ClusterSecretStoreSpecProviderPassworddepotAuthOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthOutput
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepotAuthArgs struct {
	SecretRef ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthOutput() ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthOutput)
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthOutput).ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderPassworddepotAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthArgs, ClusterSecretStoreSpecProviderPassworddepotAuthPtr and ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderPassworddepotAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderPassworddepotAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput
}

type clusterSecretStoreSpecProviderPassworddepotAuthPtrType ClusterSecretStoreSpecProviderPassworddepotAuthArgs

func ClusterSecretStoreSpecProviderPassworddepotAuthPtr(v *ClusterSecretStoreSpecProviderPassworddepotAuthArgs) ClusterSecretStoreSpecProviderPassworddepotAuthPtrInput {
	return (*clusterSecretStoreSpecProviderPassworddepotAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderPassworddepotAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type ClusterSecretStoreSpecProviderPassworddepotAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthOutput() ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderPassworddepotAuth) *ClusterSecretStoreSpecProviderPassworddepotAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthOutput) SecretRef() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepotAuth) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderPassworddepotAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuth) ClusterSecretStoreSpecProviderPassworddepotAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderPassworddepotAuth
		return ret
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthOutput)
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput) SecretRef() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuth) *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef struct {
	// Username / Password is used for authentication.
	Credentials *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials `pulumi:"credentials"`
}

// ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs and ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput
}

type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs struct {
	// Username / Password is used for authentication.
	Credentials ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput `pulumi:"credentials"`
}

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput).ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs, ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtr and ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrType ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs

func ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtr(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef) *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

// Username / Password is used for authentication.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput) Credentials() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef) *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return v.Credentials
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

// Username / Password is used for authentication.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Credentials() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRef) *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs and ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput` via:
//
//	ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
}

// Username / Password is used for authentication.
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput).ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput is an input type that accepts ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs, ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr and ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
	ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
}

type clusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs

func ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput {
	return (*clusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType)(v)
}

func (*clusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return &v
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Elem() ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials
		return ret
	}).(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type ClusterSecretStoreSpecProviderVault struct {
	// Auth configures how secret-manager authenticates with the Vault server.
	Auth ClusterSecretStoreSpecProviderVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Vault server certificate.
	CaProvider *ClusterSecretStoreSpecProviderVaultCaProvider `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent *bool `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path *string `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites *bool `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVault
func (val *ClusterSecretStoreSpecProviderVault) Defaults() *ClusterSecretStoreSpecProviderVault {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Auth = *tmp.Auth.Defaults()

	if tmp.Version == nil {
		version_ := "v2"
		tmp.Version = &version_
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderVaultInput is an input type that accepts ClusterSecretStoreSpecProviderVaultArgs and ClusterSecretStoreSpecProviderVaultOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultInput` via:
//
//	ClusterSecretStoreSpecProviderVaultArgs{...}
type ClusterSecretStoreSpecProviderVaultInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultOutput() ClusterSecretStoreSpecProviderVaultOutput
	ToClusterSecretStoreSpecProviderVaultOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultOutput
}

// Vault configures this store to sync secrets using Hashi provider
type ClusterSecretStoreSpecProviderVaultArgs struct {
	// Auth configures how secret-manager authenticates with the Vault server.
	Auth ClusterSecretStoreSpecProviderVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Vault server certificate.
	CaProvider ClusterSecretStoreSpecProviderVaultCaProviderPtrInput `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent pulumi.BoolPtrInput `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites pulumi.BoolPtrInput `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultArgs
func (val *ClusterSecretStoreSpecProviderVaultArgs) Defaults() *ClusterSecretStoreSpecProviderVaultArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.Version == nil {
		tmp.Version = pulumi.StringPtr("v2")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVault)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultArgs) ToClusterSecretStoreSpecProviderVaultOutput() ClusterSecretStoreSpecProviderVaultOutput {
	return i.ToClusterSecretStoreSpecProviderVaultOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultArgs) ToClusterSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultOutput)
}

func (i ClusterSecretStoreSpecProviderVaultArgs) ToClusterSecretStoreSpecProviderVaultPtrOutput() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultArgs) ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultOutput).ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultArgs, ClusterSecretStoreSpecProviderVaultPtr and ClusterSecretStoreSpecProviderVaultPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultPtrOutput() ClusterSecretStoreSpecProviderVaultPtrOutput
	ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultPtrOutput
}

type clusterSecretStoreSpecProviderVaultPtrType ClusterSecretStoreSpecProviderVaultArgs

func ClusterSecretStoreSpecProviderVaultPtr(v *ClusterSecretStoreSpecProviderVaultArgs) ClusterSecretStoreSpecProviderVaultPtrInput {
	return (*clusterSecretStoreSpecProviderVaultPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVault)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultPtrType) ToClusterSecretStoreSpecProviderVaultPtrOutput() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultPtrType) ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type ClusterSecretStoreSpecProviderVaultOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVault)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultOutput) ToClusterSecretStoreSpecProviderVaultOutput() ClusterSecretStoreSpecProviderVaultOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultOutput) ToClusterSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultOutput) ToClusterSecretStoreSpecProviderVaultPtrOutput() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultOutput) ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVault) *ClusterSecretStoreSpecProviderVault {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
func (o ClusterSecretStoreSpecProviderVaultOutput) Auth() ClusterSecretStoreSpecProviderVaultAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) ClusterSecretStoreSpecProviderVaultAuth { return v.Auth }).(ClusterSecretStoreSpecProviderVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
func (o ClusterSecretStoreSpecProviderVaultOutput) CaProvider() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *ClusterSecretStoreSpecProviderVaultCaProvider {
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o ClusterSecretStoreSpecProviderVaultOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *bool { return v.ForwardInconsistent }).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o ClusterSecretStoreSpecProviderVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o ClusterSecretStoreSpecProviderVaultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o ClusterSecretStoreSpecProviderVaultOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *bool { return v.ReadYourWrites }).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterSecretStoreSpecProviderVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) string { return v.Server }).(pulumi.StringOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o ClusterSecretStoreSpecProviderVaultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVault) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVault)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultPtrOutput) ToClusterSecretStoreSpecProviderVaultPtrOutput() ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultPtrOutput) ToClusterSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) ClusterSecretStoreSpecProviderVault {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVault
		return ret
	}).(ClusterSecretStoreSpecProviderVaultOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Auth() ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *ClusterSecretStoreSpecProviderVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) CaProvider() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *ClusterSecretStoreSpecProviderVaultCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ReadYourWrites
	}).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o ClusterSecretStoreSpecProviderVaultPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type ClusterSecretStoreSpecProviderVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole *ClusterSecretStoreSpecProviderVaultAuthAppRole `pulumi:"appRole"`
	// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
	// Cert authentication method
	Cert *ClusterSecretStoreSpecProviderVaultAuthCert `pulumi:"cert"`
	// Jwt authenticates with Vault by passing role and JWT token using the
	// JWT/OIDC authentication method
	Jwt *ClusterSecretStoreSpecProviderVaultAuthJwt `pulumi:"jwt"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes *ClusterSecretStoreSpecProviderVaultAuthKubernetes `pulumi:"kubernetes"`
	// Ldap authenticates with Vault by passing username/password pair using
	// the LDAP authentication method
	Ldap *ClusterSecretStoreSpecProviderVaultAuthLdap `pulumi:"ldap"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuth
func (val *ClusterSecretStoreSpecProviderVaultAuth) Defaults() *ClusterSecretStoreSpecProviderVaultAuth {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AppRole = tmp.AppRole.Defaults()

	tmp.Jwt = tmp.Jwt.Defaults()

	tmp.Kubernetes = tmp.Kubernetes.Defaults()

	tmp.Ldap = tmp.Ldap.Defaults()

	return &tmp
}

// ClusterSecretStoreSpecProviderVaultAuthInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthArgs and ClusterSecretStoreSpecProviderVaultAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthOutput() ClusterSecretStoreSpecProviderVaultAuthOutput
	ToClusterSecretStoreSpecProviderVaultAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthOutput
}

// Auth configures how secret-manager authenticates with the Vault server.
type ClusterSecretStoreSpecProviderVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
	// Cert authentication method
	Cert ClusterSecretStoreSpecProviderVaultAuthCertPtrInput `pulumi:"cert"`
	// Jwt authenticates with Vault by passing role and JWT token using the
	// JWT/OIDC authentication method
	Jwt ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput `pulumi:"jwt"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// Ldap authenticates with Vault by passing username/password pair using
	// the LDAP authentication method
	Ldap ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput `pulumi:"ldap"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthArgs
func (val *ClusterSecretStoreSpecProviderVaultAuthArgs) Defaults() *ClusterSecretStoreSpecProviderVaultAuthArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthArgs) ToClusterSecretStoreSpecProviderVaultAuthOutput() ClusterSecretStoreSpecProviderVaultAuthOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthArgs) ToClusterSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthArgs) ToClusterSecretStoreSpecProviderVaultAuthPtrOutput() ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthArgs) ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthOutput).ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthArgs, ClusterSecretStoreSpecProviderVaultAuthPtr and ClusterSecretStoreSpecProviderVaultAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthPtrOutput() ClusterSecretStoreSpecProviderVaultAuthPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthPtrType ClusterSecretStoreSpecProviderVaultAuthArgs

func ClusterSecretStoreSpecProviderVaultAuthPtr(v *ClusterSecretStoreSpecProviderVaultAuthArgs) ClusterSecretStoreSpecProviderVaultAuthPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthPtrType) ToClusterSecretStoreSpecProviderVaultAuthPtrOutput() ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthPtrType) ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type ClusterSecretStoreSpecProviderVaultAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthOutput) ToClusterSecretStoreSpecProviderVaultAuthOutput() ClusterSecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthOutput) ToClusterSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthOutput) ToClusterSecretStoreSpecProviderVaultAuthPtrOutput() ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthOutput) ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) AppRole() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthAppRole {
		return v.AppRole
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) Cert() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthCert {
		return v.Cert
	}).(ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) Jwt() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthJwt {
		return v.Jwt
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) Kubernetes() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthKubernetes {
		return v.Kubernetes
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) Ldap() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthLdap {
		return v.Ldap
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterSecretStoreSpecProviderVaultAuthOutput) TokenSecretRef() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef {
		return v.TokenSecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthPtrOutput() ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) ClusterSecretStoreSpecProviderVaultAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuth
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) AppRole() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) Cert() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) Jwt() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) Kubernetes() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) Ldap() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthLdap {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o ClusterSecretStoreSpecProviderVaultAuthPtrOutput) TokenSecretRef() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuth) *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type ClusterSecretStoreSpecProviderVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthAppRole
func (val *ClusterSecretStoreSpecProviderVaultAuthAppRole) Defaults() *ClusterSecretStoreSpecProviderVaultAuthAppRole {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "approle"
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderVaultAuthAppRoleInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs and ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthAppRoleInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthAppRoleInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput
	ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs
func (val *ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) Defaults() *ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("approle")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput).ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs, ClusterSecretStoreSpecProviderVaultAuthAppRolePtr and ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthAppRolePtrType ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs

func ClusterSecretStoreSpecProviderVaultAuthAppRolePtr(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthAppRolePtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthAppRolePtrType) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthAppRolePtrType) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthAppRole) *ClusterSecretStoreSpecProviderVaultAuthAppRole {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRole) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRole) ClusterSecretStoreSpecProviderVaultAuthAppRole {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthAppRole
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRole) *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCert struct {
	// ClientCert is a certificate to authenticate using the Cert Vault
	// authentication method
	ClientCert *ClusterSecretStoreSpecProviderVaultAuthCertClientCert `pulumi:"clientCert"`
	// SecretRef to a key in a Secret resource containing client private key to
	// authenticate with Vault using the Cert authentication method
	SecretRef *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderVaultAuthCertInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertArgs and ClusterSecretStoreSpecProviderVaultAuthCertOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthCertArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthCertInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertOutput
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertArgs struct {
	// ClientCert is a certificate to authenticate using the Cert Vault
	// authentication method
	ClientCert ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput `pulumi:"clientCert"`
	// SecretRef to a key in a Secret resource containing client private key to
	// authenticate with Vault using the Cert authentication method
	SecretRef ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderVaultAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertOutput).ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthCertPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertArgs, ClusterSecretStoreSpecProviderVaultAuthCertPtr and ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthCertArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthCertPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthCertPtrType ClusterSecretStoreSpecProviderVaultAuthCertArgs

func ClusterSecretStoreSpecProviderVaultAuthCertPtr(v *ClusterSecretStoreSpecProviderVaultAuthCertArgs) ClusterSecretStoreSpecProviderVaultAuthCertPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthCertPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthCert) *ClusterSecretStoreSpecProviderVaultAuthCert {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) ClientCert() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCert) *ClusterSecretStoreSpecProviderVaultAuthCertClientCert {
		return v.ClientCert
	}).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthCertOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCert) *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthCertOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCert) ClusterSecretStoreSpecProviderVaultAuthCert {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthCert
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthCertOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) ClientCert() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCert) *ClusterSecretStoreSpecProviderVaultAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCert) *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthCertClientCertInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs and ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertClientCertInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthCertClientCertInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput).ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs, ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtr and ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthCertClientCertPtrType ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs

func ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtr(v *ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthCertClientCertPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertClientCertPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertClientCertPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *ClusterSecretStoreSpecProviderVaultAuthCertClientCert {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertClientCert) ClusterSecretStoreSpecProviderVaultAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthCertClientCert
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthCertSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthCertSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) ClusterSecretStoreSpecProviderVaultAuthCertSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthCertSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type ClusterSecretStoreSpecProviderVaultAuthJwt struct {
	// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
	// a token for with the `TokenRequest` API.
	KubernetesServiceAccountToken *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path string `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role *string `pulumi:"role"`
	// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
	// authenticate with Vault using the JWT/OIDC authentication method.
	SecretRef *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthJwt
func (val *ClusterSecretStoreSpecProviderVaultAuthJwt) Defaults() *ClusterSecretStoreSpecProviderVaultAuthJwt {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "jwt"
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderVaultAuthJwtInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtArgs and ClusterSecretStoreSpecProviderVaultAuthJwtOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthJwtArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthJwtInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtOutput() ClusterSecretStoreSpecProviderVaultAuthJwtOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtOutput
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type ClusterSecretStoreSpecProviderVaultAuthJwtArgs struct {
	// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
	// a token for with the `TokenRequest` API.
	KubernetesServiceAccountToken ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path pulumi.StringInput `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
	// authenticate with Vault using the JWT/OIDC authentication method.
	SecretRef ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthJwtArgs
func (val *ClusterSecretStoreSpecProviderVaultAuthJwtArgs) Defaults() *ClusterSecretStoreSpecProviderVaultAuthJwtArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("jwt")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtOutput() ClusterSecretStoreSpecProviderVaultAuthJwtOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtOutput).ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtArgs, ClusterSecretStoreSpecProviderVaultAuthJwtPtr and ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthJwtArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthJwtPtrType ClusterSecretStoreSpecProviderVaultAuthJwtArgs

func ClusterSecretStoreSpecProviderVaultAuthJwtPtr(v *ClusterSecretStoreSpecProviderVaultAuthJwtArgs) ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthJwtPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type ClusterSecretStoreSpecProviderVaultAuthJwtOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtOutput() ClusterSecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthJwt) *ClusterSecretStoreSpecProviderVaultAuthJwt {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) KubernetesServiceAccountToken() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwt) *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return v.KubernetesServiceAccountToken
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwt) string { return v.Path }).(pulumi.StringOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwt) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwt) *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthJwtOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwt) ClusterSecretStoreSpecProviderVaultAuthJwt {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthJwt
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) KubernetesServiceAccountToken() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwt) *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v == nil {
			return nil
		}
		return v.KubernetesServiceAccountToken
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwt) *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	Audiences []string `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Defaults to 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// Service account field containing the name of a kubernetes ServiceAccount.
	ServiceAccountRef ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef `pulumi:"serviceAccountRef"`
}

// ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs and ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Defaults to 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// Service account field containing the name of a kubernetes ServiceAccount.
	ServiceAccountRef ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput `pulumi:"serviceAccountRef"`
}

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput).ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs, ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr and ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs

func ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Defaults to 10 minutes.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Defaults to 10 minutes.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs and ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
}

// Service account field containing the name of a kubernetes ServiceAccount.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput).ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs, ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr and ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs

func ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type ClusterSecretStoreSpecProviderVaultAuthKubernetes struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Vault. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthKubernetes
func (val *ClusterSecretStoreSpecProviderVaultAuthKubernetes) Defaults() *ClusterSecretStoreSpecProviderVaultAuthKubernetes {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.MountPath) {
		tmp.MountPath = "kubernetes"
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs and ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthKubernetesInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Vault. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs
func (val *ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) Defaults() *ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountPath == nil {
		tmp.MountPath = pulumi.String("kubernetes")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput).ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs, ClusterSecretStoreSpecProviderVaultAuthKubernetesPtr and ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthKubernetesPtrType ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs

func ClusterSecretStoreSpecProviderVaultAuthKubernetesPtr(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthKubernetesPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthKubernetes) *ClusterSecretStoreSpecProviderVaultAuthKubernetes {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetes) string { return v.MountPath }).(pulumi.StringOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetes) *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetes) *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetes) ClusterSecretStoreSpecProviderVaultAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthKubernetes
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetes) *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ServiceAccountRef() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetes) *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs and ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput).ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs, ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr and ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs

func ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type ClusterSecretStoreSpecProviderVaultAuthLdap struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path string `pulumi:"path"`
	// SecretRef to a key in a Secret resource containing password for the LDAP
	// user used to authenticate with Vault using the LDAP authentication
	// method
	SecretRef *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username string `pulumi:"username"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthLdap
func (val *ClusterSecretStoreSpecProviderVaultAuthLdap) Defaults() *ClusterSecretStoreSpecProviderVaultAuthLdap {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "ldap"
	}
	return &tmp
}

// ClusterSecretStoreSpecProviderVaultAuthLdapInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthLdapArgs and ClusterSecretStoreSpecProviderVaultAuthLdapOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthLdapInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthLdapArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthLdapInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthLdapOutput() ClusterSecretStoreSpecProviderVaultAuthLdapOutput
	ToClusterSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapOutput
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type ClusterSecretStoreSpecProviderVaultAuthLdapArgs struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path pulumi.StringInput `pulumi:"path"`
	// SecretRef to a key in a Secret resource containing password for the LDAP
	// user used to authenticate with Vault using the LDAP authentication
	// method
	SecretRef ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username pulumi.StringInput `pulumi:"username"`
}

// Defaults sets the appropriate defaults for ClusterSecretStoreSpecProviderVaultAuthLdapArgs
func (val *ClusterSecretStoreSpecProviderVaultAuthLdapArgs) Defaults() *ClusterSecretStoreSpecProviderVaultAuthLdapArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("ldap")
	}
	return &tmp
}
func (ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapOutput() ClusterSecretStoreSpecProviderVaultAuthLdapOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapOutput).ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthLdapArgs, ClusterSecretStoreSpecProviderVaultAuthLdapPtr and ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthLdapArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthLdapPtrType ClusterSecretStoreSpecProviderVaultAuthLdapArgs

func ClusterSecretStoreSpecProviderVaultAuthLdapPtr(v *ClusterSecretStoreSpecProviderVaultAuthLdapArgs) ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthLdapPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthLdapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthLdapPtrType) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthLdapPtrType) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type ClusterSecretStoreSpecProviderVaultAuthLdapOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapOutput() ClusterSecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthLdap) *ClusterSecretStoreSpecProviderVaultAuthLdap {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdap) string { return v.Path }).(pulumi.StringOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdap) *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthLdapOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdap) string { return v.Username }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthLdapOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdap) ClusterSecretStoreSpecProviderVaultAuthLdap {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthLdap
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) SecretRef() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdap) *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs and ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput
	ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput).ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs, ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtr and ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrType ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs

func ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtr(v *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type ClusterSecretStoreSpecProviderVaultCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// ClusterSecretStoreSpecProviderVaultCaProviderInput is an input type that accepts ClusterSecretStoreSpecProviderVaultCaProviderArgs and ClusterSecretStoreSpecProviderVaultCaProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultCaProviderInput` via:
//
//	ClusterSecretStoreSpecProviderVaultCaProviderArgs{...}
type ClusterSecretStoreSpecProviderVaultCaProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultCaProviderOutput() ClusterSecretStoreSpecProviderVaultCaProviderOutput
	ToClusterSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultCaProviderOutput
}

// The provider for the CA bundle to use to validate Vault server certificate.
type ClusterSecretStoreSpecProviderVaultCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterSecretStoreSpecProviderVaultCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderVaultCaProviderArgs) ToClusterSecretStoreSpecProviderVaultCaProviderOutput() ClusterSecretStoreSpecProviderVaultCaProviderOutput {
	return i.ToClusterSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultCaProviderArgs) ToClusterSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultCaProviderOutput)
}

func (i ClusterSecretStoreSpecProviderVaultCaProviderArgs) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutput() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderVaultCaProviderArgs) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultCaProviderOutput).ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderVaultCaProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderVaultCaProviderArgs, ClusterSecretStoreSpecProviderVaultCaProviderPtr and ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderVaultCaProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderVaultCaProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderVaultCaProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutput() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput
	ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput
}

type clusterSecretStoreSpecProviderVaultCaProviderPtrType ClusterSecretStoreSpecProviderVaultCaProviderArgs

func ClusterSecretStoreSpecProviderVaultCaProviderPtr(v *ClusterSecretStoreSpecProviderVaultCaProviderArgs) ClusterSecretStoreSpecProviderVaultCaProviderPtrInput {
	return (*clusterSecretStoreSpecProviderVaultCaProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderVaultCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderVaultCaProviderPtrType) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutput() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderVaultCaProviderPtrType) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type ClusterSecretStoreSpecProviderVaultCaProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) ToClusterSecretStoreSpecProviderVaultCaProviderOutput() ClusterSecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) ToClusterSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutput() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderVaultCaProvider) *ClusterSecretStoreSpecProviderVaultCaProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderVaultCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderVaultCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutput() ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) ToClusterSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderVaultCaProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultCaProvider) ClusterSecretStoreSpecProviderVaultCaProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderVaultCaProvider
		return ret
	}).(ClusterSecretStoreSpecProviderVaultCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type ClusterSecretStoreSpecProviderWebhook struct {
	// Body
	Body *string `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate webhook server certificate.
	CaProvider *ClusterSecretStoreSpecProviderWebhookCaProvider `pulumi:"caProvider"`
	// Headers
	Headers map[string]string `pulumi:"headers"`
	// Webhook Method
	Method *string `pulumi:"method"`
	// Result formatting
	Result ClusterSecretStoreSpecProviderWebhookResult `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets []ClusterSecretStoreSpecProviderWebhookSecrets `pulumi:"secrets"`
	// Timeout
	Timeout *string `pulumi:"timeout"`
	// Webhook url to call
	Url string `pulumi:"url"`
}

// ClusterSecretStoreSpecProviderWebhookInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookArgs and ClusterSecretStoreSpecProviderWebhookOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookArgs{...}
type ClusterSecretStoreSpecProviderWebhookInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookOutput() ClusterSecretStoreSpecProviderWebhookOutput
	ToClusterSecretStoreSpecProviderWebhookOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookOutput
}

// Webhook configures this store to sync secrets using a generic templated webhook
type ClusterSecretStoreSpecProviderWebhookArgs struct {
	// Body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate webhook server certificate.
	CaProvider ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput `pulumi:"caProvider"`
	// Headers
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Webhook Method
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Result formatting
	Result ClusterSecretStoreSpecProviderWebhookResultInput `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets ClusterSecretStoreSpecProviderWebhookSecretsArrayInput `pulumi:"secrets"`
	// Timeout
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Webhook url to call
	Url pulumi.StringInput `pulumi:"url"`
}

func (ClusterSecretStoreSpecProviderWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookArgs) ToClusterSecretStoreSpecProviderWebhookOutput() ClusterSecretStoreSpecProviderWebhookOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookArgs) ToClusterSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookOutput)
}

func (i ClusterSecretStoreSpecProviderWebhookArgs) ToClusterSecretStoreSpecProviderWebhookPtrOutput() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookArgs) ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookOutput).ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderWebhookPtrInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookArgs, ClusterSecretStoreSpecProviderWebhookPtr and ClusterSecretStoreSpecProviderWebhookPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderWebhookArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderWebhookPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookPtrOutput() ClusterSecretStoreSpecProviderWebhookPtrOutput
	ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookPtrOutput
}

type clusterSecretStoreSpecProviderWebhookPtrType ClusterSecretStoreSpecProviderWebhookArgs

func ClusterSecretStoreSpecProviderWebhookPtr(v *ClusterSecretStoreSpecProviderWebhookArgs) ClusterSecretStoreSpecProviderWebhookPtrInput {
	return (*clusterSecretStoreSpecProviderWebhookPtrType)(v)
}

func (*clusterSecretStoreSpecProviderWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderWebhookPtrType) ToClusterSecretStoreSpecProviderWebhookPtrOutput() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderWebhookPtrType) ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type ClusterSecretStoreSpecProviderWebhookOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookOutput) ToClusterSecretStoreSpecProviderWebhookOutput() ClusterSecretStoreSpecProviderWebhookOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookOutput) ToClusterSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookOutput) ToClusterSecretStoreSpecProviderWebhookPtrOutput() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o.ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderWebhookOutput) ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderWebhook) *ClusterSecretStoreSpecProviderWebhook {
		return &v
	}).(ClusterSecretStoreSpecProviderWebhookPtrOutput)
}

// Body
func (o ClusterSecretStoreSpecProviderWebhookOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderWebhookOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
func (o ClusterSecretStoreSpecProviderWebhookOutput) CaProvider() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) *ClusterSecretStoreSpecProviderWebhookCaProvider {
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o ClusterSecretStoreSpecProviderWebhookOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Webhook Method
func (o ClusterSecretStoreSpecProviderWebhookOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Result formatting
func (o ClusterSecretStoreSpecProviderWebhookOutput) Result() ClusterSecretStoreSpecProviderWebhookResultOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) ClusterSecretStoreSpecProviderWebhookResult {
		return v.Result
	}).(ClusterSecretStoreSpecProviderWebhookResultOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o ClusterSecretStoreSpecProviderWebhookOutput) Secrets() ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) []ClusterSecretStoreSpecProviderWebhookSecrets {
		return v.Secrets
	}).(ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o ClusterSecretStoreSpecProviderWebhookOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o ClusterSecretStoreSpecProviderWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderWebhookPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) ToClusterSecretStoreSpecProviderWebhookPtrOutput() ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) ToClusterSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Elem() ClusterSecretStoreSpecProviderWebhookOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) ClusterSecretStoreSpecProviderWebhook {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderWebhook
		return ret
	}).(ClusterSecretStoreSpecProviderWebhookOutput)
}

// Body
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) CaProvider() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *ClusterSecretStoreSpecProviderWebhookCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Webhook Method
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Result formatting
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Result() ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *ClusterSecretStoreSpecProviderWebhookResult {
		if v == nil {
			return nil
		}
		return &v.Result
	}).(ClusterSecretStoreSpecProviderWebhookResultPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Secrets() ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) []ClusterSecretStoreSpecProviderWebhookSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o ClusterSecretStoreSpecProviderWebhookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type ClusterSecretStoreSpecProviderWebhookCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// ClusterSecretStoreSpecProviderWebhookCaProviderInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookCaProviderArgs and ClusterSecretStoreSpecProviderWebhookCaProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookCaProviderInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookCaProviderArgs{...}
type ClusterSecretStoreSpecProviderWebhookCaProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookCaProviderOutput() ClusterSecretStoreSpecProviderWebhookCaProviderOutput
	ToClusterSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderOutput
}

// The provider for the CA bundle to use to validate webhook server certificate.
type ClusterSecretStoreSpecProviderWebhookCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ToClusterSecretStoreSpecProviderWebhookCaProviderOutput() ClusterSecretStoreSpecProviderWebhookCaProviderOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ToClusterSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookCaProviderOutput)
}

func (i ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookCaProviderOutput).ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookCaProviderArgs, ClusterSecretStoreSpecProviderWebhookCaProviderPtr and ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderWebhookCaProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput
	ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput
}

type clusterSecretStoreSpecProviderWebhookCaProviderPtrType ClusterSecretStoreSpecProviderWebhookCaProviderArgs

func ClusterSecretStoreSpecProviderWebhookCaProviderPtr(v *ClusterSecretStoreSpecProviderWebhookCaProviderArgs) ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput {
	return (*clusterSecretStoreSpecProviderWebhookCaProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderWebhookCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderWebhookCaProviderPtrType) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderWebhookCaProviderPtrType) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type ClusterSecretStoreSpecProviderWebhookCaProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderOutput() ClusterSecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderWebhookCaProvider) *ClusterSecretStoreSpecProviderWebhookCaProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderWebhookCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput() ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) ToClusterSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderWebhookCaProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookCaProvider) ClusterSecretStoreSpecProviderWebhookCaProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderWebhookCaProvider
		return ret
	}).(ClusterSecretStoreSpecProviderWebhookCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Headers
type ClusterSecretStoreSpecProviderWebhookHeaders struct {
}

// Result formatting
type ClusterSecretStoreSpecProviderWebhookResult struct {
	// Json path of return value
	JsonPath *string `pulumi:"jsonPath"`
}

// ClusterSecretStoreSpecProviderWebhookResultInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookResultArgs and ClusterSecretStoreSpecProviderWebhookResultOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookResultInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookResultArgs{...}
type ClusterSecretStoreSpecProviderWebhookResultInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookResultOutput() ClusterSecretStoreSpecProviderWebhookResultOutput
	ToClusterSecretStoreSpecProviderWebhookResultOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookResultOutput
}

// Result formatting
type ClusterSecretStoreSpecProviderWebhookResultArgs struct {
	// Json path of return value
	JsonPath pulumi.StringPtrInput `pulumi:"jsonPath"`
}

func (ClusterSecretStoreSpecProviderWebhookResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookResultArgs) ToClusterSecretStoreSpecProviderWebhookResultOutput() ClusterSecretStoreSpecProviderWebhookResultOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookResultOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookResultArgs) ToClusterSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookResultOutput)
}

func (i ClusterSecretStoreSpecProviderWebhookResultArgs) ToClusterSecretStoreSpecProviderWebhookResultPtrOutput() ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookResultArgs) ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookResultOutput).ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderWebhookResultPtrInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookResultArgs, ClusterSecretStoreSpecProviderWebhookResultPtr and ClusterSecretStoreSpecProviderWebhookResultPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookResultPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderWebhookResultArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderWebhookResultPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookResultPtrOutput() ClusterSecretStoreSpecProviderWebhookResultPtrOutput
	ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookResultPtrOutput
}

type clusterSecretStoreSpecProviderWebhookResultPtrType ClusterSecretStoreSpecProviderWebhookResultArgs

func ClusterSecretStoreSpecProviderWebhookResultPtr(v *ClusterSecretStoreSpecProviderWebhookResultArgs) ClusterSecretStoreSpecProviderWebhookResultPtrInput {
	return (*clusterSecretStoreSpecProviderWebhookResultPtrType)(v)
}

func (*clusterSecretStoreSpecProviderWebhookResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderWebhookResultPtrType) ToClusterSecretStoreSpecProviderWebhookResultPtrOutput() ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderWebhookResultPtrType) ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookResultPtrOutput)
}

// Result formatting
type ClusterSecretStoreSpecProviderWebhookResultOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookResultOutput) ToClusterSecretStoreSpecProviderWebhookResultOutput() ClusterSecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookResultOutput) ToClusterSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookResultOutput) ToClusterSecretStoreSpecProviderWebhookResultPtrOutput() ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderWebhookResultOutput) ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderWebhookResult) *ClusterSecretStoreSpecProviderWebhookResult {
		return &v
	}).(ClusterSecretStoreSpecProviderWebhookResultPtrOutput)
}

// Json path of return value
func (o ClusterSecretStoreSpecProviderWebhookResultOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookResult) *string { return v.JsonPath }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderWebhookResultPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookResultPtrOutput) ToClusterSecretStoreSpecProviderWebhookResultPtrOutput() ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookResultPtrOutput) ToClusterSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookResultPtrOutput) Elem() ClusterSecretStoreSpecProviderWebhookResultOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookResult) ClusterSecretStoreSpecProviderWebhookResult {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderWebhookResult
		return ret
	}).(ClusterSecretStoreSpecProviderWebhookResultOutput)
}

// Json path of return value
func (o ClusterSecretStoreSpecProviderWebhookResultPtrOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderWebhookResult) *string {
		if v == nil {
			return nil
		}
		return v.JsonPath
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderWebhookSecrets struct {
	// Name of this secret in templates
	Name string `pulumi:"name"`
	// Secret ref to fill in credentials
	SecretRef ClusterSecretStoreSpecProviderWebhookSecretsSecretRef `pulumi:"secretRef"`
}

// ClusterSecretStoreSpecProviderWebhookSecretsInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookSecretsArgs and ClusterSecretStoreSpecProviderWebhookSecretsOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookSecretsInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookSecretsArgs{...}
type ClusterSecretStoreSpecProviderWebhookSecretsInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookSecretsOutput() ClusterSecretStoreSpecProviderWebhookSecretsOutput
	ToClusterSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookSecretsOutput
}

type ClusterSecretStoreSpecProviderWebhookSecretsArgs struct {
	// Name of this secret in templates
	Name pulumi.StringInput `pulumi:"name"`
	// Secret ref to fill in credentials
	SecretRef ClusterSecretStoreSpecProviderWebhookSecretsSecretRefInput `pulumi:"secretRef"`
}

func (ClusterSecretStoreSpecProviderWebhookSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsArgs) ToClusterSecretStoreSpecProviderWebhookSecretsOutput() ClusterSecretStoreSpecProviderWebhookSecretsOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsArgs) ToClusterSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookSecretsOutput)
}

// ClusterSecretStoreSpecProviderWebhookSecretsArrayInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookSecretsArray and ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookSecretsArrayInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookSecretsArray{ ClusterSecretStoreSpecProviderWebhookSecretsArgs{...} }
type ClusterSecretStoreSpecProviderWebhookSecretsArrayInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutput() ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput
	ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput
}

type ClusterSecretStoreSpecProviderWebhookSecretsArray []ClusterSecretStoreSpecProviderWebhookSecretsInput

func (ClusterSecretStoreSpecProviderWebhookSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsArray) ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutput() ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsArray) ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput)
}

type ClusterSecretStoreSpecProviderWebhookSecretsOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsOutput) ToClusterSecretStoreSpecProviderWebhookSecretsOutput() ClusterSecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsOutput) ToClusterSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

// Name of this secret in templates
func (o ClusterSecretStoreSpecProviderWebhookSecretsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookSecrets) string { return v.Name }).(pulumi.StringOutput)
}

// Secret ref to fill in credentials
func (o ClusterSecretStoreSpecProviderWebhookSecretsOutput) SecretRef() ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookSecrets) ClusterSecretStoreSpecProviderWebhookSecretsSecretRef {
		return v.SecretRef
	}).(ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

type ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput) ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutput() ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput) ToClusterSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput) Index(i pulumi.IntInput) ClusterSecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSecretStoreSpecProviderWebhookSecrets {
		return vs[0].([]ClusterSecretStoreSpecProviderWebhookSecrets)[vs[1].(int)]
	}).(ClusterSecretStoreSpecProviderWebhookSecretsOutput)
}

// Secret ref to fill in credentials
type ClusterSecretStoreSpecProviderWebhookSecretsSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderWebhookSecretsSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs and ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderWebhookSecretsSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs{...}
type ClusterSecretStoreSpecProviderWebhookSecretsSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput() ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput
	ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput
}

// Secret ref to fill in credentials
type ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput() ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

// Secret ref to fill in credentials
type ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput() ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type ClusterSecretStoreSpecProviderYandexlockbox struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string `pulumi:"apiEndpoint"`
	// Auth defines the information necessary to authenticate against Yandex Lockbox
	Auth ClusterSecretStoreSpecProviderYandexlockboxAuth `pulumi:"auth"`
	// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
	CaProvider *ClusterSecretStoreSpecProviderYandexlockboxCaProvider `pulumi:"caProvider"`
}

// ClusterSecretStoreSpecProviderYandexlockboxInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxArgs and ClusterSecretStoreSpecProviderYandexlockboxOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxInput` via:
//
//	ClusterSecretStoreSpecProviderYandexlockboxArgs{...}
type ClusterSecretStoreSpecProviderYandexlockboxInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxOutput() ClusterSecretStoreSpecProviderYandexlockboxOutput
	ToClusterSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxOutput
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type ClusterSecretStoreSpecProviderYandexlockboxArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput `pulumi:"apiEndpoint"`
	// Auth defines the information necessary to authenticate against Yandex Lockbox
	Auth ClusterSecretStoreSpecProviderYandexlockboxAuthInput `pulumi:"auth"`
	// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
	CaProvider ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput `pulumi:"caProvider"`
}

func (ClusterSecretStoreSpecProviderYandexlockboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderYandexlockboxArgs) ToClusterSecretStoreSpecProviderYandexlockboxOutput() ClusterSecretStoreSpecProviderYandexlockboxOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxArgs) ToClusterSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxOutput)
}

func (i ClusterSecretStoreSpecProviderYandexlockboxArgs) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxArgs) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxOutput).ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderYandexlockboxPtrInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxArgs, ClusterSecretStoreSpecProviderYandexlockboxPtr and ClusterSecretStoreSpecProviderYandexlockboxPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderYandexlockboxArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderYandexlockboxPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput
	ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxPtrOutput
}

type clusterSecretStoreSpecProviderYandexlockboxPtrType ClusterSecretStoreSpecProviderYandexlockboxArgs

func ClusterSecretStoreSpecProviderYandexlockboxPtr(v *ClusterSecretStoreSpecProviderYandexlockboxArgs) ClusterSecretStoreSpecProviderYandexlockboxPtrInput {
	return (*clusterSecretStoreSpecProviderYandexlockboxPtrType)(v)
}

func (*clusterSecretStoreSpecProviderYandexlockboxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderYandexlockboxPtrType) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderYandexlockboxPtrType) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type ClusterSecretStoreSpecProviderYandexlockboxOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) ToClusterSecretStoreSpecProviderYandexlockboxOutput() ClusterSecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) ToClusterSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderYandexlockbox) *ClusterSecretStoreSpecProviderYandexlockbox {
		return &v
	}).(ClusterSecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockbox) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) Auth() ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockbox) ClusterSecretStoreSpecProviderYandexlockboxAuth {
		return v.Auth
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
func (o ClusterSecretStoreSpecProviderYandexlockboxOutput) CaProvider() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockbox) *ClusterSecretStoreSpecProviderYandexlockboxCaProvider {
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

type ClusterSecretStoreSpecProviderYandexlockboxPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) Elem() ClusterSecretStoreSpecProviderYandexlockboxOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockbox) ClusterSecretStoreSpecProviderYandexlockbox {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderYandexlockbox
		return ret
	}).(ClusterSecretStoreSpecProviderYandexlockboxOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockbox) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) Auth() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockbox) *ClusterSecretStoreSpecProviderYandexlockboxAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
func (o ClusterSecretStoreSpecProviderYandexlockboxPtrOutput) CaProvider() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockbox) *ClusterSecretStoreSpecProviderYandexlockboxCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type ClusterSecretStoreSpecProviderYandexlockboxAuth struct {
	// The authorized key used for authentication
	AuthorizedKeySecretRef *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef `pulumi:"authorizedKeySecretRef"`
}

// ClusterSecretStoreSpecProviderYandexlockboxAuthInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxAuthArgs and ClusterSecretStoreSpecProviderYandexlockboxAuthOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxAuthInput` via:
//
//	ClusterSecretStoreSpecProviderYandexlockboxAuthArgs{...}
type ClusterSecretStoreSpecProviderYandexlockboxAuthInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxAuthOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthOutput
	ToClusterSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthOutput
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type ClusterSecretStoreSpecProviderYandexlockboxAuthArgs struct {
	// The authorized key used for authentication
	AuthorizedKeySecretRef ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthOutput)
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthOutput).ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderYandexlockboxAuthPtrInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxAuthArgs, ClusterSecretStoreSpecProviderYandexlockboxAuthPtr and ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxAuthPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderYandexlockboxAuthArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderYandexlockboxAuthPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput
	ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput
}

type clusterSecretStoreSpecProviderYandexlockboxAuthPtrType ClusterSecretStoreSpecProviderYandexlockboxAuthArgs

func ClusterSecretStoreSpecProviderYandexlockboxAuthPtr(v *ClusterSecretStoreSpecProviderYandexlockboxAuthArgs) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrInput {
	return (*clusterSecretStoreSpecProviderYandexlockboxAuthPtrType)(v)
}

func (*clusterSecretStoreSpecProviderYandexlockboxAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderYandexlockboxAuthPtrType) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderYandexlockboxAuthPtrType) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type ClusterSecretStoreSpecProviderYandexlockboxAuthOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderYandexlockboxAuth) *ClusterSecretStoreSpecProviderYandexlockboxAuth {
		return &v
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// The authorized key used for authentication
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthOutput) AuthorizedKeySecretRef() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxAuth) *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return v.AuthorizedKeySecretRef
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput) Elem() ClusterSecretStoreSpecProviderYandexlockboxAuthOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuth) ClusterSecretStoreSpecProviderYandexlockboxAuth {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderYandexlockboxAuth
		return ret
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthOutput)
}

// The authorized key used for authentication
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput) AuthorizedKeySecretRef() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuth) *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs and ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
	ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
}

// The authorized key used for authentication
type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput).ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs, ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr and ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
	ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
}

type clusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs

func ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr(v *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type ClusterSecretStoreSpecProviderYandexlockboxCaProvider struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	CertSecretRef *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef `pulumi:"certSecretRef"`
}

// ClusterSecretStoreSpecProviderYandexlockboxCaProviderInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs and ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxCaProviderInput` via:
//
//	ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput
	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	CertSecretRef ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput `pulumi:"certSecretRef"`
}

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput).ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs, ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtr and ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
}

type clusterSecretStoreSpecProviderYandexlockboxCaProviderPtrType ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs

func ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtr(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput {
	return (*clusterSecretStoreSpecProviderYandexlockboxCaProviderPtrType)(v)
}

func (*clusterSecretStoreSpecProviderYandexlockboxCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderYandexlockboxCaProviderPtrType) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderYandexlockboxCaProviderPtrType) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderYandexlockboxCaProvider) *ClusterSecretStoreSpecProviderYandexlockboxCaProvider {
		return &v
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput) CertSecretRef() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxCaProvider) *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return v.CertSecretRef
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

type ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) Elem() ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProvider) ClusterSecretStoreSpecProviderYandexlockboxCaProvider {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderYandexlockboxCaProvider
		return ret
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) CertSecretRef() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProvider) *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs and ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput` via:
//
//	ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput).ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput is an input type that accepts ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs, ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr and ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput` via:
//
//	        ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
	ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
}

type clusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs

func ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput {
	return (*clusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType)(v)
}

func (*clusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i *clusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return &v
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Elem() ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef
		return ret
	}).(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Used to configure http retries if failed
type ClusterSecretStoreSpecRetrySettings struct {
	MaxRetries    *int    `pulumi:"maxRetries"`
	RetryInterval *string `pulumi:"retryInterval"`
}

// ClusterSecretStoreSpecRetrySettingsInput is an input type that accepts ClusterSecretStoreSpecRetrySettingsArgs and ClusterSecretStoreSpecRetrySettingsOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecRetrySettingsInput` via:
//
//	ClusterSecretStoreSpecRetrySettingsArgs{...}
type ClusterSecretStoreSpecRetrySettingsInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecRetrySettingsOutput() ClusterSecretStoreSpecRetrySettingsOutput
	ToClusterSecretStoreSpecRetrySettingsOutputWithContext(context.Context) ClusterSecretStoreSpecRetrySettingsOutput
}

// Used to configure http retries if failed
type ClusterSecretStoreSpecRetrySettingsArgs struct {
	MaxRetries    pulumi.IntPtrInput    `pulumi:"maxRetries"`
	RetryInterval pulumi.StringPtrInput `pulumi:"retryInterval"`
}

func (ClusterSecretStoreSpecRetrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i ClusterSecretStoreSpecRetrySettingsArgs) ToClusterSecretStoreSpecRetrySettingsOutput() ClusterSecretStoreSpecRetrySettingsOutput {
	return i.ToClusterSecretStoreSpecRetrySettingsOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecRetrySettingsArgs) ToClusterSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecRetrySettingsOutput)
}

func (i ClusterSecretStoreSpecRetrySettingsArgs) ToClusterSecretStoreSpecRetrySettingsPtrOutput() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return i.ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreSpecRetrySettingsArgs) ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecRetrySettingsOutput).ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx)
}

// ClusterSecretStoreSpecRetrySettingsPtrInput is an input type that accepts ClusterSecretStoreSpecRetrySettingsArgs, ClusterSecretStoreSpecRetrySettingsPtr and ClusterSecretStoreSpecRetrySettingsPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreSpecRetrySettingsPtrInput` via:
//
//	        ClusterSecretStoreSpecRetrySettingsArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreSpecRetrySettingsPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreSpecRetrySettingsPtrOutput() ClusterSecretStoreSpecRetrySettingsPtrOutput
	ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Context) ClusterSecretStoreSpecRetrySettingsPtrOutput
}

type clusterSecretStoreSpecRetrySettingsPtrType ClusterSecretStoreSpecRetrySettingsArgs

func ClusterSecretStoreSpecRetrySettingsPtr(v *ClusterSecretStoreSpecRetrySettingsArgs) ClusterSecretStoreSpecRetrySettingsPtrInput {
	return (*clusterSecretStoreSpecRetrySettingsPtrType)(v)
}

func (*clusterSecretStoreSpecRetrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i *clusterSecretStoreSpecRetrySettingsPtrType) ToClusterSecretStoreSpecRetrySettingsPtrOutput() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return i.ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreSpecRetrySettingsPtrType) ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreSpecRetrySettingsPtrOutput)
}

// Used to configure http retries if failed
type ClusterSecretStoreSpecRetrySettingsOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecRetrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) ToClusterSecretStoreSpecRetrySettingsOutput() ClusterSecretStoreSpecRetrySettingsOutput {
	return o
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) ToClusterSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsOutput {
	return o
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) ToClusterSecretStoreSpecRetrySettingsPtrOutput() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o.ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreSpecRetrySettings) *ClusterSecretStoreSpecRetrySettings {
		return &v
	}).(ClusterSecretStoreSpecRetrySettingsPtrOutput)
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecRetrySettings) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func (o ClusterSecretStoreSpecRetrySettingsOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreSpecRetrySettings) *string { return v.RetryInterval }).(pulumi.StringPtrOutput)
}

type ClusterSecretStoreSpecRetrySettingsPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreSpecRetrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o ClusterSecretStoreSpecRetrySettingsPtrOutput) ToClusterSecretStoreSpecRetrySettingsPtrOutput() ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecRetrySettingsPtrOutput) ToClusterSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) ClusterSecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o ClusterSecretStoreSpecRetrySettingsPtrOutput) Elem() ClusterSecretStoreSpecRetrySettingsOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecRetrySettings) ClusterSecretStoreSpecRetrySettings {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreSpecRetrySettings
		return ret
	}).(ClusterSecretStoreSpecRetrySettingsOutput)
}

func (o ClusterSecretStoreSpecRetrySettingsPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecRetrySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o ClusterSecretStoreSpecRetrySettingsPtrOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStoreSpecRetrySettings) *string {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.StringPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type ClusterSecretStoreStatus struct {
	Conditions []ClusterSecretStoreStatusConditions `pulumi:"conditions"`
}

// ClusterSecretStoreStatusInput is an input type that accepts ClusterSecretStoreStatusArgs and ClusterSecretStoreStatusOutput values.
// You can construct a concrete instance of `ClusterSecretStoreStatusInput` via:
//
//	ClusterSecretStoreStatusArgs{...}
type ClusterSecretStoreStatusInput interface {
	pulumi.Input

	ToClusterSecretStoreStatusOutput() ClusterSecretStoreStatusOutput
	ToClusterSecretStoreStatusOutputWithContext(context.Context) ClusterSecretStoreStatusOutput
}

// SecretStoreStatus defines the observed state of the SecretStore.
type ClusterSecretStoreStatusArgs struct {
	Conditions ClusterSecretStoreStatusConditionsArrayInput `pulumi:"conditions"`
}

func (ClusterSecretStoreStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreStatus)(nil)).Elem()
}

func (i ClusterSecretStoreStatusArgs) ToClusterSecretStoreStatusOutput() ClusterSecretStoreStatusOutput {
	return i.ToClusterSecretStoreStatusOutputWithContext(context.Background())
}

func (i ClusterSecretStoreStatusArgs) ToClusterSecretStoreStatusOutputWithContext(ctx context.Context) ClusterSecretStoreStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreStatusOutput)
}

func (i ClusterSecretStoreStatusArgs) ToClusterSecretStoreStatusPtrOutput() ClusterSecretStoreStatusPtrOutput {
	return i.ToClusterSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i ClusterSecretStoreStatusArgs) ToClusterSecretStoreStatusPtrOutputWithContext(ctx context.Context) ClusterSecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreStatusOutput).ToClusterSecretStoreStatusPtrOutputWithContext(ctx)
}

// ClusterSecretStoreStatusPtrInput is an input type that accepts ClusterSecretStoreStatusArgs, ClusterSecretStoreStatusPtr and ClusterSecretStoreStatusPtrOutput values.
// You can construct a concrete instance of `ClusterSecretStoreStatusPtrInput` via:
//
//	        ClusterSecretStoreStatusArgs{...}
//
//	or:
//
//	        nil
type ClusterSecretStoreStatusPtrInput interface {
	pulumi.Input

	ToClusterSecretStoreStatusPtrOutput() ClusterSecretStoreStatusPtrOutput
	ToClusterSecretStoreStatusPtrOutputWithContext(context.Context) ClusterSecretStoreStatusPtrOutput
}

type clusterSecretStoreStatusPtrType ClusterSecretStoreStatusArgs

func ClusterSecretStoreStatusPtr(v *ClusterSecretStoreStatusArgs) ClusterSecretStoreStatusPtrInput {
	return (*clusterSecretStoreStatusPtrType)(v)
}

func (*clusterSecretStoreStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreStatus)(nil)).Elem()
}

func (i *clusterSecretStoreStatusPtrType) ToClusterSecretStoreStatusPtrOutput() ClusterSecretStoreStatusPtrOutput {
	return i.ToClusterSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i *clusterSecretStoreStatusPtrType) ToClusterSecretStoreStatusPtrOutputWithContext(ctx context.Context) ClusterSecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreStatusPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type ClusterSecretStoreStatusOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreStatus)(nil)).Elem()
}

func (o ClusterSecretStoreStatusOutput) ToClusterSecretStoreStatusOutput() ClusterSecretStoreStatusOutput {
	return o
}

func (o ClusterSecretStoreStatusOutput) ToClusterSecretStoreStatusOutputWithContext(ctx context.Context) ClusterSecretStoreStatusOutput {
	return o
}

func (o ClusterSecretStoreStatusOutput) ToClusterSecretStoreStatusPtrOutput() ClusterSecretStoreStatusPtrOutput {
	return o.ToClusterSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (o ClusterSecretStoreStatusOutput) ToClusterSecretStoreStatusPtrOutputWithContext(ctx context.Context) ClusterSecretStoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSecretStoreStatus) *ClusterSecretStoreStatus {
		return &v
	}).(ClusterSecretStoreStatusPtrOutput)
}

func (o ClusterSecretStoreStatusOutput) Conditions() ClusterSecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatus) []ClusterSecretStoreStatusConditions { return v.Conditions }).(ClusterSecretStoreStatusConditionsArrayOutput)
}

type ClusterSecretStoreStatusPtrOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStoreStatus)(nil)).Elem()
}

func (o ClusterSecretStoreStatusPtrOutput) ToClusterSecretStoreStatusPtrOutput() ClusterSecretStoreStatusPtrOutput {
	return o
}

func (o ClusterSecretStoreStatusPtrOutput) ToClusterSecretStoreStatusPtrOutputWithContext(ctx context.Context) ClusterSecretStoreStatusPtrOutput {
	return o
}

func (o ClusterSecretStoreStatusPtrOutput) Elem() ClusterSecretStoreStatusOutput {
	return o.ApplyT(func(v *ClusterSecretStoreStatus) ClusterSecretStoreStatus {
		if v != nil {
			return *v
		}
		var ret ClusterSecretStoreStatus
		return ret
	}).(ClusterSecretStoreStatusOutput)
}

func (o ClusterSecretStoreStatusPtrOutput) Conditions() ClusterSecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ClusterSecretStoreStatus) []ClusterSecretStoreStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ClusterSecretStoreStatusConditionsArrayOutput)
}

type ClusterSecretStoreStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             string  `pulumi:"status"`
	Type               string  `pulumi:"type"`
}

// ClusterSecretStoreStatusConditionsInput is an input type that accepts ClusterSecretStoreStatusConditionsArgs and ClusterSecretStoreStatusConditionsOutput values.
// You can construct a concrete instance of `ClusterSecretStoreStatusConditionsInput` via:
//
//	ClusterSecretStoreStatusConditionsArgs{...}
type ClusterSecretStoreStatusConditionsInput interface {
	pulumi.Input

	ToClusterSecretStoreStatusConditionsOutput() ClusterSecretStoreStatusConditionsOutput
	ToClusterSecretStoreStatusConditionsOutputWithContext(context.Context) ClusterSecretStoreStatusConditionsOutput
}

type ClusterSecretStoreStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringInput    `pulumi:"status"`
	Type               pulumi.StringInput    `pulumi:"type"`
}

func (ClusterSecretStoreStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreStatusConditions)(nil)).Elem()
}

func (i ClusterSecretStoreStatusConditionsArgs) ToClusterSecretStoreStatusConditionsOutput() ClusterSecretStoreStatusConditionsOutput {
	return i.ToClusterSecretStoreStatusConditionsOutputWithContext(context.Background())
}

func (i ClusterSecretStoreStatusConditionsArgs) ToClusterSecretStoreStatusConditionsOutputWithContext(ctx context.Context) ClusterSecretStoreStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreStatusConditionsOutput)
}

// ClusterSecretStoreStatusConditionsArrayInput is an input type that accepts ClusterSecretStoreStatusConditionsArray and ClusterSecretStoreStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ClusterSecretStoreStatusConditionsArrayInput` via:
//
//	ClusterSecretStoreStatusConditionsArray{ ClusterSecretStoreStatusConditionsArgs{...} }
type ClusterSecretStoreStatusConditionsArrayInput interface {
	pulumi.Input

	ToClusterSecretStoreStatusConditionsArrayOutput() ClusterSecretStoreStatusConditionsArrayOutput
	ToClusterSecretStoreStatusConditionsArrayOutputWithContext(context.Context) ClusterSecretStoreStatusConditionsArrayOutput
}

type ClusterSecretStoreStatusConditionsArray []ClusterSecretStoreStatusConditionsInput

func (ClusterSecretStoreStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreStatusConditions)(nil)).Elem()
}

func (i ClusterSecretStoreStatusConditionsArray) ToClusterSecretStoreStatusConditionsArrayOutput() ClusterSecretStoreStatusConditionsArrayOutput {
	return i.ToClusterSecretStoreStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ClusterSecretStoreStatusConditionsArray) ToClusterSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterSecretStoreStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreStatusConditionsArrayOutput)
}

type ClusterSecretStoreStatusConditionsOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSecretStoreStatusConditions)(nil)).Elem()
}

func (o ClusterSecretStoreStatusConditionsOutput) ToClusterSecretStoreStatusConditionsOutput() ClusterSecretStoreStatusConditionsOutput {
	return o
}

func (o ClusterSecretStoreStatusConditionsOutput) ToClusterSecretStoreStatusConditionsOutputWithContext(ctx context.Context) ClusterSecretStoreStatusConditionsOutput {
	return o
}

func (o ClusterSecretStoreStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ClusterSecretStoreStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o ClusterSecretStoreStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSecretStoreStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterSecretStoreStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSecretStoreStatusConditions)(nil)).Elem()
}

func (o ClusterSecretStoreStatusConditionsArrayOutput) ToClusterSecretStoreStatusConditionsArrayOutput() ClusterSecretStoreStatusConditionsArrayOutput {
	return o
}

func (o ClusterSecretStoreStatusConditionsArrayOutput) ToClusterSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) ClusterSecretStoreStatusConditionsArrayOutput {
	return o
}

func (o ClusterSecretStoreStatusConditionsArrayOutput) Index(i pulumi.IntInput) ClusterSecretStoreStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSecretStoreStatusConditions {
		return vs[0].([]ClusterSecretStoreStatusConditions)[vs[1].(int)]
	}).(ClusterSecretStoreStatusConditionsOutput)
}

// ExternalSecret is the Schema for the external-secrets API.
type ExternalSecretType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ExternalSecretSpec defines the desired state of ExternalSecret.
	Spec   *ExternalSecretSpec   `pulumi:"spec"`
	Status *ExternalSecretStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ExternalSecretType
func (val *ExternalSecretType) Defaults() *ExternalSecretType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	tmp.Status = tmp.Status.Defaults()

	return &tmp
}

type ExternalSecretMetadata struct {
}

// ExternalSecretSpec defines the desired state of ExternalSecret.
type ExternalSecretSpec struct {
	// Data defines the connection between the Kubernetes Secret keys and the Provider data
	Data []ExternalSecretSpecData `pulumi:"data"`
	// DataFrom is used to fetch all properties from a specific Provider data
	// If multiple entries are specified, the Secret keys are merged in the specified order
	DataFrom []ExternalSecretSpecDataFrom `pulumi:"dataFrom"`
	// RefreshInterval is the amount of time before the values are read again from the SecretStore provider
	// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
	// May be set to zero to fetch and create it once. Defaults to 1h.
	RefreshInterval *string `pulumi:"refreshInterval"`
	// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
	SecretStoreRef ExternalSecretSpecSecretStoreRef `pulumi:"secretStoreRef"`
	// ExternalSecretTarget defines the Kubernetes Secret to be created
	// There can be only one target per ExternalSecret.
	Target ExternalSecretSpecTarget `pulumi:"target"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpec
func (val *ExternalSecretSpec) Defaults() *ExternalSecretSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		refreshInterval_ := "1h"
		tmp.RefreshInterval = &refreshInterval_
	}
	tmp.Target = *tmp.Target.Defaults()

	return &tmp
}

// ExternalSecretSpecInput is an input type that accepts ExternalSecretSpecArgs and ExternalSecretSpecOutput values.
// You can construct a concrete instance of `ExternalSecretSpecInput` via:
//
//	ExternalSecretSpecArgs{...}
type ExternalSecretSpecInput interface {
	pulumi.Input

	ToExternalSecretSpecOutput() ExternalSecretSpecOutput
	ToExternalSecretSpecOutputWithContext(context.Context) ExternalSecretSpecOutput
}

// ExternalSecretSpec defines the desired state of ExternalSecret.
type ExternalSecretSpecArgs struct {
	// Data defines the connection between the Kubernetes Secret keys and the Provider data
	Data ExternalSecretSpecDataArrayInput `pulumi:"data"`
	// DataFrom is used to fetch all properties from a specific Provider data
	// If multiple entries are specified, the Secret keys are merged in the specified order
	DataFrom ExternalSecretSpecDataFromArrayInput `pulumi:"dataFrom"`
	// RefreshInterval is the amount of time before the values are read again from the SecretStore provider
	// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
	// May be set to zero to fetch and create it once. Defaults to 1h.
	RefreshInterval pulumi.StringPtrInput `pulumi:"refreshInterval"`
	// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
	SecretStoreRef ExternalSecretSpecSecretStoreRefInput `pulumi:"secretStoreRef"`
	// ExternalSecretTarget defines the Kubernetes Secret to be created
	// There can be only one target per ExternalSecret.
	Target ExternalSecretSpecTargetInput `pulumi:"target"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecArgs
func (val *ExternalSecretSpecArgs) Defaults() *ExternalSecretSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RefreshInterval == nil {
		tmp.RefreshInterval = pulumi.StringPtr("1h")
	}

	return &tmp
}
func (ExternalSecretSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpec)(nil)).Elem()
}

func (i ExternalSecretSpecArgs) ToExternalSecretSpecOutput() ExternalSecretSpecOutput {
	return i.ToExternalSecretSpecOutputWithContext(context.Background())
}

func (i ExternalSecretSpecArgs) ToExternalSecretSpecOutputWithContext(ctx context.Context) ExternalSecretSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecOutput)
}

func (i ExternalSecretSpecArgs) ToExternalSecretSpecPtrOutput() ExternalSecretSpecPtrOutput {
	return i.ToExternalSecretSpecPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecArgs) ToExternalSecretSpecPtrOutputWithContext(ctx context.Context) ExternalSecretSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecOutput).ToExternalSecretSpecPtrOutputWithContext(ctx)
}

// ExternalSecretSpecPtrInput is an input type that accepts ExternalSecretSpecArgs, ExternalSecretSpecPtr and ExternalSecretSpecPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecPtrInput` via:
//
//	        ExternalSecretSpecArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecPtrOutput() ExternalSecretSpecPtrOutput
	ToExternalSecretSpecPtrOutputWithContext(context.Context) ExternalSecretSpecPtrOutput
}

type externalSecretSpecPtrType ExternalSecretSpecArgs

func ExternalSecretSpecPtr(v *ExternalSecretSpecArgs) ExternalSecretSpecPtrInput {
	return (*externalSecretSpecPtrType)(v)
}

func (*externalSecretSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpec)(nil)).Elem()
}

func (i *externalSecretSpecPtrType) ToExternalSecretSpecPtrOutput() ExternalSecretSpecPtrOutput {
	return i.ToExternalSecretSpecPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecPtrType) ToExternalSecretSpecPtrOutputWithContext(ctx context.Context) ExternalSecretSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecPtrOutput)
}

// ExternalSecretSpec defines the desired state of ExternalSecret.
type ExternalSecretSpecOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpec)(nil)).Elem()
}

func (o ExternalSecretSpecOutput) ToExternalSecretSpecOutput() ExternalSecretSpecOutput {
	return o
}

func (o ExternalSecretSpecOutput) ToExternalSecretSpecOutputWithContext(ctx context.Context) ExternalSecretSpecOutput {
	return o
}

func (o ExternalSecretSpecOutput) ToExternalSecretSpecPtrOutput() ExternalSecretSpecPtrOutput {
	return o.ToExternalSecretSpecPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecOutput) ToExternalSecretSpecPtrOutputWithContext(ctx context.Context) ExternalSecretSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpec) *ExternalSecretSpec {
		return &v
	}).(ExternalSecretSpecPtrOutput)
}

// Data defines the connection between the Kubernetes Secret keys and the Provider data
func (o ExternalSecretSpecOutput) Data() ExternalSecretSpecDataArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpec) []ExternalSecretSpecData { return v.Data }).(ExternalSecretSpecDataArrayOutput)
}

// DataFrom is used to fetch all properties from a specific Provider data
// If multiple entries are specified, the Secret keys are merged in the specified order
func (o ExternalSecretSpecOutput) DataFrom() ExternalSecretSpecDataFromArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpec) []ExternalSecretSpecDataFrom { return v.DataFrom }).(ExternalSecretSpecDataFromArrayOutput)
}

// RefreshInterval is the amount of time before the values are read again from the SecretStore provider
// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
// May be set to zero to fetch and create it once. Defaults to 1h.
func (o ExternalSecretSpecOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpec) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
func (o ExternalSecretSpecOutput) SecretStoreRef() ExternalSecretSpecSecretStoreRefOutput {
	return o.ApplyT(func(v ExternalSecretSpec) ExternalSecretSpecSecretStoreRef { return v.SecretStoreRef }).(ExternalSecretSpecSecretStoreRefOutput)
}

// ExternalSecretTarget defines the Kubernetes Secret to be created
// There can be only one target per ExternalSecret.
func (o ExternalSecretSpecOutput) Target() ExternalSecretSpecTargetOutput {
	return o.ApplyT(func(v ExternalSecretSpec) ExternalSecretSpecTarget { return v.Target }).(ExternalSecretSpecTargetOutput)
}

type ExternalSecretSpecPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpec)(nil)).Elem()
}

func (o ExternalSecretSpecPtrOutput) ToExternalSecretSpecPtrOutput() ExternalSecretSpecPtrOutput {
	return o
}

func (o ExternalSecretSpecPtrOutput) ToExternalSecretSpecPtrOutputWithContext(ctx context.Context) ExternalSecretSpecPtrOutput {
	return o
}

func (o ExternalSecretSpecPtrOutput) Elem() ExternalSecretSpecOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) ExternalSecretSpec {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpec
		return ret
	}).(ExternalSecretSpecOutput)
}

// Data defines the connection between the Kubernetes Secret keys and the Provider data
func (o ExternalSecretSpecPtrOutput) Data() ExternalSecretSpecDataArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) []ExternalSecretSpecData {
		if v == nil {
			return nil
		}
		return v.Data
	}).(ExternalSecretSpecDataArrayOutput)
}

// DataFrom is used to fetch all properties from a specific Provider data
// If multiple entries are specified, the Secret keys are merged in the specified order
func (o ExternalSecretSpecPtrOutput) DataFrom() ExternalSecretSpecDataFromArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) []ExternalSecretSpecDataFrom {
		if v == nil {
			return nil
		}
		return v.DataFrom
	}).(ExternalSecretSpecDataFromArrayOutput)
}

// RefreshInterval is the amount of time before the values are read again from the SecretStore provider
// Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h"
// May be set to zero to fetch and create it once. Defaults to 1h.
func (o ExternalSecretSpecPtrOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) *string {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.StringPtrOutput)
}

// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
func (o ExternalSecretSpecPtrOutput) SecretStoreRef() ExternalSecretSpecSecretStoreRefPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) *ExternalSecretSpecSecretStoreRef {
		if v == nil {
			return nil
		}
		return &v.SecretStoreRef
	}).(ExternalSecretSpecSecretStoreRefPtrOutput)
}

// ExternalSecretTarget defines the Kubernetes Secret to be created
// There can be only one target per ExternalSecret.
func (o ExternalSecretSpecPtrOutput) Target() ExternalSecretSpecTargetPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpec) *ExternalSecretSpecTarget {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(ExternalSecretSpecTargetPtrOutput)
}

// ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
type ExternalSecretSpecData struct {
	// ExternalSecretDataRemoteRef defines Provider data location.
	RemoteRef ExternalSecretSpecDataRemoteRef `pulumi:"remoteRef"`
	SecretKey string                          `pulumi:"secretKey"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecData
func (val *ExternalSecretSpecData) Defaults() *ExternalSecretSpecData {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.RemoteRef = *tmp.RemoteRef.Defaults()

	return &tmp
}

// ExternalSecretSpecDataInput is an input type that accepts ExternalSecretSpecDataArgs and ExternalSecretSpecDataOutput values.
// You can construct a concrete instance of `ExternalSecretSpecDataInput` via:
//
//	ExternalSecretSpecDataArgs{...}
type ExternalSecretSpecDataInput interface {
	pulumi.Input

	ToExternalSecretSpecDataOutput() ExternalSecretSpecDataOutput
	ToExternalSecretSpecDataOutputWithContext(context.Context) ExternalSecretSpecDataOutput
}

// ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
type ExternalSecretSpecDataArgs struct {
	// ExternalSecretDataRemoteRef defines Provider data location.
	RemoteRef ExternalSecretSpecDataRemoteRefInput `pulumi:"remoteRef"`
	SecretKey pulumi.StringInput                   `pulumi:"secretKey"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecDataArgs
func (val *ExternalSecretSpecDataArgs) Defaults() *ExternalSecretSpecDataArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ExternalSecretSpecDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecData)(nil)).Elem()
}

func (i ExternalSecretSpecDataArgs) ToExternalSecretSpecDataOutput() ExternalSecretSpecDataOutput {
	return i.ToExternalSecretSpecDataOutputWithContext(context.Background())
}

func (i ExternalSecretSpecDataArgs) ToExternalSecretSpecDataOutputWithContext(ctx context.Context) ExternalSecretSpecDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecDataOutput)
}

// ExternalSecretSpecDataArrayInput is an input type that accepts ExternalSecretSpecDataArray and ExternalSecretSpecDataArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecDataArrayInput` via:
//
//	ExternalSecretSpecDataArray{ ExternalSecretSpecDataArgs{...} }
type ExternalSecretSpecDataArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecDataArrayOutput() ExternalSecretSpecDataArrayOutput
	ToExternalSecretSpecDataArrayOutputWithContext(context.Context) ExternalSecretSpecDataArrayOutput
}

type ExternalSecretSpecDataArray []ExternalSecretSpecDataInput

func (ExternalSecretSpecDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecData)(nil)).Elem()
}

func (i ExternalSecretSpecDataArray) ToExternalSecretSpecDataArrayOutput() ExternalSecretSpecDataArrayOutput {
	return i.ToExternalSecretSpecDataArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecDataArray) ToExternalSecretSpecDataArrayOutputWithContext(ctx context.Context) ExternalSecretSpecDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecDataArrayOutput)
}

// ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
type ExternalSecretSpecDataOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecData)(nil)).Elem()
}

func (o ExternalSecretSpecDataOutput) ToExternalSecretSpecDataOutput() ExternalSecretSpecDataOutput {
	return o
}

func (o ExternalSecretSpecDataOutput) ToExternalSecretSpecDataOutputWithContext(ctx context.Context) ExternalSecretSpecDataOutput {
	return o
}

// ExternalSecretDataRemoteRef defines Provider data location.
func (o ExternalSecretSpecDataOutput) RemoteRef() ExternalSecretSpecDataRemoteRefOutput {
	return o.ApplyT(func(v ExternalSecretSpecData) ExternalSecretSpecDataRemoteRef { return v.RemoteRef }).(ExternalSecretSpecDataRemoteRefOutput)
}

func (o ExternalSecretSpecDataOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecData) string { return v.SecretKey }).(pulumi.StringOutput)
}

type ExternalSecretSpecDataArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecData)(nil)).Elem()
}

func (o ExternalSecretSpecDataArrayOutput) ToExternalSecretSpecDataArrayOutput() ExternalSecretSpecDataArrayOutput {
	return o
}

func (o ExternalSecretSpecDataArrayOutput) ToExternalSecretSpecDataArrayOutputWithContext(ctx context.Context) ExternalSecretSpecDataArrayOutput {
	return o
}

func (o ExternalSecretSpecDataArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecData {
		return vs[0].([]ExternalSecretSpecData)[vs[1].(int)]
	}).(ExternalSecretSpecDataOutput)
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataFrom struct {
	// Used to define a conversion Strategy
	ConversionStrategy *string `pulumi:"conversionStrategy"`
	// Key is the key used in the Provider, mandatory
	Key string `pulumi:"key"`
	// Used to select a specific property of the Provider value (if a map), if supported
	Property *string `pulumi:"property"`
	// Used to select a specific version of the Provider value, if supported
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecDataFrom
func (val *ExternalSecretSpecDataFrom) Defaults() *ExternalSecretSpecDataFrom {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		conversionStrategy_ := "Default"
		tmp.ConversionStrategy = &conversionStrategy_
	}
	return &tmp
}

// ExternalSecretSpecDataFromInput is an input type that accepts ExternalSecretSpecDataFromArgs and ExternalSecretSpecDataFromOutput values.
// You can construct a concrete instance of `ExternalSecretSpecDataFromInput` via:
//
//	ExternalSecretSpecDataFromArgs{...}
type ExternalSecretSpecDataFromInput interface {
	pulumi.Input

	ToExternalSecretSpecDataFromOutput() ExternalSecretSpecDataFromOutput
	ToExternalSecretSpecDataFromOutputWithContext(context.Context) ExternalSecretSpecDataFromOutput
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataFromArgs struct {
	// Used to define a conversion Strategy
	ConversionStrategy pulumi.StringPtrInput `pulumi:"conversionStrategy"`
	// Key is the key used in the Provider, mandatory
	Key pulumi.StringInput `pulumi:"key"`
	// Used to select a specific property of the Provider value (if a map), if supported
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Used to select a specific version of the Provider value, if supported
	Version pulumi.StringPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecDataFromArgs
func (val *ExternalSecretSpecDataFromArgs) Defaults() *ExternalSecretSpecDataFromArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		tmp.ConversionStrategy = pulumi.StringPtr("Default")
	}
	return &tmp
}
func (ExternalSecretSpecDataFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecDataFrom)(nil)).Elem()
}

func (i ExternalSecretSpecDataFromArgs) ToExternalSecretSpecDataFromOutput() ExternalSecretSpecDataFromOutput {
	return i.ToExternalSecretSpecDataFromOutputWithContext(context.Background())
}

func (i ExternalSecretSpecDataFromArgs) ToExternalSecretSpecDataFromOutputWithContext(ctx context.Context) ExternalSecretSpecDataFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecDataFromOutput)
}

// ExternalSecretSpecDataFromArrayInput is an input type that accepts ExternalSecretSpecDataFromArray and ExternalSecretSpecDataFromArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecDataFromArrayInput` via:
//
//	ExternalSecretSpecDataFromArray{ ExternalSecretSpecDataFromArgs{...} }
type ExternalSecretSpecDataFromArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecDataFromArrayOutput() ExternalSecretSpecDataFromArrayOutput
	ToExternalSecretSpecDataFromArrayOutputWithContext(context.Context) ExternalSecretSpecDataFromArrayOutput
}

type ExternalSecretSpecDataFromArray []ExternalSecretSpecDataFromInput

func (ExternalSecretSpecDataFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecDataFrom)(nil)).Elem()
}

func (i ExternalSecretSpecDataFromArray) ToExternalSecretSpecDataFromArrayOutput() ExternalSecretSpecDataFromArrayOutput {
	return i.ToExternalSecretSpecDataFromArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecDataFromArray) ToExternalSecretSpecDataFromArrayOutputWithContext(ctx context.Context) ExternalSecretSpecDataFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecDataFromArrayOutput)
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataFromOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecDataFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecDataFrom)(nil)).Elem()
}

func (o ExternalSecretSpecDataFromOutput) ToExternalSecretSpecDataFromOutput() ExternalSecretSpecDataFromOutput {
	return o
}

func (o ExternalSecretSpecDataFromOutput) ToExternalSecretSpecDataFromOutputWithContext(ctx context.Context) ExternalSecretSpecDataFromOutput {
	return o
}

// Used to define a conversion Strategy
func (o ExternalSecretSpecDataFromOutput) ConversionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataFrom) *string { return v.ConversionStrategy }).(pulumi.StringPtrOutput)
}

// Key is the key used in the Provider, mandatory
func (o ExternalSecretSpecDataFromOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataFrom) string { return v.Key }).(pulumi.StringOutput)
}

// Used to select a specific property of the Provider value (if a map), if supported
func (o ExternalSecretSpecDataFromOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataFrom) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Used to select a specific version of the Provider value, if supported
func (o ExternalSecretSpecDataFromOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataFrom) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecDataFromArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecDataFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecDataFrom)(nil)).Elem()
}

func (o ExternalSecretSpecDataFromArrayOutput) ToExternalSecretSpecDataFromArrayOutput() ExternalSecretSpecDataFromArrayOutput {
	return o
}

func (o ExternalSecretSpecDataFromArrayOutput) ToExternalSecretSpecDataFromArrayOutputWithContext(ctx context.Context) ExternalSecretSpecDataFromArrayOutput {
	return o
}

func (o ExternalSecretSpecDataFromArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecDataFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecDataFrom {
		return vs[0].([]ExternalSecretSpecDataFrom)[vs[1].(int)]
	}).(ExternalSecretSpecDataFromOutput)
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataRemoteRef struct {
	// Used to define a conversion Strategy
	ConversionStrategy *string `pulumi:"conversionStrategy"`
	// Key is the key used in the Provider, mandatory
	Key string `pulumi:"key"`
	// Used to select a specific property of the Provider value (if a map), if supported
	Property *string `pulumi:"property"`
	// Used to select a specific version of the Provider value, if supported
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecDataRemoteRef
func (val *ExternalSecretSpecDataRemoteRef) Defaults() *ExternalSecretSpecDataRemoteRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		conversionStrategy_ := "Default"
		tmp.ConversionStrategy = &conversionStrategy_
	}
	return &tmp
}

// ExternalSecretSpecDataRemoteRefInput is an input type that accepts ExternalSecretSpecDataRemoteRefArgs and ExternalSecretSpecDataRemoteRefOutput values.
// You can construct a concrete instance of `ExternalSecretSpecDataRemoteRefInput` via:
//
//	ExternalSecretSpecDataRemoteRefArgs{...}
type ExternalSecretSpecDataRemoteRefInput interface {
	pulumi.Input

	ToExternalSecretSpecDataRemoteRefOutput() ExternalSecretSpecDataRemoteRefOutput
	ToExternalSecretSpecDataRemoteRefOutputWithContext(context.Context) ExternalSecretSpecDataRemoteRefOutput
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataRemoteRefArgs struct {
	// Used to define a conversion Strategy
	ConversionStrategy pulumi.StringPtrInput `pulumi:"conversionStrategy"`
	// Key is the key used in the Provider, mandatory
	Key pulumi.StringInput `pulumi:"key"`
	// Used to select a specific property of the Provider value (if a map), if supported
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Used to select a specific version of the Provider value, if supported
	Version pulumi.StringPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecDataRemoteRefArgs
func (val *ExternalSecretSpecDataRemoteRefArgs) Defaults() *ExternalSecretSpecDataRemoteRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		tmp.ConversionStrategy = pulumi.StringPtr("Default")
	}
	return &tmp
}
func (ExternalSecretSpecDataRemoteRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecDataRemoteRef)(nil)).Elem()
}

func (i ExternalSecretSpecDataRemoteRefArgs) ToExternalSecretSpecDataRemoteRefOutput() ExternalSecretSpecDataRemoteRefOutput {
	return i.ToExternalSecretSpecDataRemoteRefOutputWithContext(context.Background())
}

func (i ExternalSecretSpecDataRemoteRefArgs) ToExternalSecretSpecDataRemoteRefOutputWithContext(ctx context.Context) ExternalSecretSpecDataRemoteRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecDataRemoteRefOutput)
}

// ExternalSecretDataRemoteRef defines Provider data location.
type ExternalSecretSpecDataRemoteRefOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecDataRemoteRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecDataRemoteRef)(nil)).Elem()
}

func (o ExternalSecretSpecDataRemoteRefOutput) ToExternalSecretSpecDataRemoteRefOutput() ExternalSecretSpecDataRemoteRefOutput {
	return o
}

func (o ExternalSecretSpecDataRemoteRefOutput) ToExternalSecretSpecDataRemoteRefOutputWithContext(ctx context.Context) ExternalSecretSpecDataRemoteRefOutput {
	return o
}

// Used to define a conversion Strategy
func (o ExternalSecretSpecDataRemoteRefOutput) ConversionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataRemoteRef) *string { return v.ConversionStrategy }).(pulumi.StringPtrOutput)
}

// Key is the key used in the Provider, mandatory
func (o ExternalSecretSpecDataRemoteRefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataRemoteRef) string { return v.Key }).(pulumi.StringOutput)
}

// Used to select a specific property of the Provider value (if a map), if supported
func (o ExternalSecretSpecDataRemoteRefOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataRemoteRef) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Used to select a specific version of the Provider value, if supported
func (o ExternalSecretSpecDataRemoteRefOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecDataRemoteRef) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
type ExternalSecretSpecSecretStoreRef struct {
	// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
	// Defaults to `SecretStore`
	Kind *string `pulumi:"kind"`
	// Name of the SecretStore resource
	Name string `pulumi:"name"`
}

// ExternalSecretSpecSecretStoreRefInput is an input type that accepts ExternalSecretSpecSecretStoreRefArgs and ExternalSecretSpecSecretStoreRefOutput values.
// You can construct a concrete instance of `ExternalSecretSpecSecretStoreRefInput` via:
//
//	ExternalSecretSpecSecretStoreRefArgs{...}
type ExternalSecretSpecSecretStoreRefInput interface {
	pulumi.Input

	ToExternalSecretSpecSecretStoreRefOutput() ExternalSecretSpecSecretStoreRefOutput
	ToExternalSecretSpecSecretStoreRefOutputWithContext(context.Context) ExternalSecretSpecSecretStoreRefOutput
}

// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
type ExternalSecretSpecSecretStoreRefArgs struct {
	// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
	// Defaults to `SecretStore`
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the SecretStore resource
	Name pulumi.StringInput `pulumi:"name"`
}

func (ExternalSecretSpecSecretStoreRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecSecretStoreRef)(nil)).Elem()
}

func (i ExternalSecretSpecSecretStoreRefArgs) ToExternalSecretSpecSecretStoreRefOutput() ExternalSecretSpecSecretStoreRefOutput {
	return i.ToExternalSecretSpecSecretStoreRefOutputWithContext(context.Background())
}

func (i ExternalSecretSpecSecretStoreRefArgs) ToExternalSecretSpecSecretStoreRefOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecSecretStoreRefOutput)
}

func (i ExternalSecretSpecSecretStoreRefArgs) ToExternalSecretSpecSecretStoreRefPtrOutput() ExternalSecretSpecSecretStoreRefPtrOutput {
	return i.ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecSecretStoreRefArgs) ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecSecretStoreRefOutput).ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(ctx)
}

// ExternalSecretSpecSecretStoreRefPtrInput is an input type that accepts ExternalSecretSpecSecretStoreRefArgs, ExternalSecretSpecSecretStoreRefPtr and ExternalSecretSpecSecretStoreRefPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecSecretStoreRefPtrInput` via:
//
//	        ExternalSecretSpecSecretStoreRefArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecSecretStoreRefPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecSecretStoreRefPtrOutput() ExternalSecretSpecSecretStoreRefPtrOutput
	ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(context.Context) ExternalSecretSpecSecretStoreRefPtrOutput
}

type externalSecretSpecSecretStoreRefPtrType ExternalSecretSpecSecretStoreRefArgs

func ExternalSecretSpecSecretStoreRefPtr(v *ExternalSecretSpecSecretStoreRefArgs) ExternalSecretSpecSecretStoreRefPtrInput {
	return (*externalSecretSpecSecretStoreRefPtrType)(v)
}

func (*externalSecretSpecSecretStoreRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecSecretStoreRef)(nil)).Elem()
}

func (i *externalSecretSpecSecretStoreRefPtrType) ToExternalSecretSpecSecretStoreRefPtrOutput() ExternalSecretSpecSecretStoreRefPtrOutput {
	return i.ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecSecretStoreRefPtrType) ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecSecretStoreRefPtrOutput)
}

// SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
type ExternalSecretSpecSecretStoreRefOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecSecretStoreRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecSecretStoreRef)(nil)).Elem()
}

func (o ExternalSecretSpecSecretStoreRefOutput) ToExternalSecretSpecSecretStoreRefOutput() ExternalSecretSpecSecretStoreRefOutput {
	return o
}

func (o ExternalSecretSpecSecretStoreRefOutput) ToExternalSecretSpecSecretStoreRefOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefOutput {
	return o
}

func (o ExternalSecretSpecSecretStoreRefOutput) ToExternalSecretSpecSecretStoreRefPtrOutput() ExternalSecretSpecSecretStoreRefPtrOutput {
	return o.ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecSecretStoreRefOutput) ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecSecretStoreRef) *ExternalSecretSpecSecretStoreRef {
		return &v
	}).(ExternalSecretSpecSecretStoreRefPtrOutput)
}

// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
// Defaults to `SecretStore`
func (o ExternalSecretSpecSecretStoreRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecSecretStoreRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the SecretStore resource
func (o ExternalSecretSpecSecretStoreRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecSecretStoreRef) string { return v.Name }).(pulumi.StringOutput)
}

type ExternalSecretSpecSecretStoreRefPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecSecretStoreRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecSecretStoreRef)(nil)).Elem()
}

func (o ExternalSecretSpecSecretStoreRefPtrOutput) ToExternalSecretSpecSecretStoreRefPtrOutput() ExternalSecretSpecSecretStoreRefPtrOutput {
	return o
}

func (o ExternalSecretSpecSecretStoreRefPtrOutput) ToExternalSecretSpecSecretStoreRefPtrOutputWithContext(ctx context.Context) ExternalSecretSpecSecretStoreRefPtrOutput {
	return o
}

func (o ExternalSecretSpecSecretStoreRefPtrOutput) Elem() ExternalSecretSpecSecretStoreRefOutput {
	return o.ApplyT(func(v *ExternalSecretSpecSecretStoreRef) ExternalSecretSpecSecretStoreRef {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecSecretStoreRef
		return ret
	}).(ExternalSecretSpecSecretStoreRefOutput)
}

// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
// Defaults to `SecretStore`
func (o ExternalSecretSpecSecretStoreRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecSecretStoreRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the SecretStore resource
func (o ExternalSecretSpecSecretStoreRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecSecretStoreRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// ExternalSecretTarget defines the Kubernetes Secret to be created
// There can be only one target per ExternalSecret.
type ExternalSecretSpecTarget struct {
	// CreationPolicy defines rules on how to create the resulting Secret
	// Defaults to 'Owner'
	CreationPolicy *string `pulumi:"creationPolicy"`
	// Immutable defines if the final secret will be immutable
	Immutable *bool `pulumi:"immutable"`
	// Name defines the name of the Secret resource to be managed
	// This field is immutable
	// Defaults to the .metadata.name of the ExternalSecret resource
	Name *string `pulumi:"name"`
	// Template defines a blueprint for the created Secret resource.
	Template *ExternalSecretSpecTargetTemplate `pulumi:"template"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecTarget
func (val *ExternalSecretSpecTarget) Defaults() *ExternalSecretSpecTarget {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CreationPolicy == nil {
		creationPolicy_ := "Owner"
		tmp.CreationPolicy = &creationPolicy_
	}
	tmp.Template = tmp.Template.Defaults()

	return &tmp
}

// ExternalSecretSpecTargetInput is an input type that accepts ExternalSecretSpecTargetArgs and ExternalSecretSpecTargetOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetInput` via:
//
//	ExternalSecretSpecTargetArgs{...}
type ExternalSecretSpecTargetInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetOutput() ExternalSecretSpecTargetOutput
	ToExternalSecretSpecTargetOutputWithContext(context.Context) ExternalSecretSpecTargetOutput
}

// ExternalSecretTarget defines the Kubernetes Secret to be created
// There can be only one target per ExternalSecret.
type ExternalSecretSpecTargetArgs struct {
	// CreationPolicy defines rules on how to create the resulting Secret
	// Defaults to 'Owner'
	CreationPolicy pulumi.StringPtrInput `pulumi:"creationPolicy"`
	// Immutable defines if the final secret will be immutable
	Immutable pulumi.BoolPtrInput `pulumi:"immutable"`
	// Name defines the name of the Secret resource to be managed
	// This field is immutable
	// Defaults to the .metadata.name of the ExternalSecret resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template defines a blueprint for the created Secret resource.
	Template ExternalSecretSpecTargetTemplatePtrInput `pulumi:"template"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecTargetArgs
func (val *ExternalSecretSpecTargetArgs) Defaults() *ExternalSecretSpecTargetArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CreationPolicy == nil {
		tmp.CreationPolicy = pulumi.StringPtr("Owner")
	}

	return &tmp
}
func (ExternalSecretSpecTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTarget)(nil)).Elem()
}

func (i ExternalSecretSpecTargetArgs) ToExternalSecretSpecTargetOutput() ExternalSecretSpecTargetOutput {
	return i.ToExternalSecretSpecTargetOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetArgs) ToExternalSecretSpecTargetOutputWithContext(ctx context.Context) ExternalSecretSpecTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetOutput)
}

func (i ExternalSecretSpecTargetArgs) ToExternalSecretSpecTargetPtrOutput() ExternalSecretSpecTargetPtrOutput {
	return i.ToExternalSecretSpecTargetPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetArgs) ToExternalSecretSpecTargetPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetOutput).ToExternalSecretSpecTargetPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetPtrInput is an input type that accepts ExternalSecretSpecTargetArgs, ExternalSecretSpecTargetPtr and ExternalSecretSpecTargetPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetPtrInput` via:
//
//	        ExternalSecretSpecTargetArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetPtrOutput() ExternalSecretSpecTargetPtrOutput
	ToExternalSecretSpecTargetPtrOutputWithContext(context.Context) ExternalSecretSpecTargetPtrOutput
}

type externalSecretSpecTargetPtrType ExternalSecretSpecTargetArgs

func ExternalSecretSpecTargetPtr(v *ExternalSecretSpecTargetArgs) ExternalSecretSpecTargetPtrInput {
	return (*externalSecretSpecTargetPtrType)(v)
}

func (*externalSecretSpecTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTarget)(nil)).Elem()
}

func (i *externalSecretSpecTargetPtrType) ToExternalSecretSpecTargetPtrOutput() ExternalSecretSpecTargetPtrOutput {
	return i.ToExternalSecretSpecTargetPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetPtrType) ToExternalSecretSpecTargetPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetPtrOutput)
}

// ExternalSecretTarget defines the Kubernetes Secret to be created
// There can be only one target per ExternalSecret.
type ExternalSecretSpecTargetOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTarget)(nil)).Elem()
}

func (o ExternalSecretSpecTargetOutput) ToExternalSecretSpecTargetOutput() ExternalSecretSpecTargetOutput {
	return o
}

func (o ExternalSecretSpecTargetOutput) ToExternalSecretSpecTargetOutputWithContext(ctx context.Context) ExternalSecretSpecTargetOutput {
	return o
}

func (o ExternalSecretSpecTargetOutput) ToExternalSecretSpecTargetPtrOutput() ExternalSecretSpecTargetPtrOutput {
	return o.ToExternalSecretSpecTargetPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetOutput) ToExternalSecretSpecTargetPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTarget) *ExternalSecretSpecTarget {
		return &v
	}).(ExternalSecretSpecTargetPtrOutput)
}

// CreationPolicy defines rules on how to create the resulting Secret
// Defaults to 'Owner'
func (o ExternalSecretSpecTargetOutput) CreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTarget) *string { return v.CreationPolicy }).(pulumi.StringPtrOutput)
}

// Immutable defines if the final secret will be immutable
func (o ExternalSecretSpecTargetOutput) Immutable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTarget) *bool { return v.Immutable }).(pulumi.BoolPtrOutput)
}

// Name defines the name of the Secret resource to be managed
// This field is immutable
// Defaults to the .metadata.name of the ExternalSecret resource
func (o ExternalSecretSpecTargetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTarget) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template defines a blueprint for the created Secret resource.
func (o ExternalSecretSpecTargetOutput) Template() ExternalSecretSpecTargetTemplatePtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTarget) *ExternalSecretSpecTargetTemplate { return v.Template }).(ExternalSecretSpecTargetTemplatePtrOutput)
}

type ExternalSecretSpecTargetPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTarget)(nil)).Elem()
}

func (o ExternalSecretSpecTargetPtrOutput) ToExternalSecretSpecTargetPtrOutput() ExternalSecretSpecTargetPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetPtrOutput) ToExternalSecretSpecTargetPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetPtrOutput) Elem() ExternalSecretSpecTargetOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTarget) ExternalSecretSpecTarget {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTarget
		return ret
	}).(ExternalSecretSpecTargetOutput)
}

// CreationPolicy defines rules on how to create the resulting Secret
// Defaults to 'Owner'
func (o ExternalSecretSpecTargetPtrOutput) CreationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.CreationPolicy
	}).(pulumi.StringPtrOutput)
}

// Immutable defines if the final secret will be immutable
func (o ExternalSecretSpecTargetPtrOutput) Immutable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTarget) *bool {
		if v == nil {
			return nil
		}
		return v.Immutable
	}).(pulumi.BoolPtrOutput)
}

// Name defines the name of the Secret resource to be managed
// This field is immutable
// Defaults to the .metadata.name of the ExternalSecret resource
func (o ExternalSecretSpecTargetPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTarget) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Template defines a blueprint for the created Secret resource.
func (o ExternalSecretSpecTargetPtrOutput) Template() ExternalSecretSpecTargetTemplatePtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTarget) *ExternalSecretSpecTargetTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(ExternalSecretSpecTargetTemplatePtrOutput)
}

// Template defines a blueprint for the created Secret resource.
type ExternalSecretSpecTargetTemplate struct {
	Data map[string]string `pulumi:"data"`
	// EngineVersion specifies the template engine version
	// that should be used to compile/execute the
	// template specified in .data and .templateFrom[].
	EngineVersion *string `pulumi:"engineVersion"`
	// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
	Metadata     *ExternalSecretSpecTargetTemplateMetadata      `pulumi:"metadata"`
	TemplateFrom []ExternalSecretSpecTargetTemplateTemplateFrom `pulumi:"templateFrom"`
	Type         *string                                        `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecTargetTemplate
func (val *ExternalSecretSpecTargetTemplate) Defaults() *ExternalSecretSpecTargetTemplate {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EngineVersion == nil {
		engineVersion_ := "v1"
		tmp.EngineVersion = &engineVersion_
	}
	return &tmp
}

// ExternalSecretSpecTargetTemplateInput is an input type that accepts ExternalSecretSpecTargetTemplateArgs and ExternalSecretSpecTargetTemplateOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateInput` via:
//
//	ExternalSecretSpecTargetTemplateArgs{...}
type ExternalSecretSpecTargetTemplateInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateOutput() ExternalSecretSpecTargetTemplateOutput
	ToExternalSecretSpecTargetTemplateOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateOutput
}

// Template defines a blueprint for the created Secret resource.
type ExternalSecretSpecTargetTemplateArgs struct {
	Data pulumi.StringMapInput `pulumi:"data"`
	// EngineVersion specifies the template engine version
	// that should be used to compile/execute the
	// template specified in .data and .templateFrom[].
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
	Metadata     ExternalSecretSpecTargetTemplateMetadataPtrInput       `pulumi:"metadata"`
	TemplateFrom ExternalSecretSpecTargetTemplateTemplateFromArrayInput `pulumi:"templateFrom"`
	Type         pulumi.StringPtrInput                                  `pulumi:"type"`
}

// Defaults sets the appropriate defaults for ExternalSecretSpecTargetTemplateArgs
func (val *ExternalSecretSpecTargetTemplateArgs) Defaults() *ExternalSecretSpecTargetTemplateArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EngineVersion == nil {
		tmp.EngineVersion = pulumi.StringPtr("v1")
	}
	return &tmp
}
func (ExternalSecretSpecTargetTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplate)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateArgs) ToExternalSecretSpecTargetTemplateOutput() ExternalSecretSpecTargetTemplateOutput {
	return i.ToExternalSecretSpecTargetTemplateOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateArgs) ToExternalSecretSpecTargetTemplateOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateOutput)
}

func (i ExternalSecretSpecTargetTemplateArgs) ToExternalSecretSpecTargetTemplatePtrOutput() ExternalSecretSpecTargetTemplatePtrOutput {
	return i.ToExternalSecretSpecTargetTemplatePtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateArgs) ToExternalSecretSpecTargetTemplatePtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateOutput).ToExternalSecretSpecTargetTemplatePtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplatePtrInput is an input type that accepts ExternalSecretSpecTargetTemplateArgs, ExternalSecretSpecTargetTemplatePtr and ExternalSecretSpecTargetTemplatePtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplatePtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplatePtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplatePtrOutput() ExternalSecretSpecTargetTemplatePtrOutput
	ToExternalSecretSpecTargetTemplatePtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplatePtrOutput
}

type externalSecretSpecTargetTemplatePtrType ExternalSecretSpecTargetTemplateArgs

func ExternalSecretSpecTargetTemplatePtr(v *ExternalSecretSpecTargetTemplateArgs) ExternalSecretSpecTargetTemplatePtrInput {
	return (*externalSecretSpecTargetTemplatePtrType)(v)
}

func (*externalSecretSpecTargetTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplate)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplatePtrType) ToExternalSecretSpecTargetTemplatePtrOutput() ExternalSecretSpecTargetTemplatePtrOutput {
	return i.ToExternalSecretSpecTargetTemplatePtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplatePtrType) ToExternalSecretSpecTargetTemplatePtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplatePtrOutput)
}

// Template defines a blueprint for the created Secret resource.
type ExternalSecretSpecTargetTemplateOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplate)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateOutput) ToExternalSecretSpecTargetTemplateOutput() ExternalSecretSpecTargetTemplateOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateOutput) ToExternalSecretSpecTargetTemplateOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateOutput) ToExternalSecretSpecTargetTemplatePtrOutput() ExternalSecretSpecTargetTemplatePtrOutput {
	return o.ToExternalSecretSpecTargetTemplatePtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateOutput) ToExternalSecretSpecTargetTemplatePtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplate) *ExternalSecretSpecTargetTemplate {
		return &v
	}).(ExternalSecretSpecTargetTemplatePtrOutput)
}

func (o ExternalSecretSpecTargetTemplateOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplate) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

// EngineVersion specifies the template engine version
// that should be used to compile/execute the
// template specified in .data and .templateFrom[].
func (o ExternalSecretSpecTargetTemplateOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplate) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
func (o ExternalSecretSpecTargetTemplateOutput) Metadata() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplate) *ExternalSecretSpecTargetTemplateMetadata { return v.Metadata }).(ExternalSecretSpecTargetTemplateMetadataPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateOutput) TemplateFrom() ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplate) []ExternalSecretSpecTargetTemplateTemplateFrom {
		return v.TemplateFrom
	}).(ExternalSecretSpecTargetTemplateTemplateFromArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplatePtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplate)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) ToExternalSecretSpecTargetTemplatePtrOutput() ExternalSecretSpecTargetTemplatePtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) ToExternalSecretSpecTargetTemplatePtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplatePtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) Elem() ExternalSecretSpecTargetTemplateOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) ExternalSecretSpecTargetTemplate {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplate
		return ret
	}).(ExternalSecretSpecTargetTemplateOutput)
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringMapOutput)
}

// EngineVersion specifies the template engine version
// that should be used to compile/execute the
// template specified in .data and .templateFrom[].
func (o ExternalSecretSpecTargetTemplatePtrOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(pulumi.StringPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
func (o ExternalSecretSpecTargetTemplatePtrOutput) Metadata() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) *ExternalSecretSpecTargetTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ExternalSecretSpecTargetTemplateMetadataPtrOutput)
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) TemplateFrom() ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) []ExternalSecretSpecTargetTemplateTemplateFrom {
		if v == nil {
			return nil
		}
		return v.TemplateFrom
	}).(ExternalSecretSpecTargetTemplateTemplateFromArrayOutput)
}

func (o ExternalSecretSpecTargetTemplatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateData struct {
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type ExternalSecretSpecTargetTemplateMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Labels      map[string]string `pulumi:"labels"`
}

// ExternalSecretSpecTargetTemplateMetadataInput is an input type that accepts ExternalSecretSpecTargetTemplateMetadataArgs and ExternalSecretSpecTargetTemplateMetadataOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateMetadataInput` via:
//
//	ExternalSecretSpecTargetTemplateMetadataArgs{...}
type ExternalSecretSpecTargetTemplateMetadataInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateMetadataOutput() ExternalSecretSpecTargetTemplateMetadataOutput
	ToExternalSecretSpecTargetTemplateMetadataOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateMetadataOutput
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type ExternalSecretSpecTargetTemplateMetadataArgs struct {
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	Labels      pulumi.StringMapInput `pulumi:"labels"`
}

func (ExternalSecretSpecTargetTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateMetadata)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateMetadataArgs) ToExternalSecretSpecTargetTemplateMetadataOutput() ExternalSecretSpecTargetTemplateMetadataOutput {
	return i.ToExternalSecretSpecTargetTemplateMetadataOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateMetadataArgs) ToExternalSecretSpecTargetTemplateMetadataOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateMetadataOutput)
}

func (i ExternalSecretSpecTargetTemplateMetadataArgs) ToExternalSecretSpecTargetTemplateMetadataPtrOutput() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateMetadataArgs) ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateMetadataOutput).ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplateMetadataPtrInput is an input type that accepts ExternalSecretSpecTargetTemplateMetadataArgs, ExternalSecretSpecTargetTemplateMetadataPtr and ExternalSecretSpecTargetTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateMetadataPtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplateMetadataPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateMetadataPtrOutput() ExternalSecretSpecTargetTemplateMetadataPtrOutput
	ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateMetadataPtrOutput
}

type externalSecretSpecTargetTemplateMetadataPtrType ExternalSecretSpecTargetTemplateMetadataArgs

func ExternalSecretSpecTargetTemplateMetadataPtr(v *ExternalSecretSpecTargetTemplateMetadataArgs) ExternalSecretSpecTargetTemplateMetadataPtrInput {
	return (*externalSecretSpecTargetTemplateMetadataPtrType)(v)
}

func (*externalSecretSpecTargetTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateMetadata)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplateMetadataPtrType) ToExternalSecretSpecTargetTemplateMetadataPtrOutput() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplateMetadataPtrType) ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateMetadataPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type ExternalSecretSpecTargetTemplateMetadataOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateMetadata)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) ToExternalSecretSpecTargetTemplateMetadataOutput() ExternalSecretSpecTargetTemplateMetadataOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) ToExternalSecretSpecTargetTemplateMetadataOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) ToExternalSecretSpecTargetTemplateMetadataPtrOutput() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o.ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplateMetadata) *ExternalSecretSpecTargetTemplateMetadata {
		return &v
	}).(ExternalSecretSpecTargetTemplateMetadataPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o ExternalSecretSpecTargetTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type ExternalSecretSpecTargetTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateMetadata)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateMetadataPtrOutput) ToExternalSecretSpecTargetTemplateMetadataPtrOutput() ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateMetadataPtrOutput) ToExternalSecretSpecTargetTemplateMetadataPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateMetadataPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateMetadataPtrOutput) Elem() ExternalSecretSpecTargetTemplateMetadataOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateMetadata) ExternalSecretSpecTargetTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplateMetadata
		return ret
	}).(ExternalSecretSpecTargetTemplateMetadataOutput)
}

func (o ExternalSecretSpecTargetTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o ExternalSecretSpecTargetTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type ExternalSecretSpecTargetTemplateMetadataAnnotations struct {
}

type ExternalSecretSpecTargetTemplateMetadataLabels struct {
}

type ExternalSecretSpecTargetTemplateTemplateFrom struct {
	ConfigMap *ExternalSecretSpecTargetTemplateTemplateFromConfigMap `pulumi:"configMap"`
	Secret    *ExternalSecretSpecTargetTemplateTemplateFromSecret    `pulumi:"secret"`
}

// ExternalSecretSpecTargetTemplateTemplateFromInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromArgs and ExternalSecretSpecTargetTemplateTemplateFromOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromOutput() ExternalSecretSpecTargetTemplateTemplateFromOutput
	ToExternalSecretSpecTargetTemplateTemplateFromOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromArgs struct {
	ConfigMap ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput `pulumi:"configMap"`
	Secret    ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput    `pulumi:"secret"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFrom)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromArgs) ToExternalSecretSpecTargetTemplateTemplateFromOutput() ExternalSecretSpecTargetTemplateTemplateFromOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromArgs) ToExternalSecretSpecTargetTemplateTemplateFromOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromArray and ExternalSecretSpecTargetTemplateTemplateFromArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromArray{ ExternalSecretSpecTargetTemplateTemplateFromArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromArray []ExternalSecretSpecTargetTemplateTemplateFromInput

func (ExternalSecretSpecTargetTemplateTemplateFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFrom)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromArray) ToExternalSecretSpecTargetTemplateTemplateFromArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromArray) ToExternalSecretSpecTargetTemplateTemplateFromArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFrom)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromOutput) ToExternalSecretSpecTargetTemplateTemplateFromOutput() ExternalSecretSpecTargetTemplateTemplateFromOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromOutput) ToExternalSecretSpecTargetTemplateTemplateFromOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromOutput) ConfigMap() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFrom) *ExternalSecretSpecTargetTemplateTemplateFromConfigMap {
		return v.ConfigMap
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromOutput) Secret() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFrom) *ExternalSecretSpecTargetTemplateTemplateFromSecret {
		return v.Secret
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFrom)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFrom {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFrom)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMap struct {
	Items []ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems `pulumi:"items"`
	Name  string                                                       `pulumi:"name"`
}

// ExternalSecretSpecTargetTemplateTemplateFromConfigMapInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromConfigMap and ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromConfigMapInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromConfigMap{ "key": ExternalSecretSpecTargetTemplateTemplateFromConfigArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromConfigMapInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput
	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs struct {
	Items ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayInput `pulumi:"items"`
	Name  pulumi.StringInput                                                   `pulumi:"name"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput)
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput).ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs, ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtr and ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput
	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput
}

type externalSecretSpecTargetTemplateTemplateFromConfigMapPtrType ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs

func ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtr(v *ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput {
	return (*externalSecretSpecTargetTemplateTemplateFromConfigMapPtrType)(v)
}

func (*externalSecretSpecTargetTemplateTemplateFromConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplateTemplateFromConfigMapPtrType) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplateTemplateFromConfigMapPtrType) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return o.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplateTemplateFromConfigMap) *ExternalSecretSpecTargetTemplateTemplateFromConfigMap {
		return &v
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromConfigMap) []ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems {
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromConfigMap) string { return v.Name }).(pulumi.StringOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) Elem() ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromConfigMap) ExternalSecretSpecTargetTemplateTemplateFromConfigMap {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplateTemplateFromConfigMap
		return ret
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromConfigMap) []ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromConfigMap) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems struct {
	Key string `pulumi:"key"`
}

// ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs and ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput
	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray and ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray{ ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray []ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsInput

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFromConfigMapItems)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecret struct {
	Items []ExternalSecretSpecTargetTemplateTemplateFromSecretItems `pulumi:"items"`
	Name  string                                                    `pulumi:"name"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretArgs struct {
	Items ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput `pulumi:"items"`
	Name  pulumi.StringInput                                                `pulumi:"name"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput)
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput).ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretArgs, ExternalSecretSpecTargetTemplateTemplateFromSecretPtr and ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput
}

type externalSecretSpecTargetTemplateTemplateFromSecretPtrType ExternalSecretSpecTargetTemplateTemplateFromSecretArgs

func ExternalSecretSpecTargetTemplateTemplateFromSecretPtr(v *ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput {
	return (*externalSecretSpecTargetTemplateTemplateFromSecretPtrType)(v)
}

func (*externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplateTemplateFromSecret) *ExternalSecretSpecTargetTemplateTemplateFromSecret {
		return &v
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecret) []ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecret) string { return v.Name }).(pulumi.StringOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Elem() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) ExternalSecretSpecTargetTemplateTemplateFromSecret {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplateTemplateFromSecret
		return ret
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) []ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItems struct {
	Key string `pulumi:"key"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs struct {
	Key pulumi.StringInput `pulumi:"key"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray{ ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput)
}

type ExternalSecretStatus struct {
	// Binding represents a servicebinding.io Provisioned Service reference to the secret
	Binding    *ExternalSecretStatusBinding     `pulumi:"binding"`
	Conditions []ExternalSecretStatusConditions `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime *string `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion *string `pulumi:"syncedResourceVersion"`
}

// Defaults sets the appropriate defaults for ExternalSecretStatus
func (val *ExternalSecretStatus) Defaults() *ExternalSecretStatus {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Binding = tmp.Binding.Defaults()

	return &tmp
}

// ExternalSecretStatusInput is an input type that accepts ExternalSecretStatusArgs and ExternalSecretStatusOutput values.
// You can construct a concrete instance of `ExternalSecretStatusInput` via:
//
//	ExternalSecretStatusArgs{...}
type ExternalSecretStatusInput interface {
	pulumi.Input

	ToExternalSecretStatusOutput() ExternalSecretStatusOutput
	ToExternalSecretStatusOutputWithContext(context.Context) ExternalSecretStatusOutput
}

type ExternalSecretStatusArgs struct {
	// Binding represents a servicebinding.io Provisioned Service reference to the secret
	Binding    ExternalSecretStatusBindingPtrInput      `pulumi:"binding"`
	Conditions ExternalSecretStatusConditionsArrayInput `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime pulumi.StringPtrInput `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion pulumi.StringPtrInput `pulumi:"syncedResourceVersion"`
}

// Defaults sets the appropriate defaults for ExternalSecretStatusArgs
func (val *ExternalSecretStatusArgs) Defaults() *ExternalSecretStatusArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (ExternalSecretStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatus)(nil)).Elem()
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusOutput() ExternalSecretStatusOutput {
	return i.ToExternalSecretStatusOutputWithContext(context.Background())
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusOutputWithContext(ctx context.Context) ExternalSecretStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusOutput)
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return i.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusOutput).ToExternalSecretStatusPtrOutputWithContext(ctx)
}

// ExternalSecretStatusPtrInput is an input type that accepts ExternalSecretStatusArgs, ExternalSecretStatusPtr and ExternalSecretStatusPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusPtrInput` via:
//
//	        ExternalSecretStatusArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput
	ToExternalSecretStatusPtrOutputWithContext(context.Context) ExternalSecretStatusPtrOutput
}

type externalSecretStatusPtrType ExternalSecretStatusArgs

func ExternalSecretStatusPtr(v *ExternalSecretStatusArgs) ExternalSecretStatusPtrInput {
	return (*externalSecretStatusPtrType)(v)
}

func (*externalSecretStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatus)(nil)).Elem()
}

func (i *externalSecretStatusPtrType) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return i.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusPtrType) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusPtrOutput)
}

type ExternalSecretStatusOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatus)(nil)).Elem()
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusOutput() ExternalSecretStatusOutput {
	return o
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusOutputWithContext(ctx context.Context) ExternalSecretStatusOutput {
	return o
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return o.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatus) *ExternalSecretStatus {
		return &v
	}).(ExternalSecretStatusPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
func (o ExternalSecretStatusOutput) Binding() ExternalSecretStatusBindingPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *ExternalSecretStatusBinding { return v.Binding }).(ExternalSecretStatusBindingPtrOutput)
}

func (o ExternalSecretStatusOutput) Conditions() ExternalSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v ExternalSecretStatus) []ExternalSecretStatusConditions { return v.Conditions }).(ExternalSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *string { return v.SyncedResourceVersion }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatus)(nil)).Elem()
}

func (o ExternalSecretStatusPtrOutput) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return o
}

func (o ExternalSecretStatusPtrOutput) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return o
}

func (o ExternalSecretStatusPtrOutput) Elem() ExternalSecretStatusOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) ExternalSecretStatus {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatus
		return ret
	}).(ExternalSecretStatusOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
func (o ExternalSecretStatusPtrOutput) Binding() ExternalSecretStatusBindingPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *ExternalSecretStatusBinding {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(ExternalSecretStatusBindingPtrOutput)
}

func (o ExternalSecretStatusPtrOutput) Conditions() ExternalSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) []ExternalSecretStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ExternalSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusPtrOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusPtrOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.SyncedResourceVersion
	}).(pulumi.StringPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBinding struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for ExternalSecretStatusBinding
func (val *ExternalSecretStatusBinding) Defaults() *ExternalSecretStatusBinding {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// ExternalSecretStatusBindingInput is an input type that accepts ExternalSecretStatusBindingArgs and ExternalSecretStatusBindingOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingInput` via:
//
//	ExternalSecretStatusBindingArgs{...}
type ExternalSecretStatusBindingInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput
	ToExternalSecretStatusBindingOutputWithContext(context.Context) ExternalSecretStatusBindingOutput
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for ExternalSecretStatusBindingArgs
func (val *ExternalSecretStatusBindingArgs) Defaults() *ExternalSecretStatusBindingArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (ExternalSecretStatusBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBinding)(nil)).Elem()
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput {
	return i.ToExternalSecretStatusBindingOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingOutputWithContext(ctx context.Context) ExternalSecretStatusBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingOutput)
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return i.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingOutput).ToExternalSecretStatusBindingPtrOutputWithContext(ctx)
}

// ExternalSecretStatusBindingPtrInput is an input type that accepts ExternalSecretStatusBindingArgs, ExternalSecretStatusBindingPtr and ExternalSecretStatusBindingPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingPtrInput` via:
//
//	        ExternalSecretStatusBindingArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusBindingPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput
	ToExternalSecretStatusBindingPtrOutputWithContext(context.Context) ExternalSecretStatusBindingPtrOutput
}

type externalSecretStatusBindingPtrType ExternalSecretStatusBindingArgs

func ExternalSecretStatusBindingPtr(v *ExternalSecretStatusBindingArgs) ExternalSecretStatusBindingPtrInput {
	return (*externalSecretStatusBindingPtrType)(v)
}

func (*externalSecretStatusBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBinding)(nil)).Elem()
}

func (i *externalSecretStatusBindingPtrType) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return i.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusBindingPtrType) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBinding)(nil)).Elem()
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput {
	return o
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingOutputWithContext(ctx context.Context) ExternalSecretStatusBindingOutput {
	return o
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return o.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatusBinding) *ExternalSecretStatusBinding {
		return &v
	}).(ExternalSecretStatusBindingPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusBinding) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusBindingPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBinding)(nil)).Elem()
}

func (o ExternalSecretStatusBindingPtrOutput) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPtrOutput) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPtrOutput) Elem() ExternalSecretStatusBindingOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBinding) ExternalSecretStatusBinding {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatusBinding
		return ret
	}).(ExternalSecretStatusBindingOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBinding) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             string  `pulumi:"status"`
	Type               string  `pulumi:"type"`
}

// ExternalSecretStatusConditionsInput is an input type that accepts ExternalSecretStatusConditionsArgs and ExternalSecretStatusConditionsOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsInput` via:
//
//	ExternalSecretStatusConditionsArgs{...}
type ExternalSecretStatusConditionsInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput
	ToExternalSecretStatusConditionsOutputWithContext(context.Context) ExternalSecretStatusConditionsOutput
}

type ExternalSecretStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringInput    `pulumi:"status"`
	Type               pulumi.StringInput    `pulumi:"type"`
}

func (ExternalSecretStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditions)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsArgs) ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput {
	return i.ToExternalSecretStatusConditionsOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsArgs) ToExternalSecretStatusConditionsOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsOutput)
}

// ExternalSecretStatusConditionsArrayInput is an input type that accepts ExternalSecretStatusConditionsArray and ExternalSecretStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsArrayInput` via:
//
//	ExternalSecretStatusConditionsArray{ ExternalSecretStatusConditionsArgs{...} }
type ExternalSecretStatusConditionsArrayInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput
	ToExternalSecretStatusConditionsArrayOutputWithContext(context.Context) ExternalSecretStatusConditionsArrayOutput
}

type ExternalSecretStatusConditionsArray []ExternalSecretStatusConditionsInput

func (ExternalSecretStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditions)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsArray) ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput {
	return i.ToExternalSecretStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsArray) ToExternalSecretStatusConditionsArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsArrayOutput)
}

type ExternalSecretStatusConditionsOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditions)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsOutput) ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput {
	return o
}

func (o ExternalSecretStatusConditionsOutput) ToExternalSecretStatusConditionsOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsOutput {
	return o
}

func (o ExternalSecretStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o ExternalSecretStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ExternalSecretStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditions)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsArrayOutput) ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsArrayOutput) ToExternalSecretStatusConditionsArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsArrayOutput) Index(i pulumi.IntInput) ExternalSecretStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretStatusConditions {
		return vs[0].([]ExternalSecretStatusConditions)[vs[1].(int)]
	}).(ExternalSecretStatusConditionsOutput)
}

type PushSecretType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PushSecretSpec configures the behavior of the PushSecret.
	Spec *PushSecretSpec `pulumi:"spec"`
	// PushSecretStatus indicates the history of the status of PushSecret.
	Status *PushSecretStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for PushSecretType
func (val *PushSecretType) Defaults() *PushSecretType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type PushSecretMetadata struct {
}

// PushSecretSpec configures the behavior of the PushSecret.
type PushSecretSpec struct {
	// Secret Data that should be pushed to providers
	Data []PushSecretSpecData `pulumi:"data"`
	// Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The Interval to which External Secrets will try to push a secret definition
	RefreshInterval *string                         `pulumi:"refreshInterval"`
	SecretStoreRefs []PushSecretSpecSecretStoreRefs `pulumi:"secretStoreRefs"`
	// The Secret Selector (k8s source) for the Push Secret
	Selector PushSecretSpecSelector `pulumi:"selector"`
	// Template defines a blueprint for the created Secret resource.
	Template *PushSecretSpecTemplate `pulumi:"template"`
	// UpdatePolicy to handle Secrets in the provider. Possible Values: "Replace/IfNotExists". Defaults to "Replace".
	UpdatePolicy *string `pulumi:"updatePolicy"`
}

// Defaults sets the appropriate defaults for PushSecretSpec
func (val *PushSecretSpec) Defaults() *PushSecretSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeletionPolicy == nil {
		deletionPolicy_ := "None"
		tmp.DeletionPolicy = &deletionPolicy_
	}
	tmp.Template = tmp.Template.Defaults()

	if tmp.UpdatePolicy == nil {
		updatePolicy_ := "Replace"
		tmp.UpdatePolicy = &updatePolicy_
	}
	return &tmp
}

// PushSecretSpecInput is an input type that accepts PushSecretSpecArgs and PushSecretSpecOutput values.
// You can construct a concrete instance of `PushSecretSpecInput` via:
//
//	PushSecretSpecArgs{...}
type PushSecretSpecInput interface {
	pulumi.Input

	ToPushSecretSpecOutput() PushSecretSpecOutput
	ToPushSecretSpecOutputWithContext(context.Context) PushSecretSpecOutput
}

// PushSecretSpec configures the behavior of the PushSecret.
type PushSecretSpecArgs struct {
	// Secret Data that should be pushed to providers
	Data PushSecretSpecDataArrayInput `pulumi:"data"`
	// Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".
	DeletionPolicy pulumi.StringPtrInput `pulumi:"deletionPolicy"`
	// The Interval to which External Secrets will try to push a secret definition
	RefreshInterval pulumi.StringPtrInput                   `pulumi:"refreshInterval"`
	SecretStoreRefs PushSecretSpecSecretStoreRefsArrayInput `pulumi:"secretStoreRefs"`
	// The Secret Selector (k8s source) for the Push Secret
	Selector PushSecretSpecSelectorInput `pulumi:"selector"`
	// Template defines a blueprint for the created Secret resource.
	Template PushSecretSpecTemplatePtrInput `pulumi:"template"`
	// UpdatePolicy to handle Secrets in the provider. Possible Values: "Replace/IfNotExists". Defaults to "Replace".
	UpdatePolicy pulumi.StringPtrInput `pulumi:"updatePolicy"`
}

// Defaults sets the appropriate defaults for PushSecretSpecArgs
func (val *PushSecretSpecArgs) Defaults() *PushSecretSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.DeletionPolicy == nil {
		tmp.DeletionPolicy = pulumi.StringPtr("None")
	}

	if tmp.UpdatePolicy == nil {
		tmp.UpdatePolicy = pulumi.StringPtr("Replace")
	}
	return &tmp
}
func (PushSecretSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpec)(nil)).Elem()
}

func (i PushSecretSpecArgs) ToPushSecretSpecOutput() PushSecretSpecOutput {
	return i.ToPushSecretSpecOutputWithContext(context.Background())
}

func (i PushSecretSpecArgs) ToPushSecretSpecOutputWithContext(ctx context.Context) PushSecretSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecOutput)
}

func (i PushSecretSpecArgs) ToPushSecretSpecPtrOutput() PushSecretSpecPtrOutput {
	return i.ToPushSecretSpecPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecArgs) ToPushSecretSpecPtrOutputWithContext(ctx context.Context) PushSecretSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecOutput).ToPushSecretSpecPtrOutputWithContext(ctx)
}

// PushSecretSpecPtrInput is an input type that accepts PushSecretSpecArgs, PushSecretSpecPtr and PushSecretSpecPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecPtrInput` via:
//
//	        PushSecretSpecArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecPtrInput interface {
	pulumi.Input

	ToPushSecretSpecPtrOutput() PushSecretSpecPtrOutput
	ToPushSecretSpecPtrOutputWithContext(context.Context) PushSecretSpecPtrOutput
}

type pushSecretSpecPtrType PushSecretSpecArgs

func PushSecretSpecPtr(v *PushSecretSpecArgs) PushSecretSpecPtrInput {
	return (*pushSecretSpecPtrType)(v)
}

func (*pushSecretSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpec)(nil)).Elem()
}

func (i *pushSecretSpecPtrType) ToPushSecretSpecPtrOutput() PushSecretSpecPtrOutput {
	return i.ToPushSecretSpecPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecPtrType) ToPushSecretSpecPtrOutputWithContext(ctx context.Context) PushSecretSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecPtrOutput)
}

// PushSecretSpec configures the behavior of the PushSecret.
type PushSecretSpecOutput struct{ *pulumi.OutputState }

func (PushSecretSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpec)(nil)).Elem()
}

func (o PushSecretSpecOutput) ToPushSecretSpecOutput() PushSecretSpecOutput {
	return o
}

func (o PushSecretSpecOutput) ToPushSecretSpecOutputWithContext(ctx context.Context) PushSecretSpecOutput {
	return o
}

func (o PushSecretSpecOutput) ToPushSecretSpecPtrOutput() PushSecretSpecPtrOutput {
	return o.ToPushSecretSpecPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecOutput) ToPushSecretSpecPtrOutputWithContext(ctx context.Context) PushSecretSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpec) *PushSecretSpec {
		return &v
	}).(PushSecretSpecPtrOutput)
}

// Secret Data that should be pushed to providers
func (o PushSecretSpecOutput) Data() PushSecretSpecDataArrayOutput {
	return o.ApplyT(func(v PushSecretSpec) []PushSecretSpecData { return v.Data }).(PushSecretSpecDataArrayOutput)
}

// Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".
func (o PushSecretSpecOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpec) *string { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// The Interval to which External Secrets will try to push a secret definition
func (o PushSecretSpecOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpec) *string { return v.RefreshInterval }).(pulumi.StringPtrOutput)
}

func (o PushSecretSpecOutput) SecretStoreRefs() PushSecretSpecSecretStoreRefsArrayOutput {
	return o.ApplyT(func(v PushSecretSpec) []PushSecretSpecSecretStoreRefs { return v.SecretStoreRefs }).(PushSecretSpecSecretStoreRefsArrayOutput)
}

// The Secret Selector (k8s source) for the Push Secret
func (o PushSecretSpecOutput) Selector() PushSecretSpecSelectorOutput {
	return o.ApplyT(func(v PushSecretSpec) PushSecretSpecSelector { return v.Selector }).(PushSecretSpecSelectorOutput)
}

// Template defines a blueprint for the created Secret resource.
func (o PushSecretSpecOutput) Template() PushSecretSpecTemplatePtrOutput {
	return o.ApplyT(func(v PushSecretSpec) *PushSecretSpecTemplate { return v.Template }).(PushSecretSpecTemplatePtrOutput)
}

// UpdatePolicy to handle Secrets in the provider. Possible Values: "Replace/IfNotExists". Defaults to "Replace".
func (o PushSecretSpecOutput) UpdatePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpec) *string { return v.UpdatePolicy }).(pulumi.StringPtrOutput)
}

type PushSecretSpecPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpec)(nil)).Elem()
}

func (o PushSecretSpecPtrOutput) ToPushSecretSpecPtrOutput() PushSecretSpecPtrOutput {
	return o
}

func (o PushSecretSpecPtrOutput) ToPushSecretSpecPtrOutputWithContext(ctx context.Context) PushSecretSpecPtrOutput {
	return o
}

func (o PushSecretSpecPtrOutput) Elem() PushSecretSpecOutput {
	return o.ApplyT(func(v *PushSecretSpec) PushSecretSpec {
		if v != nil {
			return *v
		}
		var ret PushSecretSpec
		return ret
	}).(PushSecretSpecOutput)
}

// Secret Data that should be pushed to providers
func (o PushSecretSpecPtrOutput) Data() PushSecretSpecDataArrayOutput {
	return o.ApplyT(func(v *PushSecretSpec) []PushSecretSpecData {
		if v == nil {
			return nil
		}
		return v.Data
	}).(PushSecretSpecDataArrayOutput)
}

// Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".
func (o PushSecretSpecPtrOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpec) *string {
		if v == nil {
			return nil
		}
		return v.DeletionPolicy
	}).(pulumi.StringPtrOutput)
}

// The Interval to which External Secrets will try to push a secret definition
func (o PushSecretSpecPtrOutput) RefreshInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpec) *string {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.StringPtrOutput)
}

func (o PushSecretSpecPtrOutput) SecretStoreRefs() PushSecretSpecSecretStoreRefsArrayOutput {
	return o.ApplyT(func(v *PushSecretSpec) []PushSecretSpecSecretStoreRefs {
		if v == nil {
			return nil
		}
		return v.SecretStoreRefs
	}).(PushSecretSpecSecretStoreRefsArrayOutput)
}

// The Secret Selector (k8s source) for the Push Secret
func (o PushSecretSpecPtrOutput) Selector() PushSecretSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PushSecretSpec) *PushSecretSpecSelector {
		if v == nil {
			return nil
		}
		return &v.Selector
	}).(PushSecretSpecSelectorPtrOutput)
}

// Template defines a blueprint for the created Secret resource.
func (o PushSecretSpecPtrOutput) Template() PushSecretSpecTemplatePtrOutput {
	return o.ApplyT(func(v *PushSecretSpec) *PushSecretSpecTemplate {
		if v == nil {
			return nil
		}
		return v.Template
	}).(PushSecretSpecTemplatePtrOutput)
}

// UpdatePolicy to handle Secrets in the provider. Possible Values: "Replace/IfNotExists". Defaults to "Replace".
func (o PushSecretSpecPtrOutput) UpdatePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpec) *string {
		if v == nil {
			return nil
		}
		return v.UpdatePolicy
	}).(pulumi.StringPtrOutput)
}

type PushSecretSpecData struct {
	// Used to define a conversion Strategy for the secret keys
	ConversionStrategy *string `pulumi:"conversionStrategy"`
	// Match a given Secret Key to be pushed to the provider.
	Match PushSecretSpecDataMatch `pulumi:"match"`
	// Metadata is metadata attached to the secret.
	// The structure of metadata is provider specific, please look it up in the provider documentation.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// Defaults sets the appropriate defaults for PushSecretSpecData
func (val *PushSecretSpecData) Defaults() *PushSecretSpecData {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		conversionStrategy_ := "None"
		tmp.ConversionStrategy = &conversionStrategy_
	}
	return &tmp
}

// PushSecretSpecDataInput is an input type that accepts PushSecretSpecDataArgs and PushSecretSpecDataOutput values.
// You can construct a concrete instance of `PushSecretSpecDataInput` via:
//
//	PushSecretSpecDataArgs{...}
type PushSecretSpecDataInput interface {
	pulumi.Input

	ToPushSecretSpecDataOutput() PushSecretSpecDataOutput
	ToPushSecretSpecDataOutputWithContext(context.Context) PushSecretSpecDataOutput
}

type PushSecretSpecDataArgs struct {
	// Used to define a conversion Strategy for the secret keys
	ConversionStrategy pulumi.StringPtrInput `pulumi:"conversionStrategy"`
	// Match a given Secret Key to be pushed to the provider.
	Match PushSecretSpecDataMatchInput `pulumi:"match"`
	// Metadata is metadata attached to the secret.
	// The structure of metadata is provider specific, please look it up in the provider documentation.
	Metadata pulumi.MapInput `pulumi:"metadata"`
}

// Defaults sets the appropriate defaults for PushSecretSpecDataArgs
func (val *PushSecretSpecDataArgs) Defaults() *PushSecretSpecDataArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		tmp.ConversionStrategy = pulumi.StringPtr("None")
	}
	return &tmp
}
func (PushSecretSpecDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecData)(nil)).Elem()
}

func (i PushSecretSpecDataArgs) ToPushSecretSpecDataOutput() PushSecretSpecDataOutput {
	return i.ToPushSecretSpecDataOutputWithContext(context.Background())
}

func (i PushSecretSpecDataArgs) ToPushSecretSpecDataOutputWithContext(ctx context.Context) PushSecretSpecDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecDataOutput)
}

// PushSecretSpecDataArrayInput is an input type that accepts PushSecretSpecDataArray and PushSecretSpecDataArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecDataArrayInput` via:
//
//	PushSecretSpecDataArray{ PushSecretSpecDataArgs{...} }
type PushSecretSpecDataArrayInput interface {
	pulumi.Input

	ToPushSecretSpecDataArrayOutput() PushSecretSpecDataArrayOutput
	ToPushSecretSpecDataArrayOutputWithContext(context.Context) PushSecretSpecDataArrayOutput
}

type PushSecretSpecDataArray []PushSecretSpecDataInput

func (PushSecretSpecDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecData)(nil)).Elem()
}

func (i PushSecretSpecDataArray) ToPushSecretSpecDataArrayOutput() PushSecretSpecDataArrayOutput {
	return i.ToPushSecretSpecDataArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecDataArray) ToPushSecretSpecDataArrayOutputWithContext(ctx context.Context) PushSecretSpecDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecDataArrayOutput)
}

type PushSecretSpecDataOutput struct{ *pulumi.OutputState }

func (PushSecretSpecDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecData)(nil)).Elem()
}

func (o PushSecretSpecDataOutput) ToPushSecretSpecDataOutput() PushSecretSpecDataOutput {
	return o
}

func (o PushSecretSpecDataOutput) ToPushSecretSpecDataOutputWithContext(ctx context.Context) PushSecretSpecDataOutput {
	return o
}

// Used to define a conversion Strategy for the secret keys
func (o PushSecretSpecDataOutput) ConversionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecData) *string { return v.ConversionStrategy }).(pulumi.StringPtrOutput)
}

// Match a given Secret Key to be pushed to the provider.
func (o PushSecretSpecDataOutput) Match() PushSecretSpecDataMatchOutput {
	return o.ApplyT(func(v PushSecretSpecData) PushSecretSpecDataMatch { return v.Match }).(PushSecretSpecDataMatchOutput)
}

// Metadata is metadata attached to the secret.
// The structure of metadata is provider specific, please look it up in the provider documentation.
func (o PushSecretSpecDataOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v PushSecretSpecData) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

type PushSecretSpecDataArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecData)(nil)).Elem()
}

func (o PushSecretSpecDataArrayOutput) ToPushSecretSpecDataArrayOutput() PushSecretSpecDataArrayOutput {
	return o
}

func (o PushSecretSpecDataArrayOutput) ToPushSecretSpecDataArrayOutputWithContext(ctx context.Context) PushSecretSpecDataArrayOutput {
	return o
}

func (o PushSecretSpecDataArrayOutput) Index(i pulumi.IntInput) PushSecretSpecDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecData {
		return vs[0].([]PushSecretSpecData)[vs[1].(int)]
	}).(PushSecretSpecDataOutput)
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretSpecDataMatch struct {
	// Remote Refs to push to providers.
	RemoteRef PushSecretSpecDataMatchRemoteRef `pulumi:"remoteRef"`
	// Secret Key to be pushed
	SecretKey *string `pulumi:"secretKey"`
}

// PushSecretSpecDataMatchInput is an input type that accepts PushSecretSpecDataMatchArgs and PushSecretSpecDataMatchOutput values.
// You can construct a concrete instance of `PushSecretSpecDataMatchInput` via:
//
//	PushSecretSpecDataMatchArgs{...}
type PushSecretSpecDataMatchInput interface {
	pulumi.Input

	ToPushSecretSpecDataMatchOutput() PushSecretSpecDataMatchOutput
	ToPushSecretSpecDataMatchOutputWithContext(context.Context) PushSecretSpecDataMatchOutput
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretSpecDataMatchArgs struct {
	// Remote Refs to push to providers.
	RemoteRef PushSecretSpecDataMatchRemoteRefInput `pulumi:"remoteRef"`
	// Secret Key to be pushed
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (PushSecretSpecDataMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecDataMatch)(nil)).Elem()
}

func (i PushSecretSpecDataMatchArgs) ToPushSecretSpecDataMatchOutput() PushSecretSpecDataMatchOutput {
	return i.ToPushSecretSpecDataMatchOutputWithContext(context.Background())
}

func (i PushSecretSpecDataMatchArgs) ToPushSecretSpecDataMatchOutputWithContext(ctx context.Context) PushSecretSpecDataMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecDataMatchOutput)
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretSpecDataMatchOutput struct{ *pulumi.OutputState }

func (PushSecretSpecDataMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecDataMatch)(nil)).Elem()
}

func (o PushSecretSpecDataMatchOutput) ToPushSecretSpecDataMatchOutput() PushSecretSpecDataMatchOutput {
	return o
}

func (o PushSecretSpecDataMatchOutput) ToPushSecretSpecDataMatchOutputWithContext(ctx context.Context) PushSecretSpecDataMatchOutput {
	return o
}

// Remote Refs to push to providers.
func (o PushSecretSpecDataMatchOutput) RemoteRef() PushSecretSpecDataMatchRemoteRefOutput {
	return o.ApplyT(func(v PushSecretSpecDataMatch) PushSecretSpecDataMatchRemoteRef { return v.RemoteRef }).(PushSecretSpecDataMatchRemoteRefOutput)
}

// Secret Key to be pushed
func (o PushSecretSpecDataMatchOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecDataMatch) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Remote Refs to push to providers.
type PushSecretSpecDataMatchRemoteRef struct {
	// Name of the property in the resulting secret
	Property *string `pulumi:"property"`
	// Name of the resulting provider secret.
	RemoteKey string `pulumi:"remoteKey"`
}

// PushSecretSpecDataMatchRemoteRefInput is an input type that accepts PushSecretSpecDataMatchRemoteRefArgs and PushSecretSpecDataMatchRemoteRefOutput values.
// You can construct a concrete instance of `PushSecretSpecDataMatchRemoteRefInput` via:
//
//	PushSecretSpecDataMatchRemoteRefArgs{...}
type PushSecretSpecDataMatchRemoteRefInput interface {
	pulumi.Input

	ToPushSecretSpecDataMatchRemoteRefOutput() PushSecretSpecDataMatchRemoteRefOutput
	ToPushSecretSpecDataMatchRemoteRefOutputWithContext(context.Context) PushSecretSpecDataMatchRemoteRefOutput
}

// Remote Refs to push to providers.
type PushSecretSpecDataMatchRemoteRefArgs struct {
	// Name of the property in the resulting secret
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Name of the resulting provider secret.
	RemoteKey pulumi.StringInput `pulumi:"remoteKey"`
}

func (PushSecretSpecDataMatchRemoteRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecDataMatchRemoteRef)(nil)).Elem()
}

func (i PushSecretSpecDataMatchRemoteRefArgs) ToPushSecretSpecDataMatchRemoteRefOutput() PushSecretSpecDataMatchRemoteRefOutput {
	return i.ToPushSecretSpecDataMatchRemoteRefOutputWithContext(context.Background())
}

func (i PushSecretSpecDataMatchRemoteRefArgs) ToPushSecretSpecDataMatchRemoteRefOutputWithContext(ctx context.Context) PushSecretSpecDataMatchRemoteRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecDataMatchRemoteRefOutput)
}

// Remote Refs to push to providers.
type PushSecretSpecDataMatchRemoteRefOutput struct{ *pulumi.OutputState }

func (PushSecretSpecDataMatchRemoteRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecDataMatchRemoteRef)(nil)).Elem()
}

func (o PushSecretSpecDataMatchRemoteRefOutput) ToPushSecretSpecDataMatchRemoteRefOutput() PushSecretSpecDataMatchRemoteRefOutput {
	return o
}

func (o PushSecretSpecDataMatchRemoteRefOutput) ToPushSecretSpecDataMatchRemoteRefOutputWithContext(ctx context.Context) PushSecretSpecDataMatchRemoteRefOutput {
	return o
}

// Name of the property in the resulting secret
func (o PushSecretSpecDataMatchRemoteRefOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecDataMatchRemoteRef) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Name of the resulting provider secret.
func (o PushSecretSpecDataMatchRemoteRefOutput) RemoteKey() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecDataMatchRemoteRef) string { return v.RemoteKey }).(pulumi.StringOutput)
}

type PushSecretSpecSecretStoreRefs struct {
	// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
	// Defaults to `SecretStore`
	Kind *string `pulumi:"kind"`
	// Optionally, sync to secret stores with label selector
	LabelSelector *PushSecretSpecSecretStoreRefsLabelSelector `pulumi:"labelSelector"`
	// Optionally, sync to the SecretStore of the given name
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PushSecretSpecSecretStoreRefs
func (val *PushSecretSpecSecretStoreRefs) Defaults() *PushSecretSpecSecretStoreRefs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Kind == nil {
		kind_ := "SecretStore"
		tmp.Kind = &kind_
	}
	return &tmp
}

// PushSecretSpecSecretStoreRefsInput is an input type that accepts PushSecretSpecSecretStoreRefsArgs and PushSecretSpecSecretStoreRefsOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsInput` via:
//
//	PushSecretSpecSecretStoreRefsArgs{...}
type PushSecretSpecSecretStoreRefsInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsOutput() PushSecretSpecSecretStoreRefsOutput
	ToPushSecretSpecSecretStoreRefsOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsOutput
}

type PushSecretSpecSecretStoreRefsArgs struct {
	// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
	// Defaults to `SecretStore`
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Optionally, sync to secret stores with label selector
	LabelSelector PushSecretSpecSecretStoreRefsLabelSelectorPtrInput `pulumi:"labelSelector"`
	// Optionally, sync to the SecretStore of the given name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PushSecretSpecSecretStoreRefsArgs
func (val *PushSecretSpecSecretStoreRefsArgs) Defaults() *PushSecretSpecSecretStoreRefsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Kind == nil {
		tmp.Kind = pulumi.StringPtr("SecretStore")
	}
	return &tmp
}
func (PushSecretSpecSecretStoreRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefs)(nil)).Elem()
}

func (i PushSecretSpecSecretStoreRefsArgs) ToPushSecretSpecSecretStoreRefsOutput() PushSecretSpecSecretStoreRefsOutput {
	return i.ToPushSecretSpecSecretStoreRefsOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsArgs) ToPushSecretSpecSecretStoreRefsOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsOutput)
}

// PushSecretSpecSecretStoreRefsArrayInput is an input type that accepts PushSecretSpecSecretStoreRefsArray and PushSecretSpecSecretStoreRefsArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsArrayInput` via:
//
//	PushSecretSpecSecretStoreRefsArray{ PushSecretSpecSecretStoreRefsArgs{...} }
type PushSecretSpecSecretStoreRefsArrayInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsArrayOutput() PushSecretSpecSecretStoreRefsArrayOutput
	ToPushSecretSpecSecretStoreRefsArrayOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsArrayOutput
}

type PushSecretSpecSecretStoreRefsArray []PushSecretSpecSecretStoreRefsInput

func (PushSecretSpecSecretStoreRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecSecretStoreRefs)(nil)).Elem()
}

func (i PushSecretSpecSecretStoreRefsArray) ToPushSecretSpecSecretStoreRefsArrayOutput() PushSecretSpecSecretStoreRefsArrayOutput {
	return i.ToPushSecretSpecSecretStoreRefsArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsArray) ToPushSecretSpecSecretStoreRefsArrayOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsArrayOutput)
}

type PushSecretSpecSecretStoreRefsOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefs)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsOutput) ToPushSecretSpecSecretStoreRefsOutput() PushSecretSpecSecretStoreRefsOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsOutput) ToPushSecretSpecSecretStoreRefsOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsOutput {
	return o
}

// Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
// Defaults to `SecretStore`
func (o PushSecretSpecSecretStoreRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Optionally, sync to secret stores with label selector
func (o PushSecretSpecSecretStoreRefsOutput) LabelSelector() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefs) *PushSecretSpecSecretStoreRefsLabelSelector {
		return v.LabelSelector
	}).(PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput)
}

// Optionally, sync to the SecretStore of the given name
func (o PushSecretSpecSecretStoreRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PushSecretSpecSecretStoreRefsArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecSecretStoreRefs)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsArrayOutput) ToPushSecretSpecSecretStoreRefsArrayOutput() PushSecretSpecSecretStoreRefsArrayOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsArrayOutput) ToPushSecretSpecSecretStoreRefsArrayOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsArrayOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsArrayOutput) Index(i pulumi.IntInput) PushSecretSpecSecretStoreRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecSecretStoreRefs {
		return vs[0].([]PushSecretSpecSecretStoreRefs)[vs[1].(int)]
	}).(PushSecretSpecSecretStoreRefsOutput)
}

// Optionally, sync to secret stores with label selector
type PushSecretSpecSecretStoreRefsLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PushSecretSpecSecretStoreRefsLabelSelectorInput is an input type that accepts PushSecretSpecSecretStoreRefsLabelSelectorArgs and PushSecretSpecSecretStoreRefsLabelSelectorOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsLabelSelectorInput` via:
//
//	PushSecretSpecSecretStoreRefsLabelSelectorArgs{...}
type PushSecretSpecSecretStoreRefsLabelSelectorInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsLabelSelectorOutput() PushSecretSpecSecretStoreRefsLabelSelectorOutput
	ToPushSecretSpecSecretStoreRefsLabelSelectorOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsLabelSelectorOutput
}

// Optionally, sync to secret stores with label selector
type PushSecretSpecSecretStoreRefsLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PushSecretSpecSecretStoreRefsLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelector)(nil)).Elem()
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorOutput() PushSecretSpecSecretStoreRefsLabelSelectorOutput {
	return i.ToPushSecretSpecSecretStoreRefsLabelSelectorOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsLabelSelectorOutput)
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutput() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return i.ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsLabelSelectorOutput).ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(ctx)
}

// PushSecretSpecSecretStoreRefsLabelSelectorPtrInput is an input type that accepts PushSecretSpecSecretStoreRefsLabelSelectorArgs, PushSecretSpecSecretStoreRefsLabelSelectorPtr and PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsLabelSelectorPtrInput` via:
//
//	        PushSecretSpecSecretStoreRefsLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecSecretStoreRefsLabelSelectorPtrInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutput() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput
	ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput
}

type pushSecretSpecSecretStoreRefsLabelSelectorPtrType PushSecretSpecSecretStoreRefsLabelSelectorArgs

func PushSecretSpecSecretStoreRefsLabelSelectorPtr(v *PushSecretSpecSecretStoreRefsLabelSelectorArgs) PushSecretSpecSecretStoreRefsLabelSelectorPtrInput {
	return (*pushSecretSpecSecretStoreRefsLabelSelectorPtrType)(v)
}

func (*pushSecretSpecSecretStoreRefsLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSecretStoreRefsLabelSelector)(nil)).Elem()
}

func (i *pushSecretSpecSecretStoreRefsLabelSelectorPtrType) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutput() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return i.ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecSecretStoreRefsLabelSelectorPtrType) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput)
}

// Optionally, sync to secret stores with label selector
type PushSecretSpecSecretStoreRefsLabelSelectorOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelector)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorOutput() PushSecretSpecSecretStoreRefsLabelSelectorOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutput() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return o.ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecSecretStoreRefsLabelSelector) *PushSecretSpecSecretStoreRefsLabelSelector {
		return &v
	}).(PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) MatchExpressions() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefsLabelSelector) []PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PushSecretSpecSecretStoreRefsLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefsLabelSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSecretStoreRefsLabelSelector)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutput() PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) Elem() PushSecretSpecSecretStoreRefsLabelSelectorOutput {
	return o.ApplyT(func(v *PushSecretSpecSecretStoreRefsLabelSelector) PushSecretSpecSecretStoreRefsLabelSelector {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecSecretStoreRefsLabelSelector
		return ret
	}).(PushSecretSpecSecretStoreRefsLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) MatchExpressions() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PushSecretSpecSecretStoreRefsLabelSelector) []PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PushSecretSpecSecretStoreRefsLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsInput is an input type that accepts PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs and PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsInput` via:
//
//	PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs{...}
type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput
	ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput {
	return i.ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput)
}

// PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayInput is an input type that accepts PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray and PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayInput` via:
//
//	PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray{ PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs{...} }
type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput
	ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput
}

type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray []PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsInput

func (PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return i.ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput() PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput) ToPushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions {
		return vs[0].([]PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type PushSecretSpecSecretStoreRefsLabelSelectorMatchLabels struct {
}

// The Secret Selector (k8s source) for the Push Secret
type PushSecretSpecSelector struct {
	// Select a Secret to Push.
	Secret PushSecretSpecSelectorSecret `pulumi:"secret"`
}

// PushSecretSpecSelectorInput is an input type that accepts PushSecretSpecSelectorArgs and PushSecretSpecSelectorOutput values.
// You can construct a concrete instance of `PushSecretSpecSelectorInput` via:
//
//	PushSecretSpecSelectorArgs{...}
type PushSecretSpecSelectorInput interface {
	pulumi.Input

	ToPushSecretSpecSelectorOutput() PushSecretSpecSelectorOutput
	ToPushSecretSpecSelectorOutputWithContext(context.Context) PushSecretSpecSelectorOutput
}

// The Secret Selector (k8s source) for the Push Secret
type PushSecretSpecSelectorArgs struct {
	// Select a Secret to Push.
	Secret PushSecretSpecSelectorSecretInput `pulumi:"secret"`
}

func (PushSecretSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSelector)(nil)).Elem()
}

func (i PushSecretSpecSelectorArgs) ToPushSecretSpecSelectorOutput() PushSecretSpecSelectorOutput {
	return i.ToPushSecretSpecSelectorOutputWithContext(context.Background())
}

func (i PushSecretSpecSelectorArgs) ToPushSecretSpecSelectorOutputWithContext(ctx context.Context) PushSecretSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorOutput)
}

func (i PushSecretSpecSelectorArgs) ToPushSecretSpecSelectorPtrOutput() PushSecretSpecSelectorPtrOutput {
	return i.ToPushSecretSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecSelectorArgs) ToPushSecretSpecSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorOutput).ToPushSecretSpecSelectorPtrOutputWithContext(ctx)
}

// PushSecretSpecSelectorPtrInput is an input type that accepts PushSecretSpecSelectorArgs, PushSecretSpecSelectorPtr and PushSecretSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecSelectorPtrInput` via:
//
//	        PushSecretSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecSelectorPtrInput interface {
	pulumi.Input

	ToPushSecretSpecSelectorPtrOutput() PushSecretSpecSelectorPtrOutput
	ToPushSecretSpecSelectorPtrOutputWithContext(context.Context) PushSecretSpecSelectorPtrOutput
}

type pushSecretSpecSelectorPtrType PushSecretSpecSelectorArgs

func PushSecretSpecSelectorPtr(v *PushSecretSpecSelectorArgs) PushSecretSpecSelectorPtrInput {
	return (*pushSecretSpecSelectorPtrType)(v)
}

func (*pushSecretSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSelector)(nil)).Elem()
}

func (i *pushSecretSpecSelectorPtrType) ToPushSecretSpecSelectorPtrOutput() PushSecretSpecSelectorPtrOutput {
	return i.ToPushSecretSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecSelectorPtrType) ToPushSecretSpecSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorPtrOutput)
}

// The Secret Selector (k8s source) for the Push Secret
type PushSecretSpecSelectorOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSelector)(nil)).Elem()
}

func (o PushSecretSpecSelectorOutput) ToPushSecretSpecSelectorOutput() PushSecretSpecSelectorOutput {
	return o
}

func (o PushSecretSpecSelectorOutput) ToPushSecretSpecSelectorOutputWithContext(ctx context.Context) PushSecretSpecSelectorOutput {
	return o
}

func (o PushSecretSpecSelectorOutput) ToPushSecretSpecSelectorPtrOutput() PushSecretSpecSelectorPtrOutput {
	return o.ToPushSecretSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecSelectorOutput) ToPushSecretSpecSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecSelector) *PushSecretSpecSelector {
		return &v
	}).(PushSecretSpecSelectorPtrOutput)
}

// Select a Secret to Push.
func (o PushSecretSpecSelectorOutput) Secret() PushSecretSpecSelectorSecretOutput {
	return o.ApplyT(func(v PushSecretSpecSelector) PushSecretSpecSelectorSecret { return v.Secret }).(PushSecretSpecSelectorSecretOutput)
}

type PushSecretSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSelector)(nil)).Elem()
}

func (o PushSecretSpecSelectorPtrOutput) ToPushSecretSpecSelectorPtrOutput() PushSecretSpecSelectorPtrOutput {
	return o
}

func (o PushSecretSpecSelectorPtrOutput) ToPushSecretSpecSelectorPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorPtrOutput {
	return o
}

func (o PushSecretSpecSelectorPtrOutput) Elem() PushSecretSpecSelectorOutput {
	return o.ApplyT(func(v *PushSecretSpecSelector) PushSecretSpecSelector {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecSelector
		return ret
	}).(PushSecretSpecSelectorOutput)
}

// Select a Secret to Push.
func (o PushSecretSpecSelectorPtrOutput) Secret() PushSecretSpecSelectorSecretPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecSelector) *PushSecretSpecSelectorSecret {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(PushSecretSpecSelectorSecretPtrOutput)
}

// Select a Secret to Push.
type PushSecretSpecSelectorSecret struct {
	// Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
	Name string `pulumi:"name"`
}

// PushSecretSpecSelectorSecretInput is an input type that accepts PushSecretSpecSelectorSecretArgs and PushSecretSpecSelectorSecretOutput values.
// You can construct a concrete instance of `PushSecretSpecSelectorSecretInput` via:
//
//	PushSecretSpecSelectorSecretArgs{...}
type PushSecretSpecSelectorSecretInput interface {
	pulumi.Input

	ToPushSecretSpecSelectorSecretOutput() PushSecretSpecSelectorSecretOutput
	ToPushSecretSpecSelectorSecretOutputWithContext(context.Context) PushSecretSpecSelectorSecretOutput
}

// Select a Secret to Push.
type PushSecretSpecSelectorSecretArgs struct {
	// Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PushSecretSpecSelectorSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSelectorSecret)(nil)).Elem()
}

func (i PushSecretSpecSelectorSecretArgs) ToPushSecretSpecSelectorSecretOutput() PushSecretSpecSelectorSecretOutput {
	return i.ToPushSecretSpecSelectorSecretOutputWithContext(context.Background())
}

func (i PushSecretSpecSelectorSecretArgs) ToPushSecretSpecSelectorSecretOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorSecretOutput)
}

func (i PushSecretSpecSelectorSecretArgs) ToPushSecretSpecSelectorSecretPtrOutput() PushSecretSpecSelectorSecretPtrOutput {
	return i.ToPushSecretSpecSelectorSecretPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecSelectorSecretArgs) ToPushSecretSpecSelectorSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorSecretOutput).ToPushSecretSpecSelectorSecretPtrOutputWithContext(ctx)
}

// PushSecretSpecSelectorSecretPtrInput is an input type that accepts PushSecretSpecSelectorSecretArgs, PushSecretSpecSelectorSecretPtr and PushSecretSpecSelectorSecretPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecSelectorSecretPtrInput` via:
//
//	        PushSecretSpecSelectorSecretArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecSelectorSecretPtrInput interface {
	pulumi.Input

	ToPushSecretSpecSelectorSecretPtrOutput() PushSecretSpecSelectorSecretPtrOutput
	ToPushSecretSpecSelectorSecretPtrOutputWithContext(context.Context) PushSecretSpecSelectorSecretPtrOutput
}

type pushSecretSpecSelectorSecretPtrType PushSecretSpecSelectorSecretArgs

func PushSecretSpecSelectorSecretPtr(v *PushSecretSpecSelectorSecretArgs) PushSecretSpecSelectorSecretPtrInput {
	return (*pushSecretSpecSelectorSecretPtrType)(v)
}

func (*pushSecretSpecSelectorSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSelectorSecret)(nil)).Elem()
}

func (i *pushSecretSpecSelectorSecretPtrType) ToPushSecretSpecSelectorSecretPtrOutput() PushSecretSpecSelectorSecretPtrOutput {
	return i.ToPushSecretSpecSelectorSecretPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecSelectorSecretPtrType) ToPushSecretSpecSelectorSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecSelectorSecretPtrOutput)
}

// Select a Secret to Push.
type PushSecretSpecSelectorSecretOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSelectorSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecSelectorSecret)(nil)).Elem()
}

func (o PushSecretSpecSelectorSecretOutput) ToPushSecretSpecSelectorSecretOutput() PushSecretSpecSelectorSecretOutput {
	return o
}

func (o PushSecretSpecSelectorSecretOutput) ToPushSecretSpecSelectorSecretOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretOutput {
	return o
}

func (o PushSecretSpecSelectorSecretOutput) ToPushSecretSpecSelectorSecretPtrOutput() PushSecretSpecSelectorSecretPtrOutput {
	return o.ToPushSecretSpecSelectorSecretPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecSelectorSecretOutput) ToPushSecretSpecSelectorSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecSelectorSecret) *PushSecretSpecSelectorSecret {
		return &v
	}).(PushSecretSpecSelectorSecretPtrOutput)
}

// Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
func (o PushSecretSpecSelectorSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecSelectorSecret) string { return v.Name }).(pulumi.StringOutput)
}

type PushSecretSpecSelectorSecretPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecSelectorSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecSelectorSecret)(nil)).Elem()
}

func (o PushSecretSpecSelectorSecretPtrOutput) ToPushSecretSpecSelectorSecretPtrOutput() PushSecretSpecSelectorSecretPtrOutput {
	return o
}

func (o PushSecretSpecSelectorSecretPtrOutput) ToPushSecretSpecSelectorSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecSelectorSecretPtrOutput {
	return o
}

func (o PushSecretSpecSelectorSecretPtrOutput) Elem() PushSecretSpecSelectorSecretOutput {
	return o.ApplyT(func(v *PushSecretSpecSelectorSecret) PushSecretSpecSelectorSecret {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecSelectorSecret
		return ret
	}).(PushSecretSpecSelectorSecretOutput)
}

// Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
func (o PushSecretSpecSelectorSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecSelectorSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Template defines a blueprint for the created Secret resource.
type PushSecretSpecTemplate struct {
	Data map[string]string `pulumi:"data"`
	// EngineVersion specifies the template engine version
	// that should be used to compile/execute the
	// template specified in .data and .templateFrom[].
	EngineVersion *string `pulumi:"engineVersion"`
	MergePolicy   *string `pulumi:"mergePolicy"`
	// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
	Metadata     *PushSecretSpecTemplateMetadata      `pulumi:"metadata"`
	TemplateFrom []PushSecretSpecTemplateTemplateFrom `pulumi:"templateFrom"`
	Type         *string                              `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplate
func (val *PushSecretSpecTemplate) Defaults() *PushSecretSpecTemplate {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EngineVersion == nil {
		engineVersion_ := "v2"
		tmp.EngineVersion = &engineVersion_
	}
	if tmp.MergePolicy == nil {
		mergePolicy_ := "Replace"
		tmp.MergePolicy = &mergePolicy_
	}
	return &tmp
}

// PushSecretSpecTemplateInput is an input type that accepts PushSecretSpecTemplateArgs and PushSecretSpecTemplateOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateInput` via:
//
//	PushSecretSpecTemplateArgs{...}
type PushSecretSpecTemplateInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateOutput() PushSecretSpecTemplateOutput
	ToPushSecretSpecTemplateOutputWithContext(context.Context) PushSecretSpecTemplateOutput
}

// Template defines a blueprint for the created Secret resource.
type PushSecretSpecTemplateArgs struct {
	Data pulumi.StringMapInput `pulumi:"data"`
	// EngineVersion specifies the template engine version
	// that should be used to compile/execute the
	// template specified in .data and .templateFrom[].
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	MergePolicy   pulumi.StringPtrInput `pulumi:"mergePolicy"`
	// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
	Metadata     PushSecretSpecTemplateMetadataPtrInput       `pulumi:"metadata"`
	TemplateFrom PushSecretSpecTemplateTemplateFromArrayInput `pulumi:"templateFrom"`
	Type         pulumi.StringPtrInput                        `pulumi:"type"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateArgs
func (val *PushSecretSpecTemplateArgs) Defaults() *PushSecretSpecTemplateArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.EngineVersion == nil {
		tmp.EngineVersion = pulumi.StringPtr("v2")
	}
	if tmp.MergePolicy == nil {
		tmp.MergePolicy = pulumi.StringPtr("Replace")
	}
	return &tmp
}
func (PushSecretSpecTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplate)(nil)).Elem()
}

func (i PushSecretSpecTemplateArgs) ToPushSecretSpecTemplateOutput() PushSecretSpecTemplateOutput {
	return i.ToPushSecretSpecTemplateOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateArgs) ToPushSecretSpecTemplateOutputWithContext(ctx context.Context) PushSecretSpecTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateOutput)
}

func (i PushSecretSpecTemplateArgs) ToPushSecretSpecTemplatePtrOutput() PushSecretSpecTemplatePtrOutput {
	return i.ToPushSecretSpecTemplatePtrOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateArgs) ToPushSecretSpecTemplatePtrOutputWithContext(ctx context.Context) PushSecretSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateOutput).ToPushSecretSpecTemplatePtrOutputWithContext(ctx)
}

// PushSecretSpecTemplatePtrInput is an input type that accepts PushSecretSpecTemplateArgs, PushSecretSpecTemplatePtr and PushSecretSpecTemplatePtrOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplatePtrInput` via:
//
//	        PushSecretSpecTemplateArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecTemplatePtrInput interface {
	pulumi.Input

	ToPushSecretSpecTemplatePtrOutput() PushSecretSpecTemplatePtrOutput
	ToPushSecretSpecTemplatePtrOutputWithContext(context.Context) PushSecretSpecTemplatePtrOutput
}

type pushSecretSpecTemplatePtrType PushSecretSpecTemplateArgs

func PushSecretSpecTemplatePtr(v *PushSecretSpecTemplateArgs) PushSecretSpecTemplatePtrInput {
	return (*pushSecretSpecTemplatePtrType)(v)
}

func (*pushSecretSpecTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplate)(nil)).Elem()
}

func (i *pushSecretSpecTemplatePtrType) ToPushSecretSpecTemplatePtrOutput() PushSecretSpecTemplatePtrOutput {
	return i.ToPushSecretSpecTemplatePtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecTemplatePtrType) ToPushSecretSpecTemplatePtrOutputWithContext(ctx context.Context) PushSecretSpecTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplatePtrOutput)
}

// Template defines a blueprint for the created Secret resource.
type PushSecretSpecTemplateOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplate)(nil)).Elem()
}

func (o PushSecretSpecTemplateOutput) ToPushSecretSpecTemplateOutput() PushSecretSpecTemplateOutput {
	return o
}

func (o PushSecretSpecTemplateOutput) ToPushSecretSpecTemplateOutputWithContext(ctx context.Context) PushSecretSpecTemplateOutput {
	return o
}

func (o PushSecretSpecTemplateOutput) ToPushSecretSpecTemplatePtrOutput() PushSecretSpecTemplatePtrOutput {
	return o.ToPushSecretSpecTemplatePtrOutputWithContext(context.Background())
}

func (o PushSecretSpecTemplateOutput) ToPushSecretSpecTemplatePtrOutputWithContext(ctx context.Context) PushSecretSpecTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecTemplate) *PushSecretSpecTemplate {
		return &v
	}).(PushSecretSpecTemplatePtrOutput)
}

func (o PushSecretSpecTemplateOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

// EngineVersion specifies the template engine version
// that should be used to compile/execute the
// template specified in .data and .templateFrom[].
func (o PushSecretSpecTemplateOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

func (o PushSecretSpecTemplateOutput) MergePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) *string { return v.MergePolicy }).(pulumi.StringPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
func (o PushSecretSpecTemplateOutput) Metadata() PushSecretSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) *PushSecretSpecTemplateMetadata { return v.Metadata }).(PushSecretSpecTemplateMetadataPtrOutput)
}

func (o PushSecretSpecTemplateOutput) TemplateFrom() PushSecretSpecTemplateTemplateFromArrayOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) []PushSecretSpecTemplateTemplateFrom { return v.TemplateFrom }).(PushSecretSpecTemplateTemplateFromArrayOutput)
}

func (o PushSecretSpecTemplateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplatePtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplate)(nil)).Elem()
}

func (o PushSecretSpecTemplatePtrOutput) ToPushSecretSpecTemplatePtrOutput() PushSecretSpecTemplatePtrOutput {
	return o
}

func (o PushSecretSpecTemplatePtrOutput) ToPushSecretSpecTemplatePtrOutputWithContext(ctx context.Context) PushSecretSpecTemplatePtrOutput {
	return o
}

func (o PushSecretSpecTemplatePtrOutput) Elem() PushSecretSpecTemplateOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) PushSecretSpecTemplate {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecTemplate
		return ret
	}).(PushSecretSpecTemplateOutput)
}

func (o PushSecretSpecTemplatePtrOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) map[string]string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringMapOutput)
}

// EngineVersion specifies the template engine version
// that should be used to compile/execute the
// template specified in .data and .templateFrom[].
func (o PushSecretSpecTemplatePtrOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EngineVersion
	}).(pulumi.StringPtrOutput)
}

func (o PushSecretSpecTemplatePtrOutput) MergePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.MergePolicy
	}).(pulumi.StringPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
func (o PushSecretSpecTemplatePtrOutput) Metadata() PushSecretSpecTemplateMetadataPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) *PushSecretSpecTemplateMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(PushSecretSpecTemplateMetadataPtrOutput)
}

func (o PushSecretSpecTemplatePtrOutput) TemplateFrom() PushSecretSpecTemplateTemplateFromArrayOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) []PushSecretSpecTemplateTemplateFrom {
		if v == nil {
			return nil
		}
		return v.TemplateFrom
	}).(PushSecretSpecTemplateTemplateFromArrayOutput)
}

func (o PushSecretSpecTemplatePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateData struct {
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type PushSecretSpecTemplateMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Labels      map[string]string `pulumi:"labels"`
}

// PushSecretSpecTemplateMetadataInput is an input type that accepts PushSecretSpecTemplateMetadataArgs and PushSecretSpecTemplateMetadataOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateMetadataInput` via:
//
//	PushSecretSpecTemplateMetadataArgs{...}
type PushSecretSpecTemplateMetadataInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateMetadataOutput() PushSecretSpecTemplateMetadataOutput
	ToPushSecretSpecTemplateMetadataOutputWithContext(context.Context) PushSecretSpecTemplateMetadataOutput
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type PushSecretSpecTemplateMetadataArgs struct {
	Annotations pulumi.StringMapInput `pulumi:"annotations"`
	Labels      pulumi.StringMapInput `pulumi:"labels"`
}

func (PushSecretSpecTemplateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateMetadata)(nil)).Elem()
}

func (i PushSecretSpecTemplateMetadataArgs) ToPushSecretSpecTemplateMetadataOutput() PushSecretSpecTemplateMetadataOutput {
	return i.ToPushSecretSpecTemplateMetadataOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateMetadataArgs) ToPushSecretSpecTemplateMetadataOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateMetadataOutput)
}

func (i PushSecretSpecTemplateMetadataArgs) ToPushSecretSpecTemplateMetadataPtrOutput() PushSecretSpecTemplateMetadataPtrOutput {
	return i.ToPushSecretSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateMetadataArgs) ToPushSecretSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateMetadataOutput).ToPushSecretSpecTemplateMetadataPtrOutputWithContext(ctx)
}

// PushSecretSpecTemplateMetadataPtrInput is an input type that accepts PushSecretSpecTemplateMetadataArgs, PushSecretSpecTemplateMetadataPtr and PushSecretSpecTemplateMetadataPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateMetadataPtrInput` via:
//
//	        PushSecretSpecTemplateMetadataArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecTemplateMetadataPtrInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateMetadataPtrOutput() PushSecretSpecTemplateMetadataPtrOutput
	ToPushSecretSpecTemplateMetadataPtrOutputWithContext(context.Context) PushSecretSpecTemplateMetadataPtrOutput
}

type pushSecretSpecTemplateMetadataPtrType PushSecretSpecTemplateMetadataArgs

func PushSecretSpecTemplateMetadataPtr(v *PushSecretSpecTemplateMetadataArgs) PushSecretSpecTemplateMetadataPtrInput {
	return (*pushSecretSpecTemplateMetadataPtrType)(v)
}

func (*pushSecretSpecTemplateMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateMetadata)(nil)).Elem()
}

func (i *pushSecretSpecTemplateMetadataPtrType) ToPushSecretSpecTemplateMetadataPtrOutput() PushSecretSpecTemplateMetadataPtrOutput {
	return i.ToPushSecretSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecTemplateMetadataPtrType) ToPushSecretSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateMetadataPtrOutput)
}

// ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
type PushSecretSpecTemplateMetadataOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateMetadata)(nil)).Elem()
}

func (o PushSecretSpecTemplateMetadataOutput) ToPushSecretSpecTemplateMetadataOutput() PushSecretSpecTemplateMetadataOutput {
	return o
}

func (o PushSecretSpecTemplateMetadataOutput) ToPushSecretSpecTemplateMetadataOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataOutput {
	return o
}

func (o PushSecretSpecTemplateMetadataOutput) ToPushSecretSpecTemplateMetadataPtrOutput() PushSecretSpecTemplateMetadataPtrOutput {
	return o.ToPushSecretSpecTemplateMetadataPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecTemplateMetadataOutput) ToPushSecretSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecTemplateMetadata) *PushSecretSpecTemplateMetadata {
		return &v
	}).(PushSecretSpecTemplateMetadataPtrOutput)
}

func (o PushSecretSpecTemplateMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o PushSecretSpecTemplateMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type PushSecretSpecTemplateMetadataPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateMetadata)(nil)).Elem()
}

func (o PushSecretSpecTemplateMetadataPtrOutput) ToPushSecretSpecTemplateMetadataPtrOutput() PushSecretSpecTemplateMetadataPtrOutput {
	return o
}

func (o PushSecretSpecTemplateMetadataPtrOutput) ToPushSecretSpecTemplateMetadataPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateMetadataPtrOutput {
	return o
}

func (o PushSecretSpecTemplateMetadataPtrOutput) Elem() PushSecretSpecTemplateMetadataOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateMetadata) PushSecretSpecTemplateMetadata {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecTemplateMetadata
		return ret
	}).(PushSecretSpecTemplateMetadataOutput)
}

func (o PushSecretSpecTemplateMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o PushSecretSpecTemplateMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type PushSecretSpecTemplateMetadataAnnotations struct {
}

type PushSecretSpecTemplateMetadataLabels struct {
}

type PushSecretSpecTemplateTemplateFrom struct {
	ConfigMap *PushSecretSpecTemplateTemplateFromConfigMap `pulumi:"configMap"`
	Literal   *string                                      `pulumi:"literal"`
	Secret    *PushSecretSpecTemplateTemplateFromSecret    `pulumi:"secret"`
	Target    *string                                      `pulumi:"target"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFrom
func (val *PushSecretSpecTemplateTemplateFrom) Defaults() *PushSecretSpecTemplateTemplateFrom {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Target == nil {
		target_ := "Data"
		tmp.Target = &target_
	}
	return &tmp
}

// PushSecretSpecTemplateTemplateFromInput is an input type that accepts PushSecretSpecTemplateTemplateFromArgs and PushSecretSpecTemplateTemplateFromOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromInput` via:
//
//	PushSecretSpecTemplateTemplateFromArgs{...}
type PushSecretSpecTemplateTemplateFromInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromOutput() PushSecretSpecTemplateTemplateFromOutput
	ToPushSecretSpecTemplateTemplateFromOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromOutput
}

type PushSecretSpecTemplateTemplateFromArgs struct {
	ConfigMap PushSecretSpecTemplateTemplateFromConfigMapPtrInput `pulumi:"configMap"`
	Literal   pulumi.StringPtrInput                               `pulumi:"literal"`
	Secret    PushSecretSpecTemplateTemplateFromSecretPtrInput    `pulumi:"secret"`
	Target    pulumi.StringPtrInput                               `pulumi:"target"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFromArgs
func (val *PushSecretSpecTemplateTemplateFromArgs) Defaults() *PushSecretSpecTemplateTemplateFromArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Target == nil {
		tmp.Target = pulumi.StringPtr("Data")
	}
	return &tmp
}
func (PushSecretSpecTemplateTemplateFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFrom)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromArgs) ToPushSecretSpecTemplateTemplateFromOutput() PushSecretSpecTemplateTemplateFromOutput {
	return i.ToPushSecretSpecTemplateTemplateFromOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromArgs) ToPushSecretSpecTemplateTemplateFromOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromOutput)
}

// PushSecretSpecTemplateTemplateFromArrayInput is an input type that accepts PushSecretSpecTemplateTemplateFromArray and PushSecretSpecTemplateTemplateFromArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromArrayInput` via:
//
//	PushSecretSpecTemplateTemplateFromArray{ PushSecretSpecTemplateTemplateFromArgs{...} }
type PushSecretSpecTemplateTemplateFromArrayInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromArrayOutput() PushSecretSpecTemplateTemplateFromArrayOutput
	ToPushSecretSpecTemplateTemplateFromArrayOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromArrayOutput
}

type PushSecretSpecTemplateTemplateFromArray []PushSecretSpecTemplateTemplateFromInput

func (PushSecretSpecTemplateTemplateFromArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFrom)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromArray) ToPushSecretSpecTemplateTemplateFromArrayOutput() PushSecretSpecTemplateTemplateFromArrayOutput {
	return i.ToPushSecretSpecTemplateTemplateFromArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromArray) ToPushSecretSpecTemplateTemplateFromArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromArrayOutput)
}

type PushSecretSpecTemplateTemplateFromOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFrom)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromOutput) ToPushSecretSpecTemplateTemplateFromOutput() PushSecretSpecTemplateTemplateFromOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromOutput) ToPushSecretSpecTemplateTemplateFromOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromOutput) ConfigMap() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFrom) *PushSecretSpecTemplateTemplateFromConfigMap {
		return v.ConfigMap
	}).(PushSecretSpecTemplateTemplateFromConfigMapPtrOutput)
}

func (o PushSecretSpecTemplateTemplateFromOutput) Literal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFrom) *string { return v.Literal }).(pulumi.StringPtrOutput)
}

func (o PushSecretSpecTemplateTemplateFromOutput) Secret() PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFrom) *PushSecretSpecTemplateTemplateFromSecret { return v.Secret }).(PushSecretSpecTemplateTemplateFromSecretPtrOutput)
}

func (o PushSecretSpecTemplateTemplateFromOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFrom) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateTemplateFromArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFrom)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromArrayOutput) ToPushSecretSpecTemplateTemplateFromArrayOutput() PushSecretSpecTemplateTemplateFromArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromArrayOutput) ToPushSecretSpecTemplateTemplateFromArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromArrayOutput) Index(i pulumi.IntInput) PushSecretSpecTemplateTemplateFromOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecTemplateTemplateFrom {
		return vs[0].([]PushSecretSpecTemplateTemplateFrom)[vs[1].(int)]
	}).(PushSecretSpecTemplateTemplateFromOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMap struct {
	Items []PushSecretSpecTemplateTemplateFromConfigMapItems `pulumi:"items"`
	Name  string                                             `pulumi:"name"`
}

// PushSecretSpecTemplateTemplateFromConfigMapInput is an input type that accepts PushSecretSpecTemplateTemplateFromConfigMap and PushSecretSpecTemplateTemplateFromConfigMapOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromConfigMapInput` via:
//
//	PushSecretSpecTemplateTemplateFromConfigMap{ "key": PushSecretSpecTemplateTemplateFromConfigArgs{...} }
type PushSecretSpecTemplateTemplateFromConfigMapInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromConfigMapOutput() PushSecretSpecTemplateTemplateFromConfigMapOutput
	ToPushSecretSpecTemplateTemplateFromConfigMapOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromConfigMapOutput
}

type PushSecretSpecTemplateTemplateFromConfigMapArgs struct {
	Items PushSecretSpecTemplateTemplateFromConfigMapItemsArrayInput `pulumi:"items"`
	Name  pulumi.StringInput                                         `pulumi:"name"`
}

func (PushSecretSpecTemplateTemplateFromConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromConfigMapArgs) ToPushSecretSpecTemplateTemplateFromConfigMapOutput() PushSecretSpecTemplateTemplateFromConfigMapOutput {
	return i.ToPushSecretSpecTemplateTemplateFromConfigMapOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromConfigMapArgs) ToPushSecretSpecTemplateTemplateFromConfigMapOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromConfigMapOutput)
}

func (i PushSecretSpecTemplateTemplateFromConfigMapArgs) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutput() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return i.ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromConfigMapArgs) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromConfigMapOutput).ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(ctx)
}

// PushSecretSpecTemplateTemplateFromConfigMapPtrInput is an input type that accepts PushSecretSpecTemplateTemplateFromConfigMapArgs, PushSecretSpecTemplateTemplateFromConfigMapPtr and PushSecretSpecTemplateTemplateFromConfigMapPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromConfigMapPtrInput` via:
//
//	        PushSecretSpecTemplateTemplateFromConfigMapArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecTemplateTemplateFromConfigMapPtrInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutput() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput
	ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromConfigMapPtrOutput
}

type pushSecretSpecTemplateTemplateFromConfigMapPtrType PushSecretSpecTemplateTemplateFromConfigMapArgs

func PushSecretSpecTemplateTemplateFromConfigMapPtr(v *PushSecretSpecTemplateTemplateFromConfigMapArgs) PushSecretSpecTemplateTemplateFromConfigMapPtrInput {
	return (*pushSecretSpecTemplateTemplateFromConfigMapPtrType)(v)
}

func (*pushSecretSpecTemplateTemplateFromConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (i *pushSecretSpecTemplateTemplateFromConfigMapPtrType) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutput() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return i.ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecTemplateTemplateFromConfigMapPtrType) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromConfigMapPtrOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMapOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) ToPushSecretSpecTemplateTemplateFromConfigMapOutput() PushSecretSpecTemplateTemplateFromConfigMapOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) ToPushSecretSpecTemplateTemplateFromConfigMapOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutput() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return o.ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecTemplateTemplateFromConfigMap) *PushSecretSpecTemplateTemplateFromConfigMap {
		return &v
	}).(PushSecretSpecTemplateTemplateFromConfigMapPtrOutput)
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) Items() PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromConfigMap) []PushSecretSpecTemplateTemplateFromConfigMapItems {
		return v.Items
	}).(PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput)
}

func (o PushSecretSpecTemplateTemplateFromConfigMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromConfigMap) string { return v.Name }).(pulumi.StringOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMapPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateTemplateFromConfigMap)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutput() PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) ToPushSecretSpecTemplateTemplateFromConfigMapPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapPtrOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) Elem() PushSecretSpecTemplateTemplateFromConfigMapOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromConfigMap) PushSecretSpecTemplateTemplateFromConfigMap {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecTemplateTemplateFromConfigMap
		return ret
	}).(PushSecretSpecTemplateTemplateFromConfigMapOutput)
}

func (o PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) Items() PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromConfigMap) []PushSecretSpecTemplateTemplateFromConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput)
}

func (o PushSecretSpecTemplateTemplateFromConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromConfigMap) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMapItems struct {
	Key        string  `pulumi:"key"`
	TemplateAs *string `pulumi:"templateAs"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFromConfigMapItems
func (val *PushSecretSpecTemplateTemplateFromConfigMapItems) Defaults() *PushSecretSpecTemplateTemplateFromConfigMapItems {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TemplateAs == nil {
		templateAs_ := "Values"
		tmp.TemplateAs = &templateAs_
	}
	return &tmp
}

// PushSecretSpecTemplateTemplateFromConfigMapItemsInput is an input type that accepts PushSecretSpecTemplateTemplateFromConfigMapItemsArgs and PushSecretSpecTemplateTemplateFromConfigMapItemsOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromConfigMapItemsInput` via:
//
//	PushSecretSpecTemplateTemplateFromConfigMapItemsArgs{...}
type PushSecretSpecTemplateTemplateFromConfigMapItemsInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsOutput
	ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsOutput
}

type PushSecretSpecTemplateTemplateFromConfigMapItemsArgs struct {
	Key        pulumi.StringInput    `pulumi:"key"`
	TemplateAs pulumi.StringPtrInput `pulumi:"templateAs"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFromConfigMapItemsArgs
func (val *PushSecretSpecTemplateTemplateFromConfigMapItemsArgs) Defaults() *PushSecretSpecTemplateTemplateFromConfigMapItemsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TemplateAs == nil {
		tmp.TemplateAs = pulumi.StringPtr("Values")
	}
	return &tmp
}
func (PushSecretSpecTemplateTemplateFromConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromConfigMapItemsArgs) ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsOutput {
	return i.ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromConfigMapItemsArgs) ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromConfigMapItemsOutput)
}

// PushSecretSpecTemplateTemplateFromConfigMapItemsArrayInput is an input type that accepts PushSecretSpecTemplateTemplateFromConfigMapItemsArray and PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromConfigMapItemsArrayInput` via:
//
//	PushSecretSpecTemplateTemplateFromConfigMapItemsArray{ PushSecretSpecTemplateTemplateFromConfigMapItemsArgs{...} }
type PushSecretSpecTemplateTemplateFromConfigMapItemsArrayInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput
	ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput
}

type PushSecretSpecTemplateTemplateFromConfigMapItemsArray []PushSecretSpecTemplateTemplateFromConfigMapItemsInput

func (PushSecretSpecTemplateTemplateFromConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromConfigMapItemsArray) ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return i.ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromConfigMapItemsArray) ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMapItemsOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsOutput) ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsOutput) ToPushSecretSpecTemplateTemplateFromConfigMapItemsOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsOutput) TemplateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromConfigMapItems) *string { return v.TemplateAs }).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFromConfigMapItems)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput) ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput() PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput) ToPushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput) Index(i pulumi.IntInput) PushSecretSpecTemplateTemplateFromConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecTemplateTemplateFromConfigMapItems {
		return vs[0].([]PushSecretSpecTemplateTemplateFromConfigMapItems)[vs[1].(int)]
	}).(PushSecretSpecTemplateTemplateFromConfigMapItemsOutput)
}

type PushSecretSpecTemplateTemplateFromSecret struct {
	Items []PushSecretSpecTemplateTemplateFromSecretItems `pulumi:"items"`
	Name  string                                          `pulumi:"name"`
}

// PushSecretSpecTemplateTemplateFromSecretInput is an input type that accepts PushSecretSpecTemplateTemplateFromSecretArgs and PushSecretSpecTemplateTemplateFromSecretOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromSecretInput` via:
//
//	PushSecretSpecTemplateTemplateFromSecretArgs{...}
type PushSecretSpecTemplateTemplateFromSecretInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromSecretOutput() PushSecretSpecTemplateTemplateFromSecretOutput
	ToPushSecretSpecTemplateTemplateFromSecretOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromSecretOutput
}

type PushSecretSpecTemplateTemplateFromSecretArgs struct {
	Items PushSecretSpecTemplateTemplateFromSecretItemsArrayInput `pulumi:"items"`
	Name  pulumi.StringInput                                      `pulumi:"name"`
}

func (PushSecretSpecTemplateTemplateFromSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecret)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromSecretArgs) ToPushSecretSpecTemplateTemplateFromSecretOutput() PushSecretSpecTemplateTemplateFromSecretOutput {
	return i.ToPushSecretSpecTemplateTemplateFromSecretOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromSecretArgs) ToPushSecretSpecTemplateTemplateFromSecretOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromSecretOutput)
}

func (i PushSecretSpecTemplateTemplateFromSecretArgs) ToPushSecretSpecTemplateTemplateFromSecretPtrOutput() PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return i.ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromSecretArgs) ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromSecretOutput).ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(ctx)
}

// PushSecretSpecTemplateTemplateFromSecretPtrInput is an input type that accepts PushSecretSpecTemplateTemplateFromSecretArgs, PushSecretSpecTemplateTemplateFromSecretPtr and PushSecretSpecTemplateTemplateFromSecretPtrOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromSecretPtrInput` via:
//
//	        PushSecretSpecTemplateTemplateFromSecretArgs{...}
//
//	or:
//
//	        nil
type PushSecretSpecTemplateTemplateFromSecretPtrInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromSecretPtrOutput() PushSecretSpecTemplateTemplateFromSecretPtrOutput
	ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromSecretPtrOutput
}

type pushSecretSpecTemplateTemplateFromSecretPtrType PushSecretSpecTemplateTemplateFromSecretArgs

func PushSecretSpecTemplateTemplateFromSecretPtr(v *PushSecretSpecTemplateTemplateFromSecretArgs) PushSecretSpecTemplateTemplateFromSecretPtrInput {
	return (*pushSecretSpecTemplateTemplateFromSecretPtrType)(v)
}

func (*pushSecretSpecTemplateTemplateFromSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateTemplateFromSecret)(nil)).Elem()
}

func (i *pushSecretSpecTemplateTemplateFromSecretPtrType) ToPushSecretSpecTemplateTemplateFromSecretPtrOutput() PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return i.ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i *pushSecretSpecTemplateTemplateFromSecretPtrType) ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromSecretPtrOutput)
}

type PushSecretSpecTemplateTemplateFromSecretOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecret)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) ToPushSecretSpecTemplateTemplateFromSecretOutput() PushSecretSpecTemplateTemplateFromSecretOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) ToPushSecretSpecTemplateTemplateFromSecretOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) ToPushSecretSpecTemplateTemplateFromSecretPtrOutput() PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return o.ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretSpecTemplateTemplateFromSecret) *PushSecretSpecTemplateTemplateFromSecret {
		return &v
	}).(PushSecretSpecTemplateTemplateFromSecretPtrOutput)
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) Items() PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromSecret) []PushSecretSpecTemplateTemplateFromSecretItems {
		return v.Items
	}).(PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput)
}

func (o PushSecretSpecTemplateTemplateFromSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromSecret) string { return v.Name }).(pulumi.StringOutput)
}

type PushSecretSpecTemplateTemplateFromSecretPtrOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretSpecTemplateTemplateFromSecret)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromSecretPtrOutput) ToPushSecretSpecTemplateTemplateFromSecretPtrOutput() PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretPtrOutput) ToPushSecretSpecTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretPtrOutput) Elem() PushSecretSpecTemplateTemplateFromSecretOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromSecret) PushSecretSpecTemplateTemplateFromSecret {
		if v != nil {
			return *v
		}
		var ret PushSecretSpecTemplateTemplateFromSecret
		return ret
	}).(PushSecretSpecTemplateTemplateFromSecretOutput)
}

func (o PushSecretSpecTemplateTemplateFromSecretPtrOutput) Items() PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromSecret) []PushSecretSpecTemplateTemplateFromSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput)
}

func (o PushSecretSpecTemplateTemplateFromSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretSpecTemplateTemplateFromSecret) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateTemplateFromSecretItems struct {
	Key        string  `pulumi:"key"`
	TemplateAs *string `pulumi:"templateAs"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFromSecretItems
func (val *PushSecretSpecTemplateTemplateFromSecretItems) Defaults() *PushSecretSpecTemplateTemplateFromSecretItems {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TemplateAs == nil {
		templateAs_ := "Values"
		tmp.TemplateAs = &templateAs_
	}
	return &tmp
}

// PushSecretSpecTemplateTemplateFromSecretItemsInput is an input type that accepts PushSecretSpecTemplateTemplateFromSecretItemsArgs and PushSecretSpecTemplateTemplateFromSecretItemsOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromSecretItemsInput` via:
//
//	PushSecretSpecTemplateTemplateFromSecretItemsArgs{...}
type PushSecretSpecTemplateTemplateFromSecretItemsInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromSecretItemsOutput() PushSecretSpecTemplateTemplateFromSecretItemsOutput
	ToPushSecretSpecTemplateTemplateFromSecretItemsOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromSecretItemsOutput
}

type PushSecretSpecTemplateTemplateFromSecretItemsArgs struct {
	Key        pulumi.StringInput    `pulumi:"key"`
	TemplateAs pulumi.StringPtrInput `pulumi:"templateAs"`
}

// Defaults sets the appropriate defaults for PushSecretSpecTemplateTemplateFromSecretItemsArgs
func (val *PushSecretSpecTemplateTemplateFromSecretItemsArgs) Defaults() *PushSecretSpecTemplateTemplateFromSecretItemsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.TemplateAs == nil {
		tmp.TemplateAs = pulumi.StringPtr("Values")
	}
	return &tmp
}
func (PushSecretSpecTemplateTemplateFromSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromSecretItemsArgs) ToPushSecretSpecTemplateTemplateFromSecretItemsOutput() PushSecretSpecTemplateTemplateFromSecretItemsOutput {
	return i.ToPushSecretSpecTemplateTemplateFromSecretItemsOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromSecretItemsArgs) ToPushSecretSpecTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromSecretItemsOutput)
}

// PushSecretSpecTemplateTemplateFromSecretItemsArrayInput is an input type that accepts PushSecretSpecTemplateTemplateFromSecretItemsArray and PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput values.
// You can construct a concrete instance of `PushSecretSpecTemplateTemplateFromSecretItemsArrayInput` via:
//
//	PushSecretSpecTemplateTemplateFromSecretItemsArray{ PushSecretSpecTemplateTemplateFromSecretItemsArgs{...} }
type PushSecretSpecTemplateTemplateFromSecretItemsArrayInput interface {
	pulumi.Input

	ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutput() PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput
	ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Context) PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput
}

type PushSecretSpecTemplateTemplateFromSecretItemsArray []PushSecretSpecTemplateTemplateFromSecretItemsInput

func (PushSecretSpecTemplateTemplateFromSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i PushSecretSpecTemplateTemplateFromSecretItemsArray) ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutput() PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return i.ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Background())
}

func (i PushSecretSpecTemplateTemplateFromSecretItemsArray) ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput)
}

type PushSecretSpecTemplateTemplateFromSecretItemsOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsOutput) ToPushSecretSpecTemplateTemplateFromSecretItemsOutput() PushSecretSpecTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsOutput) ToPushSecretSpecTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsOutput) TemplateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretSpecTemplateTemplateFromSecretItems) *string { return v.TemplateAs }).(pulumi.StringPtrOutput)
}

type PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretSpecTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput) ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutput() PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput) ToPushSecretSpecTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput) Index(i pulumi.IntInput) PushSecretSpecTemplateTemplateFromSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretSpecTemplateTemplateFromSecretItems {
		return vs[0].([]PushSecretSpecTemplateTemplateFromSecretItems)[vs[1].(int)]
	}).(PushSecretSpecTemplateTemplateFromSecretItemsOutput)
}

// PushSecretStatus indicates the history of the status of PushSecret.
type PushSecretStatus struct {
	Conditions []PushSecretStatusConditions `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime *string `pulumi:"refreshTime"`
	// Synced PushSecrets, including secrets that already exist in provider.
	// Matches secret stores to PushSecretData that was stored to that secret store.
	SyncedPushSecrets map[string]map[string]PushSecretStatusSyncedPushSecrets `pulumi:"syncedPushSecrets"`
	// SyncedResourceVersion keeps track of the last synced version.
	SyncedResourceVersion *string `pulumi:"syncedResourceVersion"`
}

// PushSecretStatusInput is an input type that accepts PushSecretStatusArgs and PushSecretStatusOutput values.
// You can construct a concrete instance of `PushSecretStatusInput` via:
//
//	PushSecretStatusArgs{...}
type PushSecretStatusInput interface {
	pulumi.Input

	ToPushSecretStatusOutput() PushSecretStatusOutput
	ToPushSecretStatusOutputWithContext(context.Context) PushSecretStatusOutput
}

// PushSecretStatus indicates the history of the status of PushSecret.
type PushSecretStatusArgs struct {
	Conditions PushSecretStatusConditionsArrayInput `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime pulumi.StringPtrInput `pulumi:"refreshTime"`
	// Synced PushSecrets, including secrets that already exist in provider.
	// Matches secret stores to PushSecretData that was stored to that secret store.
	SyncedPushSecrets PushSecretStatusSyncedPushSecretsMapMapInput `pulumi:"syncedPushSecrets"`
	// SyncedResourceVersion keeps track of the last synced version.
	SyncedResourceVersion pulumi.StringPtrInput `pulumi:"syncedResourceVersion"`
}

func (PushSecretStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatus)(nil)).Elem()
}

func (i PushSecretStatusArgs) ToPushSecretStatusOutput() PushSecretStatusOutput {
	return i.ToPushSecretStatusOutputWithContext(context.Background())
}

func (i PushSecretStatusArgs) ToPushSecretStatusOutputWithContext(ctx context.Context) PushSecretStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusOutput)
}

func (i PushSecretStatusArgs) ToPushSecretStatusPtrOutput() PushSecretStatusPtrOutput {
	return i.ToPushSecretStatusPtrOutputWithContext(context.Background())
}

func (i PushSecretStatusArgs) ToPushSecretStatusPtrOutputWithContext(ctx context.Context) PushSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusOutput).ToPushSecretStatusPtrOutputWithContext(ctx)
}

// PushSecretStatusPtrInput is an input type that accepts PushSecretStatusArgs, PushSecretStatusPtr and PushSecretStatusPtrOutput values.
// You can construct a concrete instance of `PushSecretStatusPtrInput` via:
//
//	        PushSecretStatusArgs{...}
//
//	or:
//
//	        nil
type PushSecretStatusPtrInput interface {
	pulumi.Input

	ToPushSecretStatusPtrOutput() PushSecretStatusPtrOutput
	ToPushSecretStatusPtrOutputWithContext(context.Context) PushSecretStatusPtrOutput
}

type pushSecretStatusPtrType PushSecretStatusArgs

func PushSecretStatusPtr(v *PushSecretStatusArgs) PushSecretStatusPtrInput {
	return (*pushSecretStatusPtrType)(v)
}

func (*pushSecretStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretStatus)(nil)).Elem()
}

func (i *pushSecretStatusPtrType) ToPushSecretStatusPtrOutput() PushSecretStatusPtrOutput {
	return i.ToPushSecretStatusPtrOutputWithContext(context.Background())
}

func (i *pushSecretStatusPtrType) ToPushSecretStatusPtrOutputWithContext(ctx context.Context) PushSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusPtrOutput)
}

// PushSecretStatus indicates the history of the status of PushSecret.
type PushSecretStatusOutput struct{ *pulumi.OutputState }

func (PushSecretStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatus)(nil)).Elem()
}

func (o PushSecretStatusOutput) ToPushSecretStatusOutput() PushSecretStatusOutput {
	return o
}

func (o PushSecretStatusOutput) ToPushSecretStatusOutputWithContext(ctx context.Context) PushSecretStatusOutput {
	return o
}

func (o PushSecretStatusOutput) ToPushSecretStatusPtrOutput() PushSecretStatusPtrOutput {
	return o.ToPushSecretStatusPtrOutputWithContext(context.Background())
}

func (o PushSecretStatusOutput) ToPushSecretStatusPtrOutputWithContext(ctx context.Context) PushSecretStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PushSecretStatus) *PushSecretStatus {
		return &v
	}).(PushSecretStatusPtrOutput)
}

func (o PushSecretStatusOutput) Conditions() PushSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v PushSecretStatus) []PushSecretStatusConditions { return v.Conditions }).(PushSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o PushSecretStatusOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatus) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

// Synced PushSecrets, including secrets that already exist in provider.
// Matches secret stores to PushSecretData that was stored to that secret store.
func (o PushSecretStatusOutput) SyncedPushSecrets() PushSecretStatusSyncedPushSecretsMapMapOutput {
	return o.ApplyT(func(v PushSecretStatus) map[string]map[string]PushSecretStatusSyncedPushSecrets {
		return v.SyncedPushSecrets
	}).(PushSecretStatusSyncedPushSecretsMapMapOutput)
}

// SyncedResourceVersion keeps track of the last synced version.
func (o PushSecretStatusOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatus) *string { return v.SyncedResourceVersion }).(pulumi.StringPtrOutput)
}

type PushSecretStatusPtrOutput struct{ *pulumi.OutputState }

func (PushSecretStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretStatus)(nil)).Elem()
}

func (o PushSecretStatusPtrOutput) ToPushSecretStatusPtrOutput() PushSecretStatusPtrOutput {
	return o
}

func (o PushSecretStatusPtrOutput) ToPushSecretStatusPtrOutputWithContext(ctx context.Context) PushSecretStatusPtrOutput {
	return o
}

func (o PushSecretStatusPtrOutput) Elem() PushSecretStatusOutput {
	return o.ApplyT(func(v *PushSecretStatus) PushSecretStatus {
		if v != nil {
			return *v
		}
		var ret PushSecretStatus
		return ret
	}).(PushSecretStatusOutput)
}

func (o PushSecretStatusPtrOutput) Conditions() PushSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v *PushSecretStatus) []PushSecretStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(PushSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o PushSecretStatusPtrOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.StringPtrOutput)
}

// Synced PushSecrets, including secrets that already exist in provider.
// Matches secret stores to PushSecretData that was stored to that secret store.
func (o PushSecretStatusPtrOutput) SyncedPushSecrets() PushSecretStatusSyncedPushSecretsMapMapOutput {
	return o.ApplyT(func(v *PushSecretStatus) map[string]map[string]PushSecretStatusSyncedPushSecrets {
		if v == nil {
			return nil
		}
		return v.SyncedPushSecrets
	}).(PushSecretStatusSyncedPushSecretsMapMapOutput)
}

// SyncedResourceVersion keeps track of the last synced version.
func (o PushSecretStatusPtrOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.SyncedResourceVersion
	}).(pulumi.StringPtrOutput)
}

// PushSecretStatusCondition indicates the status of the PushSecret.
type PushSecretStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             string  `pulumi:"status"`
	// PushSecretConditionType indicates the condition of the PushSecret.
	Type string `pulumi:"type"`
}

// PushSecretStatusConditionsInput is an input type that accepts PushSecretStatusConditionsArgs and PushSecretStatusConditionsOutput values.
// You can construct a concrete instance of `PushSecretStatusConditionsInput` via:
//
//	PushSecretStatusConditionsArgs{...}
type PushSecretStatusConditionsInput interface {
	pulumi.Input

	ToPushSecretStatusConditionsOutput() PushSecretStatusConditionsOutput
	ToPushSecretStatusConditionsOutputWithContext(context.Context) PushSecretStatusConditionsOutput
}

// PushSecretStatusCondition indicates the status of the PushSecret.
type PushSecretStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringInput    `pulumi:"status"`
	// PushSecretConditionType indicates the condition of the PushSecret.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PushSecretStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusConditions)(nil)).Elem()
}

func (i PushSecretStatusConditionsArgs) ToPushSecretStatusConditionsOutput() PushSecretStatusConditionsOutput {
	return i.ToPushSecretStatusConditionsOutputWithContext(context.Background())
}

func (i PushSecretStatusConditionsArgs) ToPushSecretStatusConditionsOutputWithContext(ctx context.Context) PushSecretStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusConditionsOutput)
}

// PushSecretStatusConditionsArrayInput is an input type that accepts PushSecretStatusConditionsArray and PushSecretStatusConditionsArrayOutput values.
// You can construct a concrete instance of `PushSecretStatusConditionsArrayInput` via:
//
//	PushSecretStatusConditionsArray{ PushSecretStatusConditionsArgs{...} }
type PushSecretStatusConditionsArrayInput interface {
	pulumi.Input

	ToPushSecretStatusConditionsArrayOutput() PushSecretStatusConditionsArrayOutput
	ToPushSecretStatusConditionsArrayOutputWithContext(context.Context) PushSecretStatusConditionsArrayOutput
}

type PushSecretStatusConditionsArray []PushSecretStatusConditionsInput

func (PushSecretStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretStatusConditions)(nil)).Elem()
}

func (i PushSecretStatusConditionsArray) ToPushSecretStatusConditionsArrayOutput() PushSecretStatusConditionsArrayOutput {
	return i.ToPushSecretStatusConditionsArrayOutputWithContext(context.Background())
}

func (i PushSecretStatusConditionsArray) ToPushSecretStatusConditionsArrayOutputWithContext(ctx context.Context) PushSecretStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusConditionsArrayOutput)
}

// PushSecretStatusCondition indicates the status of the PushSecret.
type PushSecretStatusConditionsOutput struct{ *pulumi.OutputState }

func (PushSecretStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusConditions)(nil)).Elem()
}

func (o PushSecretStatusConditionsOutput) ToPushSecretStatusConditionsOutput() PushSecretStatusConditionsOutput {
	return o
}

func (o PushSecretStatusConditionsOutput) ToPushSecretStatusConditionsOutputWithContext(ctx context.Context) PushSecretStatusConditionsOutput {
	return o
}

func (o PushSecretStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o PushSecretStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o PushSecretStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o PushSecretStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// PushSecretConditionType indicates the condition of the PushSecret.
func (o PushSecretStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type PushSecretStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (PushSecretStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PushSecretStatusConditions)(nil)).Elem()
}

func (o PushSecretStatusConditionsArrayOutput) ToPushSecretStatusConditionsArrayOutput() PushSecretStatusConditionsArrayOutput {
	return o
}

func (o PushSecretStatusConditionsArrayOutput) ToPushSecretStatusConditionsArrayOutputWithContext(ctx context.Context) PushSecretStatusConditionsArrayOutput {
	return o
}

func (o PushSecretStatusConditionsArrayOutput) Index(i pulumi.IntInput) PushSecretStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PushSecretStatusConditions {
		return vs[0].([]PushSecretStatusConditions)[vs[1].(int)]
	}).(PushSecretStatusConditionsOutput)
}

type PushSecretStatusSyncedPushSecrets struct {
	// Used to define a conversion Strategy for the secret keys
	ConversionStrategy *string `pulumi:"conversionStrategy"`
	// Match a given Secret Key to be pushed to the provider.
	Match PushSecretStatusSyncedPushSecretsMatch `pulumi:"match"`
	// Metadata is metadata attached to the secret.
	// The structure of metadata is provider specific, please look it up in the provider documentation.
	Metadata map[string]interface{} `pulumi:"metadata"`
}

// Defaults sets the appropriate defaults for PushSecretStatusSyncedPushSecrets
func (val *PushSecretStatusSyncedPushSecrets) Defaults() *PushSecretStatusSyncedPushSecrets {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		conversionStrategy_ := "None"
		tmp.ConversionStrategy = &conversionStrategy_
	}
	return &tmp
}

// PushSecretStatusSyncedPushSecretsInput is an input type that accepts PushSecretStatusSyncedPushSecretsArgs and PushSecretStatusSyncedPushSecretsOutput values.
// You can construct a concrete instance of `PushSecretStatusSyncedPushSecretsInput` via:
//
//	PushSecretStatusSyncedPushSecretsArgs{...}
type PushSecretStatusSyncedPushSecretsInput interface {
	pulumi.Input

	ToPushSecretStatusSyncedPushSecretsOutput() PushSecretStatusSyncedPushSecretsOutput
	ToPushSecretStatusSyncedPushSecretsOutputWithContext(context.Context) PushSecretStatusSyncedPushSecretsOutput
}

type PushSecretStatusSyncedPushSecretsArgs struct {
	// Used to define a conversion Strategy for the secret keys
	ConversionStrategy pulumi.StringPtrInput `pulumi:"conversionStrategy"`
	// Match a given Secret Key to be pushed to the provider.
	Match PushSecretStatusSyncedPushSecretsMatchInput `pulumi:"match"`
	// Metadata is metadata attached to the secret.
	// The structure of metadata is provider specific, please look it up in the provider documentation.
	Metadata pulumi.MapInput `pulumi:"metadata"`
}

// Defaults sets the appropriate defaults for PushSecretStatusSyncedPushSecretsArgs
func (val *PushSecretStatusSyncedPushSecretsArgs) Defaults() *PushSecretStatusSyncedPushSecretsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ConversionStrategy == nil {
		tmp.ConversionStrategy = pulumi.StringPtr("None")
	}
	return &tmp
}
func (PushSecretStatusSyncedPushSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (i PushSecretStatusSyncedPushSecretsArgs) ToPushSecretStatusSyncedPushSecretsOutput() PushSecretStatusSyncedPushSecretsOutput {
	return i.ToPushSecretStatusSyncedPushSecretsOutputWithContext(context.Background())
}

func (i PushSecretStatusSyncedPushSecretsArgs) ToPushSecretStatusSyncedPushSecretsOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusSyncedPushSecretsOutput)
}

// PushSecretStatusSyncedPushSecretsMapInput is an input type that accepts PushSecretStatusSyncedPushSecretsMap and PushSecretStatusSyncedPushSecretsMapOutput values.
// You can construct a concrete instance of `PushSecretStatusSyncedPushSecretsMapInput` via:
//
//	PushSecretStatusSyncedPushSecretsMap{ "key": PushSecretStatusSyncedPushSecretsArgs{...} }
type PushSecretStatusSyncedPushSecretsMapInput interface {
	pulumi.Input

	ToPushSecretStatusSyncedPushSecretsMapOutput() PushSecretStatusSyncedPushSecretsMapOutput
	ToPushSecretStatusSyncedPushSecretsMapOutputWithContext(context.Context) PushSecretStatusSyncedPushSecretsMapOutput
}

type PushSecretStatusSyncedPushSecretsMap map[string]PushSecretStatusSyncedPushSecretsInput

func (PushSecretStatusSyncedPushSecretsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (i PushSecretStatusSyncedPushSecretsMap) ToPushSecretStatusSyncedPushSecretsMapOutput() PushSecretStatusSyncedPushSecretsMapOutput {
	return i.ToPushSecretStatusSyncedPushSecretsMapOutputWithContext(context.Background())
}

func (i PushSecretStatusSyncedPushSecretsMap) ToPushSecretStatusSyncedPushSecretsMapOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusSyncedPushSecretsMapOutput)
}

type PushSecretStatusSyncedPushSecretsOutput struct{ *pulumi.OutputState }

func (PushSecretStatusSyncedPushSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (o PushSecretStatusSyncedPushSecretsOutput) ToPushSecretStatusSyncedPushSecretsOutput() PushSecretStatusSyncedPushSecretsOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsOutput) ToPushSecretStatusSyncedPushSecretsOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsOutput {
	return o
}

// Used to define a conversion Strategy for the secret keys
func (o PushSecretStatusSyncedPushSecretsOutput) ConversionStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecrets) *string { return v.ConversionStrategy }).(pulumi.StringPtrOutput)
}

// Match a given Secret Key to be pushed to the provider.
func (o PushSecretStatusSyncedPushSecretsOutput) Match() PushSecretStatusSyncedPushSecretsMatchOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecrets) PushSecretStatusSyncedPushSecretsMatch { return v.Match }).(PushSecretStatusSyncedPushSecretsMatchOutput)
}

// Metadata is metadata attached to the secret.
// The structure of metadata is provider specific, please look it up in the provider documentation.
func (o PushSecretStatusSyncedPushSecretsOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecrets) map[string]interface{} { return v.Metadata }).(pulumi.MapOutput)
}

type PushSecretStatusSyncedPushSecretsMapOutput struct{ *pulumi.OutputState }

func (PushSecretStatusSyncedPushSecretsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (o PushSecretStatusSyncedPushSecretsMapOutput) ToPushSecretStatusSyncedPushSecretsMapOutput() PushSecretStatusSyncedPushSecretsMapOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMapOutput) ToPushSecretStatusSyncedPushSecretsMapOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMapOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMapOutput) MapIndex(k pulumi.StringInput) PushSecretStatusSyncedPushSecretsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PushSecretStatusSyncedPushSecrets {
		return vs[0].(map[string]PushSecretStatusSyncedPushSecrets)[vs[1].(string)]
	}).(PushSecretStatusSyncedPushSecretsOutput)
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretStatusSyncedPushSecretsMatch struct {
	// Remote Refs to push to providers.
	RemoteRef PushSecretStatusSyncedPushSecretsMatchRemoteRef `pulumi:"remoteRef"`
	// Secret Key to be pushed
	SecretKey *string `pulumi:"secretKey"`
}

// PushSecretStatusSyncedPushSecretsMatchInput is an input type that accepts PushSecretStatusSyncedPushSecretsMatchArgs and PushSecretStatusSyncedPushSecretsMatchOutput values.
// You can construct a concrete instance of `PushSecretStatusSyncedPushSecretsMatchInput` via:
//
//	PushSecretStatusSyncedPushSecretsMatchArgs{...}
type PushSecretStatusSyncedPushSecretsMatchInput interface {
	pulumi.Input

	ToPushSecretStatusSyncedPushSecretsMatchOutput() PushSecretStatusSyncedPushSecretsMatchOutput
	ToPushSecretStatusSyncedPushSecretsMatchOutputWithContext(context.Context) PushSecretStatusSyncedPushSecretsMatchOutput
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretStatusSyncedPushSecretsMatchArgs struct {
	// Remote Refs to push to providers.
	RemoteRef PushSecretStatusSyncedPushSecretsMatchRemoteRefInput `pulumi:"remoteRef"`
	// Secret Key to be pushed
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (PushSecretStatusSyncedPushSecretsMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatch)(nil)).Elem()
}

func (i PushSecretStatusSyncedPushSecretsMatchArgs) ToPushSecretStatusSyncedPushSecretsMatchOutput() PushSecretStatusSyncedPushSecretsMatchOutput {
	return i.ToPushSecretStatusSyncedPushSecretsMatchOutputWithContext(context.Background())
}

func (i PushSecretStatusSyncedPushSecretsMatchArgs) ToPushSecretStatusSyncedPushSecretsMatchOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusSyncedPushSecretsMatchOutput)
}

// Match a given Secret Key to be pushed to the provider.
type PushSecretStatusSyncedPushSecretsMatchOutput struct{ *pulumi.OutputState }

func (PushSecretStatusSyncedPushSecretsMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatch)(nil)).Elem()
}

func (o PushSecretStatusSyncedPushSecretsMatchOutput) ToPushSecretStatusSyncedPushSecretsMatchOutput() PushSecretStatusSyncedPushSecretsMatchOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMatchOutput) ToPushSecretStatusSyncedPushSecretsMatchOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMatchOutput {
	return o
}

// Remote Refs to push to providers.
func (o PushSecretStatusSyncedPushSecretsMatchOutput) RemoteRef() PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecretsMatch) PushSecretStatusSyncedPushSecretsMatchRemoteRef {
		return v.RemoteRef
	}).(PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput)
}

// Secret Key to be pushed
func (o PushSecretStatusSyncedPushSecretsMatchOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecretsMatch) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Remote Refs to push to providers.
type PushSecretStatusSyncedPushSecretsMatchRemoteRef struct {
	// Name of the property in the resulting secret
	Property *string `pulumi:"property"`
	// Name of the resulting provider secret.
	RemoteKey string `pulumi:"remoteKey"`
}

// PushSecretStatusSyncedPushSecretsMatchRemoteRefInput is an input type that accepts PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs and PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput values.
// You can construct a concrete instance of `PushSecretStatusSyncedPushSecretsMatchRemoteRefInput` via:
//
//	PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs{...}
type PushSecretStatusSyncedPushSecretsMatchRemoteRefInput interface {
	pulumi.Input

	ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutput() PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput
	ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutputWithContext(context.Context) PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput
}

// Remote Refs to push to providers.
type PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs struct {
	// Name of the property in the resulting secret
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Name of the resulting provider secret.
	RemoteKey pulumi.StringInput `pulumi:"remoteKey"`
}

func (PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatchRemoteRef)(nil)).Elem()
}

func (i PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs) ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutput() PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput {
	return i.ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutputWithContext(context.Background())
}

func (i PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs) ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput)
}

// Remote Refs to push to providers.
type PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput struct{ *pulumi.OutputState }

func (PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatchRemoteRef)(nil)).Elem()
}

func (o PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput) ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutput() PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput) ToPushSecretStatusSyncedPushSecretsMatchRemoteRefOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput {
	return o
}

// Name of the property in the resulting secret
func (o PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecretsMatchRemoteRef) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Name of the resulting provider secret.
func (o PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput) RemoteKey() pulumi.StringOutput {
	return o.ApplyT(func(v PushSecretStatusSyncedPushSecretsMatchRemoteRef) string { return v.RemoteKey }).(pulumi.StringOutput)
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStoreType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SecretStoreSpec defines the desired state of SecretStore.
	Spec *SecretStoreSpec `pulumi:"spec"`
	// SecretStoreStatus defines the observed state of the SecretStore.
	Status *SecretStoreStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for SecretStoreType
func (val *SecretStoreType) Defaults() *SecretStoreType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type SecretStoreMetadata struct {
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpec struct {
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller *string `pulumi:"controller"`
	// Used to configure the provider. Only one provider may be set
	Provider SecretStoreSpecProvider `pulumi:"provider"`
	// Used to configure http retries if failed
	RetrySettings *SecretStoreSpecRetrySettings `pulumi:"retrySettings"`
}

// Defaults sets the appropriate defaults for SecretStoreSpec
func (val *SecretStoreSpec) Defaults() *SecretStoreSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Provider = *tmp.Provider.Defaults()

	return &tmp
}

// SecretStoreSpecInput is an input type that accepts SecretStoreSpecArgs and SecretStoreSpecOutput values.
// You can construct a concrete instance of `SecretStoreSpecInput` via:
//
//	SecretStoreSpecArgs{...}
type SecretStoreSpecInput interface {
	pulumi.Input

	ToSecretStoreSpecOutput() SecretStoreSpecOutput
	ToSecretStoreSpecOutputWithContext(context.Context) SecretStoreSpecOutput
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecArgs struct {
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller pulumi.StringPtrInput `pulumi:"controller"`
	// Used to configure the provider. Only one provider may be set
	Provider SecretStoreSpecProviderInput `pulumi:"provider"`
	// Used to configure http retries if failed
	RetrySettings SecretStoreSpecRetrySettingsPtrInput `pulumi:"retrySettings"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecArgs
func (val *SecretStoreSpecArgs) Defaults() *SecretStoreSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (SecretStoreSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpec)(nil)).Elem()
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecOutput() SecretStoreSpecOutput {
	return i.ToSecretStoreSpecOutputWithContext(context.Background())
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecOutputWithContext(ctx context.Context) SecretStoreSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecOutput)
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return i.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecOutput).ToSecretStoreSpecPtrOutputWithContext(ctx)
}

// SecretStoreSpecPtrInput is an input type that accepts SecretStoreSpecArgs, SecretStoreSpecPtr and SecretStoreSpecPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecPtrInput` via:
//
//	        SecretStoreSpecArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput
	ToSecretStoreSpecPtrOutputWithContext(context.Context) SecretStoreSpecPtrOutput
}

type secretStoreSpecPtrType SecretStoreSpecArgs

func SecretStoreSpecPtr(v *SecretStoreSpecArgs) SecretStoreSpecPtrInput {
	return (*secretStoreSpecPtrType)(v)
}

func (*secretStoreSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpec)(nil)).Elem()
}

func (i *secretStoreSpecPtrType) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return i.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecPtrType) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecPtrOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpec)(nil)).Elem()
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecOutput() SecretStoreSpecOutput {
	return o
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecOutputWithContext(ctx context.Context) SecretStoreSpecOutput {
	return o
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return o.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpec) *SecretStoreSpec {
		return &v
	}).(SecretStoreSpecPtrOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *string { return v.Controller }).(pulumi.StringPtrOutput)
}

// Used to configure the provider. Only one provider may be set
func (o SecretStoreSpecOutput) Provider() SecretStoreSpecProviderOutput {
	return o.ApplyT(func(v SecretStoreSpec) SecretStoreSpecProvider { return v.Provider }).(SecretStoreSpecProviderOutput)
}

// Used to configure http retries if failed
func (o SecretStoreSpecOutput) RetrySettings() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *SecretStoreSpecRetrySettings { return v.RetrySettings }).(SecretStoreSpecRetrySettingsPtrOutput)
}

type SecretStoreSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpec)(nil)).Elem()
}

func (o SecretStoreSpecPtrOutput) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return o
}

func (o SecretStoreSpecPtrOutput) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return o
}

func (o SecretStoreSpecPtrOutput) Elem() SecretStoreSpecOutput {
	return o.ApplyT(func(v *SecretStoreSpec) SecretStoreSpec {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpec
		return ret
	}).(SecretStoreSpecOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecPtrOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *string {
		if v == nil {
			return nil
		}
		return v.Controller
	}).(pulumi.StringPtrOutput)
}

// Used to configure the provider. Only one provider may be set
func (o SecretStoreSpecPtrOutput) Provider() SecretStoreSpecProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *SecretStoreSpecProvider {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(SecretStoreSpecProviderPtrOutput)
}

// Used to configure http retries if failed
func (o SecretStoreSpecPtrOutput) RetrySettings() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *SecretStoreSpecRetrySettings {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(SecretStoreSpecRetrySettingsPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProvider struct {
	// Akeyless configures this store to sync secrets using Akeyless Vault provider
	Akeyless *SecretStoreSpecProviderAkeyless `pulumi:"akeyless"`
	// Alibaba configures this store to sync secrets using Alibaba Cloud provider
	Alibaba *SecretStoreSpecProviderAlibaba `pulumi:"alibaba"`
	// AWS configures this store to sync secrets using AWS Secret Manager provider
	Aws *SecretStoreSpecProviderAws `pulumi:"aws"`
	// AzureKV configures this store to sync secrets using Azure Key Vault provider
	Azurekv *SecretStoreSpecProviderAzurekv `pulumi:"azurekv"`
	// Fake configures a store with static key/value pairs
	Fake *SecretStoreSpecProviderFake `pulumi:"fake"`
	// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
	Gcpsm *SecretStoreSpecProviderGcpsm `pulumi:"gcpsm"`
	// GitLab configures this store to sync secrets using GitLab Variables provider
	Gitlab *SecretStoreSpecProviderGitlab `pulumi:"gitlab"`
	// IBM configures this store to sync secrets using IBM Cloud provider
	Ibm *SecretStoreSpecProviderIbm `pulumi:"ibm"`
	// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
	Kubernetes *SecretStoreSpecProviderKubernetes `pulumi:"kubernetes"`
	// Oracle configures this store to sync secrets using Oracle Vault provider
	Oracle *SecretStoreSpecProviderOracle `pulumi:"oracle"`
	// Configures a store to sync secrets with a Password Depot instance.
	Passworddepot *SecretStoreSpecProviderPassworddepot `pulumi:"passworddepot"`
	// Vault configures this store to sync secrets using Hashi provider
	Vault *SecretStoreSpecProviderVault `pulumi:"vault"`
	// Webhook configures this store to sync secrets using a generic templated webhook
	Webhook *SecretStoreSpecProviderWebhook `pulumi:"webhook"`
	// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
	Yandexlockbox *SecretStoreSpecProviderYandexlockbox `pulumi:"yandexlockbox"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProvider
func (val *SecretStoreSpecProvider) Defaults() *SecretStoreSpecProvider {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Azurekv = tmp.Azurekv.Defaults()

	tmp.Kubernetes = tmp.Kubernetes.Defaults()

	tmp.Vault = tmp.Vault.Defaults()

	return &tmp
}

// SecretStoreSpecProviderInput is an input type that accepts SecretStoreSpecProviderArgs and SecretStoreSpecProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInput` via:
//
//	SecretStoreSpecProviderArgs{...}
type SecretStoreSpecProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput
	ToSecretStoreSpecProviderOutputWithContext(context.Context) SecretStoreSpecProviderOutput
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderArgs struct {
	// Akeyless configures this store to sync secrets using Akeyless Vault provider
	Akeyless SecretStoreSpecProviderAkeylessPtrInput `pulumi:"akeyless"`
	// Alibaba configures this store to sync secrets using Alibaba Cloud provider
	Alibaba SecretStoreSpecProviderAlibabaPtrInput `pulumi:"alibaba"`
	// AWS configures this store to sync secrets using AWS Secret Manager provider
	Aws SecretStoreSpecProviderAwsPtrInput `pulumi:"aws"`
	// AzureKV configures this store to sync secrets using Azure Key Vault provider
	Azurekv SecretStoreSpecProviderAzurekvPtrInput `pulumi:"azurekv"`
	// Fake configures a store with static key/value pairs
	Fake SecretStoreSpecProviderFakePtrInput `pulumi:"fake"`
	// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
	Gcpsm SecretStoreSpecProviderGcpsmPtrInput `pulumi:"gcpsm"`
	// GitLab configures this store to sync secrets using GitLab Variables provider
	Gitlab SecretStoreSpecProviderGitlabPtrInput `pulumi:"gitlab"`
	// IBM configures this store to sync secrets using IBM Cloud provider
	Ibm SecretStoreSpecProviderIbmPtrInput `pulumi:"ibm"`
	// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
	Kubernetes SecretStoreSpecProviderKubernetesPtrInput `pulumi:"kubernetes"`
	// Oracle configures this store to sync secrets using Oracle Vault provider
	Oracle SecretStoreSpecProviderOraclePtrInput `pulumi:"oracle"`
	// Configures a store to sync secrets with a Password Depot instance.
	Passworddepot SecretStoreSpecProviderPassworddepotPtrInput `pulumi:"passworddepot"`
	// Vault configures this store to sync secrets using Hashi provider
	Vault SecretStoreSpecProviderVaultPtrInput `pulumi:"vault"`
	// Webhook configures this store to sync secrets using a generic templated webhook
	Webhook SecretStoreSpecProviderWebhookPtrInput `pulumi:"webhook"`
	// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
	Yandexlockbox SecretStoreSpecProviderYandexlockboxPtrInput `pulumi:"yandexlockbox"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderArgs
func (val *SecretStoreSpecProviderArgs) Defaults() *SecretStoreSpecProviderArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (SecretStoreSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput {
	return i.ToSecretStoreSpecProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOutput)
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return i.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOutput).ToSecretStoreSpecProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPtrInput is an input type that accepts SecretStoreSpecProviderArgs, SecretStoreSpecProviderPtr and SecretStoreSpecProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPtrInput` via:
//
//	        SecretStoreSpecProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput
	ToSecretStoreSpecProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderPtrOutput
}

type secretStoreSpecProviderPtrType SecretStoreSpecProviderArgs

func SecretStoreSpecProviderPtr(v *SecretStoreSpecProviderArgs) SecretStoreSpecProviderPtrInput {
	return (*secretStoreSpecProviderPtrType)(v)
}

func (*secretStoreSpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderPtrType) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return i.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPtrType) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput {
	return o
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderOutput {
	return o
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return o.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProvider) *SecretStoreSpecProvider {
		return &v
	}).(SecretStoreSpecProviderPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
func (o SecretStoreSpecProviderOutput) Akeyless() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAkeyless { return v.Akeyless }).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
func (o SecretStoreSpecProviderOutput) Alibaba() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAlibaba { return v.Alibaba }).(SecretStoreSpecProviderAlibabaPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
func (o SecretStoreSpecProviderOutput) Aws() SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAws { return v.Aws }).(SecretStoreSpecProviderAwsPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
func (o SecretStoreSpecProviderOutput) Azurekv() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAzurekv { return v.Azurekv }).(SecretStoreSpecProviderAzurekvPtrOutput)
}

// Fake configures a store with static key/value pairs
func (o SecretStoreSpecProviderOutput) Fake() SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderFake { return v.Fake }).(SecretStoreSpecProviderFakePtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
func (o SecretStoreSpecProviderOutput) Gcpsm() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderGcpsm { return v.Gcpsm }).(SecretStoreSpecProviderGcpsmPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
func (o SecretStoreSpecProviderOutput) Gitlab() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderGitlab { return v.Gitlab }).(SecretStoreSpecProviderGitlabPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
func (o SecretStoreSpecProviderOutput) Ibm() SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderIbm { return v.Ibm }).(SecretStoreSpecProviderIbmPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
func (o SecretStoreSpecProviderOutput) Kubernetes() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderKubernetes { return v.Kubernetes }).(SecretStoreSpecProviderKubernetesPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
func (o SecretStoreSpecProviderOutput) Oracle() SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderOracle { return v.Oracle }).(SecretStoreSpecProviderOraclePtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
func (o SecretStoreSpecProviderOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderPassworddepot { return v.Passworddepot }).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
func (o SecretStoreSpecProviderOutput) Vault() SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderVault { return v.Vault }).(SecretStoreSpecProviderVaultPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
func (o SecretStoreSpecProviderOutput) Webhook() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderWebhook { return v.Webhook }).(SecretStoreSpecProviderWebhookPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
func (o SecretStoreSpecProviderOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderYandexlockbox { return v.Yandexlockbox }).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

type SecretStoreSpecProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderPtrOutput) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPtrOutput) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPtrOutput) Elem() SecretStoreSpecProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) SecretStoreSpecProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProvider
		return ret
	}).(SecretStoreSpecProviderOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
func (o SecretStoreSpecProviderPtrOutput) Akeyless() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAkeyless {
		if v == nil {
			return nil
		}
		return v.Akeyless
	}).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
func (o SecretStoreSpecProviderPtrOutput) Alibaba() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAlibaba {
		if v == nil {
			return nil
		}
		return v.Alibaba
	}).(SecretStoreSpecProviderAlibabaPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
func (o SecretStoreSpecProviderPtrOutput) Aws() SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAws {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(SecretStoreSpecProviderAwsPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
func (o SecretStoreSpecProviderPtrOutput) Azurekv() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAzurekv {
		if v == nil {
			return nil
		}
		return v.Azurekv
	}).(SecretStoreSpecProviderAzurekvPtrOutput)
}

// Fake configures a store with static key/value pairs
func (o SecretStoreSpecProviderPtrOutput) Fake() SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderFake {
		if v == nil {
			return nil
		}
		return v.Fake
	}).(SecretStoreSpecProviderFakePtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
func (o SecretStoreSpecProviderPtrOutput) Gcpsm() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderGcpsm {
		if v == nil {
			return nil
		}
		return v.Gcpsm
	}).(SecretStoreSpecProviderGcpsmPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
func (o SecretStoreSpecProviderPtrOutput) Gitlab() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderGitlab {
		if v == nil {
			return nil
		}
		return v.Gitlab
	}).(SecretStoreSpecProviderGitlabPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
func (o SecretStoreSpecProviderPtrOutput) Ibm() SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderIbm {
		if v == nil {
			return nil
		}
		return v.Ibm
	}).(SecretStoreSpecProviderIbmPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
func (o SecretStoreSpecProviderPtrOutput) Kubernetes() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderKubernetesPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
func (o SecretStoreSpecProviderPtrOutput) Oracle() SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderOracle {
		if v == nil {
			return nil
		}
		return v.Oracle
	}).(SecretStoreSpecProviderOraclePtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
func (o SecretStoreSpecProviderPtrOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderPassworddepot {
		if v == nil {
			return nil
		}
		return v.Passworddepot
	}).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
func (o SecretStoreSpecProviderPtrOutput) Vault() SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(SecretStoreSpecProviderVaultPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
func (o SecretStoreSpecProviderPtrOutput) Webhook() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderWebhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(SecretStoreSpecProviderWebhookPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
func (o SecretStoreSpecProviderPtrOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderYandexlockbox {
		if v == nil {
			return nil
		}
		return v.Yandexlockbox
	}).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeyless struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL string `pulumi:"akeylessGWApiURL"`
	// Auth configures how the operator authenticates with Akeyless.
	AuthSecretRef SecretStoreSpecProviderAkeylessAuthSecretRef `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
	CaProvider *SecretStoreSpecProviderAkeylessCaProvider `pulumi:"caProvider"`
}

// SecretStoreSpecProviderAkeylessInput is an input type that accepts SecretStoreSpecProviderAkeylessArgs and SecretStoreSpecProviderAkeylessOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessInput` via:
//
//	SecretStoreSpecProviderAkeylessArgs{...}
type SecretStoreSpecProviderAkeylessInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput
	ToSecretStoreSpecProviderAkeylessOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessOutput
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessArgs struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL pulumi.StringInput `pulumi:"akeylessGWApiURL"`
	// Auth configures how the operator authenticates with Akeyless.
	AuthSecretRef SecretStoreSpecProviderAkeylessAuthSecretRefInput `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
	CaProvider SecretStoreSpecProviderAkeylessCaProviderPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderAkeylessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput {
	return i.ToSecretStoreSpecProviderAkeylessOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessOutput)
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessOutput).ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessArgs, SecretStoreSpecProviderAkeylessPtr and SecretStoreSpecProviderAkeylessPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput
	ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessPtrOutput
}

type secretStoreSpecProviderAkeylessPtrType SecretStoreSpecProviderAkeylessArgs

func SecretStoreSpecProviderAkeylessPtr(v *SecretStoreSpecProviderAkeylessArgs) SecretStoreSpecProviderAkeylessPtrInput {
	return (*secretStoreSpecProviderAkeylessPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessPtrType) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessPtrType) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeyless {
		return &v
	}).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessOutput) AkeylessGWApiURL() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) string { return v.AkeylessGWApiURL }).(pulumi.StringOutput)
}

// Auth configures how the operator authenticates with Akeyless.
func (o SecretStoreSpecProviderAkeylessOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) SecretStoreSpecProviderAkeylessAuthSecretRef {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
func (o SecretStoreSpecProviderAkeylessOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

type SecretStoreSpecProviderAkeylessPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) Elem() SecretStoreSpecProviderAkeylessOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) SecretStoreSpecProviderAkeyless {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeyless
		return ret
	}).(SecretStoreSpecProviderAkeylessOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessPtrOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return &v.AkeylessGWApiURL
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
func (o SecretStoreSpecProviderAkeylessPtrOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
func (o SecretStoreSpecProviderAkeylessPtrOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRef struct {
	// Kubernetes authenticates with Akeyless by passing the ServiceAccount
	// token stored in the named Secret resource.
	KubernetesAuth *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth `pulumi:"kubernetesAuth"`
	// Reference to a Secret that contains the details
	// to authenticate with Akeyless.
	SecretRef *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefArgs struct {
	// Kubernetes authenticates with Akeyless by passing the ServiceAccount
	// token stored in the named Secret resource.
	KubernetesAuth SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput `pulumi:"kubernetesAuth"`
	// Reference to a Secret that contains the details
	// to authenticate with Akeyless.
	SecretRef SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v == nil {
			return nil
		}
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID string `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName string `pulumi:"k8sConfName"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Akeyless. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Akeyless. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID pulumi.StringInput `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName pulumi.StringInput `pulumi:"k8sConfName"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Akeyless. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Akeyless. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) AccessID() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) string { return v.AccessID }).(pulumi.StringOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) K8sConfName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) string { return v.K8sConfName }).(pulumi.StringOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AccessID
	}).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return &v.K8sConfName
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef struct {
	// The SecretAccessID is used for authentication
	AccessID *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId `pulumi:"accessID"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessType *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType `pulumi:"accessType"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessTypeParam *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam `pulumi:"accessTypeParam"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs struct {
	// The SecretAccessID is used for authentication
	AccessID SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput `pulumi:"accessID"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput `pulumi:"accessType"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	AccessTypeParam SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput `pulumi:"accessTypeParam"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// The SecretAccessID is used for authentication
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

// The SecretAccessID is used for authentication
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v == nil {
			return nil
		}
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v == nil {
			return nil
		}
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// SecretStoreSpecProviderAkeylessCaProviderInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderArgs and SecretStoreSpecProviderAkeylessCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderInput` via:
//
//	SecretStoreSpecProviderAkeylessCaProviderArgs{...}
type SecretStoreSpecProviderAkeylessCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput
	ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecretStoreSpecProviderAkeylessCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderOutput)
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderOutput).ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderArgs, SecretStoreSpecProviderAkeylessCaProviderPtr and SecretStoreSpecProviderAkeylessCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput
	ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput
}

type secretStoreSpecProviderAkeylessCaProviderPtrType SecretStoreSpecProviderAkeylessCaProviderArgs

func SecretStoreSpecProviderAkeylessCaProviderPtr(v *SecretStoreSpecProviderAkeylessCaProviderArgs) SecretStoreSpecProviderAkeylessCaProviderPtrInput {
	return (*secretStoreSpecProviderAkeylessCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessCaProviderPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessCaProviderPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessCaProvider) *SecretStoreSpecProviderAkeylessCaProvider {
		return &v
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderAkeylessCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Elem() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) SecretStoreSpecProviderAkeylessCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessCaProvider
		return ret
	}).(SecretStoreSpecProviderAkeylessCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibaba struct {
	// AlibabaAuth contains a secretRef for credentials.
	Auth SecretStoreSpecProviderAlibabaAuth `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID string `pulumi:"regionID"`
}

// SecretStoreSpecProviderAlibabaInput is an input type that accepts SecretStoreSpecProviderAlibabaArgs and SecretStoreSpecProviderAlibabaOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaInput` via:
//
//	SecretStoreSpecProviderAlibabaArgs{...}
type SecretStoreSpecProviderAlibabaInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput
	ToSecretStoreSpecProviderAlibabaOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaOutput
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaArgs struct {
	// AlibabaAuth contains a secretRef for credentials.
	Auth SecretStoreSpecProviderAlibabaAuthInput `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID pulumi.StringInput `pulumi:"regionID"`
}

func (SecretStoreSpecProviderAlibabaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput {
	return i.ToSecretStoreSpecProviderAlibabaOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaOutput)
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaOutput).ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaArgs, SecretStoreSpecProviderAlibabaPtr and SecretStoreSpecProviderAlibabaPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput
	ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaPtrOutput
}

type secretStoreSpecProviderAlibabaPtrType SecretStoreSpecProviderAlibabaArgs

func SecretStoreSpecProviderAlibabaPtr(v *SecretStoreSpecProviderAlibabaArgs) SecretStoreSpecProviderAlibabaPtrInput {
	return (*secretStoreSpecProviderAlibabaPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaPtrType) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaPtrType) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibaba) *SecretStoreSpecProviderAlibaba {
		return &v
	}).(SecretStoreSpecProviderAlibabaPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
func (o SecretStoreSpecProviderAlibabaOutput) Auth() SecretStoreSpecProviderAlibabaAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibaba) SecretStoreSpecProviderAlibabaAuth { return v.Auth }).(SecretStoreSpecProviderAlibabaAuthOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaOutput) RegionID() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibaba) string { return v.RegionID }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderAlibabaPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) Elem() SecretStoreSpecProviderAlibabaOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) SecretStoreSpecProviderAlibaba {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibaba
		return ret
	}).(SecretStoreSpecProviderAlibabaOutput)
}

// AlibabaAuth contains a secretRef for credentials.
func (o SecretStoreSpecProviderAlibabaPtrOutput) Auth() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) *SecretStoreSpecProviderAlibabaAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaPtrOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) *string {
		if v == nil {
			return nil
		}
		return &v.RegionID
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuth struct {
	// Authenticate against Alibaba using RRSA.
	Rrsa *SecretStoreSpecProviderAlibabaAuthRrsa `pulumi:"rrsa"`
	// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
	SecretRef *SecretStoreSpecProviderAlibabaAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAlibabaAuthInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthArgs and SecretStoreSpecProviderAlibabaAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthArgs{...}
type SecretStoreSpecProviderAlibabaAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput
	ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthOutput
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthArgs struct {
	// Authenticate against Alibaba using RRSA.
	Rrsa SecretStoreSpecProviderAlibabaAuthRrsaPtrInput `pulumi:"rrsa"`
	// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
	SecretRef SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthOutput).ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthArgs, SecretStoreSpecProviderAlibabaAuthPtr and SecretStoreSpecProviderAlibabaAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput
}

type secretStoreSpecProviderAlibabaAuthPtrType SecretStoreSpecProviderAlibabaAuthArgs

func SecretStoreSpecProviderAlibabaAuthPtr(v *SecretStoreSpecProviderAlibabaAuthArgs) SecretStoreSpecProviderAlibabaAuthPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthPtrType) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthPtrType) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuth {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Authenticate against Alibaba using RRSA.
func (o SecretStoreSpecProviderAlibabaAuthOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthRrsa { return v.Rrsa }).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
func (o SecretStoreSpecProviderAlibabaAuthOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) SecretStoreSpecProviderAlibabaAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuth
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthOutput)
}

// Authenticate against Alibaba using RRSA.
func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthRrsa {
		if v == nil {
			return nil
		}
		return v.Rrsa
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsa struct {
	OidcProviderArn   string `pulumi:"oidcProviderArn"`
	OidcTokenFilePath string `pulumi:"oidcTokenFilePath"`
	RoleArn           string `pulumi:"roleArn"`
	SessionName       string `pulumi:"sessionName"`
}

// SecretStoreSpecProviderAlibabaAuthRrsaInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaArgs and SecretStoreSpecProviderAlibabaAuthRrsaOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
type SecretStoreSpecProviderAlibabaAuthRrsaInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaArgs struct {
	OidcProviderArn   pulumi.StringInput `pulumi:"oidcProviderArn"`
	OidcTokenFilePath pulumi.StringInput `pulumi:"oidcTokenFilePath"`
	RoleArn           pulumi.StringInput `pulumi:"roleArn"`
	SessionName       pulumi.StringInput `pulumi:"sessionName"`
}

func (SecretStoreSpecProviderAlibabaAuthRrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaOutput).ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthRrsaPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaArgs, SecretStoreSpecProviderAlibabaAuthRrsaPtr and SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthRrsaPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
}

type secretStoreSpecProviderAlibabaAuthRrsaPtrType SecretStoreSpecProviderAlibabaAuthRrsaArgs

func SecretStoreSpecProviderAlibabaAuthRrsaPtr(v *SecretStoreSpecProviderAlibabaAuthRrsaArgs) SecretStoreSpecProviderAlibabaAuthRrsaPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthRrsaPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthRrsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthRrsa) *SecretStoreSpecProviderAlibabaAuthRrsa {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) string { return v.OidcProviderArn }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcTokenFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) string { return v.OidcTokenFilePath }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) SessionName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) string { return v.SessionName }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) SecretStoreSpecProviderAlibabaAuthRrsa {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthRrsa
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.OidcProviderArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.OidcTokenFilePath
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return &v.SessionName
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRef struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef `pulumi:"accessKeyIDSecretRef"`
	// The AccessKeySecret is used for authentication
	AccessKeySecretSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef `pulumi:"accessKeySecretSecretRef"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefArgs struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput `pulumi:"accessKeyIDSecretRef"`
	// The AccessKeySecret is used for authentication
	AccessKeySecretSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput `pulumi:"accessKeySecretSecretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The AccessKeySecret is used for authentication
func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

// The AccessKeyID is used for authentication
func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeySecret is used for authentication
func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v == nil {
			return nil
		}
		return &v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAws struct {
	// Auth defines the information necessary to authenticate against AWS
	// if not set aws sdk will infer credentials from your environment
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	Auth *SecretStoreSpecProviderAwsAuth `pulumi:"auth"`
	// AWS Region to be used for the provider
	Region string `pulumi:"region"`
	// Role is a Role ARN which the SecretManager provider will assume
	Role *string `pulumi:"role"`
	// Service defines which service should be used to fetch the secrets
	Service string `pulumi:"service"`
}

// SecretStoreSpecProviderAwsInput is an input type that accepts SecretStoreSpecProviderAwsArgs and SecretStoreSpecProviderAwsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsInput` via:
//
//	SecretStoreSpecProviderAwsArgs{...}
type SecretStoreSpecProviderAwsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput
	ToSecretStoreSpecProviderAwsOutputWithContext(context.Context) SecretStoreSpecProviderAwsOutput
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsArgs struct {
	// Auth defines the information necessary to authenticate against AWS
	// if not set aws sdk will infer credentials from your environment
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	Auth SecretStoreSpecProviderAwsAuthPtrInput `pulumi:"auth"`
	// AWS Region to be used for the provider
	Region pulumi.StringInput `pulumi:"region"`
	// Role is a Role ARN which the SecretManager provider will assume
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Service defines which service should be used to fetch the secrets
	Service pulumi.StringInput `pulumi:"service"`
}

func (SecretStoreSpecProviderAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAws)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput {
	return i.ToSecretStoreSpecProviderAwsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsOutput)
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsOutput).ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsPtrInput is an input type that accepts SecretStoreSpecProviderAwsArgs, SecretStoreSpecProviderAwsPtr and SecretStoreSpecProviderAwsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsPtrInput` via:
//
//	        SecretStoreSpecProviderAwsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput
	ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsPtrOutput
}

type secretStoreSpecProviderAwsPtrType SecretStoreSpecProviderAwsArgs

func SecretStoreSpecProviderAwsPtr(v *SecretStoreSpecProviderAwsArgs) SecretStoreSpecProviderAwsPtrInput {
	return (*secretStoreSpecProviderAwsPtrType)(v)
}

func (*secretStoreSpecProviderAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAws)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsPtrType) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsPtrType) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAws)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return o.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAws) *SecretStoreSpecProviderAws {
		return &v
	}).(SecretStoreSpecProviderAwsPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o SecretStoreSpecProviderAwsOutput) Auth() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsAuth { return v.Auth }).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) string { return v.Region }).(pulumi.StringOutput)
}

// Role is a Role ARN which the SecretManager provider will assume
func (o SecretStoreSpecProviderAwsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) string { return v.Service }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderAwsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAws)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsPtrOutput) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPtrOutput) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPtrOutput) Elem() SecretStoreSpecProviderAwsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) SecretStoreSpecProviderAws {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAws
		return ret
	}).(SecretStoreSpecProviderAwsOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
func (o SecretStoreSpecProviderAwsPtrOutput) Auth() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the SecretManager provider will assume
func (o SecretStoreSpecProviderAwsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuth struct {
	// Authenticate against AWS using service account tokens.
	Jwt *SecretStoreSpecProviderAwsAuthJwt `pulumi:"jwt"`
	// AWSAuthSecretRef holds secret references for AWS credentials
	// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
	SecretRef *SecretStoreSpecProviderAwsAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAwsAuthInput is an input type that accepts SecretStoreSpecProviderAwsAuthArgs and SecretStoreSpecProviderAwsAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthInput` via:
//
//	SecretStoreSpecProviderAwsAuthArgs{...}
type SecretStoreSpecProviderAwsAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput
	ToSecretStoreSpecProviderAwsAuthOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthOutput
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthArgs struct {
	// Authenticate against AWS using service account tokens.
	Jwt SecretStoreSpecProviderAwsAuthJwtPtrInput `pulumi:"jwt"`
	// AWSAuthSecretRef holds secret references for AWS credentials
	// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
	SecretRef SecretStoreSpecProviderAwsAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAwsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput {
	return i.ToSecretStoreSpecProviderAwsAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthOutput)
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthOutput).ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthArgs, SecretStoreSpecProviderAwsAuthPtr and SecretStoreSpecProviderAwsAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput
	ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthPtrOutput
}

type secretStoreSpecProviderAwsAuthPtrType SecretStoreSpecProviderAwsAuthArgs

func SecretStoreSpecProviderAwsAuthPtr(v *SecretStoreSpecProviderAwsAuthArgs) SecretStoreSpecProviderAwsAuthPtrInput {
	return (*secretStoreSpecProviderAwsAuthPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthPtrType) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthPtrType) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuth {
		return &v
	}).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// Authenticate against AWS using service account tokens.
func (o SecretStoreSpecProviderAwsAuthOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthJwt { return v.Jwt }).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
func (o SecretStoreSpecProviderAwsAuthOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthSecretRef { return v.SecretRef }).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) Elem() SecretStoreSpecProviderAwsAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) SecretStoreSpecProviderAwsAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuth
		return ret
	}).(SecretStoreSpecProviderAwsAuthOutput)
}

// Authenticate against AWS using service account tokens.
func (o SecretStoreSpecProviderAwsAuthPtrOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
func (o SecretStoreSpecProviderAwsAuthPtrOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwt struct {
	// A reference to a ServiceAccount resource.
	ServiceAccountRef *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAwsAuthJwtInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtArgs and SecretStoreSpecProviderAwsAuthJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtArgs{...}
type SecretStoreSpecProviderAwsAuthJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput
	ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtOutput
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtArgs struct {
	// A reference to a ServiceAccount resource.
	ServiceAccountRef SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAwsAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtOutput).ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtArgs, SecretStoreSpecProviderAwsAuthJwtPtr and SecretStoreSpecProviderAwsAuthJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtPtrType SecretStoreSpecProviderAwsAuthJwtArgs

func SecretStoreSpecProviderAwsAuthJwtPtr(v *SecretStoreSpecProviderAwsAuthJwtArgs) SecretStoreSpecProviderAwsAuthJwtPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtPtrType) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtPtrType) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwt {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderAwsAuthJwtOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwt) SecretStoreSpecProviderAwsAuthJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwt
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput).ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs, SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs

func SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwtServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRef struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef `pulumi:"accessKeyIDSecretRef"`
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// SecretStoreSpecProviderAwsAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefArgs struct {
	// The AccessKeyID is used for authentication
	AccessKeyIDSecretRef SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput `pulumi:"accessKeyIDSecretRef"`
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) SecretStoreSpecProviderAwsAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefOutput)
}

// The AccessKeyID is used for authentication
func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekv struct {
	// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
	AuthSecretRef *SecretStoreSpecProviderAzurekvAuthSecretRef `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType *string `pulumi:"authType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId *string `pulumi:"identityId"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef *SecretStoreSpecProviderAzurekvServiceAccountRef `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
	TenantId *string `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl string `pulumi:"vaultUrl"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderAzurekv
func (val *SecretStoreSpecProviderAzurekv) Defaults() *SecretStoreSpecProviderAzurekv {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthType == nil {
		authType_ := "ServicePrincipal"
		tmp.AuthType = &authType_
	}
	return &tmp
}

// SecretStoreSpecProviderAzurekvInput is an input type that accepts SecretStoreSpecProviderAzurekvArgs and SecretStoreSpecProviderAzurekvOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvInput` via:
//
//	SecretStoreSpecProviderAzurekvArgs{...}
type SecretStoreSpecProviderAzurekvInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput
	ToSecretStoreSpecProviderAzurekvOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvOutput
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvArgs struct {
	// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
	AuthSecretRef SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl pulumi.StringInput `pulumi:"vaultUrl"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderAzurekvArgs
func (val *SecretStoreSpecProviderAzurekvArgs) Defaults() *SecretStoreSpecProviderAzurekvArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AuthType == nil {
		tmp.AuthType = pulumi.StringPtr("ServicePrincipal")
	}
	return &tmp
}
func (SecretStoreSpecProviderAzurekvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput {
	return i.ToSecretStoreSpecProviderAzurekvOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvOutput)
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvOutput).ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvArgs, SecretStoreSpecProviderAzurekvPtr and SecretStoreSpecProviderAzurekvPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput
	ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvPtrOutput
}

type secretStoreSpecProviderAzurekvPtrType SecretStoreSpecProviderAzurekvArgs

func SecretStoreSpecProviderAzurekvPtr(v *SecretStoreSpecProviderAzurekvArgs) SecretStoreSpecProviderAzurekvPtrInput {
	return (*secretStoreSpecProviderAzurekvPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvPtrType) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvPtrType) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekv {
		return &v
	}).(SecretStoreSpecProviderAzurekvPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
func (o SecretStoreSpecProviderAzurekvOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
func (o SecretStoreSpecProviderAzurekvOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvOutput) VaultUrl() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) string { return v.VaultUrl }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderAzurekvPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) Elem() SecretStoreSpecProviderAzurekvOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) SecretStoreSpecProviderAzurekv {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekv
		return ret
	}).(SecretStoreSpecProviderAzurekvOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
func (o SecretStoreSpecProviderAzurekvPtrOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
func (o SecretStoreSpecProviderAzurekvPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvPtrOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return &v.VaultUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type SecretStoreSpecProviderAzurekvAuthSecretRef struct {
	// The Azure clientId of the service principle used for authentication.
	ClientId *SecretStoreSpecProviderAzurekvAuthSecretRefClientId `pulumi:"clientId"`
	// The Azure ClientSecret of the service principle used for authentication.
	ClientSecret *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret `pulumi:"clientSecret"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefArgs and SecretStoreSpecProviderAzurekvAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type SecretStoreSpecProviderAzurekvAuthSecretRefArgs struct {
	// The Azure clientId of the service principle used for authentication.
	ClientId SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput `pulumi:"clientId"`
	// The Azure ClientSecret of the service principle used for authentication.
	ClientSecret SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput `pulumi:"clientSecret"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefArgs, SecretStoreSpecProviderAzurekvAuthSecretRefPtr and SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefPtrType SecretStoreSpecProviderAzurekvAuthSecretRefArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefArgs) SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
type SecretStoreSpecProviderAzurekvAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) SecretStoreSpecProviderAzurekvAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

// The Azure clientId of the service principle used for authentication.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
}

// The Azure clientId of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure clientId of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientId
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefArgs and SecretStoreSpecProviderAzurekvServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
type SecretStoreSpecProviderAzurekvServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput).ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefArgs, SecretStoreSpecProviderAzurekvServiceAccountRefPtr and SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAzurekvServiceAccountRefPtrType SecretStoreSpecProviderAzurekvServiceAccountRefArgs

func SecretStoreSpecProviderAzurekvServiceAccountRefPtr(v *SecretStoreSpecProviderAzurekvServiceAccountRefArgs) SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAzurekvServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvServiceAccountRef) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) SecretStoreSpecProviderAzurekvServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFake struct {
	Data []SecretStoreSpecProviderFakeData `pulumi:"data"`
}

// SecretStoreSpecProviderFakeInput is an input type that accepts SecretStoreSpecProviderFakeArgs and SecretStoreSpecProviderFakeOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeInput` via:
//
//	SecretStoreSpecProviderFakeArgs{...}
type SecretStoreSpecProviderFakeInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput
	ToSecretStoreSpecProviderFakeOutputWithContext(context.Context) SecretStoreSpecProviderFakeOutput
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakeArgs struct {
	Data SecretStoreSpecProviderFakeDataArrayInput `pulumi:"data"`
}

func (SecretStoreSpecProviderFakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFake)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput {
	return i.ToSecretStoreSpecProviderFakeOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeOutput)
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return i.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeOutput).ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFakePtrInput is an input type that accepts SecretStoreSpecProviderFakeArgs, SecretStoreSpecProviderFakePtr and SecretStoreSpecProviderFakePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakePtrInput` via:
//
//	        SecretStoreSpecProviderFakeArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFakePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput
	ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Context) SecretStoreSpecProviderFakePtrOutput
}

type secretStoreSpecProviderFakePtrType SecretStoreSpecProviderFakeArgs

func SecretStoreSpecProviderFakePtr(v *SecretStoreSpecProviderFakeArgs) SecretStoreSpecProviderFakePtrInput {
	return (*secretStoreSpecProviderFakePtrType)(v)
}

func (*secretStoreSpecProviderFakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFake)(nil)).Elem()
}

func (i *secretStoreSpecProviderFakePtrType) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return i.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFakePtrType) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakePtrOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakeOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFake)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput {
	return o
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeOutput {
	return o
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return o.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFake) *SecretStoreSpecProviderFake {
		return &v
	}).(SecretStoreSpecProviderFakePtrOutput)
}

func (o SecretStoreSpecProviderFakeOutput) Data() SecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFake) []SecretStoreSpecProviderFakeData { return v.Data }).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFake)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakePtrOutput) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePtrOutput) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePtrOutput) Elem() SecretStoreSpecProviderFakeOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFake) SecretStoreSpecProviderFake {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFake
		return ret
	}).(SecretStoreSpecProviderFakeOutput)
}

func (o SecretStoreSpecProviderFakePtrOutput) Data() SecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFake) []SecretStoreSpecProviderFakeData {
		if v == nil {
			return nil
		}
		return v.Data
	}).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakeData struct {
	Key      string            `pulumi:"key"`
	Value    *string           `pulumi:"value"`
	ValueMap map[string]string `pulumi:"valueMap"`
	Version  *string           `pulumi:"version"`
}

// SecretStoreSpecProviderFakeDataInput is an input type that accepts SecretStoreSpecProviderFakeDataArgs and SecretStoreSpecProviderFakeDataOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataInput` via:
//
//	SecretStoreSpecProviderFakeDataArgs{...}
type SecretStoreSpecProviderFakeDataInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput
	ToSecretStoreSpecProviderFakeDataOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataOutput
}

type SecretStoreSpecProviderFakeDataArgs struct {
	Key      pulumi.StringInput    `pulumi:"key"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
	ValueMap pulumi.StringMapInput `pulumi:"valueMap"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretStoreSpecProviderFakeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataArgs) ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput {
	return i.ToSecretStoreSpecProviderFakeDataOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataArgs) ToSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataOutput)
}

// SecretStoreSpecProviderFakeDataArrayInput is an input type that accepts SecretStoreSpecProviderFakeDataArray and SecretStoreSpecProviderFakeDataArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataArrayInput` via:
//
//	SecretStoreSpecProviderFakeDataArray{ SecretStoreSpecProviderFakeDataArgs{...} }
type SecretStoreSpecProviderFakeDataArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput
	ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataArrayOutput
}

type SecretStoreSpecProviderFakeDataArray []SecretStoreSpecProviderFakeDataInput

func (SecretStoreSpecProviderFakeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataArray) ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput {
	return i.ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataArray) ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakeDataOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataOutput) ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataOutput) ToSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) string { return v.Key }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderFakeDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderFakeDataOutput) ValueMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) map[string]string { return v.ValueMap }).(pulumi.StringMapOutput)
}

func (o SecretStoreSpecProviderFakeDataOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFakeDataArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderFakeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderFakeData {
		return vs[0].([]SecretStoreSpecProviderFakeData)[vs[1].(int)]
	}).(SecretStoreSpecProviderFakeDataOutput)
}

type SecretStoreSpecProviderFakeDataValueMap struct {
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsm struct {
	// Auth defines the information necessary to authenticate against GCP
	Auth *SecretStoreSpecProviderGcpsmAuth `pulumi:"auth"`
	// ProjectID project where secret is located
	ProjectID *string `pulumi:"projectID"`
}

// SecretStoreSpecProviderGcpsmInput is an input type that accepts SecretStoreSpecProviderGcpsmArgs and SecretStoreSpecProviderGcpsmOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmInput` via:
//
//	SecretStoreSpecProviderGcpsmArgs{...}
type SecretStoreSpecProviderGcpsmInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput
	ToSecretStoreSpecProviderGcpsmOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmOutput
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmArgs struct {
	// Auth defines the information necessary to authenticate against GCP
	Auth SecretStoreSpecProviderGcpsmAuthPtrInput `pulumi:"auth"`
	// ProjectID project where secret is located
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (SecretStoreSpecProviderGcpsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput {
	return i.ToSecretStoreSpecProviderGcpsmOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmOutput)
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmOutput).ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmArgs, SecretStoreSpecProviderGcpsmPtr and SecretStoreSpecProviderGcpsmPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput
	ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmPtrOutput
}

type secretStoreSpecProviderGcpsmPtrType SecretStoreSpecProviderGcpsmArgs

func SecretStoreSpecProviderGcpsmPtr(v *SecretStoreSpecProviderGcpsmArgs) SecretStoreSpecProviderGcpsmPtrInput {
	return (*secretStoreSpecProviderGcpsmPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmPtrType) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmPtrType) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsm {
		return &v
	}).(SecretStoreSpecProviderGcpsmPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
func (o SecretStoreSpecProviderGcpsmOutput) Auth() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsmAuth { return v.Auth }).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsm) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) Elem() SecretStoreSpecProviderGcpsmOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) SecretStoreSpecProviderGcpsm {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsm
		return ret
	}).(SecretStoreSpecProviderGcpsmOutput)
}

// Auth defines the information necessary to authenticate against GCP
func (o SecretStoreSpecProviderGcpsmPtrOutput) Auth() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsmAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuth struct {
	SecretRef        *SecretStoreSpecProviderGcpsmAuthSecretRef        `pulumi:"secretRef"`
	WorkloadIdentity *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity `pulumi:"workloadIdentity"`
}

// SecretStoreSpecProviderGcpsmAuthInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthArgs and SecretStoreSpecProviderGcpsmAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthArgs{...}
type SecretStoreSpecProviderGcpsmAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput
	ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthOutput
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthArgs struct {
	SecretRef        SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput        `pulumi:"secretRef"`
	WorkloadIdentity SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput `pulumi:"workloadIdentity"`
}

func (SecretStoreSpecProviderGcpsmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthOutput).ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthArgs, SecretStoreSpecProviderGcpsmAuthPtr and SecretStoreSpecProviderGcpsmAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput
}

type secretStoreSpecProviderGcpsmAuthPtrType SecretStoreSpecProviderGcpsmAuthArgs

func SecretStoreSpecProviderGcpsmAuthPtr(v *SecretStoreSpecProviderGcpsmAuthArgs) SecretStoreSpecProviderGcpsmAuthPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthPtrType) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthPtrType) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuth {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) SecretStoreSpecProviderGcpsmAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuth
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRef struct {
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefArgs and SecretStoreSpecProviderGcpsmAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput
}

type SecretStoreSpecProviderGcpsmAuthSecretRefArgs struct {
	// The SecretAccessKey is used for authentication
	SecretAccessKeySecretRef SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefArgs, SecretStoreSpecProviderGcpsmAuthSecretRefPtr and SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefPtrType SecretStoreSpecProviderGcpsmAuthSecretRefArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefArgs) SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRef) SecretStoreSpecProviderGcpsmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs, SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentity struct {
	ClusterLocation  string  `pulumi:"clusterLocation"`
	ClusterName      string  `pulumi:"clusterName"`
	ClusterProjectID *string `pulumi:"clusterProjectID"`
	// A reference to a ServiceAccount resource.
	ServiceAccountRef SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs struct {
	ClusterLocation  pulumi.StringInput    `pulumi:"clusterLocation"`
	ClusterName      pulumi.StringInput    `pulumi:"clusterName"`
	ClusterProjectID pulumi.StringPtrInput `pulumi:"clusterProjectID"`
	// A reference to a ServiceAccount resource.
	ServiceAccountRef SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterLocation() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) string { return v.ClusterLocation }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string { return v.ClusterProjectID }).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentity
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterLocation
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterName
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClusterProjectID
	}).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlab struct {
	// Auth configures how secret-manager authenticates with a GitLab instance.
	Auth SecretStoreSpecProviderGitlabAuth `pulumi:"auth"`
	// ProjectID specifies a project where secrets are located.
	ProjectID *string `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderGitlabInput is an input type that accepts SecretStoreSpecProviderGitlabArgs and SecretStoreSpecProviderGitlabOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabInput` via:
//
//	SecretStoreSpecProviderGitlabArgs{...}
type SecretStoreSpecProviderGitlabInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput
	ToSecretStoreSpecProviderGitlabOutputWithContext(context.Context) SecretStoreSpecProviderGitlabOutput
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabArgs struct {
	// Auth configures how secret-manager authenticates with a GitLab instance.
	Auth SecretStoreSpecProviderGitlabAuthInput `pulumi:"auth"`
	// ProjectID specifies a project where secrets are located.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput {
	return i.ToSecretStoreSpecProviderGitlabOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabOutput)
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabOutput).ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabPtrInput is an input type that accepts SecretStoreSpecProviderGitlabArgs, SecretStoreSpecProviderGitlabPtr and SecretStoreSpecProviderGitlabPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput
	ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabPtrOutput
}

type secretStoreSpecProviderGitlabPtrType SecretStoreSpecProviderGitlabArgs

func SecretStoreSpecProviderGitlabPtr(v *SecretStoreSpecProviderGitlabArgs) SecretStoreSpecProviderGitlabPtrInput {
	return (*secretStoreSpecProviderGitlabPtrType)(v)
}

func (*secretStoreSpecProviderGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabPtrType) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabPtrType) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlab) *SecretStoreSpecProviderGitlab {
		return &v
	}).(SecretStoreSpecProviderGitlabPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
func (o SecretStoreSpecProviderGitlabOutput) Auth() SecretStoreSpecProviderGitlabAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) SecretStoreSpecProviderGitlabAuth { return v.Auth }).(SecretStoreSpecProviderGitlabAuthOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabPtrOutput) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPtrOutput) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPtrOutput) Elem() SecretStoreSpecProviderGitlabOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) SecretStoreSpecProviderGitlab {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlab
		return ret
	}).(SecretStoreSpecProviderGitlabOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
func (o SecretStoreSpecProviderGitlabPtrOutput) Auth() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *SecretStoreSpecProviderGitlabAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuth struct {
	SecretRef SecretStoreSpecProviderGitlabAuthSecretRef `pulumi:"SecretRef"`
}

// SecretStoreSpecProviderGitlabAuthInput is an input type that accepts SecretStoreSpecProviderGitlabAuthArgs and SecretStoreSpecProviderGitlabAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthInput` via:
//
//	SecretStoreSpecProviderGitlabAuthArgs{...}
type SecretStoreSpecProviderGitlabAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput
	ToSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthOutput
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthArgs struct {
	SecretRef SecretStoreSpecProviderGitlabAuthSecretRefInput `pulumi:"SecretRef"`
}

func (SecretStoreSpecProviderGitlabAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthOutput)
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthOutput).ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthArgs, SecretStoreSpecProviderGitlabAuthPtr and SecretStoreSpecProviderGitlabAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput
	ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput
}

type secretStoreSpecProviderGitlabAuthPtrType SecretStoreSpecProviderGitlabAuthArgs

func SecretStoreSpecProviderGitlabAuthPtr(v *SecretStoreSpecProviderGitlabAuthArgs) SecretStoreSpecProviderGitlabAuthPtrInput {
	return (*secretStoreSpecProviderGitlabAuthPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthPtrType) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthPtrType) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuth) *SecretStoreSpecProviderGitlabAuth {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

func (o SecretStoreSpecProviderGitlabAuthOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuth) SecretStoreSpecProviderGitlabAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

type SecretStoreSpecProviderGitlabAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuth) SecretStoreSpecProviderGitlabAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuth
		return ret
	}).(SecretStoreSpecProviderGitlabAuthOutput)
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuth) *SecretStoreSpecProviderGitlabAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRef struct {
	// AccessToken is used for authentication.
	AccessToken *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken `pulumi:"accessToken"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefArgs and SecretStoreSpecProviderGitlabAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput
}

type SecretStoreSpecProviderGitlabAuthSecretRefArgs struct {
	// AccessToken is used for authentication.
	AccessToken SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput `pulumi:"accessToken"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefArgs, SecretStoreSpecProviderGitlabAuthSecretRefPtr and SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefPtrType SecretStoreSpecProviderGitlabAuthSecretRefArgs

func SecretStoreSpecProviderGitlabAuthSecretRefPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefArgs) SecretStoreSpecProviderGitlabAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

// AccessToken is used for authentication.
func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRef) SecretStoreSpecProviderGitlabAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

// AccessToken is used for authentication.
func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs, SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs

func SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRefAccessToken
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbm struct {
	// Auth configures how secret-manager authenticates with the IBM secrets manager.
	Auth SecretStoreSpecProviderIbmAuth `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// SecretStoreSpecProviderIbmInput is an input type that accepts SecretStoreSpecProviderIbmArgs and SecretStoreSpecProviderIbmOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmInput` via:
//
//	SecretStoreSpecProviderIbmArgs{...}
type SecretStoreSpecProviderIbmInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput
	ToSecretStoreSpecProviderIbmOutputWithContext(context.Context) SecretStoreSpecProviderIbmOutput
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmArgs struct {
	// Auth configures how secret-manager authenticates with the IBM secrets manager.
	Auth SecretStoreSpecProviderIbmAuthInput `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (SecretStoreSpecProviderIbmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput {
	return i.ToSecretStoreSpecProviderIbmOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmOutput)
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmOutput).ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmPtrInput is an input type that accepts SecretStoreSpecProviderIbmArgs, SecretStoreSpecProviderIbmPtr and SecretStoreSpecProviderIbmPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmPtrInput` via:
//
//	        SecretStoreSpecProviderIbmArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput
	ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmPtrOutput
}

type secretStoreSpecProviderIbmPtrType SecretStoreSpecProviderIbmArgs

func SecretStoreSpecProviderIbmPtr(v *SecretStoreSpecProviderIbmArgs) SecretStoreSpecProviderIbmPtrInput {
	return (*secretStoreSpecProviderIbmPtrType)(v)
}

func (*secretStoreSpecProviderIbmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmPtrType) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmPtrType) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput {
	return o
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmOutput {
	return o
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return o.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbm) *SecretStoreSpecProviderIbm {
		return &v
	}).(SecretStoreSpecProviderIbmPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
func (o SecretStoreSpecProviderIbmOutput) Auth() SecretStoreSpecProviderIbmAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbm) SecretStoreSpecProviderIbmAuth { return v.Auth }).(SecretStoreSpecProviderIbmAuthOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbm) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmPtrOutput) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPtrOutput) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPtrOutput) Elem() SecretStoreSpecProviderIbmOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) SecretStoreSpecProviderIbm {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbm
		return ret
	}).(SecretStoreSpecProviderIbmOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
func (o SecretStoreSpecProviderIbmPtrOutput) Auth() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) *SecretStoreSpecProviderIbmAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmPtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuth struct {
	SecretRef SecretStoreSpecProviderIbmAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderIbmAuthInput is an input type that accepts SecretStoreSpecProviderIbmAuthArgs and SecretStoreSpecProviderIbmAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthInput` via:
//
//	SecretStoreSpecProviderIbmAuthArgs{...}
type SecretStoreSpecProviderIbmAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput
	ToSecretStoreSpecProviderIbmAuthOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthOutput
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthArgs struct {
	SecretRef SecretStoreSpecProviderIbmAuthSecretRefInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderIbmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput {
	return i.ToSecretStoreSpecProviderIbmAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthOutput)
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthOutput).ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthArgs, SecretStoreSpecProviderIbmAuthPtr and SecretStoreSpecProviderIbmAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput
	ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthPtrOutput
}

type secretStoreSpecProviderIbmAuthPtrType SecretStoreSpecProviderIbmAuthArgs

func SecretStoreSpecProviderIbmAuthPtr(v *SecretStoreSpecProviderIbmAuthArgs) SecretStoreSpecProviderIbmAuthPtrInput {
	return (*secretStoreSpecProviderIbmAuthPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthPtrType) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthPtrType) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuth {
		return &v
	}).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuth) SecretStoreSpecProviderIbmAuthSecretRef { return v.SecretRef }).(SecretStoreSpecProviderIbmAuthSecretRefOutput)
}

type SecretStoreSpecProviderIbmAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) Elem() SecretStoreSpecProviderIbmAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuth) SecretStoreSpecProviderIbmAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuth
		return ret
	}).(SecretStoreSpecProviderIbmAuthOutput)
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRef struct {
	// The SecretAccessKey is used for authentication
	SecretApiKeySecretRef *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef `pulumi:"secretApiKeySecretRef"`
}

// SecretStoreSpecProviderIbmAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefArgs and SecretStoreSpecProviderIbmAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput
}

type SecretStoreSpecProviderIbmAuthSecretRefArgs struct {
	// The SecretAccessKey is used for authentication
	SecretApiKeySecretRef SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput `pulumi:"secretApiKeySecretRef"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefOutput).ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefArgs, SecretStoreSpecProviderIbmAuthSecretRefPtr and SecretStoreSpecProviderIbmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefPtrType SecretStoreSpecProviderIbmAuthSecretRefArgs

func SecretStoreSpecProviderIbmAuthSecretRefPtr(v *SecretStoreSpecProviderIbmAuthSecretRefArgs) SecretStoreSpecProviderIbmAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRef) SecretStoreSpecProviderIbmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefOutput)
}

// The SecretAccessKey is used for authentication
func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput).ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs, SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs

func SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetes struct {
	// Auth configures how secret-manager authenticates with a Kubernetes instance.
	Auth SecretStoreSpecProviderKubernetesAuth `pulumi:"auth"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace *string `pulumi:"remoteNamespace"`
	// configures the Kubernetes server Address.
	Server *SecretStoreSpecProviderKubernetesServer `pulumi:"server"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderKubernetes
func (val *SecretStoreSpecProviderKubernetes) Defaults() *SecretStoreSpecProviderKubernetes {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RemoteNamespace == nil {
		remoteNamespace_ := "default"
		tmp.RemoteNamespace = &remoteNamespace_
	}
	tmp.Server = tmp.Server.Defaults()

	return &tmp
}

// SecretStoreSpecProviderKubernetesInput is an input type that accepts SecretStoreSpecProviderKubernetesArgs and SecretStoreSpecProviderKubernetesOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesInput` via:
//
//	SecretStoreSpecProviderKubernetesArgs{...}
type SecretStoreSpecProviderKubernetesInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput
	ToSecretStoreSpecProviderKubernetesOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesOutput
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesArgs struct {
	// Auth configures how secret-manager authenticates with a Kubernetes instance.
	Auth SecretStoreSpecProviderKubernetesAuthInput `pulumi:"auth"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace pulumi.StringPtrInput `pulumi:"remoteNamespace"`
	// configures the Kubernetes server Address.
	Server SecretStoreSpecProviderKubernetesServerPtrInput `pulumi:"server"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderKubernetesArgs
func (val *SecretStoreSpecProviderKubernetesArgs) Defaults() *SecretStoreSpecProviderKubernetesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.RemoteNamespace == nil {
		tmp.RemoteNamespace = pulumi.StringPtr("default")
	}

	return &tmp
}
func (SecretStoreSpecProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput {
	return i.ToSecretStoreSpecProviderKubernetesOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesOutput)
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesOutput).ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesArgs, SecretStoreSpecProviderKubernetesPtr and SecretStoreSpecProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput
	ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesPtrOutput
}

type secretStoreSpecProviderKubernetesPtrType SecretStoreSpecProviderKubernetesArgs

func SecretStoreSpecProviderKubernetesPtr(v *SecretStoreSpecProviderKubernetesArgs) SecretStoreSpecProviderKubernetesPtrInput {
	return (*secretStoreSpecProviderKubernetesPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesPtrType) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesPtrType) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetes {
		return &v
	}).(SecretStoreSpecProviderKubernetesPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
func (o SecretStoreSpecProviderKubernetesOutput) Auth() SecretStoreSpecProviderKubernetesAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) SecretStoreSpecProviderKubernetesAuth { return v.Auth }).(SecretStoreSpecProviderKubernetesAuthOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *string { return v.RemoteNamespace }).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesOutput) Server() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesServer { return v.Server }).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

type SecretStoreSpecProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) Elem() SecretStoreSpecProviderKubernetesOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) SecretStoreSpecProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetes
		return ret
	}).(SecretStoreSpecProviderKubernetesOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
func (o SecretStoreSpecProviderKubernetesPtrOutput) Auth() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesPtrOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.RemoteNamespace
	}).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesPtrOutput) Server() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesServer {
		if v == nil {
			return nil
		}
		return v.Server
	}).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuth struct {
	// has both clientCert and clientKey as secretKeySelector
	Cert *SecretStoreSpecProviderKubernetesAuthCert `pulumi:"cert"`
	// points to a service account that should be used for authentication
	ServiceAccount *SecretStoreSpecProviderKubernetesAuthServiceAccount `pulumi:"serviceAccount"`
	// use static token to authenticate with
	Token *SecretStoreSpecProviderKubernetesAuthToken `pulumi:"token"`
}

// SecretStoreSpecProviderKubernetesAuthInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthArgs and SecretStoreSpecProviderKubernetesAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthArgs{...}
type SecretStoreSpecProviderKubernetesAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput
	ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthOutput
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthArgs struct {
	// has both clientCert and clientKey as secretKeySelector
	Cert SecretStoreSpecProviderKubernetesAuthCertPtrInput `pulumi:"cert"`
	// points to a service account that should be used for authentication
	ServiceAccount SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput `pulumi:"serviceAccount"`
	// use static token to authenticate with
	Token SecretStoreSpecProviderKubernetesAuthTokenPtrInput `pulumi:"token"`
}

func (SecretStoreSpecProviderKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthOutput).ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthArgs, SecretStoreSpecProviderKubernetesAuthPtr and SecretStoreSpecProviderKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput
}

type secretStoreSpecProviderKubernetesAuthPtrType SecretStoreSpecProviderKubernetesAuthArgs

func SecretStoreSpecProviderKubernetesAuthPtr(v *SecretStoreSpecProviderKubernetesAuthArgs) SecretStoreSpecProviderKubernetesAuthPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthPtrType) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthPtrType) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuth {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
func (o SecretStoreSpecProviderKubernetesAuthOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthCert {
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// points to a service account that should be used for authentication
func (o SecretStoreSpecProviderKubernetesAuthOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// use static token to authenticate with
func (o SecretStoreSpecProviderKubernetesAuthOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthToken {
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) SecretStoreSpecProviderKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuth
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthOutput)
}

// has both clientCert and clientKey as secretKeySelector
func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// points to a service account that should be used for authentication
func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// use static token to authenticate with
func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthToken {
		if v == nil {
			return nil
		}
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCert struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientCert *SecretStoreSpecProviderKubernetesAuthCertClientCert `pulumi:"clientCert"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientKey *SecretStoreSpecProviderKubernetesAuthCertClientKey `pulumi:"clientKey"`
}

// SecretStoreSpecProviderKubernetesAuthCertInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertArgs and SecretStoreSpecProviderKubernetesAuthCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput
	ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientCert SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput `pulumi:"clientCert"`
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	ClientKey SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput `pulumi:"clientKey"`
}

func (SecretStoreSpecProviderKubernetesAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertOutput).ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertArgs, SecretStoreSpecProviderKubernetesAuthCertPtr and SecretStoreSpecProviderKubernetesAuthCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertPtrType SecretStoreSpecProviderKubernetesAuthCertArgs

func SecretStoreSpecProviderKubernetesAuthCertPtr(v *SecretStoreSpecProviderKubernetesAuthCertArgs) SecretStoreSpecProviderKubernetesAuthCertPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCert {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) SecretStoreSpecProviderKubernetesAuthCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCert
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertArgs and SecretStoreSpecProviderKubernetesAuthCertClientCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertArgs, SecretStoreSpecProviderKubernetesAuthCertClientCertPtr and SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientCertPtrType SecretStoreSpecProviderKubernetesAuthCertClientCertArgs

func SecretStoreSpecProviderKubernetesAuthCertClientCertPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientCertPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) SecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientCert
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs and SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientKeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs, SecretStoreSpecProviderKubernetesAuthCertClientKeyPtr and SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs

func SecretStoreSpecProviderKubernetesAuthCertClientKeyPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientKey) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) SecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientKey
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccount struct {
	// A reference to a ServiceAccount resource.
	ServiceAccount *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount `pulumi:"serviceAccount"`
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountArgs and SecretStoreSpecProviderKubernetesAuthServiceAccountOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
type SecretStoreSpecProviderKubernetesAuthServiceAccountInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountArgs struct {
	// A reference to a ServiceAccount resource.
	ServiceAccount SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput `pulumi:"serviceAccount"`
}

func (SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput).ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountArgs, SecretStoreSpecProviderKubernetesAuthServiceAccountPtr and SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
}

type secretStoreSpecProviderKubernetesAuthServiceAccountPtrType SecretStoreSpecProviderKubernetesAuthServiceAccountArgs

func SecretStoreSpecProviderKubernetesAuthServiceAccountPtr(v *SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthServiceAccountPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthServiceAccount) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccount) *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) SecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthServiceAccount
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

// A reference to a ServiceAccount resource.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs and SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{...}
type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput).ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs, SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtr and SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput
}

type secretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs

func SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtr(v *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthToken struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	BearerToken *SecretStoreSpecProviderKubernetesAuthTokenBearerToken `pulumi:"bearerToken"`
}

// SecretStoreSpecProviderKubernetesAuthTokenInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenArgs and SecretStoreSpecProviderKubernetesAuthTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	BearerToken SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput `pulumi:"bearerToken"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenOutput).ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenArgs, SecretStoreSpecProviderKubernetesAuthTokenPtr and SecretStoreSpecProviderKubernetesAuthTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenPtrType SecretStoreSpecProviderKubernetesAuthTokenArgs

func SecretStoreSpecProviderKubernetesAuthTokenPtr(v *SecretStoreSpecProviderKubernetesAuthTokenArgs) SecretStoreSpecProviderKubernetesAuthTokenPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthToken {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthToken) SecretStoreSpecProviderKubernetesAuthToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthToken
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput).ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs, SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs

func SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthTokenBearerToken
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServer struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle *string `pulumi:"caBundle"`
	// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
	CaProvider *SecretStoreSpecProviderKubernetesServerCaProvider `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url *string `pulumi:"url"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderKubernetesServer
func (val *SecretStoreSpecProviderKubernetesServer) Defaults() *SecretStoreSpecProviderKubernetesServer {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Url == nil {
		url_ := "kubernetes.default"
		tmp.Url = &url_
	}
	return &tmp
}

// SecretStoreSpecProviderKubernetesServerInput is an input type that accepts SecretStoreSpecProviderKubernetesServerArgs and SecretStoreSpecProviderKubernetesServerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerInput` via:
//
//	SecretStoreSpecProviderKubernetesServerArgs{...}
type SecretStoreSpecProviderKubernetesServerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput
	ToSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerOutput
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerArgs struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
	CaProvider SecretStoreSpecProviderKubernetesServerCaProviderPtrInput `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderKubernetesServerArgs
func (val *SecretStoreSpecProviderKubernetesServerArgs) Defaults() *SecretStoreSpecProviderKubernetesServerArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Url == nil {
		tmp.Url = pulumi.StringPtr("kubernetes.default")
	}
	return &tmp
}
func (SecretStoreSpecProviderKubernetesServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerOutput)
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerOutput).ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerArgs, SecretStoreSpecProviderKubernetesServerPtr and SecretStoreSpecProviderKubernetesServerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput
	ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput
}

type secretStoreSpecProviderKubernetesServerPtrType SecretStoreSpecProviderKubernetesServerArgs

func SecretStoreSpecProviderKubernetesServerPtr(v *SecretStoreSpecProviderKubernetesServerArgs) SecretStoreSpecProviderKubernetesServerPtrInput {
	return (*secretStoreSpecProviderKubernetesServerPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerPtrType) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerPtrType) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServer {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
func (o SecretStoreSpecProviderKubernetesServerOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServerCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesServerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) SecretStoreSpecProviderKubernetesServer {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServer
		return ret
	}).(SecretStoreSpecProviderKubernetesServerOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
func (o SecretStoreSpecProviderKubernetesServerPtrOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServerCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// SecretStoreSpecProviderKubernetesServerCaProviderInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderArgs and SecretStoreSpecProviderKubernetesServerCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderInput` via:
//
//	SecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
type SecretStoreSpecProviderKubernetesServerCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecretStoreSpecProviderKubernetesServerCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderOutput).ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderArgs, SecretStoreSpecProviderKubernetesServerCaProviderPtr and SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
}

type secretStoreSpecProviderKubernetesServerCaProviderPtrType SecretStoreSpecProviderKubernetesServerCaProviderArgs

func SecretStoreSpecProviderKubernetesServerCaProviderPtr(v *SecretStoreSpecProviderKubernetesServerCaProviderArgs) SecretStoreSpecProviderKubernetesServerCaProviderPtrInput {
	return (*secretStoreSpecProviderKubernetesServerCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServerCaProvider) *SecretStoreSpecProviderKubernetesServerCaProvider {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) SecretStoreSpecProviderKubernetesServerCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServerCaProvider
		return ret
	}).(SecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracle struct {
	// Auth configures how secret-manager authenticates with the Oracle Vault.
	// If empty, instance principal is used. Optionally, the authenticating principal type
	// and/or user data may be supplied for the use of workload identity and user principal.
	Auth *SecretStoreSpecProviderOracleAuth `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment *string `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType *string `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region string `pulumi:"region"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef *SecretStoreSpecProviderOracleServiceAccountRef `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault string `pulumi:"vault"`
}

// SecretStoreSpecProviderOracleInput is an input type that accepts SecretStoreSpecProviderOracleArgs and SecretStoreSpecProviderOracleOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleInput` via:
//
//	SecretStoreSpecProviderOracleArgs{...}
type SecretStoreSpecProviderOracleInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput
	ToSecretStoreSpecProviderOracleOutputWithContext(context.Context) SecretStoreSpecProviderOracleOutput
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracleArgs struct {
	// Auth configures how secret-manager authenticates with the Oracle Vault.
	// If empty, instance principal is used. Optionally, the authenticating principal type
	// and/or user data may be supplied for the use of workload identity and user principal.
	Auth SecretStoreSpecProviderOracleAuthPtrInput `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment pulumi.StringPtrInput `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region pulumi.StringInput `pulumi:"region"`
	// ServiceAccountRef specified the service account
	// that should be used when authenticating with WorkloadIdentity.
	ServiceAccountRef SecretStoreSpecProviderOracleServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault pulumi.StringInput `pulumi:"vault"`
}

func (SecretStoreSpecProviderOracleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput {
	return i.ToSecretStoreSpecProviderOracleOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleOutput)
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return i.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleOutput).ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOraclePtrInput is an input type that accepts SecretStoreSpecProviderOracleArgs, SecretStoreSpecProviderOraclePtr and SecretStoreSpecProviderOraclePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOraclePtrInput` via:
//
//	        SecretStoreSpecProviderOracleArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOraclePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput
	ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Context) SecretStoreSpecProviderOraclePtrOutput
}

type secretStoreSpecProviderOraclePtrType SecretStoreSpecProviderOracleArgs

func SecretStoreSpecProviderOraclePtr(v *SecretStoreSpecProviderOracleArgs) SecretStoreSpecProviderOraclePtrInput {
	return (*secretStoreSpecProviderOraclePtrType)(v)
}

func (*secretStoreSpecProviderOraclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i *secretStoreSpecProviderOraclePtrType) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return i.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOraclePtrType) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOraclePtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracleOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput {
	return o
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleOutput {
	return o
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return o.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracle {
		return &v
	}).(SecretStoreSpecProviderOraclePtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
func (o SecretStoreSpecProviderOracleOutput) Auth() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleAuth { return v.Auth }).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOracleOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.Compartment }).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOracleOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOracleOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOracleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) string { return v.Region }).(pulumi.StringOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o SecretStoreSpecProviderOracleOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOracleOutput) Vault() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) string { return v.Vault }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderOraclePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOraclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o SecretStoreSpecProviderOraclePtrOutput) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePtrOutput) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePtrOutput) Elem() SecretStoreSpecProviderOracleOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) SecretStoreSpecProviderOracle {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracle
		return ret
	}).(SecretStoreSpecProviderOracleOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
func (o SecretStoreSpecProviderOraclePtrOutput) Auth() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePtrOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.Compartment
	}).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOraclePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOraclePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
func (o SecretStoreSpecProviderOraclePtrOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOraclePtrOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return &v.Vault
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type SecretStoreSpecProviderOracleAuth struct {
	// SecretRef to pass through sensitive information.
	SecretRef SecretStoreSpecProviderOracleAuthSecretRef `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy string `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User string `pulumi:"user"`
}

// SecretStoreSpecProviderOracleAuthInput is an input type that accepts SecretStoreSpecProviderOracleAuthArgs and SecretStoreSpecProviderOracleAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthInput` via:
//
//	SecretStoreSpecProviderOracleAuthArgs{...}
type SecretStoreSpecProviderOracleAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput
	ToSecretStoreSpecProviderOracleAuthOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthOutput
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type SecretStoreSpecProviderOracleAuthArgs struct {
	// SecretRef to pass through sensitive information.
	SecretRef SecretStoreSpecProviderOracleAuthSecretRefInput `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy pulumi.StringInput `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User pulumi.StringInput `pulumi:"user"`
}

func (SecretStoreSpecProviderOracleAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput {
	return i.ToSecretStoreSpecProviderOracleAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthOutput)
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthOutput).ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthArgs, SecretStoreSpecProviderOracleAuthPtr and SecretStoreSpecProviderOracleAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput
	ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthPtrOutput
}

type secretStoreSpecProviderOracleAuthPtrType SecretStoreSpecProviderOracleAuthArgs

func SecretStoreSpecProviderOracleAuthPtr(v *SecretStoreSpecProviderOracleAuthArgs) SecretStoreSpecProviderOracleAuthPtrInput {
	return (*secretStoreSpecProviderOracleAuthPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthPtrType) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthPtrType) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, instance principal is used. Optionally, the authenticating principal type
// and/or user data may be supplied for the use of workload identity and user principal.
type SecretStoreSpecProviderOracleAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuth) *SecretStoreSpecProviderOracleAuth {
		return &v
	}).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// SecretRef to pass through sensitive information.
func (o SecretStoreSpecProviderOracleAuthOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) SecretStoreSpecProviderOracleAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) string { return v.Tenancy }).(pulumi.StringOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) string { return v.User }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderOracleAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) Elem() SecretStoreSpecProviderOracleAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) SecretStoreSpecProviderOracleAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuth
		return ret
	}).(SecretStoreSpecProviderOracleAuthOutput)
}

// SecretRef to pass through sensitive information.
func (o SecretStoreSpecProviderOracleAuthPtrOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *SecretStoreSpecProviderOracleAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Tenancy
	}).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRef struct {
	// Fingerprint is the fingerprint of the API private key.
	Fingerprint SecretStoreSpecProviderOracleAuthSecretRefFingerprint `pulumi:"fingerprint"`
	// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
	Privatekey SecretStoreSpecProviderOracleAuthSecretRefPrivatekey `pulumi:"privatekey"`
}

// SecretStoreSpecProviderOracleAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefArgs and SecretStoreSpecProviderOracleAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefArgs struct {
	// Fingerprint is the fingerprint of the API private key.
	Fingerprint SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput `pulumi:"fingerprint"`
	// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
	Privatekey SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput `pulumi:"privatekey"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefArgs, SecretStoreSpecProviderOracleAuthSecretRefPtr and SecretStoreSpecProviderOracleAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPtrType SecretStoreSpecProviderOracleAuthSecretRefArgs

func SecretStoreSpecProviderOracleAuthSecretRefPtr(v *SecretStoreSpecProviderOracleAuthSecretRefArgs) SecretStoreSpecProviderOracleAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRef) SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRef) SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) SecretStoreSpecProviderOracleAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefOutput)
}

// Fingerprint is the fingerprint of the API private key.
func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v == nil {
			return nil
		}
		return &v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v == nil {
			return nil
		}
		return &v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprint struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs and SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput).ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs, SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr and SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs

func SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefFingerprint
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs, SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs

func SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefPrivatekey
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefArgs and SecretStoreSpecProviderOracleServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderOracleServiceAccountRefArgs{...}
type SecretStoreSpecProviderOracleServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefOutput).ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefArgs, SecretStoreSpecProviderOracleServiceAccountRefPtr and SecretStoreSpecProviderOracleServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderOracleServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput
}

type secretStoreSpecProviderOracleServiceAccountRefPtrType SecretStoreSpecProviderOracleServiceAccountRefArgs

func SecretStoreSpecProviderOracleServiceAccountRefPtr(v *SecretStoreSpecProviderOracleServiceAccountRefArgs) SecretStoreSpecProviderOracleServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderOracleServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderOracleServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleServiceAccountRef) *SecretStoreSpecProviderOracleServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) SecretStoreSpecProviderOracleServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderOracleServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepot struct {
	// Auth configures how secret-manager authenticates with a Password Depot instance.
	Auth SecretStoreSpecProviderPassworddepotAuth `pulumi:"auth"`
	// Database to use as source
	Database string `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host string `pulumi:"host"`
}

// SecretStoreSpecProviderPassworddepotInput is an input type that accepts SecretStoreSpecProviderPassworddepotArgs and SecretStoreSpecProviderPassworddepotOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotInput` via:
//
//	SecretStoreSpecProviderPassworddepotArgs{...}
type SecretStoreSpecProviderPassworddepotInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput
	ToSecretStoreSpecProviderPassworddepotOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotOutput
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotArgs struct {
	// Auth configures how secret-manager authenticates with a Password Depot instance.
	Auth SecretStoreSpecProviderPassworddepotAuthInput `pulumi:"auth"`
	// Database to use as source
	Database pulumi.StringInput `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host pulumi.StringInput `pulumi:"host"`
}

func (SecretStoreSpecProviderPassworddepotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput {
	return i.ToSecretStoreSpecProviderPassworddepotOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotOutput)
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotOutput).ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotArgs, SecretStoreSpecProviderPassworddepotPtr and SecretStoreSpecProviderPassworddepotPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput
	ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotPtrOutput
}

type secretStoreSpecProviderPassworddepotPtrType SecretStoreSpecProviderPassworddepotArgs

func SecretStoreSpecProviderPassworddepotPtr(v *SecretStoreSpecProviderPassworddepotArgs) SecretStoreSpecProviderPassworddepotPtrInput {
	return (*secretStoreSpecProviderPassworddepotPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotPtrType) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotPtrType) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepot) *SecretStoreSpecProviderPassworddepot {
		return &v
	}).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
func (o SecretStoreSpecProviderPassworddepotOutput) Auth() SecretStoreSpecProviderPassworddepotAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) SecretStoreSpecProviderPassworddepotAuth { return v.Auth }).(SecretStoreSpecProviderPassworddepotAuthOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) string { return v.Database }).(pulumi.StringOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) string { return v.Host }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderPassworddepotPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) Elem() SecretStoreSpecProviderPassworddepotOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) SecretStoreSpecProviderPassworddepot {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepot
		return ret
	}).(SecretStoreSpecProviderPassworddepotOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
func (o SecretStoreSpecProviderPassworddepotPtrOutput) Auth() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *SecretStoreSpecProviderPassworddepotAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuth struct {
	SecretRef SecretStoreSpecProviderPassworddepotAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderPassworddepotAuthInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthArgs and SecretStoreSpecProviderPassworddepotAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthArgs{...}
type SecretStoreSpecProviderPassworddepotAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput
	ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthOutput
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthArgs struct {
	SecretRef SecretStoreSpecProviderPassworddepotAuthSecretRefInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderPassworddepotAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthOutput).ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthArgs, SecretStoreSpecProviderPassworddepotAuthPtr and SecretStoreSpecProviderPassworddepotAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthPtrType SecretStoreSpecProviderPassworddepotAuthArgs

func SecretStoreSpecProviderPassworddepotAuthPtr(v *SecretStoreSpecProviderPassworddepotAuthArgs) SecretStoreSpecProviderPassworddepotAuthPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthPtrType) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthPtrType) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuth) *SecretStoreSpecProviderPassworddepotAuth {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuth) SecretStoreSpecProviderPassworddepotAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

type SecretStoreSpecProviderPassworddepotAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuth) SecretStoreSpecProviderPassworddepotAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuth
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuth) *SecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRef struct {
	// Username / Password is used for authentication.
	Credentials *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials `pulumi:"credentials"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefArgs struct {
	// Username / Password is used for authentication.
	Credentials SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

// Username / Password is used for authentication.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRef) SecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

// Username / Password is used for authentication.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVault struct {
	// Auth configures how secret-manager authenticates with the Vault server.
	Auth SecretStoreSpecProviderVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Vault server certificate.
	CaProvider *SecretStoreSpecProviderVaultCaProvider `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent *bool `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path *string `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites *bool `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server string `pulumi:"server"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVault
func (val *SecretStoreSpecProviderVault) Defaults() *SecretStoreSpecProviderVault {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Auth = *tmp.Auth.Defaults()

	if tmp.Version == nil {
		version_ := "v2"
		tmp.Version = &version_
	}
	return &tmp
}

// SecretStoreSpecProviderVaultInput is an input type that accepts SecretStoreSpecProviderVaultArgs and SecretStoreSpecProviderVaultOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultInput` via:
//
//	SecretStoreSpecProviderVaultArgs{...}
type SecretStoreSpecProviderVaultInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput
	ToSecretStoreSpecProviderVaultOutputWithContext(context.Context) SecretStoreSpecProviderVaultOutput
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultArgs struct {
	// Auth configures how secret-manager authenticates with the Vault server.
	Auth SecretStoreSpecProviderVaultAuthInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate Vault server certificate.
	CaProvider SecretStoreSpecProviderVaultCaProviderPtrInput `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent pulumi.BoolPtrInput `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites pulumi.BoolPtrInput `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringInput `pulumi:"server"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultArgs
func (val *SecretStoreSpecProviderVaultArgs) Defaults() *SecretStoreSpecProviderVaultArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.Version == nil {
		tmp.Version = pulumi.StringPtr("v2")
	}
	return &tmp
}
func (SecretStoreSpecProviderVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVault)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput {
	return i.ToSecretStoreSpecProviderVaultOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultOutput)
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultOutput).ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultPtrInput is an input type that accepts SecretStoreSpecProviderVaultArgs, SecretStoreSpecProviderVaultPtr and SecretStoreSpecProviderVaultPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultPtrInput` via:
//
//	        SecretStoreSpecProviderVaultArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput
	ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultPtrOutput
}

type secretStoreSpecProviderVaultPtrType SecretStoreSpecProviderVaultArgs

func SecretStoreSpecProviderVaultPtr(v *SecretStoreSpecProviderVaultArgs) SecretStoreSpecProviderVaultPtrInput {
	return (*secretStoreSpecProviderVaultPtrType)(v)
}

func (*secretStoreSpecProviderVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVault)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultPtrType) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultPtrType) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVault)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput {
	return o
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultOutput {
	return o
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return o.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVault {
		return &v
	}).(SecretStoreSpecProviderVaultPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
func (o SecretStoreSpecProviderVaultOutput) Auth() SecretStoreSpecProviderVaultAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) SecretStoreSpecProviderVaultAuth { return v.Auth }).(SecretStoreSpecProviderVaultAuthOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
func (o SecretStoreSpecProviderVaultOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultCaProvider { return v.CaProvider }).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *bool { return v.ForwardInconsistent }).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *bool { return v.ReadYourWrites }).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) string { return v.Server }).(pulumi.StringOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVault)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultPtrOutput) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPtrOutput) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPtrOutput) Elem() SecretStoreSpecProviderVaultOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) SecretStoreSpecProviderVault {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVault
		return ret
	}).(SecretStoreSpecProviderVaultOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
func (o SecretStoreSpecProviderVaultPtrOutput) Auth() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
func (o SecretStoreSpecProviderVaultPtrOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultPtrOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultPtrOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ReadYourWrites
	}).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuth struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole *SecretStoreSpecProviderVaultAuthAppRole `pulumi:"appRole"`
	// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
	// Cert authentication method
	Cert *SecretStoreSpecProviderVaultAuthCert `pulumi:"cert"`
	// Jwt authenticates with Vault by passing role and JWT token using the
	// JWT/OIDC authentication method
	Jwt *SecretStoreSpecProviderVaultAuthJwt `pulumi:"jwt"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes *SecretStoreSpecProviderVaultAuthKubernetes `pulumi:"kubernetes"`
	// Ldap authenticates with Vault by passing username/password pair using
	// the LDAP authentication method
	Ldap *SecretStoreSpecProviderVaultAuthLdap `pulumi:"ldap"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef *SecretStoreSpecProviderVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuth
func (val *SecretStoreSpecProviderVaultAuth) Defaults() *SecretStoreSpecProviderVaultAuth {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.AppRole = tmp.AppRole.Defaults()

	tmp.Jwt = tmp.Jwt.Defaults()

	tmp.Kubernetes = tmp.Kubernetes.Defaults()

	tmp.Ldap = tmp.Ldap.Defaults()

	return &tmp
}

// SecretStoreSpecProviderVaultAuthInput is an input type that accepts SecretStoreSpecProviderVaultAuthArgs and SecretStoreSpecProviderVaultAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthInput` via:
//
//	SecretStoreSpecProviderVaultAuthArgs{...}
type SecretStoreSpecProviderVaultAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput
	ToSecretStoreSpecProviderVaultAuthOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthOutput
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthArgs struct {
	// AppRole authenticates with Vault using the App Role auth mechanism,
	// with the role and secret stored in a Kubernetes Secret resource.
	AppRole SecretStoreSpecProviderVaultAuthAppRolePtrInput `pulumi:"appRole"`
	// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
	// Cert authentication method
	Cert SecretStoreSpecProviderVaultAuthCertPtrInput `pulumi:"cert"`
	// Jwt authenticates with Vault by passing role and JWT token using the
	// JWT/OIDC authentication method
	Jwt SecretStoreSpecProviderVaultAuthJwtPtrInput `pulumi:"jwt"`
	// Kubernetes authenticates with Vault by passing the ServiceAccount
	// token stored in the named Secret resource to the Vault server.
	Kubernetes SecretStoreSpecProviderVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	// Ldap authenticates with Vault by passing username/password pair using
	// the LDAP authentication method
	Ldap SecretStoreSpecProviderVaultAuthLdapPtrInput `pulumi:"ldap"`
	// TokenSecretRef authenticates with Vault by presenting a token.
	TokenSecretRef SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthArgs
func (val *SecretStoreSpecProviderVaultAuthArgs) Defaults() *SecretStoreSpecProviderVaultAuthArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (SecretStoreSpecProviderVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput {
	return i.ToSecretStoreSpecProviderVaultAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthOutput)
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthOutput).ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthArgs, SecretStoreSpecProviderVaultAuthPtr and SecretStoreSpecProviderVaultAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput
	ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthPtrOutput
}

type secretStoreSpecProviderVaultAuthPtrType SecretStoreSpecProviderVaultAuthArgs

func SecretStoreSpecProviderVaultAuthPtr(v *SecretStoreSpecProviderVaultAuthArgs) SecretStoreSpecProviderVaultAuthPtrInput {
	return (*secretStoreSpecProviderVaultAuthPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthPtrType) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthPtrType) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuth {
		return &v
	}).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o SecretStoreSpecProviderVaultAuthOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthAppRole { return v.AppRole }).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
func (o SecretStoreSpecProviderVaultAuthOutput) Cert() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthCert { return v.Cert }).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
func (o SecretStoreSpecProviderVaultAuthOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthJwt { return v.Jwt }).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o SecretStoreSpecProviderVaultAuthOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthKubernetes {
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
func (o SecretStoreSpecProviderVaultAuthOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthLdap { return v.Ldap }).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o SecretStoreSpecProviderVaultAuthOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Elem() SecretStoreSpecProviderVaultAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) SecretStoreSpecProviderVaultAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuth
		return ret
	}).(SecretStoreSpecProviderVaultAuthOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
func (o SecretStoreSpecProviderVaultAuthPtrOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
func (o SecretStoreSpecProviderVaultAuthPtrOutput) Cert() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
func (o SecretStoreSpecProviderVaultAuthPtrOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
func (o SecretStoreSpecProviderVaultAuthPtrOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
func (o SecretStoreSpecProviderVaultAuthPtrOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthLdap {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
func (o SecretStoreSpecProviderVaultAuthPtrOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId string `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef SecretStoreSpecProviderVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthAppRole
func (val *SecretStoreSpecProviderVaultAuthAppRole) Defaults() *SecretStoreSpecProviderVaultAuthAppRole {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "approle"
	}
	return &tmp
}

// SecretStoreSpecProviderVaultAuthAppRoleInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleArgs and SecretStoreSpecProviderVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path pulumi.StringInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId pulumi.StringInput `pulumi:"roleId"`
	// Reference to a key in a Secret that contains the App Role secret used
	// to authenticate with Vault.
	// The `key` field must be specified and denotes which entry within the Secret
	// resource is used as the app role secret.
	SecretRef SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthAppRoleArgs
func (val *SecretStoreSpecProviderVaultAuthAppRoleArgs) Defaults() *SecretStoreSpecProviderVaultAuthAppRoleArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("approle")
	}
	return &tmp
}
func (SecretStoreSpecProviderVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleOutput).ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRolePtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleArgs, SecretStoreSpecProviderVaultAuthAppRolePtr and SecretStoreSpecProviderVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRolePtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput
}

type secretStoreSpecProviderVaultAuthAppRolePtrType SecretStoreSpecProviderVaultAuthAppRoleArgs

func SecretStoreSpecProviderVaultAuthAppRolePtr(v *SecretStoreSpecProviderVaultAuthAppRoleArgs) SecretStoreSpecProviderVaultAuthAppRolePtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRolePtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRolePtrType) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRolePtrType) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRole {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) string { return v.Path }).(pulumi.StringOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) string { return v.RoleId }).(pulumi.StringOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

type SecretStoreSpecProviderVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) SecretStoreSpecProviderVaultAuthAppRole {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRole
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleId
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs and SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput).ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs, SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr and SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs

func SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRoleSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCert struct {
	// ClientCert is a certificate to authenticate using the Cert Vault
	// authentication method
	ClientCert *SecretStoreSpecProviderVaultAuthCertClientCert `pulumi:"clientCert"`
	// SecretRef to a key in a Secret resource containing client private key to
	// authenticate with Vault using the Cert authentication method
	SecretRef *SecretStoreSpecProviderVaultAuthCertSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthCertInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertArgs and SecretStoreSpecProviderVaultAuthCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertArgs{...}
type SecretStoreSpecProviderVaultAuthCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput
	ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertOutput
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertArgs struct {
	// ClientCert is a certificate to authenticate using the Cert Vault
	// authentication method
	ClientCert SecretStoreSpecProviderVaultAuthCertClientCertPtrInput `pulumi:"clientCert"`
	// SecretRef to a key in a Secret resource containing client private key to
	// authenticate with Vault using the Cert authentication method
	SecretRef SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertOutput).ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertArgs, SecretStoreSpecProviderVaultAuthCertPtr and SecretStoreSpecProviderVaultAuthCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput
}

type secretStoreSpecProviderVaultAuthCertPtrType SecretStoreSpecProviderVaultAuthCertArgs

func SecretStoreSpecProviderVaultAuthCertPtr(v *SecretStoreSpecProviderVaultAuthCertArgs) SecretStoreSpecProviderVaultAuthCertPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertPtrType) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertPtrType) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCert {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthCertOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
func (o SecretStoreSpecProviderVaultAuthCertOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) SecretStoreSpecProviderVaultAuthCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCert
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertClientCertInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertArgs and SecretStoreSpecProviderVaultAuthCertClientCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
type SecretStoreSpecProviderVaultAuthCertClientCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertOutput).ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertClientCertPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertArgs, SecretStoreSpecProviderVaultAuthCertClientCertPtr and SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
}

type secretStoreSpecProviderVaultAuthCertClientCertPtrType SecretStoreSpecProviderVaultAuthCertClientCertArgs

func SecretStoreSpecProviderVaultAuthCertClientCertPtr(v *SecretStoreSpecProviderVaultAuthCertClientCertArgs) SecretStoreSpecProviderVaultAuthCertClientCertPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertClientCertPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertClientCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) SecretStoreSpecProviderVaultAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertClientCert
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefArgs and SecretStoreSpecProviderVaultAuthCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput).ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefArgs, SecretStoreSpecProviderVaultAuthCertSecretRefPtr and SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthCertSecretRefPtrType SecretStoreSpecProviderVaultAuthCertSecretRefArgs

func SecretStoreSpecProviderVaultAuthCertSecretRefPtr(v *SecretStoreSpecProviderVaultAuthCertSecretRefArgs) SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertSecretRef) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) SecretStoreSpecProviderVaultAuthCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwt struct {
	// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
	// a token for with the `TokenRequest` API.
	KubernetesServiceAccountToken *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path string `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role *string `pulumi:"role"`
	// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
	// authenticate with Vault using the JWT/OIDC authentication method.
	SecretRef *SecretStoreSpecProviderVaultAuthJwtSecretRef `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthJwt
func (val *SecretStoreSpecProviderVaultAuthJwt) Defaults() *SecretStoreSpecProviderVaultAuthJwt {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "jwt"
	}
	return &tmp
}

// SecretStoreSpecProviderVaultAuthJwtInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtArgs and SecretStoreSpecProviderVaultAuthJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtArgs{...}
type SecretStoreSpecProviderVaultAuthJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput
	ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtOutput
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtArgs struct {
	// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
	// a token for with the `TokenRequest` API.
	KubernetesServiceAccountToken SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path pulumi.StringInput `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
	// authenticate with Vault using the JWT/OIDC authentication method.
	SecretRef SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthJwtArgs
func (val *SecretStoreSpecProviderVaultAuthJwtArgs) Defaults() *SecretStoreSpecProviderVaultAuthJwtArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("jwt")
	}
	return &tmp
}
func (SecretStoreSpecProviderVaultAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtOutput).ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtArgs, SecretStoreSpecProviderVaultAuthJwtPtr and SecretStoreSpecProviderVaultAuthJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtPtrType SecretStoreSpecProviderVaultAuthJwtArgs

func SecretStoreSpecProviderVaultAuthJwtPtr(v *SecretStoreSpecProviderVaultAuthJwtArgs) SecretStoreSpecProviderVaultAuthJwtPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtPtrType) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtPtrType) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwt {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
func (o SecretStoreSpecProviderVaultAuthJwtOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) string { return v.Path }).(pulumi.StringOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
func (o SecretStoreSpecProviderVaultAuthJwtOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) SecretStoreSpecProviderVaultAuthJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwt
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v == nil {
			return nil
		}
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	Audiences []string `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Defaults to 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// Service account field containing the name of a kubernetes ServiceAccount.
	ServiceAccountRef SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Defaults to 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// Service account field containing the name of a kubernetes ServiceAccount.
	ServiceAccountRef SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefArgs and SecretStoreSpecProviderVaultAuthJwtSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthJwtSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput).ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefArgs, SecretStoreSpecProviderVaultAuthJwtSecretRefPtr and SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtSecretRefPtrType SecretStoreSpecProviderVaultAuthJwtSecretRefArgs

func SecretStoreSpecProviderVaultAuthJwtSecretRefPtr(v *SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtSecretRef) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) SecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetes struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role string `pulumi:"role"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef *SecretStoreSpecProviderVaultAuthKubernetesSecretRef `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Vault. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthKubernetes
func (val *SecretStoreSpecProviderVaultAuthKubernetes) Defaults() *SecretStoreSpecProviderVaultAuthKubernetes {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.MountPath) {
		tmp.MountPath = "kubernetes"
	}
	return &tmp
}

// SecretStoreSpecProviderVaultAuthKubernetesInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesArgs and SecretStoreSpecProviderVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesArgs struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role pulumi.StringInput `pulumi:"role"`
	// Optional secret field containing a Kubernetes ServiceAccount JWT used
	// for authenticating with Vault. If a name is specified without a key,
	// `token` is the default. If one is not specified, the one bound to
	// the controller will be used.
	SecretRef SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput `pulumi:"secretRef"`
	// Optional service account field containing the name of a kubernetes ServiceAccount.
	// If the service account is specified, the service account secret token JWT will be used
	// for authenticating with Vault. If the service account selector is not supplied,
	// the secretRef will be used instead.
	ServiceAccountRef SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthKubernetesArgs
func (val *SecretStoreSpecProviderVaultAuthKubernetesArgs) Defaults() *SecretStoreSpecProviderVaultAuthKubernetesArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.MountPath == nil {
		tmp.MountPath = pulumi.String("kubernetes")
	}
	return &tmp
}
func (SecretStoreSpecProviderVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesOutput).ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesArgs, SecretStoreSpecProviderVaultAuthKubernetesPtr and SecretStoreSpecProviderVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesPtrType SecretStoreSpecProviderVaultAuthKubernetesArgs

func SecretStoreSpecProviderVaultAuthKubernetesPtr(v *SecretStoreSpecProviderVaultAuthKubernetesArgs) SecretStoreSpecProviderVaultAuthKubernetesPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetes {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) string { return v.MountPath }).(pulumi.StringOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) string { return v.Role }).(pulumi.StringOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) SecretStoreSpecProviderVaultAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetes
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs and SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput).ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs, SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr and SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs

func SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput).ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs, SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs

func SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdap struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path string `pulumi:"path"`
	// SecretRef to a key in a Secret resource containing password for the LDAP
	// user used to authenticate with Vault using the LDAP authentication
	// method
	SecretRef *SecretStoreSpecProviderVaultAuthLdapSecretRef `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username string `pulumi:"username"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthLdap
func (val *SecretStoreSpecProviderVaultAuthLdap) Defaults() *SecretStoreSpecProviderVaultAuthLdap {
	if val == nil {
		return nil
	}
	tmp := *val
	if utilities.IsZero(tmp.Path) {
		tmp.Path = "ldap"
	}
	return &tmp
}

// SecretStoreSpecProviderVaultAuthLdapInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapArgs and SecretStoreSpecProviderVaultAuthLdapOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapArgs{...}
type SecretStoreSpecProviderVaultAuthLdapInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput
	ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapOutput
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapArgs struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path pulumi.StringInput `pulumi:"path"`
	// SecretRef to a key in a Secret resource containing password for the LDAP
	// user used to authenticate with Vault using the LDAP authentication
	// method
	SecretRef SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username pulumi.StringInput `pulumi:"username"`
}

// Defaults sets the appropriate defaults for SecretStoreSpecProviderVaultAuthLdapArgs
func (val *SecretStoreSpecProviderVaultAuthLdapArgs) Defaults() *SecretStoreSpecProviderVaultAuthLdapArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Path == nil {
		tmp.Path = pulumi.String("ldap")
	}
	return &tmp
}
func (SecretStoreSpecProviderVaultAuthLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapOutput).ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapArgs, SecretStoreSpecProviderVaultAuthLdapPtr and SecretStoreSpecProviderVaultAuthLdapPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapPtrType SecretStoreSpecProviderVaultAuthLdapArgs

func SecretStoreSpecProviderVaultAuthLdapPtr(v *SecretStoreSpecProviderVaultAuthLdapArgs) SecretStoreSpecProviderVaultAuthLdapPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapPtrType) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapPtrType) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdap {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) string { return v.Path }).(pulumi.StringOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
func (o SecretStoreSpecProviderVaultAuthLdapOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) string { return v.Username }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderVaultAuthLdapPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) SecretStoreSpecProviderVaultAuthLdap {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdap
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefArgs and SecretStoreSpecProviderVaultAuthLdapSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthLdapSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput).ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefArgs, SecretStoreSpecProviderVaultAuthLdapSecretRefPtr and SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapSecretRefPtrType SecretStoreSpecProviderVaultAuthLdapSecretRefArgs

func SecretStoreSpecProviderVaultAuthLdapSecretRefPtr(v *SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdapSecretRef) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) SecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdapSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefArgs and SecretStoreSpecProviderVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput).ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefArgs, SecretStoreSpecProviderVaultAuthTokenSecretRefPtr and SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthTokenSecretRefPtrType SecretStoreSpecProviderVaultAuthTokenSecretRefArgs

func SecretStoreSpecProviderVaultAuthTokenSecretRefPtr(v *SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthTokenSecretRef) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) SecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// SecretStoreSpecProviderVaultCaProviderInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderArgs and SecretStoreSpecProviderVaultCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderInput` via:
//
//	SecretStoreSpecProviderVaultCaProviderArgs{...}
type SecretStoreSpecProviderVaultCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput
	ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderOutput
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecretStoreSpecProviderVaultCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderOutput)
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderOutput).ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderArgs, SecretStoreSpecProviderVaultCaProviderPtr and SecretStoreSpecProviderVaultCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderVaultCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput
	ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput
}

type secretStoreSpecProviderVaultCaProviderPtrType SecretStoreSpecProviderVaultCaProviderArgs

func SecretStoreSpecProviderVaultCaProviderPtr(v *SecretStoreSpecProviderVaultCaProviderArgs) SecretStoreSpecProviderVaultCaProviderPtrInput {
	return (*secretStoreSpecProviderVaultCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderVaultCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultCaProviderPtrType) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultCaProviderPtrType) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultCaProvider) *SecretStoreSpecProviderVaultCaProvider {
		return &v
	}).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderVaultCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderVaultCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderVaultCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Elem() SecretStoreSpecProviderVaultCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) SecretStoreSpecProviderVaultCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultCaProvider
		return ret
	}).(SecretStoreSpecProviderVaultCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhook struct {
	// Body
	Body *string `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle *string `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate webhook server certificate.
	CaProvider *SecretStoreSpecProviderWebhookCaProvider `pulumi:"caProvider"`
	// Headers
	Headers map[string]string `pulumi:"headers"`
	// Webhook Method
	Method *string `pulumi:"method"`
	// Result formatting
	Result SecretStoreSpecProviderWebhookResult `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets []SecretStoreSpecProviderWebhookSecrets `pulumi:"secrets"`
	// Timeout
	Timeout *string `pulumi:"timeout"`
	// Webhook url to call
	Url string `pulumi:"url"`
}

// SecretStoreSpecProviderWebhookInput is an input type that accepts SecretStoreSpecProviderWebhookArgs and SecretStoreSpecProviderWebhookOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookInput` via:
//
//	SecretStoreSpecProviderWebhookArgs{...}
type SecretStoreSpecProviderWebhookInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput
	ToSecretStoreSpecProviderWebhookOutputWithContext(context.Context) SecretStoreSpecProviderWebhookOutput
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookArgs struct {
	// Body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// The provider for the CA bundle to use to validate webhook server certificate.
	CaProvider SecretStoreSpecProviderWebhookCaProviderPtrInput `pulumi:"caProvider"`
	// Headers
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Webhook Method
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Result formatting
	Result SecretStoreSpecProviderWebhookResultInput `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets SecretStoreSpecProviderWebhookSecretsArrayInput `pulumi:"secrets"`
	// Timeout
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Webhook url to call
	Url pulumi.StringInput `pulumi:"url"`
}

func (SecretStoreSpecProviderWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput {
	return i.ToSecretStoreSpecProviderWebhookOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookOutput)
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookOutput).ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookPtrInput is an input type that accepts SecretStoreSpecProviderWebhookArgs, SecretStoreSpecProviderWebhookPtr and SecretStoreSpecProviderWebhookPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput
	ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookPtrOutput
}

type secretStoreSpecProviderWebhookPtrType SecretStoreSpecProviderWebhookArgs

func SecretStoreSpecProviderWebhookPtr(v *SecretStoreSpecProviderWebhookArgs) SecretStoreSpecProviderWebhookPtrInput {
	return (*secretStoreSpecProviderWebhookPtrType)(v)
}

func (*secretStoreSpecProviderWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookPtrType) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookPtrType) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhook {
		return &v
	}).(SecretStoreSpecProviderWebhookPtrOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
func (o SecretStoreSpecProviderWebhookOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookCaProvider { return v.CaProvider }).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Result formatting
func (o SecretStoreSpecProviderWebhookOutput) Result() SecretStoreSpecProviderWebhookResultOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) SecretStoreSpecProviderWebhookResult { return v.Result }).(SecretStoreSpecProviderWebhookResultOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookOutput) Secrets() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) []SecretStoreSpecProviderWebhookSecrets { return v.Secrets }).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) string { return v.Url }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderWebhookPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookPtrOutput) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPtrOutput) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPtrOutput) Elem() SecretStoreSpecProviderWebhookOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) SecretStoreSpecProviderWebhook {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhook
		return ret
	}).(SecretStoreSpecProviderWebhookOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
func (o SecretStoreSpecProviderWebhookPtrOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Result formatting
func (o SecretStoreSpecProviderWebhookPtrOutput) Result() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookResult {
		if v == nil {
			return nil
		}
		return &v.Result
	}).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookPtrOutput) Secrets() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) []SecretStoreSpecProviderWebhookSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type string `pulumi:"type"`
}

// SecretStoreSpecProviderWebhookCaProviderInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderArgs and SecretStoreSpecProviderWebhookCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderInput` via:
//
//	SecretStoreSpecProviderWebhookCaProviderArgs{...}
type SecretStoreSpecProviderWebhookCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput
	ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderOutput
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecretStoreSpecProviderWebhookCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderOutput)
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderOutput).ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderArgs, SecretStoreSpecProviderWebhookCaProviderPtr and SecretStoreSpecProviderWebhookCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput
	ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput
}

type secretStoreSpecProviderWebhookCaProviderPtrType SecretStoreSpecProviderWebhookCaProviderArgs

func SecretStoreSpecProviderWebhookCaProviderPtr(v *SecretStoreSpecProviderWebhookCaProviderArgs) SecretStoreSpecProviderWebhookCaProviderPtrInput {
	return (*secretStoreSpecProviderWebhookCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderWebhookCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookCaProviderPtrType) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookCaProviderPtrType) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookCaProvider) *SecretStoreSpecProviderWebhookCaProvider {
		return &v
	}).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) string { return v.Type }).(pulumi.StringOutput)
}

type SecretStoreSpecProviderWebhookCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Elem() SecretStoreSpecProviderWebhookCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) SecretStoreSpecProviderWebhookCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookCaProvider
		return ret
	}).(SecretStoreSpecProviderWebhookCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Headers
type SecretStoreSpecProviderWebhookHeaders struct {
}

// Result formatting
type SecretStoreSpecProviderWebhookResult struct {
	// Json path of return value
	JsonPath *string `pulumi:"jsonPath"`
}

// SecretStoreSpecProviderWebhookResultInput is an input type that accepts SecretStoreSpecProviderWebhookResultArgs and SecretStoreSpecProviderWebhookResultOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultInput` via:
//
//	SecretStoreSpecProviderWebhookResultArgs{...}
type SecretStoreSpecProviderWebhookResultInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput
	ToSecretStoreSpecProviderWebhookResultOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultOutput
}

// Result formatting
type SecretStoreSpecProviderWebhookResultArgs struct {
	// Json path of return value
	JsonPath pulumi.StringPtrInput `pulumi:"jsonPath"`
}

func (SecretStoreSpecProviderWebhookResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput {
	return i.ToSecretStoreSpecProviderWebhookResultOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultOutput)
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultOutput).ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookResultPtrInput is an input type that accepts SecretStoreSpecProviderWebhookResultArgs, SecretStoreSpecProviderWebhookResultPtr and SecretStoreSpecProviderWebhookResultPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookResultArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookResultPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput
	ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultPtrOutput
}

type secretStoreSpecProviderWebhookResultPtrType SecretStoreSpecProviderWebhookResultArgs

func SecretStoreSpecProviderWebhookResultPtr(v *SecretStoreSpecProviderWebhookResultArgs) SecretStoreSpecProviderWebhookResultPtrInput {
	return (*secretStoreSpecProviderWebhookResultPtrType)(v)
}

func (*secretStoreSpecProviderWebhookResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookResultPtrType) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookResultPtrType) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Result formatting
type SecretStoreSpecProviderWebhookResultOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookResult) *SecretStoreSpecProviderWebhookResult {
		return &v
	}).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookResult) *string { return v.JsonPath }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookResultPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) Elem() SecretStoreSpecProviderWebhookResultOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResult) SecretStoreSpecProviderWebhookResult {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookResult
		return ret
	}).(SecretStoreSpecProviderWebhookResultOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultPtrOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResult) *string {
		if v == nil {
			return nil
		}
		return v.JsonPath
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookSecrets struct {
	// Name of this secret in templates
	Name string `pulumi:"name"`
	// Secret ref to fill in credentials
	SecretRef SecretStoreSpecProviderWebhookSecretsSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderWebhookSecretsInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsArgs and SecretStoreSpecProviderWebhookSecretsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsArgs{...}
type SecretStoreSpecProviderWebhookSecretsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput
	ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsOutput
}

type SecretStoreSpecProviderWebhookSecretsArgs struct {
	// Name of this secret in templates
	Name pulumi.StringInput `pulumi:"name"`
	// Secret ref to fill in credentials
	SecretRef SecretStoreSpecProviderWebhookSecretsSecretRefInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderWebhookSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsArgs) ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsArgs) ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsOutput)
}

// SecretStoreSpecProviderWebhookSecretsArrayInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsArray and SecretStoreSpecProviderWebhookSecretsArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsArrayInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsArray{ SecretStoreSpecProviderWebhookSecretsArgs{...} }
type SecretStoreSpecProviderWebhookSecretsArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput
	ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput
}

type SecretStoreSpecProviderWebhookSecretsArray []SecretStoreSpecProviderWebhookSecretsInput

func (SecretStoreSpecProviderWebhookSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsArray) ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsArray) ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

type SecretStoreSpecProviderWebhookSecretsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsOutput) ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsOutput) ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

// Name of this secret in templates
func (o SecretStoreSpecProviderWebhookSecretsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecrets) string { return v.Name }).(pulumi.StringOutput)
}

// Secret ref to fill in credentials
func (o SecretStoreSpecProviderWebhookSecretsOutput) SecretRef() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecrets) SecretStoreSpecProviderWebhookSecretsSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

type SecretStoreSpecProviderWebhookSecretsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderWebhookSecrets {
		return vs[0].([]SecretStoreSpecProviderWebhookSecrets)[vs[1].(int)]
	}).(SecretStoreSpecProviderWebhookSecretsOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderWebhookSecretsSecretRefInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsSecretRefArgs and SecretStoreSpecProviderWebhookSecretsSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsSecretRefInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsSecretRefArgs{...}
type SecretStoreSpecProviderWebhookSecretsSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput
	ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockbox struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string `pulumi:"apiEndpoint"`
	// Auth defines the information necessary to authenticate against Yandex Lockbox
	Auth SecretStoreSpecProviderYandexlockboxAuth `pulumi:"auth"`
	// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
	CaProvider *SecretStoreSpecProviderYandexlockboxCaProvider `pulumi:"caProvider"`
}

// SecretStoreSpecProviderYandexlockboxInput is an input type that accepts SecretStoreSpecProviderYandexlockboxArgs and SecretStoreSpecProviderYandexlockboxOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxInput` via:
//
//	SecretStoreSpecProviderYandexlockboxArgs{...}
type SecretStoreSpecProviderYandexlockboxInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput
	ToSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxOutput
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput `pulumi:"apiEndpoint"`
	// Auth defines the information necessary to authenticate against Yandex Lockbox
	Auth SecretStoreSpecProviderYandexlockboxAuthInput `pulumi:"auth"`
	// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
	CaProvider SecretStoreSpecProviderYandexlockboxCaProviderPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderYandexlockboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxOutput)
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxOutput).ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxArgs, SecretStoreSpecProviderYandexlockboxPtr and SecretStoreSpecProviderYandexlockboxPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput
	ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput
}

type secretStoreSpecProviderYandexlockboxPtrType SecretStoreSpecProviderYandexlockboxArgs

func SecretStoreSpecProviderYandexlockboxPtr(v *SecretStoreSpecProviderYandexlockboxArgs) SecretStoreSpecProviderYandexlockboxPtrInput {
	return (*secretStoreSpecProviderYandexlockboxPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxPtrType) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxPtrType) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockbox {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
func (o SecretStoreSpecProviderYandexlockboxOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) SecretStoreSpecProviderYandexlockboxAuth { return v.Auth }).(SecretStoreSpecProviderYandexlockboxAuthOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
func (o SecretStoreSpecProviderYandexlockboxOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) SecretStoreSpecProviderYandexlockbox {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockbox
		return ret
	}).(SecretStoreSpecProviderYandexlockboxOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
func (o SecretStoreSpecProviderYandexlockboxPtrOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxAuth {
		if v == nil {
			return nil
		}
		return &v.Auth
	}).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
func (o SecretStoreSpecProviderYandexlockboxPtrOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuth struct {
	// The authorized key used for authentication
	AuthorizedKeySecretRef *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef `pulumi:"authorizedKeySecretRef"`
}

// SecretStoreSpecProviderYandexlockboxAuthInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthArgs and SecretStoreSpecProviderYandexlockboxAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput
	ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthArgs struct {
	// The authorized key used for authentication
	AuthorizedKeySecretRef SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthOutput).ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthArgs, SecretStoreSpecProviderYandexlockboxAuthPtr and SecretStoreSpecProviderYandexlockboxAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthPtrType SecretStoreSpecProviderYandexlockboxAuthArgs

func SecretStoreSpecProviderYandexlockboxAuthPtr(v *SecretStoreSpecProviderYandexlockboxAuthArgs) SecretStoreSpecProviderYandexlockboxAuthPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuth {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// The authorized key used for authentication
func (o SecretStoreSpecProviderYandexlockboxAuthOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuth) SecretStoreSpecProviderYandexlockboxAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuth
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthOutput)
}

// The authorized key used for authentication
func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput).ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs, SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs

func SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProvider struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	CertSecretRef *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef `pulumi:"certSecretRef"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderArgs and SecretStoreSpecProviderYandexlockboxCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderArgs struct {
	// A reference to a specific 'key' within a Secret resource,
	// In some instances, `key` is a required field.
	CertSecretRef SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput `pulumi:"certSecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderArgs, SecretStoreSpecProviderYandexlockboxCaProviderPtr and SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderPtrType SecretStoreSpecProviderYandexlockboxCaProviderArgs

func SecretStoreSpecProviderYandexlockboxCaProviderPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderArgs) SecretStoreSpecProviderYandexlockboxCaProviderPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProvider {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProvider) SecretStoreSpecProviderYandexlockboxCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProvider
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs, SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs

func SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettings struct {
	MaxRetries    *int    `pulumi:"maxRetries"`
	RetryInterval *string `pulumi:"retryInterval"`
}

// SecretStoreSpecRetrySettingsInput is an input type that accepts SecretStoreSpecRetrySettingsArgs and SecretStoreSpecRetrySettingsOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsInput` via:
//
//	SecretStoreSpecRetrySettingsArgs{...}
type SecretStoreSpecRetrySettingsInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput
	ToSecretStoreSpecRetrySettingsOutputWithContext(context.Context) SecretStoreSpecRetrySettingsOutput
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsArgs struct {
	MaxRetries    pulumi.IntPtrInput    `pulumi:"maxRetries"`
	RetryInterval pulumi.StringPtrInput `pulumi:"retryInterval"`
}

func (SecretStoreSpecRetrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput {
	return i.ToSecretStoreSpecRetrySettingsOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsOutput)
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsOutput).ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx)
}

// SecretStoreSpecRetrySettingsPtrInput is an input type that accepts SecretStoreSpecRetrySettingsArgs, SecretStoreSpecRetrySettingsPtr and SecretStoreSpecRetrySettingsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsPtrInput` via:
//
//	        SecretStoreSpecRetrySettingsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecRetrySettingsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput
	ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Context) SecretStoreSpecRetrySettingsPtrOutput
}

type secretStoreSpecRetrySettingsPtrType SecretStoreSpecRetrySettingsArgs

func SecretStoreSpecRetrySettingsPtr(v *SecretStoreSpecRetrySettingsArgs) SecretStoreSpecRetrySettingsPtrInput {
	return (*secretStoreSpecRetrySettingsPtrType)(v)
}

func (*secretStoreSpecRetrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i *secretStoreSpecRetrySettingsPtrType) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecRetrySettingsPtrType) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecRetrySettings) *SecretStoreSpecRetrySettings {
		return &v
	}).(SecretStoreSpecRetrySettingsPtrOutput)
}

func (o SecretStoreSpecRetrySettingsOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettings) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettings) *string { return v.RetryInterval }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecRetrySettingsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsPtrOutput) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPtrOutput) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPtrOutput) Elem() SecretStoreSpecRetrySettingsOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) SecretStoreSpecRetrySettings {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecRetrySettings
		return ret
	}).(SecretStoreSpecRetrySettingsOutput)
}

func (o SecretStoreSpecRetrySettingsPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsPtrOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) *string {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.StringPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatus struct {
	Conditions []SecretStoreStatusConditions `pulumi:"conditions"`
}

// SecretStoreStatusInput is an input type that accepts SecretStoreStatusArgs and SecretStoreStatusOutput values.
// You can construct a concrete instance of `SecretStoreStatusInput` via:
//
//	SecretStoreStatusArgs{...}
type SecretStoreStatusInput interface {
	pulumi.Input

	ToSecretStoreStatusOutput() SecretStoreStatusOutput
	ToSecretStoreStatusOutputWithContext(context.Context) SecretStoreStatusOutput
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusArgs struct {
	Conditions SecretStoreStatusConditionsArrayInput `pulumi:"conditions"`
}

func (SecretStoreStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatus)(nil)).Elem()
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusOutput() SecretStoreStatusOutput {
	return i.ToSecretStoreStatusOutputWithContext(context.Background())
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusOutputWithContext(ctx context.Context) SecretStoreStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusOutput)
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return i.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusOutput).ToSecretStoreStatusPtrOutputWithContext(ctx)
}

// SecretStoreStatusPtrInput is an input type that accepts SecretStoreStatusArgs, SecretStoreStatusPtr and SecretStoreStatusPtrOutput values.
// You can construct a concrete instance of `SecretStoreStatusPtrInput` via:
//
//	        SecretStoreStatusArgs{...}
//
//	or:
//
//	        nil
type SecretStoreStatusPtrInput interface {
	pulumi.Input

	ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput
	ToSecretStoreStatusPtrOutputWithContext(context.Context) SecretStoreStatusPtrOutput
}

type secretStoreStatusPtrType SecretStoreStatusArgs

func SecretStoreStatusPtr(v *SecretStoreStatusArgs) SecretStoreStatusPtrInput {
	return (*secretStoreStatusPtrType)(v)
}

func (*secretStoreStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatus)(nil)).Elem()
}

func (i *secretStoreStatusPtrType) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return i.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i *secretStoreStatusPtrType) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatus)(nil)).Elem()
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusOutput() SecretStoreStatusOutput {
	return o
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusOutputWithContext(ctx context.Context) SecretStoreStatusOutput {
	return o
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return o.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreStatus) *SecretStoreStatus {
		return &v
	}).(SecretStoreStatusPtrOutput)
}

func (o SecretStoreStatusOutput) Conditions() SecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v SecretStoreStatus) []SecretStoreStatusConditions { return v.Conditions }).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatus)(nil)).Elem()
}

func (o SecretStoreStatusPtrOutput) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return o
}

func (o SecretStoreStatusPtrOutput) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return o
}

func (o SecretStoreStatusPtrOutput) Elem() SecretStoreStatusOutput {
	return o.ApplyT(func(v *SecretStoreStatus) SecretStoreStatus {
		if v != nil {
			return *v
		}
		var ret SecretStoreStatus
		return ret
	}).(SecretStoreStatusOutput)
}

func (o SecretStoreStatusPtrOutput) Conditions() SecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SecretStoreStatus) []SecretStoreStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             string  `pulumi:"status"`
	Type               string  `pulumi:"type"`
}

// SecretStoreStatusConditionsInput is an input type that accepts SecretStoreStatusConditionsArgs and SecretStoreStatusConditionsOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsInput` via:
//
//	SecretStoreStatusConditionsArgs{...}
type SecretStoreStatusConditionsInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput
	ToSecretStoreStatusConditionsOutputWithContext(context.Context) SecretStoreStatusConditionsOutput
}

type SecretStoreStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringInput    `pulumi:"status"`
	Type               pulumi.StringInput    `pulumi:"type"`
}

func (SecretStoreStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditions)(nil)).Elem()
}

func (i SecretStoreStatusConditionsArgs) ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput {
	return i.ToSecretStoreStatusConditionsOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsArgs) ToSecretStoreStatusConditionsOutputWithContext(ctx context.Context) SecretStoreStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsOutput)
}

// SecretStoreStatusConditionsArrayInput is an input type that accepts SecretStoreStatusConditionsArray and SecretStoreStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsArrayInput` via:
//
//	SecretStoreStatusConditionsArray{ SecretStoreStatusConditionsArgs{...} }
type SecretStoreStatusConditionsArrayInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput
	ToSecretStoreStatusConditionsArrayOutputWithContext(context.Context) SecretStoreStatusConditionsArrayOutput
}

type SecretStoreStatusConditionsArray []SecretStoreStatusConditionsInput

func (SecretStoreStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditions)(nil)).Elem()
}

func (i SecretStoreStatusConditionsArray) ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput {
	return i.ToSecretStoreStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsArray) ToSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusConditionsOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditions)(nil)).Elem()
}

func (o SecretStoreStatusConditionsOutput) ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput {
	return o
}

func (o SecretStoreStatusConditionsOutput) ToSecretStoreStatusConditionsOutputWithContext(ctx context.Context) SecretStoreStatusConditionsOutput {
	return o
}

func (o SecretStoreStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

func (o SecretStoreStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type SecretStoreStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditions)(nil)).Elem()
}

func (o SecretStoreStatusConditionsArrayOutput) ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsArrayOutput) ToSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsArrayOutput) Index(i pulumi.IntInput) SecretStoreStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreStatusConditions {
		return vs[0].([]SecretStoreStatusConditions)[vs[1].(int)]
	}).(SecretStoreStatusConditionsOutput)
}

type PushSecretStatusSyncedPushSecretsMapMap map[string]PushSecretStatusSyncedPushSecretsMapInput

func (PushSecretStatusSyncedPushSecretsMapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]map[string]PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (i PushSecretStatusSyncedPushSecretsMapMap) ToPushSecretStatusSyncedPushSecretsMapMapOutput() PushSecretStatusSyncedPushSecretsMapMapOutput {
	return i.ToPushSecretStatusSyncedPushSecretsMapMapOutputWithContext(context.Background())
}

func (i PushSecretStatusSyncedPushSecretsMapMap) ToPushSecretStatusSyncedPushSecretsMapMapOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretStatusSyncedPushSecretsMapMapOutput)
}

// PushSecretStatusSyncedPushSecretsMapMapInput is an input type that accepts PushSecretStatusSyncedPushSecretsMapMap and PushSecretStatusSyncedPushSecretsMapMapOutput values.
// You can construct a concrete instance of `PushSecretStatusSyncedPushSecretsMapMapInput` via:
//
//	PushSecretStatusSyncedPushSecretsMapMap{ "key": PushSecretStatusSyncedPushSecretsMap{ "key": PushSecretStatusSyncedPushSecretsArgs{...} } }
type PushSecretStatusSyncedPushSecretsMapMapInput interface {
	pulumi.Input

	ToPushSecretStatusSyncedPushSecretsMapMapOutput() PushSecretStatusSyncedPushSecretsMapMapOutput
	ToPushSecretStatusSyncedPushSecretsMapMapOutputWithContext(context.Context) PushSecretStatusSyncedPushSecretsMapMapOutput
}

type PushSecretStatusSyncedPushSecretsMapMapOutput struct{ *pulumi.OutputState }

func (PushSecretStatusSyncedPushSecretsMapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]map[string]PushSecretStatusSyncedPushSecrets)(nil)).Elem()
}

func (o PushSecretStatusSyncedPushSecretsMapMapOutput) ToPushSecretStatusSyncedPushSecretsMapMapOutput() PushSecretStatusSyncedPushSecretsMapMapOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMapMapOutput) ToPushSecretStatusSyncedPushSecretsMapMapOutputWithContext(ctx context.Context) PushSecretStatusSyncedPushSecretsMapMapOutput {
	return o
}

func (o PushSecretStatusSyncedPushSecretsMapMapOutput) MapIndex(k pulumi.StringInput) PushSecretStatusSyncedPushSecretsMapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) map[string]PushSecretStatusSyncedPushSecrets {
		return vs[0].(map[string]map[string]PushSecretStatusSyncedPushSecrets)[vs[1].(string)]
	}).(PushSecretStatusSyncedPushSecretsMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecInput)(nil)).Elem(), ClusterSecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecPtrInput)(nil)).Elem(), ClusterSecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessCaProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAkeylessCaProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthRrsaInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderFakeInput)(nil)).Elem(), ClusterSecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderFakePtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderFakeDataInput)(nil)).Elem(), ClusterSecretStoreSpecProviderFakeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderFakeDataArrayInput)(nil)).Elem(), ClusterSecretStoreSpecProviderFakeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerCaProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOraclePtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRoleInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRolePtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertClientCertInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultCaProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderVaultCaProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookCaProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookCaProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookResultInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookResultPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecretsInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecretsArrayInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderWebhookSecretsSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderWebhookSecretsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput)(nil)).Elem(), ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecRetrySettingsInput)(nil)).Elem(), ClusterSecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreSpecRetrySettingsPtrInput)(nil)).Elem(), ClusterSecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreStatusInput)(nil)).Elem(), ClusterSecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreStatusPtrInput)(nil)).Elem(), ClusterSecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreStatusConditionsInput)(nil)).Elem(), ClusterSecretStoreStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreStatusConditionsArrayInput)(nil)).Elem(), ClusterSecretStoreStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecInput)(nil)).Elem(), ExternalSecretSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecPtrInput)(nil)).Elem(), ExternalSecretSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecDataInput)(nil)).Elem(), ExternalSecretSpecDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecDataArrayInput)(nil)).Elem(), ExternalSecretSpecDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecDataFromInput)(nil)).Elem(), ExternalSecretSpecDataFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecDataFromArrayInput)(nil)).Elem(), ExternalSecretSpecDataFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecDataRemoteRefInput)(nil)).Elem(), ExternalSecretSpecDataRemoteRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecSecretStoreRefInput)(nil)).Elem(), ExternalSecretSpecSecretStoreRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecSecretStoreRefPtrInput)(nil)).Elem(), ExternalSecretSpecSecretStoreRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetInput)(nil)).Elem(), ExternalSecretSpecTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetPtrInput)(nil)).Elem(), ExternalSecretSpecTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplatePtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateMetadataInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateMetadataPtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusInput)(nil)).Elem(), ExternalSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusPtrInput)(nil)).Elem(), ExternalSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingInput)(nil)).Elem(), ExternalSecretStatusBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingPtrInput)(nil)).Elem(), ExternalSecretStatusBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsInput)(nil)).Elem(), ExternalSecretStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsArrayInput)(nil)).Elem(), ExternalSecretStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecInput)(nil)).Elem(), PushSecretSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecPtrInput)(nil)).Elem(), PushSecretSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecDataInput)(nil)).Elem(), PushSecretSpecDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecDataArrayInput)(nil)).Elem(), PushSecretSpecDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecDataMatchInput)(nil)).Elem(), PushSecretSpecDataMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecDataMatchRemoteRefInput)(nil)).Elem(), PushSecretSpecDataMatchRemoteRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsArrayInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorPtrInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSelectorInput)(nil)).Elem(), PushSecretSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSelectorPtrInput)(nil)).Elem(), PushSecretSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSelectorSecretInput)(nil)).Elem(), PushSecretSpecSelectorSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecSelectorSecretPtrInput)(nil)).Elem(), PushSecretSpecSelectorSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateInput)(nil)).Elem(), PushSecretSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplatePtrInput)(nil)).Elem(), PushSecretSpecTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateMetadataInput)(nil)).Elem(), PushSecretSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateMetadataPtrInput)(nil)).Elem(), PushSecretSpecTemplateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromArrayInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapPtrInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapItemsInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromConfigMapItemsArrayInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretPtrInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretItemsInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretSpecTemplateTemplateFromSecretItemsArrayInput)(nil)).Elem(), PushSecretSpecTemplateTemplateFromSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusInput)(nil)).Elem(), PushSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusPtrInput)(nil)).Elem(), PushSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusConditionsInput)(nil)).Elem(), PushSecretStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusConditionsArrayInput)(nil)).Elem(), PushSecretStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusSyncedPushSecretsInput)(nil)).Elem(), PushSecretStatusSyncedPushSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMapInput)(nil)).Elem(), PushSecretStatusSyncedPushSecretsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatchInput)(nil)).Elem(), PushSecretStatusSyncedPushSecretsMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMatchRemoteRefInput)(nil)).Elem(), PushSecretStatusSyncedPushSecretsMatchRemoteRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecInput)(nil)).Elem(), SecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecPtrInput)(nil)).Elem(), SecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInput)(nil)).Elem(), SecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsInput)(nil)).Elem(), SecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeInput)(nil)).Elem(), SecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakePtrInput)(nil)).Elem(), SecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataArrayInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabInput)(nil)).Elem(), SecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmInput)(nil)).Elem(), SecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleInput)(nil)).Elem(), SecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOraclePtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultInput)(nil)).Elem(), SecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookInput)(nil)).Elem(), SecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsArrayInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsInput)(nil)).Elem(), SecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsPtrInput)(nil)).Elem(), SecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusInput)(nil)).Elem(), SecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusPtrInput)(nil)).Elem(), SecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsInput)(nil)).Elem(), SecretStoreStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsArrayInput)(nil)).Elem(), SecretStoreStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretStatusSyncedPushSecretsMapMapInput)(nil)).Elem(), PushSecretStatusSyncedPushSecretsMapMap{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessCaProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAkeylessCaProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthRrsaOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthJwtOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderFakeOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderFakePtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderFakeDataOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderFakeDataArrayOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthTokenOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthTokenPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesServerOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesServerPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesServerCaProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOraclePtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderOracleServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthLdapOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthLdapPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultCaProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderVaultCaProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookCaProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookCaProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookResultOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookResultPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookSecretsOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookSecretsArrayOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderWebhookSecretsSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxAuthOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxAuthPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxCaProviderOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecRetrySettingsOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreSpecRetrySettingsPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreStatusOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreStatusPtrOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreStatusConditionsOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecDataOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecDataArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecDataFromOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecDataFromArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecDataRemoteRefOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecSecretStoreRefOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecSecretStoreRefPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplatePtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateMetadataOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromConfigMapOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromConfigMapPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecOutput{})
	pulumi.RegisterOutputType(PushSecretSpecPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecDataOutput{})
	pulumi.RegisterOutputType(PushSecretSpecDataArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecDataMatchOutput{})
	pulumi.RegisterOutputType(PushSecretSpecDataMatchRemoteRefOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsLabelSelectorOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSecretStoreRefsLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSelectorOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSelectorSecretOutput{})
	pulumi.RegisterOutputType(PushSecretSpecSelectorSecretPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplatePtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateMetadataOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateMetadataPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromConfigMapOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromConfigMapPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromConfigMapItemsOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromSecretOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromSecretPtrOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromSecretItemsOutput{})
	pulumi.RegisterOutputType(PushSecretSpecTemplateTemplateFromSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretStatusOutput{})
	pulumi.RegisterOutputType(PushSecretStatusPtrOutput{})
	pulumi.RegisterOutputType(PushSecretStatusConditionsOutput{})
	pulumi.RegisterOutputType(PushSecretStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretStatusSyncedPushSecretsOutput{})
	pulumi.RegisterOutputType(PushSecretStatusSyncedPushSecretsMapOutput{})
	pulumi.RegisterOutputType(PushSecretStatusSyncedPushSecretsMatchOutput{})
	pulumi.RegisterOutputType(PushSecretStatusSyncedPushSecretsMatchRemoteRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIdsecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIdsecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOraclePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(PushSecretStatusSyncedPushSecretsMapMapOutput{})
}
