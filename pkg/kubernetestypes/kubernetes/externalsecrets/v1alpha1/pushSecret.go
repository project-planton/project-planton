// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PushSecret struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// PushSecretSpec configures the behavior of the PushSecret.
	Spec PushSecretSpecPtrOutput `pulumi:"spec"`
	// PushSecretStatus indicates the history of the status of PushSecret.
	Status PushSecretStatusPtrOutput `pulumi:"status"`
}

// NewPushSecret registers a new resource with the given unique name, arguments, and options.
func NewPushSecret(ctx *pulumi.Context,
	name string, args *PushSecretArgs, opts ...pulumi.ResourceOption) (*PushSecret, error) {
	if args == nil {
		args = &PushSecretArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PushSecret")
	if args.Spec != nil {
		args.Spec = args.Spec.ToPushSecretSpecPtrOutput().ApplyT(func(v *PushSecretSpec) *PushSecretSpec { return v.Defaults() }).(PushSecretSpecPtrOutput)
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PushSecret
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:PushSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPushSecret gets an existing PushSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPushSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PushSecretState, opts ...pulumi.ResourceOption) (*PushSecret, error) {
	var resource PushSecret
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:PushSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PushSecret resources.
type pushSecretState struct {
}

type PushSecretState struct {
}

func (PushSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*pushSecretState)(nil)).Elem()
}

type pushSecretArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// PushSecretSpec configures the behavior of the PushSecret.
	Spec *PushSecretSpec `pulumi:"spec"`
	// PushSecretStatus indicates the history of the status of PushSecret.
	Status *PushSecretStatus `pulumi:"status"`
}

// The set of arguments for constructing a PushSecret resource.
type PushSecretArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// PushSecretSpec configures the behavior of the PushSecret.
	Spec PushSecretSpecPtrInput
	// PushSecretStatus indicates the history of the status of PushSecret.
	Status PushSecretStatusPtrInput
}

func (PushSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pushSecretArgs)(nil)).Elem()
}

type PushSecretInput interface {
	pulumi.Input

	ToPushSecretOutput() PushSecretOutput
	ToPushSecretOutputWithContext(ctx context.Context) PushSecretOutput
}

func (*PushSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecret)(nil)).Elem()
}

func (i *PushSecret) ToPushSecretOutput() PushSecretOutput {
	return i.ToPushSecretOutputWithContext(context.Background())
}

func (i *PushSecret) ToPushSecretOutputWithContext(ctx context.Context) PushSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretOutput)
}

type PushSecretOutput struct{ *pulumi.OutputState }

func (PushSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecret)(nil)).Elem()
}

func (o PushSecretOutput) ToPushSecretOutput() PushSecretOutput {
	return o
}

func (o PushSecretOutput) ToPushSecretOutputWithContext(ctx context.Context) PushSecretOutput {
	return o
}

func (o PushSecretOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecret) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o PushSecretOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PushSecret) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o PushSecretOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *PushSecret) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// PushSecretSpec configures the behavior of the PushSecret.
func (o PushSecretOutput) Spec() PushSecretSpecPtrOutput {
	return o.ApplyT(func(v *PushSecret) PushSecretSpecPtrOutput { return v.Spec }).(PushSecretSpecPtrOutput)
}

// PushSecretStatus indicates the history of the status of PushSecret.
func (o PushSecretOutput) Status() PushSecretStatusPtrOutput {
	return o.ApplyT(func(v *PushSecret) PushSecretStatusPtrOutput { return v.Status }).(PushSecretStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretInput)(nil)).Elem(), &PushSecret{})
	pulumi.RegisterOutputType(PushSecretOutput{})
}
