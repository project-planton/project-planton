// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GCRAccessToken generates an GCP access token
// that can be used to authenticate with GCR.
type GCRAccessToken struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput      `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput      `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput  `pulumi:"metadata"`
	Spec       GCRAccessTokenSpecPtrOutput `pulumi:"spec"`
}

// NewGCRAccessToken registers a new resource with the given unique name, arguments, and options.
func NewGCRAccessToken(ctx *pulumi.Context,
	name string, args *GCRAccessTokenArgs, opts ...pulumi.ResourceOption) (*GCRAccessToken, error) {
	if args == nil {
		args = &GCRAccessTokenArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("GCRAccessToken")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GCRAccessToken
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:GCRAccessToken", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGCRAccessToken gets an existing GCRAccessToken resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGCRAccessToken(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GCRAccessTokenState, opts ...pulumi.ResourceOption) (*GCRAccessToken, error) {
	var resource GCRAccessToken
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:GCRAccessToken", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GCRAccessToken resources.
type gcraccessTokenState struct {
}

type GCRAccessTokenState struct {
}

func (GCRAccessTokenState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcraccessTokenState)(nil)).Elem()
}

type gcraccessTokenArgs struct {
	ApiVersion *string             `pulumi:"apiVersion"`
	Kind       *string             `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec       *GCRAccessTokenSpec `pulumi:"spec"`
}

// The set of arguments for constructing a GCRAccessToken resource.
type GCRAccessTokenArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       GCRAccessTokenSpecPtrInput
}

func (GCRAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcraccessTokenArgs)(nil)).Elem()
}

type GCRAccessTokenInput interface {
	pulumi.Input

	ToGCRAccessTokenOutput() GCRAccessTokenOutput
	ToGCRAccessTokenOutputWithContext(ctx context.Context) GCRAccessTokenOutput
}

func (*GCRAccessToken) ElementType() reflect.Type {
	return reflect.TypeOf((**GCRAccessToken)(nil)).Elem()
}

func (i *GCRAccessToken) ToGCRAccessTokenOutput() GCRAccessTokenOutput {
	return i.ToGCRAccessTokenOutputWithContext(context.Background())
}

func (i *GCRAccessToken) ToGCRAccessTokenOutputWithContext(ctx context.Context) GCRAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCRAccessTokenOutput)
}

type GCRAccessTokenOutput struct{ *pulumi.OutputState }

func (GCRAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCRAccessToken)(nil)).Elem()
}

func (o GCRAccessTokenOutput) ToGCRAccessTokenOutput() GCRAccessTokenOutput {
	return o
}

func (o GCRAccessTokenOutput) ToGCRAccessTokenOutputWithContext(ctx context.Context) GCRAccessTokenOutput {
	return o
}

func (o GCRAccessTokenOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCRAccessToken) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GCRAccessTokenOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GCRAccessToken) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GCRAccessTokenOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *GCRAccessToken) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o GCRAccessTokenOutput) Spec() GCRAccessTokenSpecPtrOutput {
	return o.ApplyT(func(v *GCRAccessToken) GCRAccessTokenSpecPtrOutput { return v.Spec }).(GCRAccessTokenSpecPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GCRAccessTokenInput)(nil)).Elem(), &GCRAccessToken{})
	pulumi.RegisterOutputType(GCRAccessTokenOutput{})
}
