// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type AuthorizationPolicyType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html
	Spec   interface{}            `pulumi:"spec"`
	Status map[string]interface{} `pulumi:"status"`
}

type PeerAuthenticationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
	Spec   *PeerAuthenticationSpec `pulumi:"spec"`
	Status map[string]interface{}  `pulumi:"status"`
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpec struct {
	// Mutual TLS settings for workload.
	Mtls *PeerAuthenticationSpecMtls `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls map[string]PeerAuthenticationSpecPortLevelMtls `pulumi:"portLevelMtls"`
	// The selector determines the workloads to apply the PeerAuthentication on.
	Selector *PeerAuthenticationSpecSelector `pulumi:"selector"`
}

// PeerAuthenticationSpecInput is an input type that accepts PeerAuthenticationSpecArgs and PeerAuthenticationSpecOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecInput` via:
//
//	PeerAuthenticationSpecArgs{...}
type PeerAuthenticationSpecInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput
	ToPeerAuthenticationSpecOutputWithContext(context.Context) PeerAuthenticationSpecOutput
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecArgs struct {
	// Mutual TLS settings for workload.
	Mtls PeerAuthenticationSpecMtlsPtrInput `pulumi:"mtls"`
	// Port specific mutual TLS settings.
	PortLevelMtls PeerAuthenticationSpecPortLevelMtlsMapInput `pulumi:"portLevelMtls"`
	// The selector determines the workloads to apply the PeerAuthentication on.
	Selector PeerAuthenticationSpecSelectorPtrInput `pulumi:"selector"`
}

func (PeerAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return i.ToPeerAuthenticationSpecOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput)
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecArgs) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecOutput).ToPeerAuthenticationSpecPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecPtrInput is an input type that accepts PeerAuthenticationSpecArgs, PeerAuthenticationSpecPtr and PeerAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPtrInput` via:
//
//	        PeerAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput
	ToPeerAuthenticationSpecPtrOutputWithContext(context.Context) PeerAuthenticationSpecPtrOutput
}

type peerAuthenticationSpecPtrType PeerAuthenticationSpecArgs

func PeerAuthenticationSpecPtr(v *PeerAuthenticationSpecArgs) PeerAuthenticationSpecPtrInput {
	return (*peerAuthenticationSpecPtrType)(v)
}

func (*peerAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return i.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecPtrType) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPtrOutput)
}

// Peer authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/peer_authentication.html
type PeerAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutput() PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecOutputWithContext(ctx context.Context) PeerAuthenticationSpecOutput {
	return o
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o.ToPeerAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpec) *PeerAuthenticationSpec {
		return &v
	}).(PeerAuthenticationSpecPtrOutput)
}

// Mutual TLS settings for workload.
func (o PeerAuthenticationSpecOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecMtls { return v.Mtls }).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecOutput) PortLevelMtls() PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) map[string]PeerAuthenticationSpecPortLevelMtls { return v.PortLevelMtls }).(PeerAuthenticationSpecPortLevelMtlsMapOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
func (o PeerAuthenticationSpecOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpec) *PeerAuthenticationSpecSelector { return v.Selector }).(PeerAuthenticationSpecSelectorPtrOutput)
}

type PeerAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpec)(nil)).Elem()
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutput() PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) ToPeerAuthenticationSpecPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecPtrOutput {
	return o
}

func (o PeerAuthenticationSpecPtrOutput) Elem() PeerAuthenticationSpecOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) PeerAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpec
		return ret
	}).(PeerAuthenticationSpecOutput)
}

// Mutual TLS settings for workload.
func (o PeerAuthenticationSpecPtrOutput) Mtls() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecMtls {
		if v == nil {
			return nil
		}
		return v.Mtls
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Port specific mutual TLS settings.
func (o PeerAuthenticationSpecPtrOutput) PortLevelMtls() PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) map[string]PeerAuthenticationSpecPortLevelMtls {
		if v == nil {
			return nil
		}
		return v.PortLevelMtls
	}).(PeerAuthenticationSpecPortLevelMtlsMapOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
func (o PeerAuthenticationSpecPtrOutput) Selector() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpec) *PeerAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtls struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecMtlsInput is an input type that accepts PeerAuthenticationSpecMtlsArgs and PeerAuthenticationSpecMtlsOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsInput` via:
//
//	PeerAuthenticationSpecMtlsArgs{...}
type PeerAuthenticationSpecMtlsInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput
	ToPeerAuthenticationSpecMtlsOutputWithContext(context.Context) PeerAuthenticationSpecMtlsOutput
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsArgs struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecMtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return i.ToPeerAuthenticationSpecMtlsOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput)
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecMtlsArgs) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsOutput).ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecMtlsPtrInput is an input type that accepts PeerAuthenticationSpecMtlsArgs, PeerAuthenticationSpecMtlsPtr and PeerAuthenticationSpecMtlsPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecMtlsPtrInput` via:
//
//	        PeerAuthenticationSpecMtlsArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecMtlsPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput
	ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Context) PeerAuthenticationSpecMtlsPtrOutput
}

type peerAuthenticationSpecMtlsPtrType PeerAuthenticationSpecMtlsArgs

func PeerAuthenticationSpecMtlsPtr(v *PeerAuthenticationSpecMtlsArgs) PeerAuthenticationSpecMtlsPtrInput {
	return (*peerAuthenticationSpecMtlsPtrType)(v)
}

func (*peerAuthenticationSpecMtlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return i.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecMtlsPtrType) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Mutual TLS settings for workload.
type PeerAuthenticationSpecMtlsOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutput() PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o.ToPeerAuthenticationSpecMtlsPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecMtlsOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecMtls) *PeerAuthenticationSpecMtls {
		return &v
	}).(PeerAuthenticationSpecMtlsPtrOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecMtls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecMtlsPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecMtlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutput() PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) ToPeerAuthenticationSpecMtlsPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecMtlsPtrOutput {
	return o
}

func (o PeerAuthenticationSpecMtlsPtrOutput) Elem() PeerAuthenticationSpecMtlsOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) PeerAuthenticationSpecMtls {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecMtls
		return ret
	}).(PeerAuthenticationSpecMtlsOutput)
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecMtlsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecMtls) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecPortLevelMtls struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode *string `pulumi:"mode"`
}

// PeerAuthenticationSpecPortLevelMtlsInput is an input type that accepts PeerAuthenticationSpecPortLevelMtlsArgs and PeerAuthenticationSpecPortLevelMtlsOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPortLevelMtlsInput` via:
//
//	PeerAuthenticationSpecPortLevelMtlsArgs{...}
type PeerAuthenticationSpecPortLevelMtlsInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPortLevelMtlsOutput() PeerAuthenticationSpecPortLevelMtlsOutput
	ToPeerAuthenticationSpecPortLevelMtlsOutputWithContext(context.Context) PeerAuthenticationSpecPortLevelMtlsOutput
}

type PeerAuthenticationSpecPortLevelMtlsArgs struct {
	// Defines the mTLS mode used for peer authentication.
	//
	// Valid Options: DISABLE, PERMISSIVE, STRICT
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (PeerAuthenticationSpecPortLevelMtlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPortLevelMtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecPortLevelMtlsArgs) ToPeerAuthenticationSpecPortLevelMtlsOutput() PeerAuthenticationSpecPortLevelMtlsOutput {
	return i.ToPeerAuthenticationSpecPortLevelMtlsOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPortLevelMtlsArgs) ToPeerAuthenticationSpecPortLevelMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortLevelMtlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPortLevelMtlsOutput)
}

// PeerAuthenticationSpecPortLevelMtlsMapInput is an input type that accepts PeerAuthenticationSpecPortLevelMtlsMap and PeerAuthenticationSpecPortLevelMtlsMapOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecPortLevelMtlsMapInput` via:
//
//	PeerAuthenticationSpecPortLevelMtlsMap{ "key": PeerAuthenticationSpecPortLevelMtlsArgs{...} }
type PeerAuthenticationSpecPortLevelMtlsMapInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecPortLevelMtlsMapOutput() PeerAuthenticationSpecPortLevelMtlsMapOutput
	ToPeerAuthenticationSpecPortLevelMtlsMapOutputWithContext(context.Context) PeerAuthenticationSpecPortLevelMtlsMapOutput
}

type PeerAuthenticationSpecPortLevelMtlsMap map[string]PeerAuthenticationSpecPortLevelMtlsInput

func (PeerAuthenticationSpecPortLevelMtlsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PeerAuthenticationSpecPortLevelMtls)(nil)).Elem()
}

func (i PeerAuthenticationSpecPortLevelMtlsMap) ToPeerAuthenticationSpecPortLevelMtlsMapOutput() PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return i.ToPeerAuthenticationSpecPortLevelMtlsMapOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecPortLevelMtlsMap) ToPeerAuthenticationSpecPortLevelMtlsMapOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecPortLevelMtlsMapOutput)
}

type PeerAuthenticationSpecPortLevelMtlsOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPortLevelMtlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecPortLevelMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecPortLevelMtlsOutput) ToPeerAuthenticationSpecPortLevelMtlsOutput() PeerAuthenticationSpecPortLevelMtlsOutput {
	return o
}

func (o PeerAuthenticationSpecPortLevelMtlsOutput) ToPeerAuthenticationSpecPortLevelMtlsOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortLevelMtlsOutput {
	return o
}

// Defines the mTLS mode used for peer authentication.
//
// Valid Options: DISABLE, PERMISSIVE, STRICT
func (o PeerAuthenticationSpecPortLevelMtlsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecPortLevelMtls) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type PeerAuthenticationSpecPortLevelMtlsMapOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecPortLevelMtlsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PeerAuthenticationSpecPortLevelMtls)(nil)).Elem()
}

func (o PeerAuthenticationSpecPortLevelMtlsMapOutput) ToPeerAuthenticationSpecPortLevelMtlsMapOutput() PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return o
}

func (o PeerAuthenticationSpecPortLevelMtlsMapOutput) ToPeerAuthenticationSpecPortLevelMtlsMapOutputWithContext(ctx context.Context) PeerAuthenticationSpecPortLevelMtlsMapOutput {
	return o
}

func (o PeerAuthenticationSpecPortLevelMtlsMapOutput) MapIndex(k pulumi.StringInput) PeerAuthenticationSpecPortLevelMtlsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PeerAuthenticationSpecPortLevelMtls {
		return vs[0].(map[string]PeerAuthenticationSpecPortLevelMtls)[vs[1].(string)]
	}).(PeerAuthenticationSpecPortLevelMtlsOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PeerAuthenticationSpecSelectorInput is an input type that accepts PeerAuthenticationSpecSelectorArgs and PeerAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorInput` via:
//
//	PeerAuthenticationSpecSelectorArgs{...}
type PeerAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput
	ToPeerAuthenticationSpecSelectorOutputWithContext(context.Context) PeerAuthenticationSpecSelectorOutput
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PeerAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return i.ToPeerAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput)
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PeerAuthenticationSpecSelectorArgs) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorOutput).ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// PeerAuthenticationSpecSelectorPtrInput is an input type that accepts PeerAuthenticationSpecSelectorArgs, PeerAuthenticationSpecSelectorPtr and PeerAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PeerAuthenticationSpecSelectorPtrInput` via:
//
//	        PeerAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PeerAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput
	ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Context) PeerAuthenticationSpecSelectorPtrOutput
}

type peerAuthenticationSpecSelectorPtrType PeerAuthenticationSpecSelectorArgs

func PeerAuthenticationSpecSelectorPtr(v *PeerAuthenticationSpecSelectorArgs) PeerAuthenticationSpecSelectorPtrInput {
	return (*peerAuthenticationSpecSelectorPtrType)(v)
}

func (*peerAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return i.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *peerAuthenticationSpecSelectorPtrType) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerAuthenticationSpecSelectorPtrOutput)
}

// The selector determines the workloads to apply the PeerAuthentication on.
type PeerAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutput() PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o.ToPeerAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PeerAuthenticationSpecSelectorOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeerAuthenticationSpecSelector) *PeerAuthenticationSpecSelector {
		return &v
	}).(PeerAuthenticationSpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PeerAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type PeerAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PeerAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeerAuthenticationSpecSelector)(nil)).Elem()
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutput() PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) ToPeerAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) PeerAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o PeerAuthenticationSpecSelectorPtrOutput) Elem() PeerAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) PeerAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret PeerAuthenticationSpecSelector
		return ret
	}).(PeerAuthenticationSpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o PeerAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PeerAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
type PeerAuthenticationSpecSelectorMatchLabels struct {
}

type RequestAuthenticationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
	Spec   *RequestAuthenticationSpec `pulumi:"spec"`
	Status map[string]interface{}     `pulumi:"status"`
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpec struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules []RequestAuthenticationSpecJwtRules `pulumi:"jwtRules"`
	// Optional.
	Selector  *RequestAuthenticationSpecSelector  `pulumi:"selector"`
	TargetRef *RequestAuthenticationSpecTargetRef `pulumi:"targetRef"`
	// Optional.
	TargetRefs []RequestAuthenticationSpecTargetRefs `pulumi:"targetRefs"`
}

// RequestAuthenticationSpecInput is an input type that accepts RequestAuthenticationSpecArgs and RequestAuthenticationSpecOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecInput` via:
//
//	RequestAuthenticationSpecArgs{...}
type RequestAuthenticationSpecInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput
	ToRequestAuthenticationSpecOutputWithContext(context.Context) RequestAuthenticationSpecOutput
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecArgs struct {
	// Define the list of JWTs that can be validated at the selected workloads' proxy.
	JwtRules RequestAuthenticationSpecJwtRulesArrayInput `pulumi:"jwtRules"`
	// Optional.
	Selector  RequestAuthenticationSpecSelectorPtrInput  `pulumi:"selector"`
	TargetRef RequestAuthenticationSpecTargetRefPtrInput `pulumi:"targetRef"`
	// Optional.
	TargetRefs RequestAuthenticationSpecTargetRefsArrayInput `pulumi:"targetRefs"`
}

func (RequestAuthenticationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return i.ToRequestAuthenticationSpecOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput)
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecArgs) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecOutput).ToRequestAuthenticationSpecPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecPtrInput is an input type that accepts RequestAuthenticationSpecArgs, RequestAuthenticationSpecPtr and RequestAuthenticationSpecPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecPtrInput` via:
//
//	        RequestAuthenticationSpecArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput
	ToRequestAuthenticationSpecPtrOutputWithContext(context.Context) RequestAuthenticationSpecPtrOutput
}

type requestAuthenticationSpecPtrType RequestAuthenticationSpecArgs

func RequestAuthenticationSpecPtr(v *RequestAuthenticationSpecArgs) RequestAuthenticationSpecPtrInput {
	return (*requestAuthenticationSpecPtrType)(v)
}

func (*requestAuthenticationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return i.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecPtrType) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecPtrOutput)
}

// Request authentication configuration for workloads. See more details at: https://istio.io/docs/reference/config/security/request_authentication.html
type RequestAuthenticationSpecOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutput() RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecOutputWithContext(ctx context.Context) RequestAuthenticationSpecOutput {
	return o
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o.ToRequestAuthenticationSpecPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpec) *RequestAuthenticationSpec {
		return &v
	}).(RequestAuthenticationSpecPtrOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecOutput) JwtRules() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) []RequestAuthenticationSpecJwtRules { return v.JwtRules }).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

// Optional.
func (o RequestAuthenticationSpecOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) *RequestAuthenticationSpecSelector { return v.Selector }).(RequestAuthenticationSpecSelectorPtrOutput)
}

func (o RequestAuthenticationSpecOutput) TargetRef() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) *RequestAuthenticationSpecTargetRef { return v.TargetRef }).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecOutput) TargetRefs() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpec) []RequestAuthenticationSpecTargetRefs { return v.TargetRefs }).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpec)(nil)).Elem()
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutput() RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) ToRequestAuthenticationSpecPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecPtrOutput {
	return o
}

func (o RequestAuthenticationSpecPtrOutput) Elem() RequestAuthenticationSpecOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) RequestAuthenticationSpec {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpec
		return ret
	}).(RequestAuthenticationSpecOutput)
}

// Define the list of JWTs that can be validated at the selected workloads' proxy.
func (o RequestAuthenticationSpecPtrOutput) JwtRules() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) []RequestAuthenticationSpecJwtRules {
		if v == nil {
			return nil
		}
		return v.JwtRules
	}).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

// Optional.
func (o RequestAuthenticationSpecPtrOutput) Selector() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) *RequestAuthenticationSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

func (o RequestAuthenticationSpecPtrOutput) TargetRef() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) *RequestAuthenticationSpecTargetRef {
		if v == nil {
			return nil
		}
		return v.TargetRef
	}).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// Optional.
func (o RequestAuthenticationSpecPtrOutput) TargetRefs() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpec) []RequestAuthenticationSpecTargetRefs {
		if v == nil {
			return nil
		}
		return v.TargetRefs
	}).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecJwtRules struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences []string `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken *bool `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies []string `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders []RequestAuthenticationSpecJwtRulesFromHeaders `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams []string `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer string `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks *string `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri *string `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri *string `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders []RequestAuthenticationSpecJwtRulesOutputClaimToHeaders `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader *string `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout *string `pulumi:"timeout"`
}

// RequestAuthenticationSpecJwtRulesInput is an input type that accepts RequestAuthenticationSpecJwtRulesArgs and RequestAuthenticationSpecJwtRulesOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesInput` via:
//
//	RequestAuthenticationSpecJwtRulesArgs{...}
type RequestAuthenticationSpecJwtRulesInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput
	ToRequestAuthenticationSpecJwtRulesOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutput
}

type RequestAuthenticationSpecJwtRulesArgs struct {
	// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// If set to true, the original token will be kept for the upstream request.
	ForwardOriginalToken pulumi.BoolPtrInput `pulumi:"forwardOriginalToken"`
	// List of cookie names from which JWT is expected.
	FromCookies pulumi.StringArrayInput `pulumi:"fromCookies"`
	// List of header locations from which JWT is expected.
	FromHeaders RequestAuthenticationSpecJwtRulesFromHeadersArrayInput `pulumi:"fromHeaders"`
	// List of query parameters from which JWT is expected.
	FromParams pulumi.StringArrayInput `pulumi:"fromParams"`
	// Identifies the issuer that issued the JWT.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// JSON Web Key Set of public keys to validate signature of the JWT.
	Jwks pulumi.StringPtrInput `pulumi:"jwks"`
	// URL of the provider's public key set to validate signature of the JWT.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// URL of the provider's public key set to validate signature of the JWT.
	Jwks_uri pulumi.StringPtrInput `pulumi:"jwks_uri"`
	// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
	OutputClaimToHeaders RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput `pulumi:"outputClaimToHeaders"`
	// This field specifies the header name to output a successfully verified JWT payload to the backend.
	OutputPayloadToHeader pulumi.StringPtrInput `pulumi:"outputPayloadToHeader"`
	// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (RequestAuthenticationSpecJwtRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesArgs) ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesArgs) ToRequestAuthenticationSpecJwtRulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutput)
}

// RequestAuthenticationSpecJwtRulesArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesArray and RequestAuthenticationSpecJwtRulesArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesArray{ RequestAuthenticationSpecJwtRulesArgs{...} }
type RequestAuthenticationSpecJwtRulesArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput
	ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesArrayOutput
}

type RequestAuthenticationSpecJwtRulesArray []RequestAuthenticationSpecJwtRulesInput

func (RequestAuthenticationSpecJwtRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesArray) ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesArray) ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesArrayOutput)
}

type RequestAuthenticationSpecJwtRulesOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutput) ToRequestAuthenticationSpecJwtRulesOutput() RequestAuthenticationSpecJwtRulesOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutput) ToRequestAuthenticationSpecJwtRulesOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutput {
	return o
}

// The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access.
func (o RequestAuthenticationSpecJwtRulesOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// If set to true, the original token will be kept for the upstream request.
func (o RequestAuthenticationSpecJwtRulesOutput) ForwardOriginalToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *bool { return v.ForwardOriginalToken }).(pulumi.BoolPtrOutput)
}

// List of cookie names from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromCookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.FromCookies }).(pulumi.StringArrayOutput)
}

// List of header locations from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromHeaders() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []RequestAuthenticationSpecJwtRulesFromHeaders {
		return v.FromHeaders
	}).(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput)
}

// List of query parameters from which JWT is expected.
func (o RequestAuthenticationSpecJwtRulesOutput) FromParams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []string { return v.FromParams }).(pulumi.StringArrayOutput)
}

// Identifies the issuer that issued the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) string { return v.Issuer }).(pulumi.StringOutput)
}

// JSON Web Key Set of public keys to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Jwks() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Jwks }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// URL of the provider's public key set to validate signature of the JWT.
func (o RequestAuthenticationSpecJwtRulesOutput) Jwks_uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Jwks_uri }).(pulumi.StringPtrOutput)
}

// This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.
func (o RequestAuthenticationSpecJwtRulesOutput) OutputClaimToHeaders() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) []RequestAuthenticationSpecJwtRulesOutputClaimToHeaders {
		return v.OutputClaimToHeaders
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput)
}

// This field specifies the header name to output a successfully verified JWT payload to the backend.
func (o RequestAuthenticationSpecJwtRulesOutput) OutputPayloadToHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.OutputPayloadToHeader }).(pulumi.StringPtrOutput)
}

// The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched.
func (o RequestAuthenticationSpecJwtRulesOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRules) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRules)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) ToRequestAuthenticationSpecJwtRulesArrayOutput() RequestAuthenticationSpecJwtRulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) ToRequestAuthenticationSpecJwtRulesArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRules {
		return vs[0].([]RequestAuthenticationSpecJwtRules)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeaders struct {
	// The HTTP header name.
	Name string `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix *string `pulumi:"prefix"`
}

// RequestAuthenticationSpecJwtRulesFromHeadersInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersArgs and RequestAuthenticationSpecJwtRulesFromHeadersOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersArgs{...}
type RequestAuthenticationSpecJwtRulesFromHeadersInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersArgs struct {
	// The HTTP header name.
	Name pulumi.StringInput `pulumi:"name"`
	// The prefix that should be stripped before decoding the token.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (RequestAuthenticationSpecJwtRulesFromHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArgs) ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersOutput)
}

// RequestAuthenticationSpecJwtRulesFromHeadersArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesFromHeadersArray and RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesFromHeadersArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesFromHeadersArray{ RequestAuthenticationSpecJwtRulesFromHeadersArgs{...} }
type RequestAuthenticationSpecJwtRulesFromHeadersArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput
	ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput
}

type RequestAuthenticationSpecJwtRulesFromHeadersArray []RequestAuthenticationSpecJwtRulesFromHeadersInput

func (RequestAuthenticationSpecJwtRulesFromHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArray) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesFromHeadersArray) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersOutput() RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return o
}

// The HTTP header name.
func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The prefix that should be stripped before decoding the token.
func (o RequestAuthenticationSpecJwtRulesFromHeadersOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesFromHeaders) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesFromHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutput() RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesFromHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesFromHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesFromHeaders {
		return vs[0].([]RequestAuthenticationSpecJwtRulesFromHeaders)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesFromHeadersOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeaders struct {
	// The name of the claim to be copied from.
	Claim *string `pulumi:"claim"`
	// The name of the header to be created.
	Header *string `pulumi:"header"`
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{...}
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs struct {
	// The name of the claim to be copied from.
	Claim pulumi.StringPtrInput `pulumi:"claim"`
	// The name of the header to be created.
	Header pulumi.StringPtrInput `pulumi:"header"`
}

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput)
}

// RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput is an input type that accepts RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray and RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput` via:
//
//	RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray{ RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{...} }
type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput
	ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray []RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return i.ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return o
}

// The name of the claim to be copied from.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) Claim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeaders) *string { return v.Claim }).(pulumi.StringPtrOutput)
}

// The name of the header to be created.
func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecJwtRulesOutputClaimToHeaders) *string { return v.Header }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)(nil)).Elem()
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput() RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) ToRequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput {
	return o
}

func (o RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecJwtRulesOutputClaimToHeaders {
		return vs[0].([]RequestAuthenticationSpecJwtRulesOutputClaimToHeaders)[vs[1].(int)]
	}).(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput)
}

// Optional.
type RequestAuthenticationSpecSelector struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// RequestAuthenticationSpecSelectorInput is an input type that accepts RequestAuthenticationSpecSelectorArgs and RequestAuthenticationSpecSelectorOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorInput` via:
//
//	RequestAuthenticationSpecSelectorArgs{...}
type RequestAuthenticationSpecSelectorInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput
	ToRequestAuthenticationSpecSelectorOutputWithContext(context.Context) RequestAuthenticationSpecSelectorOutput
}

// Optional.
type RequestAuthenticationSpecSelectorArgs struct {
	// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (RequestAuthenticationSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return i.ToRequestAuthenticationSpecSelectorOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput)
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecSelectorArgs) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorOutput).ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecSelectorPtrInput is an input type that accepts RequestAuthenticationSpecSelectorArgs, RequestAuthenticationSpecSelectorPtr and RequestAuthenticationSpecSelectorPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecSelectorPtrInput` via:
//
//	        RequestAuthenticationSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecSelectorPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput
	ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Context) RequestAuthenticationSpecSelectorPtrOutput
}

type requestAuthenticationSpecSelectorPtrType RequestAuthenticationSpecSelectorArgs

func RequestAuthenticationSpecSelectorPtr(v *RequestAuthenticationSpecSelectorArgs) RequestAuthenticationSpecSelectorPtrInput {
	return (*requestAuthenticationSpecSelectorPtrType)(v)
}

func (*requestAuthenticationSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return i.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecSelectorPtrType) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecSelectorPtrOutput)
}

// Optional.
type RequestAuthenticationSpecSelectorOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutput() RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o.ToRequestAuthenticationSpecSelectorPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecSelectorOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecSelector) *RequestAuthenticationSpecSelector {
		return &v
	}).(RequestAuthenticationSpecSelectorPtrOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type RequestAuthenticationSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecSelector)(nil)).Elem()
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutput() RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) ToRequestAuthenticationSpecSelectorPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecSelectorPtrOutput {
	return o
}

func (o RequestAuthenticationSpecSelectorPtrOutput) Elem() RequestAuthenticationSpecSelectorOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) RequestAuthenticationSpecSelector {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecSelector
		return ret
	}).(RequestAuthenticationSpecSelectorOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
func (o RequestAuthenticationSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// One or more labels that indicate a specific set of pods/VMs on which a policy should be applied.
type RequestAuthenticationSpecSelectorMatchLabels struct {
}

type RequestAuthenticationSpecTargetRef struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefInput is an input type that accepts RequestAuthenticationSpecTargetRefArgs and RequestAuthenticationSpecTargetRefOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefInput` via:
//
//	RequestAuthenticationSpecTargetRefArgs{...}
type RequestAuthenticationSpecTargetRefInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput
	ToRequestAuthenticationSpecTargetRefOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefOutput
}

type RequestAuthenticationSpecTargetRefArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput {
	return i.ToRequestAuthenticationSpecTargetRefOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefOutput)
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefArgs) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefOutput).ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx)
}

// RequestAuthenticationSpecTargetRefPtrInput is an input type that accepts RequestAuthenticationSpecTargetRefArgs, RequestAuthenticationSpecTargetRefPtr and RequestAuthenticationSpecTargetRefPtrOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefPtrInput` via:
//
//	        RequestAuthenticationSpecTargetRefArgs{...}
//
//	or:
//
//	        nil
type RequestAuthenticationSpecTargetRefPtrInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput
	ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefPtrOutput
}

type requestAuthenticationSpecTargetRefPtrType RequestAuthenticationSpecTargetRefArgs

func RequestAuthenticationSpecTargetRefPtr(v *RequestAuthenticationSpecTargetRefArgs) RequestAuthenticationSpecTargetRefPtrInput {
	return (*requestAuthenticationSpecTargetRefPtrType)(v)
}

func (*requestAuthenticationSpecTargetRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (i *requestAuthenticationSpecTargetRefPtrType) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return i.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (i *requestAuthenticationSpecTargetRefPtrType) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefPtrOutput)
}

type RequestAuthenticationSpecTargetRefOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefOutput() RequestAuthenticationSpecTargetRefOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(context.Background())
}

func (o RequestAuthenticationSpecTargetRefOutput) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RequestAuthenticationSpecTargetRef) *RequestAuthenticationSpecTargetRef {
		return &v
	}).(RequestAuthenticationSpecTargetRefPtrOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefPtrOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAuthenticationSpecTargetRef)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) ToRequestAuthenticationSpecTargetRefPtrOutput() RequestAuthenticationSpecTargetRefPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) ToRequestAuthenticationSpecTargetRefPtrOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefPtrOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefPtrOutput) Elem() RequestAuthenticationSpecTargetRefOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) RequestAuthenticationSpecTargetRef {
		if v != nil {
			return *v
		}
		var ret RequestAuthenticationSpecTargetRef
		return ret
	}).(RequestAuthenticationSpecTargetRefOutput)
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAuthenticationSpecTargetRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefs struct {
	// group is the group of the target resource.
	Group *string `pulumi:"group"`
	// kind is kind of the target resource.
	Kind *string `pulumi:"kind"`
	// name is the name of the target resource.
	Name *string `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// RequestAuthenticationSpecTargetRefsInput is an input type that accepts RequestAuthenticationSpecTargetRefsArgs and RequestAuthenticationSpecTargetRefsOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsInput` via:
//
//	RequestAuthenticationSpecTargetRefsArgs{...}
type RequestAuthenticationSpecTargetRefsInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput
	ToRequestAuthenticationSpecTargetRefsOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsOutput
}

type RequestAuthenticationSpecTargetRefsArgs struct {
	// group is the group of the target resource.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// kind is kind of the target resource.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// name is the name of the target resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (RequestAuthenticationSpecTargetRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsArgs) ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput {
	return i.ToRequestAuthenticationSpecTargetRefsOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsArgs) ToRequestAuthenticationSpecTargetRefsOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsOutput)
}

// RequestAuthenticationSpecTargetRefsArrayInput is an input type that accepts RequestAuthenticationSpecTargetRefsArray and RequestAuthenticationSpecTargetRefsArrayOutput values.
// You can construct a concrete instance of `RequestAuthenticationSpecTargetRefsArrayInput` via:
//
//	RequestAuthenticationSpecTargetRefsArray{ RequestAuthenticationSpecTargetRefsArgs{...} }
type RequestAuthenticationSpecTargetRefsArrayInput interface {
	pulumi.Input

	ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput
	ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(context.Context) RequestAuthenticationSpecTargetRefsArrayOutput
}

type RequestAuthenticationSpecTargetRefsArray []RequestAuthenticationSpecTargetRefsInput

func (RequestAuthenticationSpecTargetRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (i RequestAuthenticationSpecTargetRefsArray) ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput {
	return i.ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(context.Background())
}

func (i RequestAuthenticationSpecTargetRefsArray) ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAuthenticationSpecTargetRefsArrayOutput)
}

type RequestAuthenticationSpecTargetRefsOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsOutput) ToRequestAuthenticationSpecTargetRefsOutput() RequestAuthenticationSpecTargetRefsOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsOutput) ToRequestAuthenticationSpecTargetRefsOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsOutput {
	return o
}

// group is the group of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// kind is kind of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// name is the name of the target resource.
func (o RequestAuthenticationSpecTargetRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the referent.
func (o RequestAuthenticationSpecTargetRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RequestAuthenticationSpecTargetRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type RequestAuthenticationSpecTargetRefsArrayOutput struct{ *pulumi.OutputState }

func (RequestAuthenticationSpecTargetRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RequestAuthenticationSpecTargetRefs)(nil)).Elem()
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) ToRequestAuthenticationSpecTargetRefsArrayOutput() RequestAuthenticationSpecTargetRefsArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) ToRequestAuthenticationSpecTargetRefsArrayOutputWithContext(ctx context.Context) RequestAuthenticationSpecTargetRefsArrayOutput {
	return o
}

func (o RequestAuthenticationSpecTargetRefsArrayOutput) Index(i pulumi.IntInput) RequestAuthenticationSpecTargetRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RequestAuthenticationSpecTargetRefs {
		return vs[0].([]RequestAuthenticationSpecTargetRefs)[vs[1].(int)]
	}).(RequestAuthenticationSpecTargetRefsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPtrInput)(nil)).Elem(), PeerAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecMtlsPtrInput)(nil)).Elem(), PeerAuthenticationSpecMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPortLevelMtlsInput)(nil)).Elem(), PeerAuthenticationSpecPortLevelMtlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecPortLevelMtlsMapInput)(nil)).Elem(), PeerAuthenticationSpecPortLevelMtlsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeerAuthenticationSpecSelectorPtrInput)(nil)).Elem(), PeerAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecPtrInput)(nil)).Elem(), RequestAuthenticationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesFromHeadersArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesFromHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayInput)(nil)).Elem(), RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecSelectorPtrInput)(nil)).Elem(), RequestAuthenticationSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefPtrInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAuthenticationSpecTargetRefsArrayInput)(nil)).Elem(), RequestAuthenticationSpecTargetRefsArray{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecMtlsPtrOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPortLevelMtlsOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecPortLevelMtlsMapOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(PeerAuthenticationSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesFromHeadersArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecJwtRulesOutputClaimToHeadersArrayOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefPtrOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsOutput{})
	pulumi.RegisterOutputType(RequestAuthenticationSpecTargetRefsArrayOutput{})
}
