// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KeycloakRealmImport struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput             `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput             `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput         `pulumi:"metadata"`
	Spec       KeycloakRealmImportSpecPtrOutput   `pulumi:"spec"`
	Status     KeycloakRealmImportStatusPtrOutput `pulumi:"status"`
}

// NewKeycloakRealmImport registers a new resource with the given unique name, arguments, and options.
func NewKeycloakRealmImport(ctx *pulumi.Context,
	name string, args *KeycloakRealmImportArgs, opts ...pulumi.ResourceOption) (*KeycloakRealmImport, error) {
	if args == nil {
		args = &KeycloakRealmImportArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("k8s.keycloak.org/v2alpha1")
	args.Kind = pulumi.StringPtr("KeycloakRealmImport")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource KeycloakRealmImport
	err := ctx.RegisterResource("kubernetes:k8s.keycloak.org/v2alpha1:KeycloakRealmImport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeycloakRealmImport gets an existing KeycloakRealmImport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeycloakRealmImport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeycloakRealmImportState, opts ...pulumi.ResourceOption) (*KeycloakRealmImport, error) {
	var resource KeycloakRealmImport
	err := ctx.ReadResource("kubernetes:k8s.keycloak.org/v2alpha1:KeycloakRealmImport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeycloakRealmImport resources.
type keycloakRealmImportState struct {
}

type KeycloakRealmImportState struct {
}

func (KeycloakRealmImportState) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakRealmImportState)(nil)).Elem()
}

type keycloakRealmImportArgs struct {
	ApiVersion *string                    `pulumi:"apiVersion"`
	Kind       *string                    `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta         `pulumi:"metadata"`
	Spec       *KeycloakRealmImportSpec   `pulumi:"spec"`
	Status     *KeycloakRealmImportStatus `pulumi:"status"`
}

// The set of arguments for constructing a KeycloakRealmImport resource.
type KeycloakRealmImportArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	Spec       KeycloakRealmImportSpecPtrInput
	Status     KeycloakRealmImportStatusPtrInput
}

func (KeycloakRealmImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakRealmImportArgs)(nil)).Elem()
}

type KeycloakRealmImportInput interface {
	pulumi.Input

	ToKeycloakRealmImportOutput() KeycloakRealmImportOutput
	ToKeycloakRealmImportOutputWithContext(ctx context.Context) KeycloakRealmImportOutput
}

func (*KeycloakRealmImport) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmImport)(nil)).Elem()
}

func (i *KeycloakRealmImport) ToKeycloakRealmImportOutput() KeycloakRealmImportOutput {
	return i.ToKeycloakRealmImportOutputWithContext(context.Background())
}

func (i *KeycloakRealmImport) ToKeycloakRealmImportOutputWithContext(ctx context.Context) KeycloakRealmImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmImportOutput)
}

type KeycloakRealmImportOutput struct{ *pulumi.OutputState }

func (KeycloakRealmImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmImport)(nil)).Elem()
}

func (o KeycloakRealmImportOutput) ToKeycloakRealmImportOutput() KeycloakRealmImportOutput {
	return o
}

func (o KeycloakRealmImportOutput) ToKeycloakRealmImportOutputWithContext(ctx context.Context) KeycloakRealmImportOutput {
	return o
}

func (o KeycloakRealmImportOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmImport) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KeycloakRealmImportOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmImport) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KeycloakRealmImportOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmImport) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o KeycloakRealmImportOutput) Spec() KeycloakRealmImportSpecPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmImport) KeycloakRealmImportSpecPtrOutput { return v.Spec }).(KeycloakRealmImportSpecPtrOutput)
}

func (o KeycloakRealmImportOutput) Status() KeycloakRealmImportStatusPtrOutput {
	return o.ApplyT(func(v *KeycloakRealmImport) KeycloakRealmImportStatusPtrOutput { return v.Status }).(KeycloakRealmImportStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeycloakRealmImportInput)(nil)).Elem(), &KeycloakRealmImport{})
	pulumi.RegisterOutputType(KeycloakRealmImportOutput{})
}
