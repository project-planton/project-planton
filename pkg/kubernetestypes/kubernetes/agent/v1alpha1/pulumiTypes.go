// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Agent is the Schema for the Agents API.
type AgentType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AgentSpec defines the desired state of the Agent
	Spec *AgentSpec `pulumi:"spec"`
	// AgentStatus defines the observed state of the Agent
	Status *AgentStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for AgentType
func (val *AgentType) Defaults() *AgentType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type AgentMetadata struct {
}

// AgentSpec defines the desired state of the Agent
type AgentSpec struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config map[string]interface{} `pulumi:"config"`
	// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
	// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
	// can be specified.
	ConfigRef *AgentSpecConfigRef `pulumi:"configRef"`
	// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
	// Cannot be used along with `deployment` or `statefulSet`.
	DaemonSet *AgentSpecDaemonSet `pulumi:"daemonSet"`
	// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
	// Cannot be used along with `daemonSet` or `statefulSet`.
	Deployment *AgentSpecDeployment `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs []AgentSpecElasticsearchRefs `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled *bool `pulumi:"fleetServerEnabled"`
	// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
	// Don't set unless `mode` is set to `fleet`.
	FleetServerRef *AgentSpecFleetServerRef `pulumi:"fleetServerRef"`
	// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
	Http *AgentSpecHttp `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image *string `pulumi:"image"`
	// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
	// unless `mode` is set to `fleet`.
	KibanaRef *AgentSpecKibanaRef `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode *string `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID *string `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit *int `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings []AgentSpecSecureSettings `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName *string `pulumi:"serviceAccountName"`
	// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
	// Cannot be used along with `daemonSet` or `deployment`.
	StatefulSet *AgentSpecStatefulSet `pulumi:"statefulSet"`
	// Version of the Agent.
	Version string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for AgentSpec
func (val *AgentSpec) Defaults() *AgentSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.StatefulSet = tmp.StatefulSet.Defaults()

	return &tmp
}

// AgentSpecInput is an input type that accepts AgentSpecArgs and AgentSpecOutput values.
// You can construct a concrete instance of `AgentSpecInput` via:
//
//	AgentSpecArgs{...}
type AgentSpecInput interface {
	pulumi.Input

	ToAgentSpecOutput() AgentSpecOutput
	ToAgentSpecOutputWithContext(context.Context) AgentSpecOutput
}

// AgentSpec defines the desired state of the Agent
type AgentSpecArgs struct {
	// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
	Config pulumi.MapInput `pulumi:"config"`
	// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
	// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
	// can be specified.
	ConfigRef AgentSpecConfigRefPtrInput `pulumi:"configRef"`
	// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
	// Cannot be used along with `deployment` or `statefulSet`.
	DaemonSet AgentSpecDaemonSetPtrInput `pulumi:"daemonSet"`
	// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
	// Cannot be used along with `daemonSet` or `statefulSet`.
	Deployment AgentSpecDeploymentPtrInput `pulumi:"deployment"`
	// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
	// Due to existing limitations, only a single ES cluster is currently supported.
	ElasticsearchRefs AgentSpecElasticsearchRefsArrayInput `pulumi:"elasticsearchRefs"`
	// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
	FleetServerEnabled pulumi.BoolPtrInput `pulumi:"fleetServerEnabled"`
	// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
	// Don't set unless `mode` is set to `fleet`.
	FleetServerRef AgentSpecFleetServerRefPtrInput `pulumi:"fleetServerRef"`
	// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
	Http AgentSpecHttpPtrInput `pulumi:"http"`
	// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
	// unless `mode` is set to `fleet`.
	KibanaRef AgentSpecKibanaRefPtrInput `pulumi:"kibanaRef"`
	// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
	// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
	// Defaults to `standalone` mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// PolicyID determines into which Agent Policy this Agent will be enrolled.
	// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
	PolicyID pulumi.StringPtrInput `pulumi:"policyID"`
	// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
	RevisionHistoryLimit pulumi.IntPtrInput `pulumi:"revisionHistoryLimit"`
	// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
	// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
	// each SecureSetting.
	SecureSettings AgentSpecSecureSettingsArrayInput `pulumi:"secureSettings"`
	// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
	// Can only be used if ECK is enforcing RBAC on references.
	ServiceAccountName pulumi.StringPtrInput `pulumi:"serviceAccountName"`
	// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
	// Cannot be used along with `daemonSet` or `deployment`.
	StatefulSet AgentSpecStatefulSetPtrInput `pulumi:"statefulSet"`
	// Version of the Agent.
	Version pulumi.StringInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for AgentSpecArgs
func (val *AgentSpecArgs) Defaults() *AgentSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (AgentSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpec)(nil)).Elem()
}

func (i AgentSpecArgs) ToAgentSpecOutput() AgentSpecOutput {
	return i.ToAgentSpecOutputWithContext(context.Background())
}

func (i AgentSpecArgs) ToAgentSpecOutputWithContext(ctx context.Context) AgentSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecOutput)
}

func (i AgentSpecArgs) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return i.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecArgs) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecOutput).ToAgentSpecPtrOutputWithContext(ctx)
}

// AgentSpecPtrInput is an input type that accepts AgentSpecArgs, AgentSpecPtr and AgentSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecPtrInput` via:
//
//	        AgentSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecPtrOutput() AgentSpecPtrOutput
	ToAgentSpecPtrOutputWithContext(context.Context) AgentSpecPtrOutput
}

type agentSpecPtrType AgentSpecArgs

func AgentSpecPtr(v *AgentSpecArgs) AgentSpecPtrInput {
	return (*agentSpecPtrType)(v)
}

func (*agentSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpec)(nil)).Elem()
}

func (i *agentSpecPtrType) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return i.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecPtrType) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecPtrOutput)
}

// AgentSpec defines the desired state of the Agent
type AgentSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpec)(nil)).Elem()
}

func (o AgentSpecOutput) ToAgentSpecOutput() AgentSpecOutput {
	return o
}

func (o AgentSpecOutput) ToAgentSpecOutputWithContext(ctx context.Context) AgentSpecOutput {
	return o
}

func (o AgentSpecOutput) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return o.ToAgentSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecOutput) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpec) *AgentSpec {
		return &v
	}).(AgentSpecPtrOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpec) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
func (o AgentSpecOutput) ConfigRef() AgentSpecConfigRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecConfigRef { return v.ConfigRef }).(AgentSpecConfigRefPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
func (o AgentSpecOutput) DaemonSet() AgentSpecDaemonSetPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecDaemonSet { return v.DaemonSet }).(AgentSpecDaemonSetPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
func (o AgentSpecOutput) Deployment() AgentSpecDeploymentPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecDeployment { return v.Deployment }).(AgentSpecDeploymentPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsArrayOutput {
	return o.ApplyT(func(v AgentSpec) []AgentSpecElasticsearchRefs { return v.ElasticsearchRefs }).(AgentSpecElasticsearchRefsArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpec) *bool { return v.FleetServerEnabled }).(pulumi.BoolPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
func (o AgentSpecOutput) FleetServerRef() AgentSpecFleetServerRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecFleetServerRef { return v.FleetServerRef }).(AgentSpecFleetServerRefPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
func (o AgentSpecOutput) Http() AgentSpecHttpPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecHttp { return v.Http }).(AgentSpecHttpPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
func (o AgentSpecOutput) KibanaRef() AgentSpecKibanaRefPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecKibanaRef { return v.KibanaRef }).(AgentSpecKibanaRefPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.PolicyID }).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpec) *int { return v.RevisionHistoryLimit }).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecOutput) SecureSettings() AgentSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v AgentSpec) []AgentSpecSecureSettings { return v.SecureSettings }).(AgentSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpec) *string { return v.ServiceAccountName }).(pulumi.StringPtrOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
func (o AgentSpecOutput) StatefulSet() AgentSpecStatefulSetPtrOutput {
	return o.ApplyT(func(v AgentSpec) *AgentSpecStatefulSet { return v.StatefulSet }).(AgentSpecStatefulSetPtrOutput)
}

// Version of the Agent.
func (o AgentSpecOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpec) string { return v.Version }).(pulumi.StringOutput)
}

type AgentSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpec)(nil)).Elem()
}

func (o AgentSpecPtrOutput) ToAgentSpecPtrOutput() AgentSpecPtrOutput {
	return o
}

func (o AgentSpecPtrOutput) ToAgentSpecPtrOutputWithContext(ctx context.Context) AgentSpecPtrOutput {
	return o
}

func (o AgentSpecPtrOutput) Elem() AgentSpecOutput {
	return o.ApplyT(func(v *AgentSpec) AgentSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpec
		return ret
	}).(AgentSpecOutput)
}

// Config holds the Agent configuration. At most one of [`Config`, `ConfigRef`] can be specified.
func (o AgentSpecPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
func (o AgentSpecPtrOutput) ConfigRef() AgentSpecConfigRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecConfigRef {
		if v == nil {
			return nil
		}
		return v.ConfigRef
	}).(AgentSpecConfigRefPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
func (o AgentSpecPtrOutput) DaemonSet() AgentSpecDaemonSetPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecDaemonSet {
		if v == nil {
			return nil
		}
		return v.DaemonSet
	}).(AgentSpecDaemonSetPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
func (o AgentSpecPtrOutput) Deployment() AgentSpecDeploymentPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecDeployment {
		if v == nil {
			return nil
		}
		return v.Deployment
	}).(AgentSpecDeploymentPtrOutput)
}

// ElasticsearchRefs is a reference to a list of Elasticsearch clusters running in the same Kubernetes cluster.
// Due to existing limitations, only a single ES cluster is currently supported.
func (o AgentSpecPtrOutput) ElasticsearchRefs() AgentSpecElasticsearchRefsArrayOutput {
	return o.ApplyT(func(v *AgentSpec) []AgentSpecElasticsearchRefs {
		if v == nil {
			return nil
		}
		return v.ElasticsearchRefs
	}).(AgentSpecElasticsearchRefsArrayOutput)
}

// FleetServerEnabled determines whether this Agent will launch Fleet Server. Don't set unless `mode` is set to `fleet`.
func (o AgentSpecPtrOutput) FleetServerEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *bool {
		if v == nil {
			return nil
		}
		return v.FleetServerEnabled
	}).(pulumi.BoolPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
func (o AgentSpecPtrOutput) FleetServerRef() AgentSpecFleetServerRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecFleetServerRef {
		if v == nil {
			return nil
		}
		return v.FleetServerRef
	}).(AgentSpecFleetServerRefPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
func (o AgentSpecPtrOutput) Http() AgentSpecHttpPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(AgentSpecHttpPtrOutput)
}

// Image is the Agent Docker image to deploy. Version has to match the Agent in the image.
func (o AgentSpecPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
func (o AgentSpecPtrOutput) KibanaRef() AgentSpecKibanaRefPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecKibanaRef {
		if v == nil {
			return nil
		}
		return v.KibanaRef
	}).(AgentSpecKibanaRefPtrOutput)
}

// Mode specifies the source of configuration for the Agent. The configuration can be specified locally through
// `config` or `configRef` (`standalone` mode), or come from Fleet during runtime (`fleet` mode).
// Defaults to `standalone` mode.
func (o AgentSpecPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// PolicyID determines into which Agent Policy this Agent will be enrolled.
// This field will become mandatory in a future release, default policies are deprecated since 8.1.0.
func (o AgentSpecPtrOutput) PolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.PolicyID
	}).(pulumi.StringPtrOutput)
}

// RevisionHistoryLimit is the number of revisions to retain to allow rollback in the underlying DaemonSet or Deployment or StatefulSet.
func (o AgentSpecPtrOutput) RevisionHistoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *int {
		if v == nil {
			return nil
		}
		return v.RevisionHistoryLimit
	}).(pulumi.IntPtrOutput)
}

// SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for the Agent.
// Secrets data can be then referenced in the Agent config using the Secret's keys or as specified in `Entries` field of
// each SecureSetting.
func (o AgentSpecPtrOutput) SecureSettings() AgentSpecSecureSettingsArrayOutput {
	return o.ApplyT(func(v *AgentSpec) []AgentSpecSecureSettings {
		if v == nil {
			return nil
		}
		return v.SecureSettings
	}).(AgentSpecSecureSettingsArrayOutput)
}

// ServiceAccountName is used to check access from the current resource to an Elasticsearch resource in a different namespace.
// Can only be used if ECK is enforcing RBAC on references.
func (o AgentSpecPtrOutput) ServiceAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountName
	}).(pulumi.StringPtrOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
func (o AgentSpecPtrOutput) StatefulSet() AgentSpecStatefulSetPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *AgentSpecStatefulSet {
		if v == nil {
			return nil
		}
		return v.StatefulSet
	}).(AgentSpecStatefulSetPtrOutput)
}

// Version of the Agent.
func (o AgentSpecPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRef struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecConfigRefInput is an input type that accepts AgentSpecConfigRefArgs and AgentSpecConfigRefOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefInput` via:
//
//	AgentSpecConfigRefArgs{...}
type AgentSpecConfigRefInput interface {
	pulumi.Input

	ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput
	ToAgentSpecConfigRefOutputWithContext(context.Context) AgentSpecConfigRefOutput
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecConfigRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRef)(nil)).Elem()
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput {
	return i.ToAgentSpecConfigRefOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefOutputWithContext(ctx context.Context) AgentSpecConfigRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefOutput)
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return i.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecConfigRefArgs) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefOutput).ToAgentSpecConfigRefPtrOutputWithContext(ctx)
}

// AgentSpecConfigRefPtrInput is an input type that accepts AgentSpecConfigRefArgs, AgentSpecConfigRefPtr and AgentSpecConfigRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecConfigRefPtrInput` via:
//
//	        AgentSpecConfigRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecConfigRefPtrInput interface {
	pulumi.Input

	ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput
	ToAgentSpecConfigRefPtrOutputWithContext(context.Context) AgentSpecConfigRefPtrOutput
}

type agentSpecConfigRefPtrType AgentSpecConfigRefArgs

func AgentSpecConfigRefPtr(v *AgentSpecConfigRefArgs) AgentSpecConfigRefPtrInput {
	return (*agentSpecConfigRefPtrType)(v)
}

func (*agentSpecConfigRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRef)(nil)).Elem()
}

func (i *agentSpecConfigRefPtrType) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return i.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecConfigRefPtrType) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecConfigRefPtrOutput)
}

// ConfigRef contains a reference to an existing Kubernetes Secret holding the Agent configuration.
// Agent settings must be specified as yaml, under a single "agent.yml" entry. At most one of [`Config`, `ConfigRef`]
// can be specified.
type AgentSpecConfigRefOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecConfigRef)(nil)).Elem()
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefOutput() AgentSpecConfigRefOutput {
	return o
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefOutputWithContext(ctx context.Context) AgentSpecConfigRefOutput {
	return o
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return o.ToAgentSpecConfigRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecConfigRefOutput) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecConfigRef) *AgentSpecConfigRef {
		return &v
	}).(AgentSpecConfigRefPtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecConfigRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecConfigRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecConfigRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecConfigRef)(nil)).Elem()
}

func (o AgentSpecConfigRefPtrOutput) ToAgentSpecConfigRefPtrOutput() AgentSpecConfigRefPtrOutput {
	return o
}

func (o AgentSpecConfigRefPtrOutput) ToAgentSpecConfigRefPtrOutputWithContext(ctx context.Context) AgentSpecConfigRefPtrOutput {
	return o
}

func (o AgentSpecConfigRefPtrOutput) Elem() AgentSpecConfigRefOutput {
	return o.ApplyT(func(v *AgentSpecConfigRef) AgentSpecConfigRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecConfigRef
		return ret
	}).(AgentSpecConfigRefOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecConfigRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecConfigRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSet struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
	UpdateStrategy *AgentSpecDaemonSetUpdateStrategy `pulumi:"updateStrategy"`
}

// AgentSpecDaemonSetInput is an input type that accepts AgentSpecDaemonSetArgs and AgentSpecDaemonSetOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetInput` via:
//
//	AgentSpecDaemonSetArgs{...}
type AgentSpecDaemonSetInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput
	ToAgentSpecDaemonSetOutputWithContext(context.Context) AgentSpecDaemonSetOutput
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput `pulumi:"podTemplate"`
	// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
	UpdateStrategy AgentSpecDaemonSetUpdateStrategyPtrInput `pulumi:"updateStrategy"`
}

func (AgentSpecDaemonSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSet)(nil)).Elem()
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput {
	return i.ToAgentSpecDaemonSetOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetOutputWithContext(ctx context.Context) AgentSpecDaemonSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetOutput)
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return i.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetArgs) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetOutput).ToAgentSpecDaemonSetPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetPtrInput is an input type that accepts AgentSpecDaemonSetArgs, AgentSpecDaemonSetPtr and AgentSpecDaemonSetPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetPtrInput` via:
//
//	        AgentSpecDaemonSetArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput
	ToAgentSpecDaemonSetPtrOutputWithContext(context.Context) AgentSpecDaemonSetPtrOutput
}

type agentSpecDaemonSetPtrType AgentSpecDaemonSetArgs

func AgentSpecDaemonSetPtr(v *AgentSpecDaemonSetArgs) AgentSpecDaemonSetPtrInput {
	return (*agentSpecDaemonSetPtrType)(v)
}

func (*agentSpecDaemonSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSet)(nil)).Elem()
}

func (i *agentSpecDaemonSetPtrType) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return i.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetPtrType) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetPtrOutput)
}

// DaemonSet specifies the Agent should be deployed as a DaemonSet, and allows providing its spec.
// Cannot be used along with `deployment` or `statefulSet`.
type AgentSpecDaemonSetOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSet)(nil)).Elem()
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetOutput() AgentSpecDaemonSetOutput {
	return o
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetOutputWithContext(ctx context.Context) AgentSpecDaemonSetOutput {
	return o
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return o.ToAgentSpecDaemonSetPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetOutput) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSet) *AgentSpecDaemonSet {
		return &v
	}).(AgentSpecDaemonSetPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDaemonSet) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
func (o AgentSpecDaemonSetOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSet) *AgentSpecDaemonSetUpdateStrategy { return v.UpdateStrategy }).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

type AgentSpecDaemonSetPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSet)(nil)).Elem()
}

func (o AgentSpecDaemonSetPtrOutput) ToAgentSpecDaemonSetPtrOutput() AgentSpecDaemonSetPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPtrOutput) ToAgentSpecDaemonSetPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetPtrOutput {
	return o
}

func (o AgentSpecDaemonSetPtrOutput) Elem() AgentSpecDaemonSetOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) AgentSpecDaemonSet {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSet
		return ret
	}).(AgentSpecDaemonSetOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDaemonSetPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
func (o AgentSpecDaemonSetPtrOutput) UpdateStrategy() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSet) *AgentSpecDaemonSetUpdateStrategy {
		if v == nil {
			return nil
		}
		return v.UpdateStrategy
	}).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategy struct {
	// Rolling update config params. Present only if type = "RollingUpdate".
	// ---
	// TODO: Update this to follow our convention for oneOf, whatever we decide it
	// to be. Same as Deployment `strategy.rollingUpdate`.
	// See https://github.com/kubernetes/kubernetes/issues/35345
	RollingUpdate *AgentSpecDaemonSetUpdateStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDaemonSetUpdateStrategyInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyArgs and AgentSpecDaemonSetUpdateStrategyOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyArgs{...}
type AgentSpecDaemonSetUpdateStrategyInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput
	ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyOutput
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyArgs struct {
	// Rolling update config params. Present only if type = "RollingUpdate".
	// ---
	// TODO: Update this to follow our convention for oneOf, whatever we decide it
	// to be. Same as Deployment `strategy.rollingUpdate`.
	// See https://github.com/kubernetes/kubernetes/issues/35345
	RollingUpdate AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDaemonSetUpdateStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyArgs) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyOutput).ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyPtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyArgs, AgentSpecDaemonSetUpdateStrategyPtr and AgentSpecDaemonSetUpdateStrategyPtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyPtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyPtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput
	ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput
}

type agentSpecDaemonSetUpdateStrategyPtrType AgentSpecDaemonSetUpdateStrategyArgs

func AgentSpecDaemonSetUpdateStrategyPtr(v *AgentSpecDaemonSetUpdateStrategyArgs) AgentSpecDaemonSetUpdateStrategyPtrInput {
	return (*agentSpecDaemonSetUpdateStrategyPtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyPtrType) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyPtrType) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

// DaemonSetUpdateStrategy is a struct used to control the update strategy for a DaemonSet.
type AgentSpecDaemonSetUpdateStrategyOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyOutput() AgentSpecDaemonSetUpdateStrategyOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategy {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyPtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
func (o AgentSpecDaemonSetUpdateStrategyOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDaemonSetUpdateStrategyPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategy)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutput() AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) ToAgentSpecDaemonSetUpdateStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyPtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) AgentSpecDaemonSetUpdateStrategy {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategy
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) RollingUpdate() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
func (o AgentSpecDaemonSetUpdateStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdate struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdateInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs and AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdateInput` via:
//
//	AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{...}
type AgentSpecDaemonSetUpdateStrategyRollingUpdateInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs struct {
	// The maximum number of nodes with an existing available DaemonSet pod that
	// can have an updated DaemonSet pod during during an update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up to a minimum of 1.
	// Default value is 0.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their a new pod created before the old pod is marked as deleted.
	// The update starts by launching new pods on 30% of nodes. Once an updated
	// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
	// on that node is marked deleted. If the old pod becomes unavailable for any
	// reason (Ready transitions to false, is evicted, or is drained) an updated
	// pod is immediatedly created on that node without considering surge limits.
	// Allowing surge implies the possibility that the resources consumed by the
	// daemonset on any given node can double if the readiness check fails, and
	// so resource intensive daemonsets should take into account that they may
	// cause evictions during disruption.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of DaemonSet pods that can be unavailable during the
	// update. Value can be an absolute number (ex: 5) or a percentage of total
	// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
	// number is calculated from percentage by rounding up.
	// This cannot be 0 if MaxSurge is 0
	// Default value is 1.
	// Example: when this is set to 30%, at most 30% of the total number of nodes
	// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
	// can have their pods stopped for an update at any given time. The update
	// starts by stopping at most 30% of those DaemonSet pods and then brings
	// up new DaemonSet pods in their place. Once the new pods are available,
	// it then proceeds onto other DaemonSet pods, thus ensuring that at least
	// 70% of original number of DaemonSet pods are available at all times during
	// the update.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput)
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput).ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput is an input type that accepts AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs, AgentSpecDaemonSetUpdateStrategyRollingUpdatePtr and AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput` via:
//
//	        AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput
	ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput
}

type agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs

func AgentSpecDaemonSetUpdateStrategyRollingUpdatePtr(v *AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput {
	return (*agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType)(v)
}

func (*agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *agentSpecDaemonSetUpdateStrategyRollingUpdatePtrType) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if type = "RollingUpdate".
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be. Same as Deployment `strategy.rollingUpdate`.
// See https://github.com/kubernetes/kubernetes/issues/35345
type AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDaemonSetUpdateStrategyRollingUpdate) *AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		return &v
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDaemonSetUpdateStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput() AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) ToAgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) Elem() AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) AgentSpecDaemonSetUpdateStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret AgentSpecDaemonSetUpdateStrategyRollingUpdate
		return ret
	}).(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput)
}

// The maximum number of nodes with an existing available DaemonSet pod that
// can have an updated DaemonSet pod during during an update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up to a minimum of 1.
// Default value is 0.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their a new pod created before the old pod is marked as deleted.
// The update starts by launching new pods on 30% of nodes. Once an updated
// pod is available (Ready for at least minReadySeconds) the old DaemonSet pod
// on that node is marked deleted. If the old pod becomes unavailable for any
// reason (Ready transitions to false, is evicted, or is drained) an updated
// pod is immediatedly created on that node without considering surge limits.
// Allowing surge implies the possibility that the resources consumed by the
// daemonset on any given node can double if the readiness check fails, and
// so resource intensive daemonsets should take into account that they may
// cause evictions during disruption.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of DaemonSet pods that can be unavailable during the
// update. Value can be an absolute number (ex: 5) or a percentage of total
// number of DaemonSet pods at the start of the update (ex: 10%). Absolute
// number is calculated from percentage by rounding up.
// This cannot be 0 if MaxSurge is 0
// Default value is 1.
// Example: when this is set to 30%, at most 30% of the total number of nodes
// that should be running the daemon pod (i.e. status.desiredNumberScheduled)
// can have their pods stopped for an update at any given time. The update
// starts by stopping at most 30% of those DaemonSet pods and then brings
// up new DaemonSet pods in their place. Once the new pods are available,
// it then proceeds onto other DaemonSet pods, thus ensuring that at least
// 70% of original number of DaemonSet pods are available at all times during
// the update.
func (o AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDaemonSetUpdateStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeployment struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	Replicas    *int                   `pulumi:"replicas"`
	// DeploymentStrategy describes how to replace existing pods with new ones.
	Strategy *AgentSpecDeploymentStrategy `pulumi:"strategy"`
}

// AgentSpecDeploymentInput is an input type that accepts AgentSpecDeploymentArgs and AgentSpecDeploymentOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentInput` via:
//
//	AgentSpecDeploymentArgs{...}
type AgentSpecDeploymentInput interface {
	pulumi.Input

	ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput
	ToAgentSpecDeploymentOutputWithContext(context.Context) AgentSpecDeploymentOutput
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentArgs struct {
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput    `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput `pulumi:"replicas"`
	// DeploymentStrategy describes how to replace existing pods with new ones.
	Strategy AgentSpecDeploymentStrategyPtrInput `pulumi:"strategy"`
}

func (AgentSpecDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeployment)(nil)).Elem()
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput {
	return i.ToAgentSpecDeploymentOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentOutputWithContext(ctx context.Context) AgentSpecDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentOutput)
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return i.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentArgs) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentOutput).ToAgentSpecDeploymentPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentPtrInput is an input type that accepts AgentSpecDeploymentArgs, AgentSpecDeploymentPtr and AgentSpecDeploymentPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentPtrInput` via:
//
//	        AgentSpecDeploymentArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput
	ToAgentSpecDeploymentPtrOutputWithContext(context.Context) AgentSpecDeploymentPtrOutput
}

type agentSpecDeploymentPtrType AgentSpecDeploymentArgs

func AgentSpecDeploymentPtr(v *AgentSpecDeploymentArgs) AgentSpecDeploymentPtrInput {
	return (*agentSpecDeploymentPtrType)(v)
}

func (*agentSpecDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeployment)(nil)).Elem()
}

func (i *agentSpecDeploymentPtrType) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return i.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentPtrType) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentPtrOutput)
}

// Deployment specifies the Agent should be deployed as a Deployment, and allows providing its spec.
// Cannot be used along with `daemonSet` or `statefulSet`.
type AgentSpecDeploymentOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeployment)(nil)).Elem()
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentOutput() AgentSpecDeploymentOutput {
	return o
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentOutputWithContext(ctx context.Context) AgentSpecDeploymentOutput {
	return o
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return o.ToAgentSpecDeploymentPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentOutput) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeployment) *AgentSpecDeployment {
		return &v
	}).(AgentSpecDeploymentPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecDeployment) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecDeployment) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
func (o AgentSpecDeploymentOutput) Strategy() AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyT(func(v AgentSpecDeployment) *AgentSpecDeploymentStrategy { return v.Strategy }).(AgentSpecDeploymentStrategyPtrOutput)
}

type AgentSpecDeploymentPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeployment)(nil)).Elem()
}

func (o AgentSpecDeploymentPtrOutput) ToAgentSpecDeploymentPtrOutput() AgentSpecDeploymentPtrOutput {
	return o
}

func (o AgentSpecDeploymentPtrOutput) ToAgentSpecDeploymentPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentPtrOutput {
	return o
}

func (o AgentSpecDeploymentPtrOutput) Elem() AgentSpecDeploymentOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) AgentSpecDeployment {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeployment
		return ret
	}).(AgentSpecDeploymentOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecDeploymentPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecDeploymentPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
func (o AgentSpecDeploymentPtrOutput) Strategy() AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeployment) *AgentSpecDeploymentStrategy {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(AgentSpecDeploymentStrategyPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategy struct {
	// Rolling update config params. Present only if DeploymentStrategyType =
	// RollingUpdate.
	// ---
	// TODO: Update this to follow our convention for oneOf, whatever we decide it
	// to be.
	RollingUpdate *AgentSpecDeploymentStrategyRollingUpdate `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type *string `pulumi:"type"`
}

// AgentSpecDeploymentStrategyInput is an input type that accepts AgentSpecDeploymentStrategyArgs and AgentSpecDeploymentStrategyOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyInput` via:
//
//	AgentSpecDeploymentStrategyArgs{...}
type AgentSpecDeploymentStrategyInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput
	ToAgentSpecDeploymentStrategyOutputWithContext(context.Context) AgentSpecDeploymentStrategyOutput
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyArgs struct {
	// Rolling update config params. Present only if DeploymentStrategyType =
	// RollingUpdate.
	// ---
	// TODO: Update this to follow our convention for oneOf, whatever we decide it
	// to be.
	RollingUpdate AgentSpecDeploymentStrategyRollingUpdatePtrInput `pulumi:"rollingUpdate"`
	// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecDeploymentStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput {
	return i.ToAgentSpecDeploymentStrategyOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyOutput)
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyArgs) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyOutput).ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyPtrInput is an input type that accepts AgentSpecDeploymentStrategyArgs, AgentSpecDeploymentStrategyPtr and AgentSpecDeploymentStrategyPtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyPtrInput` via:
//
//	        AgentSpecDeploymentStrategyArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyPtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput
	ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyPtrOutput
}

type agentSpecDeploymentStrategyPtrType AgentSpecDeploymentStrategyArgs

func AgentSpecDeploymentStrategyPtr(v *AgentSpecDeploymentStrategyArgs) AgentSpecDeploymentStrategyPtrInput {
	return (*agentSpecDeploymentStrategyPtrType)(v)
}

func (*agentSpecDeploymentStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyPtrType) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return i.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyPtrType) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyPtrOutput)
}

// DeploymentStrategy describes how to replace existing pods with new ones.
type AgentSpecDeploymentStrategyOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyOutput() AgentSpecDeploymentStrategyOutput {
	return o
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyOutput {
	return o
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return o.ToAgentSpecDeploymentStrategyPtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyOutput) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategy {
		return &v
	}).(AgentSpecDeploymentStrategyPtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
func (o AgentSpecDeploymentStrategyOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategyRollingUpdate { return v.RollingUpdate }).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecDeploymentStrategyPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategy)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyPtrOutput) ToAgentSpecDeploymentStrategyPtrOutput() AgentSpecDeploymentStrategyPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPtrOutput) ToAgentSpecDeploymentStrategyPtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyPtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyPtrOutput) Elem() AgentSpecDeploymentStrategyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) AgentSpecDeploymentStrategy {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategy
		return ret
	}).(AgentSpecDeploymentStrategyOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
func (o AgentSpecDeploymentStrategyPtrOutput) RollingUpdate() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) *AgentSpecDeploymentStrategyRollingUpdate {
		if v == nil {
			return nil
		}
		return v.RollingUpdate
	}).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
func (o AgentSpecDeploymentStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdate struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge interface{} `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
}

// AgentSpecDeploymentStrategyRollingUpdateInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdateArgs and AgentSpecDeploymentStrategyRollingUpdateOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdateInput` via:
//
//	AgentSpecDeploymentStrategyRollingUpdateArgs{...}
type AgentSpecDeploymentStrategyRollingUpdateInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput
	ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdateArgs struct {
	// The maximum number of pods that can be scheduled above the desired number of
	// pods.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// This can not be 0 if MaxUnavailable is 0.
	// Absolute number is calculated from percentage by rounding up.
	// Defaults to 25%.
	// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
	// the rolling update starts, such that the total number of old and new pods do not exceed
	// 130% of desired pods. Once old pods have been killed,
	// new ReplicaSet can be scaled up further, ensuring that total number of pods running
	// at any time during the update is at most 130% of desired pods.
	MaxSurge pulumi.Input `pulumi:"maxSurge"`
	// The maximum number of pods that can be unavailable during the update.
	// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
	// Absolute number is calculated from percentage by rounding down.
	// This can not be 0 if MaxSurge is 0.
	// Defaults to 25%.
	// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
	// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
	// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
	// that the total number of pods available at all times during the update is at
	// least 70% of desired pods.
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
}

func (AgentSpecDeploymentStrategyRollingUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdateOutput)
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i AgentSpecDeploymentStrategyRollingUpdateArgs) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdateOutput).ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx)
}

// AgentSpecDeploymentStrategyRollingUpdatePtrInput is an input type that accepts AgentSpecDeploymentStrategyRollingUpdateArgs, AgentSpecDeploymentStrategyRollingUpdatePtr and AgentSpecDeploymentStrategyRollingUpdatePtrOutput values.
// You can construct a concrete instance of `AgentSpecDeploymentStrategyRollingUpdatePtrInput` via:
//
//	        AgentSpecDeploymentStrategyRollingUpdateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecDeploymentStrategyRollingUpdatePtrInput interface {
	pulumi.Input

	ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput
	ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput
}

type agentSpecDeploymentStrategyRollingUpdatePtrType AgentSpecDeploymentStrategyRollingUpdateArgs

func AgentSpecDeploymentStrategyRollingUpdatePtr(v *AgentSpecDeploymentStrategyRollingUpdateArgs) AgentSpecDeploymentStrategyRollingUpdatePtrInput {
	return (*agentSpecDeploymentStrategyRollingUpdatePtrType)(v)
}

func (*agentSpecDeploymentStrategyRollingUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (i *agentSpecDeploymentStrategyRollingUpdatePtrType) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return i.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (i *agentSpecDeploymentStrategyRollingUpdatePtrType) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// Rolling update config params. Present only if DeploymentStrategyType =
// RollingUpdate.
// ---
// TODO: Update this to follow our convention for oneOf, whatever we decide it
// to be.
type AgentSpecDeploymentStrategyRollingUpdateOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdateOutput() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdateOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(context.Background())
}

func (o AgentSpecDeploymentStrategyRollingUpdateOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecDeploymentStrategyRollingUpdate) *AgentSpecDeploymentStrategyRollingUpdate {
		return &v
	}).(AgentSpecDeploymentStrategyRollingUpdatePtrOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdateOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdate) interface{} { return v.MaxSurge }).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdateOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecDeploymentStrategyRollingUpdate) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

type AgentSpecDeploymentStrategyRollingUpdatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecDeploymentStrategyRollingUpdate)(nil)).Elem()
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutput() AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) ToAgentSpecDeploymentStrategyRollingUpdatePtrOutputWithContext(ctx context.Context) AgentSpecDeploymentStrategyRollingUpdatePtrOutput {
	return o
}

func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) Elem() AgentSpecDeploymentStrategyRollingUpdateOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) AgentSpecDeploymentStrategyRollingUpdate {
		if v != nil {
			return *v
		}
		var ret AgentSpecDeploymentStrategyRollingUpdate
		return ret
	}).(AgentSpecDeploymentStrategyRollingUpdateOutput)
}

// The maximum number of pods that can be scheduled above the desired number of
// pods.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// This can not be 0 if MaxUnavailable is 0.
// Absolute number is calculated from percentage by rounding up.
// Defaults to 25%.
// Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
// the rolling update starts, such that the total number of old and new pods do not exceed
// 130% of desired pods. Once old pods have been killed,
// new ReplicaSet can be scaled up further, ensuring that total number of pods running
// at any time during the update is at most 130% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) MaxSurge() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.AnyOutput)
}

// The maximum number of pods that can be unavailable during the update.
// Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
// Absolute number is calculated from percentage by rounding down.
// This can not be 0 if MaxSurge is 0.
// Defaults to 25%.
// Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
// immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
// can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
// that the total number of pods available at all times during the update is at
// least 70% of desired pods.
func (o AgentSpecDeploymentStrategyRollingUpdatePtrOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v *AgentSpecDeploymentStrategyRollingUpdate) interface{} {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.AnyOutput)
}

type AgentSpecElasticsearchRefs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  *string `pulumi:"namespace"`
	OutputName *string `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecElasticsearchRefsInput is an input type that accepts AgentSpecElasticsearchRefsArgs and AgentSpecElasticsearchRefsOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsInput` via:
//
//	AgentSpecElasticsearchRefsArgs{...}
type AgentSpecElasticsearchRefsInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput
	ToAgentSpecElasticsearchRefsOutputWithContext(context.Context) AgentSpecElasticsearchRefsOutput
}

type AgentSpecElasticsearchRefsArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace  pulumi.StringPtrInput `pulumi:"namespace"`
	OutputName pulumi.StringPtrInput `pulumi:"outputName"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecElasticsearchRefsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsArgs) ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput {
	return i.ToAgentSpecElasticsearchRefsOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsArgs) ToAgentSpecElasticsearchRefsOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsOutput)
}

// AgentSpecElasticsearchRefsArrayInput is an input type that accepts AgentSpecElasticsearchRefsArray and AgentSpecElasticsearchRefsArrayOutput values.
// You can construct a concrete instance of `AgentSpecElasticsearchRefsArrayInput` via:
//
//	AgentSpecElasticsearchRefsArray{ AgentSpecElasticsearchRefsArgs{...} }
type AgentSpecElasticsearchRefsArrayInput interface {
	pulumi.Input

	ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput
	ToAgentSpecElasticsearchRefsArrayOutputWithContext(context.Context) AgentSpecElasticsearchRefsArrayOutput
}

type AgentSpecElasticsearchRefsArray []AgentSpecElasticsearchRefsInput

func (AgentSpecElasticsearchRefsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (i AgentSpecElasticsearchRefsArray) ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput {
	return i.ToAgentSpecElasticsearchRefsArrayOutputWithContext(context.Background())
}

func (i AgentSpecElasticsearchRefsArray) ToAgentSpecElasticsearchRefsArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecElasticsearchRefsArrayOutput)
}

type AgentSpecElasticsearchRefsOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsOutput) ToAgentSpecElasticsearchRefsOutput() AgentSpecElasticsearchRefsOutput {
	return o
}

func (o AgentSpecElasticsearchRefsOutput) ToAgentSpecElasticsearchRefsOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsOutput {
	return o
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecElasticsearchRefsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecElasticsearchRefsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AgentSpecElasticsearchRefsOutput) OutputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.OutputName }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecElasticsearchRefsOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecElasticsearchRefsOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecElasticsearchRefs) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecElasticsearchRefsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecElasticsearchRefsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecElasticsearchRefs)(nil)).Elem()
}

func (o AgentSpecElasticsearchRefsArrayOutput) ToAgentSpecElasticsearchRefsArrayOutput() AgentSpecElasticsearchRefsArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsArrayOutput) ToAgentSpecElasticsearchRefsArrayOutputWithContext(ctx context.Context) AgentSpecElasticsearchRefsArrayOutput {
	return o
}

func (o AgentSpecElasticsearchRefsArrayOutput) Index(i pulumi.IntInput) AgentSpecElasticsearchRefsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecElasticsearchRefs {
		return vs[0].([]AgentSpecElasticsearchRefs)[vs[1].(int)]
	}).(AgentSpecElasticsearchRefsOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRef struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecFleetServerRefInput is an input type that accepts AgentSpecFleetServerRefArgs and AgentSpecFleetServerRefOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefInput` via:
//
//	AgentSpecFleetServerRefArgs{...}
type AgentSpecFleetServerRefInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput
	ToAgentSpecFleetServerRefOutputWithContext(context.Context) AgentSpecFleetServerRefOutput
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecFleetServerRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRef)(nil)).Elem()
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput {
	return i.ToAgentSpecFleetServerRefOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefOutputWithContext(ctx context.Context) AgentSpecFleetServerRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefOutput)
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return i.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecFleetServerRefArgs) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefOutput).ToAgentSpecFleetServerRefPtrOutputWithContext(ctx)
}

// AgentSpecFleetServerRefPtrInput is an input type that accepts AgentSpecFleetServerRefArgs, AgentSpecFleetServerRefPtr and AgentSpecFleetServerRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecFleetServerRefPtrInput` via:
//
//	        AgentSpecFleetServerRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecFleetServerRefPtrInput interface {
	pulumi.Input

	ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput
	ToAgentSpecFleetServerRefPtrOutputWithContext(context.Context) AgentSpecFleetServerRefPtrOutput
}

type agentSpecFleetServerRefPtrType AgentSpecFleetServerRefArgs

func AgentSpecFleetServerRefPtr(v *AgentSpecFleetServerRefArgs) AgentSpecFleetServerRefPtrInput {
	return (*agentSpecFleetServerRefPtrType)(v)
}

func (*agentSpecFleetServerRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRef)(nil)).Elem()
}

func (i *agentSpecFleetServerRefPtrType) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return i.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecFleetServerRefPtrType) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecFleetServerRefPtrOutput)
}

// FleetServerRef is a reference to Fleet Server that this Agent should connect to to obtain it's configuration.
// Don't set unless `mode` is set to `fleet`.
type AgentSpecFleetServerRefOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecFleetServerRef)(nil)).Elem()
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefOutput() AgentSpecFleetServerRefOutput {
	return o
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefOutputWithContext(ctx context.Context) AgentSpecFleetServerRefOutput {
	return o
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return o.ToAgentSpecFleetServerRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecFleetServerRefOutput) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecFleetServerRef) *AgentSpecFleetServerRef {
		return &v
	}).(AgentSpecFleetServerRefPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecFleetServerRef) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecFleetServerRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecFleetServerRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecFleetServerRef)(nil)).Elem()
}

func (o AgentSpecFleetServerRefPtrOutput) ToAgentSpecFleetServerRefPtrOutput() AgentSpecFleetServerRefPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPtrOutput) ToAgentSpecFleetServerRefPtrOutputWithContext(ctx context.Context) AgentSpecFleetServerRefPtrOutput {
	return o
}

func (o AgentSpecFleetServerRefPtrOutput) Elem() AgentSpecFleetServerRefOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) AgentSpecFleetServerRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecFleetServerRef
		return ret
	}).(AgentSpecFleetServerRefOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecFleetServerRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecFleetServerRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecFleetServerRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecFleetServerRefPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecFleetServerRef) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttp struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service *AgentSpecHttpService `pulumi:"service"`
	// TLS defines options for configuring TLS for HTTP.
	Tls *AgentSpecHttpTls `pulumi:"tls"`
}

// AgentSpecHttpInput is an input type that accepts AgentSpecHttpArgs and AgentSpecHttpOutput values.
// You can construct a concrete instance of `AgentSpecHttpInput` via:
//
//	AgentSpecHttpArgs{...}
type AgentSpecHttpInput interface {
	pulumi.Input

	ToAgentSpecHttpOutput() AgentSpecHttpOutput
	ToAgentSpecHttpOutputWithContext(context.Context) AgentSpecHttpOutput
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpArgs struct {
	// Service defines the template for the associated Kubernetes Service object.
	Service AgentSpecHttpServicePtrInput `pulumi:"service"`
	// TLS defines options for configuring TLS for HTTP.
	Tls AgentSpecHttpTlsPtrInput `pulumi:"tls"`
}

func (AgentSpecHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttp)(nil)).Elem()
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpOutput() AgentSpecHttpOutput {
	return i.ToAgentSpecHttpOutputWithContext(context.Background())
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpOutputWithContext(ctx context.Context) AgentSpecHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpOutput)
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return i.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpArgs) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpOutput).ToAgentSpecHttpPtrOutputWithContext(ctx)
}

// AgentSpecHttpPtrInput is an input type that accepts AgentSpecHttpArgs, AgentSpecHttpPtr and AgentSpecHttpPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpPtrInput` via:
//
//	        AgentSpecHttpArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput
	ToAgentSpecHttpPtrOutputWithContext(context.Context) AgentSpecHttpPtrOutput
}

type agentSpecHttpPtrType AgentSpecHttpArgs

func AgentSpecHttpPtr(v *AgentSpecHttpArgs) AgentSpecHttpPtrInput {
	return (*agentSpecHttpPtrType)(v)
}

func (*agentSpecHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttp)(nil)).Elem()
}

func (i *agentSpecHttpPtrType) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return i.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpPtrType) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpPtrOutput)
}

// HTTP holds the HTTP layer configuration for the Agent in Fleet mode with Fleet Server enabled.
type AgentSpecHttpOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttp)(nil)).Elem()
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpOutput() AgentSpecHttpOutput {
	return o
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpOutputWithContext(ctx context.Context) AgentSpecHttpOutput {
	return o
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return o.ToAgentSpecHttpPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpOutput) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttp) *AgentSpecHttp {
		return &v
	}).(AgentSpecHttpPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o AgentSpecHttpOutput) Service() AgentSpecHttpServicePtrOutput {
	return o.ApplyT(func(v AgentSpecHttp) *AgentSpecHttpService { return v.Service }).(AgentSpecHttpServicePtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
func (o AgentSpecHttpOutput) Tls() AgentSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v AgentSpecHttp) *AgentSpecHttpTls { return v.Tls }).(AgentSpecHttpTlsPtrOutput)
}

type AgentSpecHttpPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttp)(nil)).Elem()
}

func (o AgentSpecHttpPtrOutput) ToAgentSpecHttpPtrOutput() AgentSpecHttpPtrOutput {
	return o
}

func (o AgentSpecHttpPtrOutput) ToAgentSpecHttpPtrOutputWithContext(ctx context.Context) AgentSpecHttpPtrOutput {
	return o
}

func (o AgentSpecHttpPtrOutput) Elem() AgentSpecHttpOutput {
	return o.ApplyT(func(v *AgentSpecHttp) AgentSpecHttp {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttp
		return ret
	}).(AgentSpecHttpOutput)
}

// Service defines the template for the associated Kubernetes Service object.
func (o AgentSpecHttpPtrOutput) Service() AgentSpecHttpServicePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttp) *AgentSpecHttpService {
		if v == nil {
			return nil
		}
		return v.Service
	}).(AgentSpecHttpServicePtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
func (o AgentSpecHttpPtrOutput) Tls() AgentSpecHttpTlsPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttp) *AgentSpecHttpTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(AgentSpecHttpTlsPtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpService struct {
	// ObjectMeta is the metadata of the service.
	// The name and namespace provided here are managed by ECK and will be ignored.
	Metadata *AgentSpecHttpServiceMetadata `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec *AgentSpecHttpServiceSpec `pulumi:"spec"`
}

// AgentSpecHttpServiceInput is an input type that accepts AgentSpecHttpServiceArgs and AgentSpecHttpServiceOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceInput` via:
//
//	AgentSpecHttpServiceArgs{...}
type AgentSpecHttpServiceInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput
	ToAgentSpecHttpServiceOutputWithContext(context.Context) AgentSpecHttpServiceOutput
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServiceArgs struct {
	// ObjectMeta is the metadata of the service.
	// The name and namespace provided here are managed by ECK and will be ignored.
	Metadata AgentSpecHttpServiceMetadataPtrInput `pulumi:"metadata"`
	// Spec is the specification of the service.
	Spec AgentSpecHttpServiceSpecPtrInput `pulumi:"spec"`
}

func (AgentSpecHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpService)(nil)).Elem()
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput {
	return i.ToAgentSpecHttpServiceOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServiceOutputWithContext(ctx context.Context) AgentSpecHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceOutput)
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return i.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceArgs) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceOutput).ToAgentSpecHttpServicePtrOutputWithContext(ctx)
}

// AgentSpecHttpServicePtrInput is an input type that accepts AgentSpecHttpServiceArgs, AgentSpecHttpServicePtr and AgentSpecHttpServicePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServicePtrInput` via:
//
//	        AgentSpecHttpServiceArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServicePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput
	ToAgentSpecHttpServicePtrOutputWithContext(context.Context) AgentSpecHttpServicePtrOutput
}

type agentSpecHttpServicePtrType AgentSpecHttpServiceArgs

func AgentSpecHttpServicePtr(v *AgentSpecHttpServiceArgs) AgentSpecHttpServicePtrInput {
	return (*agentSpecHttpServicePtrType)(v)
}

func (*agentSpecHttpServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpService)(nil)).Elem()
}

func (i *agentSpecHttpServicePtrType) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return i.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServicePtrType) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServicePtrOutput)
}

// Service defines the template for the associated Kubernetes Service object.
type AgentSpecHttpServiceOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpService)(nil)).Elem()
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServiceOutput() AgentSpecHttpServiceOutput {
	return o
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServiceOutputWithContext(ctx context.Context) AgentSpecHttpServiceOutput {
	return o
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return o.ToAgentSpecHttpServicePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceOutput) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpService) *AgentSpecHttpService {
		return &v
	}).(AgentSpecHttpServicePtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
func (o AgentSpecHttpServiceOutput) Metadata() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpService) *AgentSpecHttpServiceMetadata { return v.Metadata }).(AgentSpecHttpServiceMetadataPtrOutput)
}

// Spec is the specification of the service.
func (o AgentSpecHttpServiceOutput) Spec() AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpService) *AgentSpecHttpServiceSpec { return v.Spec }).(AgentSpecHttpServiceSpecPtrOutput)
}

type AgentSpecHttpServicePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpService)(nil)).Elem()
}

func (o AgentSpecHttpServicePtrOutput) ToAgentSpecHttpServicePtrOutput() AgentSpecHttpServicePtrOutput {
	return o
}

func (o AgentSpecHttpServicePtrOutput) ToAgentSpecHttpServicePtrOutputWithContext(ctx context.Context) AgentSpecHttpServicePtrOutput {
	return o
}

func (o AgentSpecHttpServicePtrOutput) Elem() AgentSpecHttpServiceOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) AgentSpecHttpService {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpService
		return ret
	}).(AgentSpecHttpServiceOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
func (o AgentSpecHttpServicePtrOutput) Metadata() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) *AgentSpecHttpServiceMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(AgentSpecHttpServiceMetadataPtrOutput)
}

// Spec is the specification of the service.
func (o AgentSpecHttpServicePtrOutput) Spec() AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpService) *AgentSpecHttpServiceSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AgentSpecHttpServiceSpecPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecHttpServiceMetadataInput is an input type that accepts AgentSpecHttpServiceMetadataArgs and AgentSpecHttpServiceMetadataOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataInput` via:
//
//	AgentSpecHttpServiceMetadataArgs{...}
type AgentSpecHttpServiceMetadataInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput
	ToAgentSpecHttpServiceMetadataOutputWithContext(context.Context) AgentSpecHttpServiceMetadataOutput
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecHttpServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput {
	return i.ToAgentSpecHttpServiceMetadataOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataOutput)
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceMetadataArgs) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataOutput).ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceMetadataPtrInput is an input type that accepts AgentSpecHttpServiceMetadataArgs, AgentSpecHttpServiceMetadataPtr and AgentSpecHttpServiceMetadataPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceMetadataPtrInput` via:
//
//	        AgentSpecHttpServiceMetadataArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceMetadataPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput
	ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Context) AgentSpecHttpServiceMetadataPtrOutput
}

type agentSpecHttpServiceMetadataPtrType AgentSpecHttpServiceMetadataArgs

func AgentSpecHttpServiceMetadataPtr(v *AgentSpecHttpServiceMetadataArgs) AgentSpecHttpServiceMetadataPtrInput {
	return (*agentSpecHttpServiceMetadataPtrType)(v)
}

func (*agentSpecHttpServiceMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (i *agentSpecHttpServiceMetadataPtrType) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return i.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceMetadataPtrType) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceMetadataPtrOutput)
}

// ObjectMeta is the metadata of the service.
// The name and namespace provided here are managed by ECK and will be ignored.
type AgentSpecHttpServiceMetadataOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataOutput() AgentSpecHttpServiceMetadataOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return o.ToAgentSpecHttpServiceMetadataPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceMetadataOutput) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceMetadata) *AgentSpecHttpServiceMetadata {
		return &v
	}).(AgentSpecHttpServiceMetadataPtrOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceMetadataPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceMetadata)(nil)).Elem()
}

func (o AgentSpecHttpServiceMetadataPtrOutput) ToAgentSpecHttpServiceMetadataPtrOutput() AgentSpecHttpServiceMetadataPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPtrOutput) ToAgentSpecHttpServiceMetadataPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceMetadataPtrOutput {
	return o
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Elem() AgentSpecHttpServiceMetadataOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) AgentSpecHttpServiceMetadata {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceMetadata
		return ret
	}).(AgentSpecHttpServiceMetadataOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecHttpServiceMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceMetadataAnnotations struct {
}

type AgentSpecHttpServiceMetadataLabels struct {
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpec struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts *bool `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP *string `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs []string `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs []string `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName *string `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy *string `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort *int `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy *string `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies []string `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy *string `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass *string `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP *string `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges []string `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports []AgentSpecHttpServiceSpecPorts `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses *bool `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector map[string]string `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig *AgentSpecHttpServiceSpecSessionAffinityConfig `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution *string `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type *string `pulumi:"type"`
}

// AgentSpecHttpServiceSpecInput is an input type that accepts AgentSpecHttpServiceSpecArgs and AgentSpecHttpServiceSpecOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecInput` via:
//
//	AgentSpecHttpServiceSpecArgs{...}
type AgentSpecHttpServiceSpecInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput
	ToAgentSpecHttpServiceSpecOutputWithContext(context.Context) AgentSpecHttpServiceSpecOutput
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecArgs struct {
	// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
	// allocated for services with type LoadBalancer.  Default is "true". It
	// may be set to "false" if the cluster load-balancer does not rely on
	// NodePorts.  If the caller requests specific NodePorts (by specifying a
	// value), those requests will be respected, regardless of this field.
	// This field may only be set for services with type LoadBalancer and will
	// be cleared if the type is changed to any other type.
	AllocateLoadBalancerNodePorts pulumi.BoolPtrInput `pulumi:"allocateLoadBalancerNodePorts"`
	// clusterIP is the IP address of the service and is usually assigned
	// randomly. If an address is specified manually, is in-range (as per
	// system configuration), and is not in use, it will be allocated to the
	// service; otherwise creation of the service will fail. This field may not
	// be changed through updates unless the type field is also being changed
	// to ExternalName (which requires this field to be blank) or the type
	// field is being changed from ExternalName (in which case this field may
	// optionally be specified, as describe above).  Valid values are "None",
	// empty string (""), or a valid IP address. Setting this to "None" makes a
	// "headless service" (no virtual IP), which is useful when direct endpoint
	// connections are preferred and proxying is not required.  Only applies to
	// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
	// when creating a Service of type ExternalName, creation will fail. This
	// field will be wiped when updating a Service to type ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIP pulumi.StringPtrInput `pulumi:"clusterIP"`
	// ClusterIPs is a list of IP addresses assigned to this service, and are
	// usually assigned randomly.  If an address is specified manually, is
	// in-range (as per system configuration), and is not in use, it will be
	// allocated to the service; otherwise creation of the service will fail.
	// This field may not be changed through updates unless the type field is
	// also being changed to ExternalName (which requires this field to be
	// empty) or the type field is being changed from ExternalName (in which
	// case this field may optionally be specified, as describe above).  Valid
	// values are "None", empty string (""), or a valid IP address.  Setting
	// this to "None" makes a "headless service" (no virtual IP), which is
	// useful when direct endpoint connections are preferred and proxying is
	// not required.  Only applies to types ClusterIP, NodePort, and
	// LoadBalancer. If this field is specified when creating a Service of type
	// ExternalName, creation will fail. This field will be wiped when updating
	// a Service to type ExternalName.  If this field is not specified, it will
	// be initialized from the clusterIP field.  If this field is specified,
	// clients must ensure that clusterIPs[0] and clusterIP have the same
	// value.
	//
	// This field may hold a maximum of two entries (dual-stack IPs, in either order).
	// These IPs must correspond to the values of the ipFamilies field. Both
	// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	ClusterIPs pulumi.StringArrayInput `pulumi:"clusterIPs"`
	// externalIPs is a list of IP addresses for which nodes in the cluster
	// will also accept traffic for this service.  These IPs are not managed by
	// Kubernetes.  The user is responsible for ensuring that traffic arrives
	// at a node with this IP.  A common example is external load-balancers
	// that are not part of the Kubernetes system.
	ExternalIPs pulumi.StringArrayInput `pulumi:"externalIPs"`
	// externalName is the external reference that discovery mechanisms will
	// return as an alias for this service (e.g. a DNS CNAME record). No
	// proxying will be involved.  Must be a lowercase RFC-1123 hostname
	// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
	ExternalName pulumi.StringPtrInput `pulumi:"externalName"`
	// externalTrafficPolicy describes how nodes distribute service traffic they
	// receive on one of the Service's "externally-facing" addresses (NodePorts,
	// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
	// the service in a way that assumes that external load balancers will take care
	// of balancing the service traffic between nodes, and so each node will deliver
	// traffic only to the node-local endpoints of the service, without masquerading
	// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
	// be dropped.) The default value, "Cluster", uses the standard behavior of
	// routing to all endpoints evenly (possibly modified by topology and other
	// features). Note that traffic sent to an External IP or LoadBalancer IP from
	// within the cluster will always get "Cluster" semantics, but clients sending to
	// a NodePort from within the cluster may need to take traffic policy into account
	// when picking a node.
	ExternalTrafficPolicy pulumi.StringPtrInput `pulumi:"externalTrafficPolicy"`
	// healthCheckNodePort specifies the healthcheck nodePort for the service.
	// This only applies when type is set to LoadBalancer and
	// externalTrafficPolicy is set to Local. If a value is specified, is
	// in-range, and is not in use, it will be used.  If not specified, a value
	// will be automatically allocated.  External systems (e.g. load-balancers)
	// can use this port to determine if a given node holds endpoints for this
	// service or not.  If this field is specified when creating a Service
	// which does not need it, creation will fail. This field will be wiped
	// when updating a Service to no longer need it (e.g. changing type).
	// This field cannot be updated once set.
	HealthCheckNodePort pulumi.IntPtrInput `pulumi:"healthCheckNodePort"`
	// InternalTrafficPolicy describes how nodes distribute service traffic they
	// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
	// only want to talk to endpoints of the service on the same node as the pod,
	// dropping the traffic if there are no local endpoints. The default value,
	// "Cluster", uses the standard behavior of routing to all endpoints evenly
	// (possibly modified by topology and other features).
	InternalTrafficPolicy pulumi.StringPtrInput `pulumi:"internalTrafficPolicy"`
	// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
	// service. This field is usually assigned automatically based on cluster
	// configuration and the ipFamilyPolicy field. If this field is specified
	// manually, the requested family is available in the cluster,
	// and ipFamilyPolicy allows it, it will be used; otherwise creation of
	// the service will fail. This field is conditionally mutable: it allows
	// for adding or removing a secondary IP family, but it does not allow
	// changing the primary IP family of the Service. Valid values are "IPv4"
	// and "IPv6".  This field only applies to Services of types ClusterIP,
	// NodePort, and LoadBalancer, and does apply to "headless" services.
	// This field will be wiped when updating a Service to type ExternalName.
	//
	// This field may hold a maximum of two entries (dual-stack families, in
	// either order).  These families must correspond to the values of the
	// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
	// governed by the ipFamilyPolicy field.
	IpFamilies pulumi.StringArrayInput `pulumi:"ipFamilies"`
	// IPFamilyPolicy represents the dual-stack-ness requested or required by
	// this Service. If there is no value provided, then this field will be set
	// to SingleStack. Services can be "SingleStack" (a single IP family),
	// "PreferDualStack" (two IP families on dual-stack configured clusters or
	// a single IP family on single-stack clusters), or "RequireDualStack"
	// (two IP families on dual-stack configured clusters, otherwise fail). The
	// ipFamilies and clusterIPs fields depend on the value of this field. This
	// field will be wiped when updating a service to type ExternalName.
	IpFamilyPolicy pulumi.StringPtrInput `pulumi:"ipFamilyPolicy"`
	// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
	// If specified, the value of this field must be a label-style identifier, with an optional prefix,
	// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
	// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
	// balancer implementation is used, today this is typically done through the cloud provider integration,
	// but should apply for any default implementation. If set, it is assumed that a load balancer
	// implementation is watching for Services with a matching class. Any default load balancer
	// implementation (e.g. cloud providers) should ignore Services that set this field.
	// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
	// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
	LoadBalancerClass pulumi.StringPtrInput `pulumi:"loadBalancerClass"`
	// Only applies to Service Type: LoadBalancer.
	// This feature depends on whether the underlying cloud-provider supports specifying
	// the loadBalancerIP when a load balancer is created.
	// This field will be ignored if the cloud-provider does not support the feature.
	// Deprecated: This field was under-specified and its meaning varies across implementations.
	// Using it is non-portable and it may not support dual-stack.
	// Users are encouraged to use implementation-specific annotations when available.
	LoadBalancerIP pulumi.StringPtrInput `pulumi:"loadBalancerIP"`
	// If specified and supported by the platform, this will restrict traffic through the cloud-provider
	// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
	// cloud-provider does not support the feature."
	// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
	LoadBalancerSourceRanges pulumi.StringArrayInput `pulumi:"loadBalancerSourceRanges"`
	// The list of ports that are exposed by this service.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	Ports AgentSpecHttpServiceSpecPortsArrayInput `pulumi:"ports"`
	// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
	// Service should disregard any indications of ready/not-ready.
	// The primary use case for setting this field is for a StatefulSet's Headless Service to
	// propagate SRV DNS records for its Pods for the purpose of peer discovery.
	// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
	// Services interpret this to mean that all endpoints are considered "ready" even if the
	// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
	// through the Endpoints or EndpointSlice resources can safely assume this behavior.
	PublishNotReadyAddresses pulumi.BoolPtrInput `pulumi:"publishNotReadyAddresses"`
	// Route service traffic to pods with label keys and values matching this
	// selector. If empty or not present, the service is assumed to have an
	// external process managing its endpoints, which Kubernetes will not
	// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
	// Ignored if type is ExternalName.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/
	Selector pulumi.StringMapInput `pulumi:"selector"`
	// Supports "ClientIP" and "None". Used to maintain session affinity.
	// Enable client IP based session affinity.
	// Must be ClientIP or None.
	// Defaults to None.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
	SessionAffinity pulumi.StringPtrInput `pulumi:"sessionAffinity"`
	// sessionAffinityConfig contains the configurations of session affinity.
	SessionAffinityConfig AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput `pulumi:"sessionAffinityConfig"`
	// TrafficDistribution offers a way to express preferences for how traffic is
	// distributed to Service endpoints. Implementations can use this field as a
	// hint, but are not required to guarantee strict adherence. If the field is
	// not set, the implementation will apply its default routing strategy. If set
	// to "PreferClose", implementations should prioritize endpoints that are
	// topologically close (e.g., same zone).
	// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
	TrafficDistribution pulumi.StringPtrInput `pulumi:"trafficDistribution"`
	// type determines how the Service is exposed. Defaults to ClusterIP. Valid
	// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
	// "ClusterIP" allocates a cluster-internal IP address for load-balancing
	// to endpoints. Endpoints are determined by the selector or if that is not
	// specified, by manual construction of an Endpoints object or
	// EndpointSlice objects. If clusterIP is "None", no virtual IP is
	// allocated and the endpoints are published as a set of endpoints rather
	// than a virtual IP.
	// "NodePort" builds on ClusterIP and allocates a port on every node which
	// routes to the same endpoints as the clusterIP.
	// "LoadBalancer" builds on NodePort and creates an external load-balancer
	// (if supported in the current cloud) which routes to the same endpoints
	// as the clusterIP.
	// "ExternalName" aliases this service to the specified externalName.
	// Several other fields do not apply to ExternalName services.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AgentSpecHttpServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput {
	return i.ToAgentSpecHttpServiceSpecOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecOutput)
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecArgs) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecOutput).ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecPtrInput is an input type that accepts AgentSpecHttpServiceSpecArgs, AgentSpecHttpServiceSpecPtr and AgentSpecHttpServiceSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPtrInput` via:
//
//	        AgentSpecHttpServiceSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput
	ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecPtrOutput
}

type agentSpecHttpServiceSpecPtrType AgentSpecHttpServiceSpecArgs

func AgentSpecHttpServiceSpecPtr(v *AgentSpecHttpServiceSpecArgs) AgentSpecHttpServiceSpecPtrInput {
	return (*agentSpecHttpServiceSpecPtrType)(v)
}

func (*agentSpecHttpServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecPtrType) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return i.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecPtrType) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPtrOutput)
}

// Spec is the specification of the service.
type AgentSpecHttpServiceSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecOutput() AgentSpecHttpServiceSpecOutput {
	return o
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecOutput {
	return o
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return o.ToAgentSpecHttpServiceSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecOutput) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpec {
		return &v
	}).(AgentSpecHttpServiceSpecPtrOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *bool { return v.AllocateLoadBalancerNodePorts }).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ClusterIP }).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.ClusterIPs }).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.ExternalIPs }).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ExternalName }).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.ExternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *int { return v.HealthCheckNodePort }).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.InternalTrafficPolicy }).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.IpFamilies }).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.IpFamilyPolicy }).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.LoadBalancerClass }).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.LoadBalancerIP }).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []string { return v.LoadBalancerSourceRanges }).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) Ports() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) []AgentSpecHttpServiceSpecPorts { return v.Ports }).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *bool { return v.PublishNotReadyAddresses }).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) map[string]string { return v.Selector }).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.SessionAffinity }).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o AgentSpecHttpServiceSpecOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.TrafficDistribution }).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpec) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpec)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPtrOutput) ToAgentSpecHttpServiceSpecPtrOutput() AgentSpecHttpServiceSpecPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPtrOutput) ToAgentSpecHttpServiceSpecPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPtrOutput) Elem() AgentSpecHttpServiceSpecOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) AgentSpecHttpServiceSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpec
		return ret
	}).(AgentSpecHttpServiceSpecOutput)
}

// allocateLoadBalancerNodePorts defines if NodePorts will be automatically
// allocated for services with type LoadBalancer.  Default is "true". It
// may be set to "false" if the cluster load-balancer does not rely on
// NodePorts.  If the caller requests specific NodePorts (by specifying a
// value), those requests will be respected, regardless of this field.
// This field may only be set for services with type LoadBalancer and will
// be cleared if the type is changed to any other type.
func (o AgentSpecHttpServiceSpecPtrOutput) AllocateLoadBalancerNodePorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.AllocateLoadBalancerNodePorts
	}).(pulumi.BoolPtrOutput)
}

// clusterIP is the IP address of the service and is usually assigned
// randomly. If an address is specified manually, is in-range (as per
// system configuration), and is not in use, it will be allocated to the
// service; otherwise creation of the service will fail. This field may not
// be changed through updates unless the type field is also being changed
// to ExternalName (which requires this field to be blank) or the type
// field is being changed from ExternalName (in which case this field may
// optionally be specified, as describe above).  Valid values are "None",
// empty string (""), or a valid IP address. Setting this to "None" makes a
// "headless service" (no virtual IP), which is useful when direct endpoint
// connections are preferred and proxying is not required.  Only applies to
// types ClusterIP, NodePort, and LoadBalancer. If this field is specified
// when creating a Service of type ExternalName, creation will fail. This
// field will be wiped when updating a Service to type ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) ClusterIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ClusterIP
	}).(pulumi.StringPtrOutput)
}

// ClusterIPs is a list of IP addresses assigned to this service, and are
// usually assigned randomly.  If an address is specified manually, is
// in-range (as per system configuration), and is not in use, it will be
// allocated to the service; otherwise creation of the service will fail.
// This field may not be changed through updates unless the type field is
// also being changed to ExternalName (which requires this field to be
// empty) or the type field is being changed from ExternalName (in which
// case this field may optionally be specified, as describe above).  Valid
// values are "None", empty string (""), or a valid IP address.  Setting
// this to "None" makes a "headless service" (no virtual IP), which is
// useful when direct endpoint connections are preferred and proxying is
// not required.  Only applies to types ClusterIP, NodePort, and
// LoadBalancer. If this field is specified when creating a Service of type
// ExternalName, creation will fail. This field will be wiped when updating
// a Service to type ExternalName.  If this field is not specified, it will
// be initialized from the clusterIP field.  If this field is specified,
// clients must ensure that clusterIPs[0] and clusterIP have the same
// value.
//
// This field may hold a maximum of two entries (dual-stack IPs, in either order).
// These IPs must correspond to the values of the ipFamilies field. Both
// clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) ClusterIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ClusterIPs
	}).(pulumi.StringArrayOutput)
}

// externalIPs is a list of IP addresses for which nodes in the cluster
// will also accept traffic for this service.  These IPs are not managed by
// Kubernetes.  The user is responsible for ensuring that traffic arrives
// at a node with this IP.  A common example is external load-balancers
// that are not part of the Kubernetes system.
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalIPs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.ExternalIPs
	}).(pulumi.StringArrayOutput)
}

// externalName is the external reference that discovery mechanisms will
// return as an alias for this service (e.g. a DNS CNAME record). No
// proxying will be involved.  Must be a lowercase RFC-1123 hostname
// (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalName
	}).(pulumi.StringPtrOutput)
}

// externalTrafficPolicy describes how nodes distribute service traffic they
// receive on one of the Service's "externally-facing" addresses (NodePorts,
// ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
// the service in a way that assumes that external load balancers will take care
// of balancing the service traffic between nodes, and so each node will deliver
// traffic only to the node-local endpoints of the service, without masquerading
// the client source IP. (Traffic mistakenly sent to a node with no endpoints will
// be dropped.) The default value, "Cluster", uses the standard behavior of
// routing to all endpoints evenly (possibly modified by topology and other
// features). Note that traffic sent to an External IP or LoadBalancer IP from
// within the cluster will always get "Cluster" semantics, but clients sending to
// a NodePort from within the cluster may need to take traffic policy into account
// when picking a node.
func (o AgentSpecHttpServiceSpecPtrOutput) ExternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// healthCheckNodePort specifies the healthcheck nodePort for the service.
// This only applies when type is set to LoadBalancer and
// externalTrafficPolicy is set to Local. If a value is specified, is
// in-range, and is not in use, it will be used.  If not specified, a value
// will be automatically allocated.  External systems (e.g. load-balancers)
// can use this port to determine if a given node holds endpoints for this
// service or not.  If this field is specified when creating a Service
// which does not need it, creation will fail. This field will be wiped
// when updating a Service to no longer need it (e.g. changing type).
// This field cannot be updated once set.
func (o AgentSpecHttpServiceSpecPtrOutput) HealthCheckNodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckNodePort
	}).(pulumi.IntPtrOutput)
}

// InternalTrafficPolicy describes how nodes distribute service traffic they
// receive on the ClusterIP. If set to "Local", the proxy will assume that pods
// only want to talk to endpoints of the service on the same node as the pod,
// dropping the traffic if there are no local endpoints. The default value,
// "Cluster", uses the standard behavior of routing to all endpoints evenly
// (possibly modified by topology and other features).
func (o AgentSpecHttpServiceSpecPtrOutput) InternalTrafficPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.InternalTrafficPolicy
	}).(pulumi.StringPtrOutput)
}

// IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
// service. This field is usually assigned automatically based on cluster
// configuration and the ipFamilyPolicy field. If this field is specified
// manually, the requested family is available in the cluster,
// and ipFamilyPolicy allows it, it will be used; otherwise creation of
// the service will fail. This field is conditionally mutable: it allows
// for adding or removing a secondary IP family, but it does not allow
// changing the primary IP family of the Service. Valid values are "IPv4"
// and "IPv6".  This field only applies to Services of types ClusterIP,
// NodePort, and LoadBalancer, and does apply to "headless" services.
// This field will be wiped when updating a Service to type ExternalName.
//
// This field may hold a maximum of two entries (dual-stack families, in
// either order).  These families must correspond to the values of the
// clusterIPs field, if specified. Both clusterIPs and ipFamilies are
// governed by the ipFamilyPolicy field.
func (o AgentSpecHttpServiceSpecPtrOutput) IpFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.IpFamilies
	}).(pulumi.StringArrayOutput)
}

// IPFamilyPolicy represents the dual-stack-ness requested or required by
// this Service. If there is no value provided, then this field will be set
// to SingleStack. Services can be "SingleStack" (a single IP family),
// "PreferDualStack" (two IP families on dual-stack configured clusters or
// a single IP family on single-stack clusters), or "RequireDualStack"
// (two IP families on dual-stack configured clusters, otherwise fail). The
// ipFamilies and clusterIPs fields depend on the value of this field. This
// field will be wiped when updating a service to type ExternalName.
func (o AgentSpecHttpServiceSpecPtrOutput) IpFamilyPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.IpFamilyPolicy
	}).(pulumi.StringPtrOutput)
}

// loadBalancerClass is the class of the load balancer implementation this Service belongs to.
// If specified, the value of this field must be a label-style identifier, with an optional prefix,
// e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
// This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
// balancer implementation is used, today this is typically done through the cloud provider integration,
// but should apply for any default implementation. If set, it is assumed that a load balancer
// implementation is watching for Services with a matching class. Any default load balancer
// implementation (e.g. cloud providers) should ignore Services that set this field.
// This field can only be set when creating or updating a Service to type 'LoadBalancer'.
// Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerClass
	}).(pulumi.StringPtrOutput)
}

// Only applies to Service Type: LoadBalancer.
// This feature depends on whether the underlying cloud-provider supports specifying
// the loadBalancerIP when a load balancer is created.
// This field will be ignored if the cloud-provider does not support the feature.
// Deprecated: This field was under-specified and its meaning varies across implementations.
// Using it is non-portable and it may not support dual-stack.
// Users are encouraged to use implementation-specific annotations when available.
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerIP
	}).(pulumi.StringPtrOutput)
}

// If specified and supported by the platform, this will restrict traffic through the cloud-provider
// load-balancer will be restricted to the specified client IPs. This field will be ignored if the
// cloud-provider does not support the feature."
// More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
func (o AgentSpecHttpServiceSpecPtrOutput) LoadBalancerSourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSourceRanges
	}).(pulumi.StringArrayOutput)
}

// The list of ports that are exposed by this service.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) Ports() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) []AgentSpecHttpServiceSpecPorts {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// publishNotReadyAddresses indicates that any agent which deals with endpoints for this
// Service should disregard any indications of ready/not-ready.
// The primary use case for setting this field is for a StatefulSet's Headless Service to
// propagate SRV DNS records for its Pods for the purpose of peer discovery.
// The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
// Services interpret this to mean that all endpoints are considered "ready" even if the
// Pods themselves are not. Agents which consume only Kubernetes generated endpoints
// through the Endpoints or EndpointSlice resources can safely assume this behavior.
func (o AgentSpecHttpServiceSpecPtrOutput) PublishNotReadyAddresses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.PublishNotReadyAddresses
	}).(pulumi.BoolPtrOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
func (o AgentSpecHttpServiceSpecPtrOutput) Selector() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringMapOutput)
}

// Supports "ClientIP" and "None". Used to maintain session affinity.
// Enable client IP based session affinity.
// Must be ClientIP or None.
// Defaults to None.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
func (o AgentSpecHttpServiceSpecPtrOutput) SessionAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.SessionAffinity
	}).(pulumi.StringPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
func (o AgentSpecHttpServiceSpecPtrOutput) SessionAffinityConfig() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		if v == nil {
			return nil
		}
		return v.SessionAffinityConfig
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// TrafficDistribution offers a way to express preferences for how traffic is
// distributed to Service endpoints. Implementations can use this field as a
// hint, but are not required to guarantee strict adherence. If the field is
// not set, the implementation will apply its default routing strategy. If set
// to "PreferClose", implementations should prioritize endpoints that are
// topologically close (e.g., same zone).
// This is an alpha field and requires enabling ServiceTrafficDistribution feature.
func (o AgentSpecHttpServiceSpecPtrOutput) TrafficDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.TrafficDistribution
	}).(pulumi.StringPtrOutput)
}

// type determines how the Service is exposed. Defaults to ClusterIP. Valid
// options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
// "ClusterIP" allocates a cluster-internal IP address for load-balancing
// to endpoints. Endpoints are determined by the selector or if that is not
// specified, by manual construction of an Endpoints object or
// EndpointSlice objects. If clusterIP is "None", no virtual IP is
// allocated and the endpoints are published as a set of endpoints rather
// than a virtual IP.
// "NodePort" builds on ClusterIP and allocates a port on every node which
// routes to the same endpoints as the clusterIP.
// "LoadBalancer" builds on NodePort and creates an external load-balancer
// (if supported in the current cloud) which routes to the same endpoints
// as the clusterIP.
// "ExternalName" aliases this service to the specified externalName.
// Several other fields do not apply to ExternalName services.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
func (o AgentSpecHttpServiceSpecPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPorts struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol *string `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name *string `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort *int `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port int `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol *string `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort interface{} `pulumi:"targetPort"`
}

// Defaults sets the appropriate defaults for AgentSpecHttpServiceSpecPorts
func (val *AgentSpecHttpServiceSpecPorts) Defaults() *AgentSpecHttpServiceSpecPorts {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "TCP"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// AgentSpecHttpServiceSpecPortsInput is an input type that accepts AgentSpecHttpServiceSpecPortsArgs and AgentSpecHttpServiceSpecPortsOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsInput` via:
//
//	AgentSpecHttpServiceSpecPortsArgs{...}
type AgentSpecHttpServiceSpecPortsInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput
	ToAgentSpecHttpServiceSpecPortsOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsOutput
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsArgs struct {
	// The application protocol for this port.
	// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
	// This field follows standard Kubernetes label syntax.
	// Valid values are either:
	//
	// * Un-prefixed protocol names - reserved for IANA standard service names (as per
	// RFC-6335 and https://www.iana.org/assignments/service-names).
	//
	// * Kubernetes-defined prefixed names:
	//   * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
	//   * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
	//   * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
	//
	// * Other protocols should use implementation-defined prefixed names such as
	// mycompany.com/my-custom-protocol.
	AppProtocol pulumi.StringPtrInput `pulumi:"appProtocol"`
	// The name of this port within the service. This must be a DNS_LABEL.
	// All ports within a ServiceSpec must have unique names. When considering
	// the endpoints for a Service, this must match the 'name' field in the
	// EndpointPort.
	// Optional if only one ServicePort is defined on this service.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The port on each node on which this service is exposed when type is
	// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
	// specified, in-range, and not in use it will be used, otherwise the
	// operation will fail.  If not specified, a port will be allocated if this
	// Service requires one.  If this field is specified when creating a
	// Service which does not need it, creation will fail. This field will be
	// wiped when updating a Service to no longer need it (e.g. changing type
	// from NodePort to ClusterIP).
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
	NodePort pulumi.IntPtrInput `pulumi:"nodePort"`
	// The port that will be exposed by this service.
	Port pulumi.IntInput `pulumi:"port"`
	// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
	// Default is TCP.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Number or name of the port to access on the pods targeted by the service.
	// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
	// If this is a string, it will be looked up as a named port in the
	// target Pod's container ports. If this is not specified, the value
	// of the 'port' field is used (an identity map).
	// This field is ignored for services with clusterIP=None, and should be
	// omitted or set equal to the 'port' field.
	// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
	TargetPort pulumi.Input `pulumi:"targetPort"`
}

// Defaults sets the appropriate defaults for AgentSpecHttpServiceSpecPortsArgs
func (val *AgentSpecHttpServiceSpecPortsArgs) Defaults() *AgentSpecHttpServiceSpecPortsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("TCP")
	}
	return &tmp
}
func (AgentSpecHttpServiceSpecPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsArgs) ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput {
	return i.ToAgentSpecHttpServiceSpecPortsOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsArgs) ToAgentSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsOutput)
}

// AgentSpecHttpServiceSpecPortsArrayInput is an input type that accepts AgentSpecHttpServiceSpecPortsArray and AgentSpecHttpServiceSpecPortsArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecPortsArrayInput` via:
//
//	AgentSpecHttpServiceSpecPortsArray{ AgentSpecHttpServiceSpecPortsArgs{...} }
type AgentSpecHttpServiceSpecPortsArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput
	ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(context.Context) AgentSpecHttpServiceSpecPortsArrayOutput
}

type AgentSpecHttpServiceSpecPortsArray []AgentSpecHttpServiceSpecPortsInput

func (AgentSpecHttpServiceSpecPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecPortsArray) ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput {
	return i.ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecPortsArray) ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecPortsArrayOutput)
}

// ServicePort contains information on service's port.
type AgentSpecHttpServiceSpecPortsOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsOutput) ToAgentSpecHttpServiceSpecPortsOutput() AgentSpecHttpServiceSpecPortsOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsOutput) ToAgentSpecHttpServiceSpecPortsOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsOutput {
	return o
}

// The application protocol for this port.
// This is used as a hint for implementations to offer richer behavior for protocols that they understand.
// This field follows standard Kubernetes label syntax.
// Valid values are either:
//
// * Un-prefixed protocol names - reserved for IANA standard service names (as per
// RFC-6335 and https://www.iana.org/assignments/service-names).
//
// * Kubernetes-defined prefixed names:
//   - 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
//   - 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
//   - 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
//
// * Other protocols should use implementation-defined prefixed names such as
// mycompany.com/my-custom-protocol.
func (o AgentSpecHttpServiceSpecPortsOutput) AppProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.AppProtocol }).(pulumi.StringPtrOutput)
}

// The name of this port within the service. This must be a DNS_LABEL.
// All ports within a ServiceSpec must have unique names. When considering
// the endpoints for a Service, this must match the 'name' field in the
// EndpointPort.
// Optional if only one ServicePort is defined on this service.
func (o AgentSpecHttpServiceSpecPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port on each node on which this service is exposed when type is
// NodePort or LoadBalancer.  Usually assigned by the system. If a value is
// specified, in-range, and not in use it will be used, otherwise the
// operation will fail.  If not specified, a port will be allocated if this
// Service requires one.  If this field is specified when creating a
// Service which does not need it, creation will fail. This field will be
// wiped when updating a Service to no longer need it (e.g. changing type
// from NodePort to ClusterIP).
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
func (o AgentSpecHttpServiceSpecPortsOutput) NodePort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *int { return v.NodePort }).(pulumi.IntPtrOutput)
}

// The port that will be exposed by this service.
func (o AgentSpecHttpServiceSpecPortsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) int { return v.Port }).(pulumi.IntOutput)
}

// The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
// Default is TCP.
func (o AgentSpecHttpServiceSpecPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the pods targeted by the service.
// Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
// If this is a string, it will be looked up as a named port in the
// target Pod's container ports. If this is not specified, the value
// of the 'port' field is used (an identity map).
// This field is ignored for services with clusterIP=None, and should be
// omitted or set equal to the 'port' field.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
func (o AgentSpecHttpServiceSpecPortsOutput) TargetPort() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecPorts) interface{} { return v.TargetPort }).(pulumi.AnyOutput)
}

type AgentSpecHttpServiceSpecPortsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpServiceSpecPorts)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) ToAgentSpecHttpServiceSpecPortsArrayOutput() AgentSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) ToAgentSpecHttpServiceSpecPortsArrayOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecPortsArrayOutput {
	return o
}

func (o AgentSpecHttpServiceSpecPortsArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpServiceSpecPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpServiceSpecPorts {
		return vs[0].([]AgentSpecHttpServiceSpecPorts)[vs[1].(int)]
	}).(AgentSpecHttpServiceSpecPortsOutput)
}

// Route service traffic to pods with label keys and values matching this
// selector. If empty or not present, the service is assumed to have an
// external process managing its endpoints, which Kubernetes will not
// modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
// Ignored if type is ExternalName.
// More info: https://kubernetes.io/docs/concepts/services-networking/service/
type AgentSpecHttpServiceSpecSelector struct {
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfig struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp `pulumi:"clientIP"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigArgs and AgentSpecHttpServiceSpecSessionAffinityConfigOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigArgs struct {
	// clientIP contains the configurations of Client IP based session affinity.
	ClientIP AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput `pulumi:"clientIP"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigArgs, AgentSpecHttpServiceSpecSessionAffinityConfigPtr and AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigPtrType AgentSpecHttpServiceSpecSessionAffinityConfigArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigArgs) AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// sessionAffinityConfig contains the configurations of session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutput() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfig {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o AgentSpecHttpServiceSpecSessionAffinityConfigOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp {
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfig)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfig) AgentSpecHttpServiceSpecSessionAffinityConfig {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfig
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
func (o AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput) ClientIP() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfig) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp {
		if v == nil {
			return nil
		}
		return v.ClientIP
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIp struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIpInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs and AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIpInput` via:
//
//	AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs{...}
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIpInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs struct {
	// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
	// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
	// Default value is 10800(for 3 hours).
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIp)(nil)).Elem()
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput)
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput).ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(ctx)
}

// AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput is an input type that accepts AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs, AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtr and AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput` via:
//
//	        AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput
	ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput
}

type agentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrType AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs

func AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtr(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput {
	return (*agentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrType)(v)
}

func (*agentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIp)(nil)).Elem()
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return i.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrType) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput)
}

// clientIP contains the configurations of Client IP based session affinity.
type AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIp)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o.ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpServiceSpecSessionAffinityConfigClientIp) *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp {
		return &v
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpServiceSpecSessionAffinityConfigClientIp) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpServiceSpecSessionAffinityConfigClientIp)(nil)).Elem()
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput) ToAgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutputWithContext(ctx context.Context) AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput {
	return o
}

func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput) Elem() AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp) AgentSpecHttpServiceSpecSessionAffinityConfigClientIp {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpServiceSpecSessionAffinityConfigClientIp
		return ret
	}).(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput)
}

// timeoutSeconds specifies the seconds of ClientIP type session sticky time.
// The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
// Default value is 10800(for 3 hours).
func (o AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpServiceSpecSessionAffinityConfigClientIp) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTls struct {
	// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
	// The referenced secret should contain the following:
	//
	// - `ca.crt`: The certificate authority (optional).
	// - `tls.crt`: The certificate (or a chain).
	// - `tls.key`: The private key to the first certificate in the certificate chain.
	Certificate *AgentSpecHttpTlsCertificate `pulumi:"certificate"`
	// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
	SelfSignedCertificate *AgentSpecHttpTlsSelfSignedCertificate `pulumi:"selfSignedCertificate"`
}

// AgentSpecHttpTlsInput is an input type that accepts AgentSpecHttpTlsArgs and AgentSpecHttpTlsOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsInput` via:
//
//	AgentSpecHttpTlsArgs{...}
type AgentSpecHttpTlsInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput
	ToAgentSpecHttpTlsOutputWithContext(context.Context) AgentSpecHttpTlsOutput
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsArgs struct {
	// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
	// The referenced secret should contain the following:
	//
	// - `ca.crt`: The certificate authority (optional).
	// - `tls.crt`: The certificate (or a chain).
	// - `tls.key`: The private key to the first certificate in the certificate chain.
	Certificate AgentSpecHttpTlsCertificatePtrInput `pulumi:"certificate"`
	// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
	SelfSignedCertificate AgentSpecHttpTlsSelfSignedCertificatePtrInput `pulumi:"selfSignedCertificate"`
}

func (AgentSpecHttpTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTls)(nil)).Elem()
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput {
	return i.ToAgentSpecHttpTlsOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsOutputWithContext(ctx context.Context) AgentSpecHttpTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsOutput)
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return i.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsArgs) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsOutput).ToAgentSpecHttpTlsPtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsPtrInput is an input type that accepts AgentSpecHttpTlsArgs, AgentSpecHttpTlsPtr and AgentSpecHttpTlsPtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsPtrInput` via:
//
//	        AgentSpecHttpTlsArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsPtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput
	ToAgentSpecHttpTlsPtrOutputWithContext(context.Context) AgentSpecHttpTlsPtrOutput
}

type agentSpecHttpTlsPtrType AgentSpecHttpTlsArgs

func AgentSpecHttpTlsPtr(v *AgentSpecHttpTlsArgs) AgentSpecHttpTlsPtrInput {
	return (*agentSpecHttpTlsPtrType)(v)
}

func (*agentSpecHttpTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTls)(nil)).Elem()
}

func (i *agentSpecHttpTlsPtrType) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return i.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsPtrType) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsPtrOutput)
}

// TLS defines options for configuring TLS for HTTP.
type AgentSpecHttpTlsOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTls)(nil)).Elem()
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsOutput() AgentSpecHttpTlsOutput {
	return o
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsOutputWithContext(ctx context.Context) AgentSpecHttpTlsOutput {
	return o
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return o.ToAgentSpecHttpTlsPtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsOutput) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTls) *AgentSpecHttpTls {
		return &v
	}).(AgentSpecHttpTlsPtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
func (o AgentSpecHttpTlsOutput) Certificate() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTls) *AgentSpecHttpTlsCertificate { return v.Certificate }).(AgentSpecHttpTlsCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
func (o AgentSpecHttpTlsOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTls) *AgentSpecHttpTlsSelfSignedCertificate { return v.SelfSignedCertificate }).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

type AgentSpecHttpTlsPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTls)(nil)).Elem()
}

func (o AgentSpecHttpTlsPtrOutput) ToAgentSpecHttpTlsPtrOutput() AgentSpecHttpTlsPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPtrOutput) ToAgentSpecHttpTlsPtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsPtrOutput {
	return o
}

func (o AgentSpecHttpTlsPtrOutput) Elem() AgentSpecHttpTlsOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) AgentSpecHttpTls {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTls
		return ret
	}).(AgentSpecHttpTlsOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
func (o AgentSpecHttpTlsPtrOutput) Certificate() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) *AgentSpecHttpTlsCertificate {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(AgentSpecHttpTlsCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
func (o AgentSpecHttpTlsPtrOutput) SelfSignedCertificate() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTls) *AgentSpecHttpTlsSelfSignedCertificate {
		if v == nil {
			return nil
		}
		return v.SelfSignedCertificate
	}).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificate struct {
	// SecretName is the name of the secret.
	SecretName *string `pulumi:"secretName"`
}

// AgentSpecHttpTlsCertificateInput is an input type that accepts AgentSpecHttpTlsCertificateArgs and AgentSpecHttpTlsCertificateOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificateInput` via:
//
//	AgentSpecHttpTlsCertificateArgs{...}
type AgentSpecHttpTlsCertificateInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput
	ToAgentSpecHttpTlsCertificateOutputWithContext(context.Context) AgentSpecHttpTlsCertificateOutput
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificateArgs struct {
	// SecretName is the name of the secret.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (AgentSpecHttpTlsCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput {
	return i.ToAgentSpecHttpTlsCertificateOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificateOutput)
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsCertificateArgs) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificateOutput).ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsCertificatePtrInput is an input type that accepts AgentSpecHttpTlsCertificateArgs, AgentSpecHttpTlsCertificatePtr and AgentSpecHttpTlsCertificatePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsCertificatePtrInput` via:
//
//	        AgentSpecHttpTlsCertificateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsCertificatePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput
	ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Context) AgentSpecHttpTlsCertificatePtrOutput
}

type agentSpecHttpTlsCertificatePtrType AgentSpecHttpTlsCertificateArgs

func AgentSpecHttpTlsCertificatePtr(v *AgentSpecHttpTlsCertificateArgs) AgentSpecHttpTlsCertificatePtrInput {
	return (*agentSpecHttpTlsCertificatePtrType)(v)
}

func (*agentSpecHttpTlsCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (i *agentSpecHttpTlsCertificatePtrType) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsCertificatePtrType) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsCertificatePtrOutput)
}

// Certificate is a reference to a Kubernetes secret that contains the certificate and private key for enabling TLS.
// The referenced secret should contain the following:
//
// - `ca.crt`: The certificate authority (optional).
// - `tls.crt`: The certificate (or a chain).
// - `tls.key`: The private key to the first certificate in the certificate chain.
type AgentSpecHttpTlsCertificateOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificateOutput() AgentSpecHttpTlsCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return o.ToAgentSpecHttpTlsCertificatePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsCertificateOutput) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsCertificate) *AgentSpecHttpTlsCertificate {
		return &v
	}).(AgentSpecHttpTlsCertificatePtrOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificateOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsCertificate) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsCertificatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsCertificatePtrOutput) ToAgentSpecHttpTlsCertificatePtrOutput() AgentSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePtrOutput) ToAgentSpecHttpTlsCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsCertificatePtrOutput) Elem() AgentSpecHttpTlsCertificateOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificate) AgentSpecHttpTlsCertificate {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsCertificate
		return ret
	}).(AgentSpecHttpTlsCertificateOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecHttpTlsCertificatePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificate struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled *bool `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames `pulumi:"subjectAltNames"`
}

// AgentSpecHttpTlsSelfSignedCertificateInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateArgs and AgentSpecHttpTlsSelfSignedCertificateOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateArgs{...}
type AgentSpecHttpTlsSelfSignedCertificateInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput
	ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificateArgs struct {
	// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
	SubjectAltNames AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput `pulumi:"subjectAltNames"`
}

func (AgentSpecHttpTlsSelfSignedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateOutput)
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateArgs) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateOutput).ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx)
}

// AgentSpecHttpTlsSelfSignedCertificatePtrInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateArgs, AgentSpecHttpTlsSelfSignedCertificatePtr and AgentSpecHttpTlsSelfSignedCertificatePtrOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificatePtrInput` via:
//
//	        AgentSpecHttpTlsSelfSignedCertificateArgs{...}
//
//	or:
//
//	        nil
type AgentSpecHttpTlsSelfSignedCertificatePtrInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput
	ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput
}

type agentSpecHttpTlsSelfSignedCertificatePtrType AgentSpecHttpTlsSelfSignedCertificateArgs

func AgentSpecHttpTlsSelfSignedCertificatePtr(v *AgentSpecHttpTlsSelfSignedCertificateArgs) AgentSpecHttpTlsSelfSignedCertificatePtrInput {
	return (*agentSpecHttpTlsSelfSignedCertificatePtrType)(v)
}

func (*agentSpecHttpTlsSelfSignedCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (i *agentSpecHttpTlsSelfSignedCertificatePtrType) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (i *agentSpecHttpTlsSelfSignedCertificatePtrType) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// SelfSignedCertificate allows configuring the self-signed certificate generated by the operator.
type AgentSpecHttpTlsSelfSignedCertificateOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificateOutput() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificateOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(context.Background())
}

func (o AgentSpecHttpTlsSelfSignedCertificateOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecHttpTlsSelfSignedCertificate) *AgentSpecHttpTlsSelfSignedCertificate {
		return &v
	}).(AgentSpecHttpTlsSelfSignedCertificatePtrOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificateOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificate) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificateOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificate) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

type AgentSpecHttpTlsSelfSignedCertificatePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecHttpTlsSelfSignedCertificate)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutput() AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) ToAgentSpecHttpTlsSelfSignedCertificatePtrOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificatePtrOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) Elem() AgentSpecHttpTlsSelfSignedCertificateOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) AgentSpecHttpTlsSelfSignedCertificate {
		if v != nil {
			return *v
		}
		var ret AgentSpecHttpTlsSelfSignedCertificate
		return ret
	}).(AgentSpecHttpTlsSelfSignedCertificateOutput)
}

// Disabled indicates that the provisioning of the self-signed certifcate should be disabled.
func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

// SubjectAlternativeNames is a list of SANs to include in the generated HTTP TLS certificate.
func (o AgentSpecHttpTlsSelfSignedCertificatePtrOutput) SubjectAltNames() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o.ApplyT(func(v *AgentSpecHttpTlsSelfSignedCertificate) []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		if v == nil {
			return nil
		}
		return v.SubjectAltNames
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames struct {
	// DNS is the DNS name of the subject.
	Dns *string `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip *string `pulumi:"ip"`
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...}
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs struct {
	// DNS is the DNS name of the subject.
	Dns pulumi.StringPtrInput `pulumi:"dns"`
	// IP is the IP address of the subject.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
}

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput is an input type that accepts AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray and AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput values.
// You can construct a concrete instance of `AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput` via:
//
//	AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray{ AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{...} }
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput interface {
	pulumi.Input

	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
	ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray []AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return i.ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(context.Background())
}

func (i AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput)
}

// SubjectAlternativeName represents a SAN entry in a x509 certificate.
type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return o
}

// DNS is the DNS name of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Dns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Dns }).(pulumi.StringPtrOutput)
}

// IP is the IP address of the subject.
func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)(nil)).Elem()
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput() AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) ToAgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutputWithContext(ctx context.Context) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput {
	return o
}

func (o AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput) Index(i pulumi.IntInput) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames {
		return vs[0].([]AgentSpecHttpTlsSelfSignedCertificateSubjectAltNames)[vs[1].(int)]
	}).(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRef struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name *string `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace *string `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName *string `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName *string `pulumi:"serviceName"`
}

// AgentSpecKibanaRefInput is an input type that accepts AgentSpecKibanaRefArgs and AgentSpecKibanaRefOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefInput` via:
//
//	AgentSpecKibanaRefArgs{...}
type AgentSpecKibanaRefInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput
	ToAgentSpecKibanaRefOutputWithContext(context.Context) AgentSpecKibanaRefOutput
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefArgs struct {
	// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
	// Elastic resource not managed by the operator. The referenced secret must contain the following:
	// - `url`: the URL to reach the Elastic resource
	// - `username`: the username of the user to be authenticated to the Elastic resource
	// - `password`: the password of the user to be authenticated to the Elastic resource
	// - `ca.crt`: the CA certificate in PEM format (optional)
	// - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
	//   This field cannot be used in combination with the other fields name, namespace or serviceName.
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
	// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
	// the referenced resource is used.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (AgentSpecKibanaRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRef)(nil)).Elem()
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput {
	return i.ToAgentSpecKibanaRefOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefOutputWithContext(ctx context.Context) AgentSpecKibanaRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefOutput)
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return i.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecKibanaRefArgs) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefOutput).ToAgentSpecKibanaRefPtrOutputWithContext(ctx)
}

// AgentSpecKibanaRefPtrInput is an input type that accepts AgentSpecKibanaRefArgs, AgentSpecKibanaRefPtr and AgentSpecKibanaRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecKibanaRefPtrInput` via:
//
//	        AgentSpecKibanaRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecKibanaRefPtrInput interface {
	pulumi.Input

	ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput
	ToAgentSpecKibanaRefPtrOutputWithContext(context.Context) AgentSpecKibanaRefPtrOutput
}

type agentSpecKibanaRefPtrType AgentSpecKibanaRefArgs

func AgentSpecKibanaRefPtr(v *AgentSpecKibanaRefArgs) AgentSpecKibanaRefPtrInput {
	return (*agentSpecKibanaRefPtrType)(v)
}

func (*agentSpecKibanaRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRef)(nil)).Elem()
}

func (i *agentSpecKibanaRefPtrType) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return i.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecKibanaRefPtrType) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecKibanaRefPtrOutput)
}

// KibanaRef is a reference to Kibana where Fleet should be set up and this Agent should be enrolled. Don't set
// unless `mode` is set to `fleet`.
type AgentSpecKibanaRefOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecKibanaRef)(nil)).Elem()
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefOutput() AgentSpecKibanaRefOutput {
	return o
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefOutputWithContext(ctx context.Context) AgentSpecKibanaRefOutput {
	return o
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return o.ToAgentSpecKibanaRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecKibanaRefOutput) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecKibanaRef) *AgentSpecKibanaRef {
		return &v
	}).(AgentSpecKibanaRefPtrOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecKibanaRef) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AgentSpecKibanaRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecKibanaRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecKibanaRef)(nil)).Elem()
}

func (o AgentSpecKibanaRefPtrOutput) ToAgentSpecKibanaRefPtrOutput() AgentSpecKibanaRefPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPtrOutput) ToAgentSpecKibanaRefPtrOutputWithContext(ctx context.Context) AgentSpecKibanaRefPtrOutput {
	return o
}

func (o AgentSpecKibanaRefPtrOutput) Elem() AgentSpecKibanaRefOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) AgentSpecKibanaRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecKibanaRef
		return ret
	}).(AgentSpecKibanaRefOutput)
}

// Name of an existing Kubernetes object corresponding to an Elastic resource managed by ECK.
func (o AgentSpecKibanaRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the Kubernetes object. If empty, defaults to the current namespace.
func (o AgentSpecKibanaRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretName is the name of an existing Kubernetes secret that contains connection information for associating an
// Elastic resource not managed by the operator. The referenced secret must contain the following:
//   - `url`: the URL to reach the Elastic resource
//   - `username`: the username of the user to be authenticated to the Elastic resource
//   - `password`: the password of the user to be authenticated to the Elastic resource
//   - `ca.crt`: the CA certificate in PEM format (optional)
//   - `api-key`: the key to authenticate against the Elastic resource instead of a username and password (supported only for `elasticsearchRefs` in AgentSpec and in BeatSpec)
//     This field cannot be used in combination with the other fields name, namespace or serviceName.
func (o AgentSpecKibanaRefPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// ServiceName is the name of an existing Kubernetes service which is used to make requests to the referenced
// object. It has to be in the same namespace as the referenced resource. If left empty, the default HTTP service of
// the referenced resource is used.
func (o AgentSpecKibanaRefPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecKibanaRef) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettings struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries []AgentSpecSecureSettingsEntries `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName string `pulumi:"secretName"`
}

// AgentSpecSecureSettingsInput is an input type that accepts AgentSpecSecureSettingsArgs and AgentSpecSecureSettingsOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsInput` via:
//
//	AgentSpecSecureSettingsArgs{...}
type AgentSpecSecureSettingsInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput
	ToAgentSpecSecureSettingsOutputWithContext(context.Context) AgentSpecSecureSettingsOutput
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsArgs struct {
	// Entries define how to project each key-value pair in the secret to filesystem paths.
	// If not defined, all keys will be projected to similarly named paths in the filesystem.
	// If defined, only the specified keys will be projected to the corresponding paths.
	Entries AgentSpecSecureSettingsEntriesArrayInput `pulumi:"entries"`
	// SecretName is the name of the secret.
	SecretName pulumi.StringInput `pulumi:"secretName"`
}

func (AgentSpecSecureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettings)(nil)).Elem()
}

func (i AgentSpecSecureSettingsArgs) ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput {
	return i.ToAgentSpecSecureSettingsOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsArgs) ToAgentSpecSecureSettingsOutputWithContext(ctx context.Context) AgentSpecSecureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsOutput)
}

// AgentSpecSecureSettingsArrayInput is an input type that accepts AgentSpecSecureSettingsArray and AgentSpecSecureSettingsArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsArrayInput` via:
//
//	AgentSpecSecureSettingsArray{ AgentSpecSecureSettingsArgs{...} }
type AgentSpecSecureSettingsArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput
	ToAgentSpecSecureSettingsArrayOutputWithContext(context.Context) AgentSpecSecureSettingsArrayOutput
}

type AgentSpecSecureSettingsArray []AgentSpecSecureSettingsInput

func (AgentSpecSecureSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettings)(nil)).Elem()
}

func (i AgentSpecSecureSettingsArray) ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput {
	return i.ToAgentSpecSecureSettingsArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsArray) ToAgentSpecSecureSettingsArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsArrayOutput)
}

// SecretSource defines a data source based on a Kubernetes Secret.
type AgentSpecSecureSettingsOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettings)(nil)).Elem()
}

func (o AgentSpecSecureSettingsOutput) ToAgentSpecSecureSettingsOutput() AgentSpecSecureSettingsOutput {
	return o
}

func (o AgentSpecSecureSettingsOutput) ToAgentSpecSecureSettingsOutputWithContext(ctx context.Context) AgentSpecSecureSettingsOutput {
	return o
}

// Entries define how to project each key-value pair in the secret to filesystem paths.
// If not defined, all keys will be projected to similarly named paths in the filesystem.
// If defined, only the specified keys will be projected to the corresponding paths.
func (o AgentSpecSecureSettingsOutput) Entries() AgentSpecSecureSettingsEntriesArrayOutput {
	return o.ApplyT(func(v AgentSpecSecureSettings) []AgentSpecSecureSettingsEntries { return v.Entries }).(AgentSpecSecureSettingsEntriesArrayOutput)
}

// SecretName is the name of the secret.
func (o AgentSpecSecureSettingsOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecSecureSettings) string { return v.SecretName }).(pulumi.StringOutput)
}

type AgentSpecSecureSettingsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettings)(nil)).Elem()
}

func (o AgentSpecSecureSettingsArrayOutput) ToAgentSpecSecureSettingsArrayOutput() AgentSpecSecureSettingsArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsArrayOutput) ToAgentSpecSecureSettingsArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettings {
		return vs[0].([]AgentSpecSecureSettings)[vs[1].(int)]
	}).(AgentSpecSecureSettingsOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntries struct {
	// Key is the key contained in the secret.
	Key string `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path *string `pulumi:"path"`
}

// AgentSpecSecureSettingsEntriesInput is an input type that accepts AgentSpecSecureSettingsEntriesArgs and AgentSpecSecureSettingsEntriesOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesInput` via:
//
//	AgentSpecSecureSettingsEntriesArgs{...}
type AgentSpecSecureSettingsEntriesInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput
	ToAgentSpecSecureSettingsEntriesOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesOutput
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesArgs struct {
	// Key is the key contained in the secret.
	Key pulumi.StringInput `pulumi:"key"`
	// Path is the relative file path to map the key to.
	// Path must not be an absolute file path and must not contain any ".." components.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (AgentSpecSecureSettingsEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesArgs) ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput {
	return i.ToAgentSpecSecureSettingsEntriesOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesArgs) ToAgentSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesOutput)
}

// AgentSpecSecureSettingsEntriesArrayInput is an input type that accepts AgentSpecSecureSettingsEntriesArray and AgentSpecSecureSettingsEntriesArrayOutput values.
// You can construct a concrete instance of `AgentSpecSecureSettingsEntriesArrayInput` via:
//
//	AgentSpecSecureSettingsEntriesArray{ AgentSpecSecureSettingsEntriesArgs{...} }
type AgentSpecSecureSettingsEntriesArrayInput interface {
	pulumi.Input

	ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput
	ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(context.Context) AgentSpecSecureSettingsEntriesArrayOutput
}

type AgentSpecSecureSettingsEntriesArray []AgentSpecSecureSettingsEntriesInput

func (AgentSpecSecureSettingsEntriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (i AgentSpecSecureSettingsEntriesArray) ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput {
	return i.ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(context.Background())
}

func (i AgentSpecSecureSettingsEntriesArray) ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecSecureSettingsEntriesArrayOutput)
}

// KeyToPath defines how to map a key in a Secret object to a filesystem path.
type AgentSpecSecureSettingsEntriesOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesOutput) ToAgentSpecSecureSettingsEntriesOutput() AgentSpecSecureSettingsEntriesOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesOutput) ToAgentSpecSecureSettingsEntriesOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesOutput {
	return o
}

// Key is the key contained in the secret.
func (o AgentSpecSecureSettingsEntriesOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntries) string { return v.Key }).(pulumi.StringOutput)
}

// Path is the relative file path to map the key to.
// Path must not be an absolute file path and must not contain any ".." components.
func (o AgentSpecSecureSettingsEntriesOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecSecureSettingsEntries) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type AgentSpecSecureSettingsEntriesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecSecureSettingsEntriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecSecureSettingsEntries)(nil)).Elem()
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) ToAgentSpecSecureSettingsEntriesArrayOutput() AgentSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) ToAgentSpecSecureSettingsEntriesArrayOutputWithContext(ctx context.Context) AgentSpecSecureSettingsEntriesArrayOutput {
	return o
}

func (o AgentSpecSecureSettingsEntriesArrayOutput) Index(i pulumi.IntInput) AgentSpecSecureSettingsEntriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecSecureSettingsEntries {
		return vs[0].([]AgentSpecSecureSettingsEntries)[vs[1].(int)]
	}).(AgentSpecSecureSettingsEntriesOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSet struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy *string `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate map[string]interface{} `pulumi:"podTemplate"`
	Replicas    *int                   `pulumi:"replicas"`
	ServiceName *string                `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates []AgentSpecStatefulSetVolumeClaimTemplates `pulumi:"volumeClaimTemplates"`
}

// Defaults sets the appropriate defaults for AgentSpecStatefulSet
func (val *AgentSpecStatefulSet) Defaults() *AgentSpecStatefulSet {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PodManagementPolicy == nil {
		podManagementPolicy_ := "Parallel"
		tmp.PodManagementPolicy = &podManagementPolicy_
	}
	return &tmp
}

// AgentSpecStatefulSetInput is an input type that accepts AgentSpecStatefulSetArgs and AgentSpecStatefulSetOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetInput` via:
//
//	AgentSpecStatefulSetArgs{...}
type AgentSpecStatefulSetInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput
	ToAgentSpecStatefulSetOutputWithContext(context.Context) AgentSpecStatefulSetOutput
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetArgs struct {
	// PodManagementPolicy controls how pods are created during initial scale up,
	// when replacing pods on nodes, or when scaling down. The default policy is
	// `Parallel`, where pods are created in parallel to match the desired scale
	// without waiting, and on scale down will delete all pods at once.
	// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
	// StatefulSets, where pods are created in increasing order in increasing order
	// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
	// continuing. When scaling down, the pods are removed in the opposite order.
	PodManagementPolicy pulumi.StringPtrInput `pulumi:"podManagementPolicy"`
	// PodTemplateSpec describes the data a pod should have when created from a template
	PodTemplate pulumi.MapInput       `pulumi:"podTemplate"`
	Replicas    pulumi.IntPtrInput    `pulumi:"replicas"`
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
	// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
	// Items defined here take precedence over any default claims added by the operator with the same name.
	VolumeClaimTemplates AgentSpecStatefulSetVolumeClaimTemplatesArrayInput `pulumi:"volumeClaimTemplates"`
}

// Defaults sets the appropriate defaults for AgentSpecStatefulSetArgs
func (val *AgentSpecStatefulSetArgs) Defaults() *AgentSpecStatefulSetArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.PodManagementPolicy == nil {
		tmp.PodManagementPolicy = pulumi.StringPtr("Parallel")
	}
	return &tmp
}
func (AgentSpecStatefulSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSet)(nil)).Elem()
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput {
	return i.ToAgentSpecStatefulSetOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetOutputWithContext(ctx context.Context) AgentSpecStatefulSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetOutput)
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return i.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetArgs) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetOutput).ToAgentSpecStatefulSetPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetPtrInput is an input type that accepts AgentSpecStatefulSetArgs, AgentSpecStatefulSetPtr and AgentSpecStatefulSetPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetPtrInput` via:
//
//	        AgentSpecStatefulSetArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput
	ToAgentSpecStatefulSetPtrOutputWithContext(context.Context) AgentSpecStatefulSetPtrOutput
}

type agentSpecStatefulSetPtrType AgentSpecStatefulSetArgs

func AgentSpecStatefulSetPtr(v *AgentSpecStatefulSetArgs) AgentSpecStatefulSetPtrInput {
	return (*agentSpecStatefulSetPtrType)(v)
}

func (*agentSpecStatefulSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSet)(nil)).Elem()
}

func (i *agentSpecStatefulSetPtrType) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return i.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetPtrType) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetPtrOutput)
}

// StatefulSet specifies the Agent should be deployed as a StatefulSet, and allows providing its spec.
// Cannot be used along with `daemonSet` or `deployment`.
type AgentSpecStatefulSetOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSet)(nil)).Elem()
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetOutput() AgentSpecStatefulSetOutput {
	return o
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetOutputWithContext(ctx context.Context) AgentSpecStatefulSetOutput {
	return o
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return o.ToAgentSpecStatefulSetPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetOutput) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSet) *AgentSpecStatefulSet {
		return &v
	}).(AgentSpecStatefulSetPtrOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *string { return v.PodManagementPolicy }).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) map[string]interface{} { return v.PodTemplate }).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *int { return v.Replicas }).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSet) []AgentSpecStatefulSetVolumeClaimTemplates { return v.VolumeClaimTemplates }).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

type AgentSpecStatefulSetPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSet)(nil)).Elem()
}

func (o AgentSpecStatefulSetPtrOutput) ToAgentSpecStatefulSetPtrOutput() AgentSpecStatefulSetPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPtrOutput) ToAgentSpecStatefulSetPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetPtrOutput {
	return o
}

func (o AgentSpecStatefulSetPtrOutput) Elem() AgentSpecStatefulSetOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) AgentSpecStatefulSet {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSet
		return ret
	}).(AgentSpecStatefulSetOutput)
}

// PodManagementPolicy controls how pods are created during initial scale up,
// when replacing pods on nodes, or when scaling down. The default policy is
// `Parallel`, where pods are created in parallel to match the desired scale
// without waiting, and on scale down will delete all pods at once.
// The alternative policy is `OrderedReady`, the default for vanilla kubernetes
// StatefulSets, where pods are created in increasing order in increasing order
// (pod-0, then pod-1, etc.) and the controller will wait until each pod is ready before
// continuing. When scaling down, the pods are removed in the opposite order.
func (o AgentSpecStatefulSetPtrOutput) PodManagementPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *string {
		if v == nil {
			return nil
		}
		return v.PodManagementPolicy
	}).(pulumi.StringPtrOutput)
}

// PodTemplateSpec describes the data a pod should have when created from a template
func (o AgentSpecStatefulSetPtrOutput) PodTemplate() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.PodTemplate
	}).(pulumi.MapOutput)
}

func (o AgentSpecStatefulSetPtrOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *int {
		if v == nil {
			return nil
		}
		return v.Replicas
	}).(pulumi.IntPtrOutput)
}

func (o AgentSpecStatefulSetPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// VolumeClaimTemplates is a list of persistent volume claims to be used by each Pod.
// Every claim in this list must have a matching volumeMount in one of the containers defined in the PodTemplate.
// Items defined here take precedence over any default claims added by the operator with the same name.
func (o AgentSpecStatefulSetPtrOutput) VolumeClaimTemplates() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSet) []AgentSpecStatefulSetVolumeClaimTemplates {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplates
	}).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplates struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *AgentSpecStatefulSetVolumeClaimTemplatesMetadata `pulumi:"metadata"`
	// spec defines the desired characteristics of a volume requested by a pod author.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Spec *AgentSpecStatefulSetVolumeClaimTemplatesSpec `pulumi:"spec"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesArgs and AgentSpecStatefulSetVolumeClaimTemplatesOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesArgs struct {
	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput `pulumi:"metadata"`
	// spec defines the desired characteristics of a volume requested by a pod author.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	Spec AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput `pulumi:"spec"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesArray and AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesArray{ AgentSpecStatefulSetVolumeClaimTemplatesArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesArray []AgentSpecStatefulSetVolumeClaimTemplatesInput

func (AgentSpecStatefulSetVolumeClaimTemplatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArray) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesArray) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput)
}

// PersistentVolumeClaim is a user's request for and claim to a persistent volume
type AgentSpecStatefulSetVolumeClaimTemplatesOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesOutput() AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object.
// Servers should convert recognized schemas to the latest internal value, and
// may reject unrecognized values.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents.
// Servers may infer this from the endpoint the client submits requests to.
// Cannot be updated.
// In CamelCase.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Metadata() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		return v.Metadata
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o AgentSpecStatefulSetVolumeClaimTemplatesOutput) Spec() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplates) *AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		return v.Spec
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplates)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplates {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplates)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadata struct {
	Annotations map[string]string `pulumi:"annotations"`
	Finalizers  []string          `pulumi:"finalizers"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Namespace   *string           `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs and AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs struct {
	Annotations pulumi.StringMapInput   `pulumi:"annotations"`
	Finalizers  pulumi.StringArrayInput `pulumi:"finalizers"`
	Labels      pulumi.StringMapInput   `pulumi:"labels"`
	Name        pulumi.StringPtrInput   `pulumi:"name"`
	Namespace   pulumi.StringPtrInput   `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs, AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtr and AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs

func AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesMetadataPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

// Standard object's metadata.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
type AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesMetadata)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) AgentSpecStatefulSetVolumeClaimTemplatesMetadata {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesMetadata
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Annotations
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Finalizers
	}).(pulumi.StringArrayOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesMetadata) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesMetadataAnnotations struct {
}

type AgentSpecStatefulSetVolumeClaimTemplatesMetadataLabels struct {
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpec struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// dataSource field can be used to specify either:
	// * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
	// * An existing PVC (PersistentVolumeClaim)
	//   If the provisioner or an external controller can support the specified data source,
	//   it will create a new volume based on the contents of the specified data source.
	//   When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
	//   and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
	//   If the namespace is specified, then dataSourceRef will not be copied to dataSource.
	DataSource *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource `pulumi:"dataSource"`
	// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
	// volume is desired. This may be any object from a non-empty API group (non
	// core object) or a PersistentVolumeClaim object.
	// When this field is specified, volume binding will only succeed if the type of
	// the specified object matches some installed volume populator or dynamic
	// provisioner.
	// This field will replace the functionality of the dataSource field and as such
	// if both fields are non-empty, they must have the same value. For backwards
	// compatibility, when namespace isn't specified in dataSourceRef,
	// both fields (dataSource and dataSourceRef) will be set to the same
	// value automatically if one of them is empty and the other is non-empty.
	// When namespace is specified in dataSourceRef,
	// dataSource isn't set to the same value and must be empty.
	// There are three important differences between dataSource and dataSourceRef:
	// * While dataSource only allows two specific types of objects, dataSourceRef
	//   allows any non-core object, as well as PersistentVolumeClaim objects.
	// * While dataSource ignores disallowed values (dropping them), dataSourceRef
	//   preserves all values, and generates an error if a disallowed value is
	//   specified.
	// * While dataSource only allows local objects, dataSourceRef allows objects
	//   in any namespaces.
	//   (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	//   (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	DataSourceRef *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef `pulumi:"dataSourceRef"`
	// resources represents the minimum resources the volume should have.
	// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
	// that are lower than previous value but must still be higher than capacity recorded in the
	// status field of the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources `pulumi:"resources"`
	// selector is a label query over volumes to consider for binding.
	Selector *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	// dataSource field can be used to specify either:
	// * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
	// * An existing PVC (PersistentVolumeClaim)
	//   If the provisioner or an external controller can support the specified data source,
	//   it will create a new volume based on the contents of the specified data source.
	//   When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
	//   and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
	//   If the namespace is specified, then dataSourceRef will not be copied to dataSource.
	DataSource AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput `pulumi:"dataSource"`
	// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
	// volume is desired. This may be any object from a non-empty API group (non
	// core object) or a PersistentVolumeClaim object.
	// When this field is specified, volume binding will only succeed if the type of
	// the specified object matches some installed volume populator or dynamic
	// provisioner.
	// This field will replace the functionality of the dataSource field and as such
	// if both fields are non-empty, they must have the same value. For backwards
	// compatibility, when namespace isn't specified in dataSourceRef,
	// both fields (dataSource and dataSourceRef) will be set to the same
	// value automatically if one of them is empty and the other is non-empty.
	// When namespace is specified in dataSourceRef,
	// dataSource isn't set to the same value and must be empty.
	// There are three important differences between dataSource and dataSourceRef:
	// * While dataSource only allows two specific types of objects, dataSourceRef
	//   allows any non-core object, as well as PersistentVolumeClaim objects.
	// * While dataSource ignores disallowed values (dropping them), dataSourceRef
	//   preserves all values, and generates an error if a disallowed value is
	//   specified.
	// * While dataSource only allows local objects, dataSourceRef allows objects
	//   in any namespaces.
	//   (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	//   (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	DataSourceRef AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput `pulumi:"dataSourceRef"`
	// resources represents the minimum resources the volume should have.
	// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
	// that are lower than previous value but must still be higher than capacity recorded in the
	// status field of the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput `pulumi:"resources"`
	// selector is a label query over volumes to consider for binding.
	Selector AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

// spec defines the desired characteristics of a volume requested by a pod author.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// selector is a label query over volumes to consider for binding.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.StorageClassName }).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeAttributesClassName }).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpec)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) AgentSpecStatefulSetVolumeClaimTemplatesSpec {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpec
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) DataSource() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) DataSourceRef() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Resources() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// selector is a label query over volumes to consider for binding.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) Selector() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) string { return v.Name }).(pulumi.StringOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.ApiGroup }).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) string { return v.Name }).(pulumi.StringOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} { return v.Limits }).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecResources)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) AgentSpecStatefulSetVolumeClaimTemplatesSpecResources {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecResources
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesLimits struct {
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesRequests struct {
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput)
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput).ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs, AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtr and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput` via:
//
//	        AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput
}

type agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs

func AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtr(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput {
	return (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType)(v)
}

func (*agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *agentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrType) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(context.Background())
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		return &v
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) Elem() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector {
		if v != nil {
			return *v
		}
		var ret AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector
		return ret
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) MatchExpressions() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentSpecStatefulSetVolumeClaimTemplatesSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...}
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput is an input type that accepts AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray and AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput` via:
//
//	AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray{ AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{...} }
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
	ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray []AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return i.ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) string { return v.Key }).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) string { return v.Operator }).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput() AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) ToAgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions {
		return vs[0].([]AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchLabels struct {
}

// AgentStatus defines the observed state of the Agent
type AgentStatus struct {
	AvailableNodes *int `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus map[string]string `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   *int              `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus *string `pulumi:"fleetServerAssociationStatus"`
	Health                       *string `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus *string `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version *string `pulumi:"version"`
}

// AgentStatusInput is an input type that accepts AgentStatusArgs and AgentStatusOutput values.
// You can construct a concrete instance of `AgentStatusInput` via:
//
//	AgentStatusArgs{...}
type AgentStatusInput interface {
	pulumi.Input

	ToAgentStatusOutput() AgentStatusOutput
	ToAgentStatusOutputWithContext(context.Context) AgentStatusOutput
}

// AgentStatus defines the observed state of the Agent
type AgentStatusArgs struct {
	AvailableNodes pulumi.IntPtrInput `pulumi:"availableNodes"`
	// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
	// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
	ElasticsearchAssociationsStatus pulumi.StringMapInput `pulumi:"elasticsearchAssociationsStatus"`
	ExpectedNodes                   pulumi.IntPtrInput    `pulumi:"expectedNodes"`
	// AssociationStatus is the status of an association resource.
	FleetServerAssociationStatus pulumi.StringPtrInput `pulumi:"fleetServerAssociationStatus"`
	Health                       pulumi.StringPtrInput `pulumi:"health"`
	// AssociationStatus is the status of an association resource.
	KibanaAssociationStatus pulumi.StringPtrInput `pulumi:"kibanaAssociationStatus"`
	// ObservedGeneration is the most recent generation observed for this Elastic Agent.
	// It corresponds to the metadata generation, which is updated on mutation by the API Server.
	// If the generation observed in status diverges from the generation in metadata, the Elastic
	// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Version of the stack resource currently running. During version upgrades, multiple versions may run
	// in parallel: this value specifies the lowest version currently running.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AgentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatus)(nil)).Elem()
}

func (i AgentStatusArgs) ToAgentStatusOutput() AgentStatusOutput {
	return i.ToAgentStatusOutputWithContext(context.Background())
}

func (i AgentStatusArgs) ToAgentStatusOutputWithContext(ctx context.Context) AgentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusOutput)
}

func (i AgentStatusArgs) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return i.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (i AgentStatusArgs) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusOutput).ToAgentStatusPtrOutputWithContext(ctx)
}

// AgentStatusPtrInput is an input type that accepts AgentStatusArgs, AgentStatusPtr and AgentStatusPtrOutput values.
// You can construct a concrete instance of `AgentStatusPtrInput` via:
//
//	        AgentStatusArgs{...}
//
//	or:
//
//	        nil
type AgentStatusPtrInput interface {
	pulumi.Input

	ToAgentStatusPtrOutput() AgentStatusPtrOutput
	ToAgentStatusPtrOutputWithContext(context.Context) AgentStatusPtrOutput
}

type agentStatusPtrType AgentStatusArgs

func AgentStatusPtr(v *AgentStatusArgs) AgentStatusPtrInput {
	return (*agentStatusPtrType)(v)
}

func (*agentStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatus)(nil)).Elem()
}

func (i *agentStatusPtrType) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return i.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (i *agentStatusPtrType) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentStatusPtrOutput)
}

// AgentStatus defines the observed state of the Agent
type AgentStatusOutput struct{ *pulumi.OutputState }

func (AgentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentStatus)(nil)).Elem()
}

func (o AgentStatusOutput) ToAgentStatusOutput() AgentStatusOutput {
	return o
}

func (o AgentStatusOutput) ToAgentStatusOutputWithContext(ctx context.Context) AgentStatusOutput {
	return o
}

func (o AgentStatusOutput) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return o.ToAgentStatusPtrOutputWithContext(context.Background())
}

func (o AgentStatusOutput) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentStatus) *AgentStatus {
		return &v
	}).(AgentStatusPtrOutput)
}

func (o AgentStatusOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.AvailableNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v AgentStatus) map[string]string { return v.ElasticsearchAssociationsStatus }).(pulumi.StringMapOutput)
}

func (o AgentStatusOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.ExpectedNodes }).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.FleetServerAssociationStatus }).(pulumi.StringPtrOutput)
}

func (o AgentStatusOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.KibanaAssociationStatus }).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AgentStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentStatus) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AgentStatusPtrOutput struct{ *pulumi.OutputState }

func (AgentStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentStatus)(nil)).Elem()
}

func (o AgentStatusPtrOutput) ToAgentStatusPtrOutput() AgentStatusPtrOutput {
	return o
}

func (o AgentStatusPtrOutput) ToAgentStatusPtrOutputWithContext(ctx context.Context) AgentStatusPtrOutput {
	return o
}

func (o AgentStatusPtrOutput) Elem() AgentStatusOutput {
	return o.ApplyT(func(v *AgentStatus) AgentStatus {
		if v != nil {
			return *v
		}
		var ret AgentStatus
		return ret
	}).(AgentStatusOutput)
}

func (o AgentStatusPtrOutput) AvailableNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.AvailableNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
func (o AgentStatusPtrOutput) ElasticsearchAssociationsStatus() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentStatus) map[string]string {
		if v == nil {
			return nil
		}
		return v.ElasticsearchAssociationsStatus
	}).(pulumi.StringMapOutput)
}

func (o AgentStatusPtrOutput) ExpectedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedNodes
	}).(pulumi.IntPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPtrOutput) FleetServerAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.FleetServerAssociationStatus
	}).(pulumi.StringPtrOutput)
}

func (o AgentStatusPtrOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Health
	}).(pulumi.StringPtrOutput)
}

// AssociationStatus is the status of an association resource.
func (o AgentStatusPtrOutput) KibanaAssociationStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.KibanaAssociationStatus
	}).(pulumi.StringPtrOutput)
}

// ObservedGeneration is the most recent generation observed for this Elastic Agent.
// It corresponds to the metadata generation, which is updated on mutation by the API Server.
// If the generation observed in status diverges from the generation in metadata, the Elastic
// Agent controller has not yet processed the changes contained in the Elastic Agent specification.
func (o AgentStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Version of the stack resource currently running. During version upgrades, multiple versions may run
// in parallel: this value specifies the lowest version currently running.
func (o AgentStatusPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentStatus) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// AssociationStatusMap is the map of association's namespaced name string to its AssociationStatus. For resources that
// have a single Association of a given type (for ex. single ES reference), this map contains a single entry.
type AgentStatusElasticsearchAssociationsStatus struct {
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecInput)(nil)).Elem(), AgentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecPtrInput)(nil)).Elem(), AgentSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefInput)(nil)).Elem(), AgentSpecConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecConfigRefPtrInput)(nil)).Elem(), AgentSpecConfigRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetInput)(nil)).Elem(), AgentSpecDaemonSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetPtrInput)(nil)).Elem(), AgentSpecDaemonSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyPtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdateInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrInput)(nil)).Elem(), AgentSpecDaemonSetUpdateStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentInput)(nil)).Elem(), AgentSpecDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentPtrInput)(nil)).Elem(), AgentSpecDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyInput)(nil)).Elem(), AgentSpecDeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyPtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdateInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecDeploymentStrategyRollingUpdatePtrInput)(nil)).Elem(), AgentSpecDeploymentStrategyRollingUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsInput)(nil)).Elem(), AgentSpecElasticsearchRefsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecElasticsearchRefsArrayInput)(nil)).Elem(), AgentSpecElasticsearchRefsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefInput)(nil)).Elem(), AgentSpecFleetServerRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecFleetServerRefPtrInput)(nil)).Elem(), AgentSpecFleetServerRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpInput)(nil)).Elem(), AgentSpecHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpPtrInput)(nil)).Elem(), AgentSpecHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceInput)(nil)).Elem(), AgentSpecHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServicePtrInput)(nil)).Elem(), AgentSpecHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataInput)(nil)).Elem(), AgentSpecHttpServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceMetadataPtrInput)(nil)).Elem(), AgentSpecHttpServiceMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecInput)(nil)).Elem(), AgentSpecHttpServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecPortsArrayInput)(nil)).Elem(), AgentSpecHttpServiceSpecPortsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIpInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrInput)(nil)).Elem(), AgentSpecHttpServiceSpecSessionAffinityConfigClientIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsInput)(nil)).Elem(), AgentSpecHttpTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsPtrInput)(nil)).Elem(), AgentSpecHttpTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificateInput)(nil)).Elem(), AgentSpecHttpTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsCertificatePtrInput)(nil)).Elem(), AgentSpecHttpTlsCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificatePtrInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayInput)(nil)).Elem(), AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefInput)(nil)).Elem(), AgentSpecKibanaRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecKibanaRefPtrInput)(nil)).Elem(), AgentSpecKibanaRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsInput)(nil)).Elem(), AgentSpecSecureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsArrayInput)(nil)).Elem(), AgentSpecSecureSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecSecureSettingsEntriesArrayInput)(nil)).Elem(), AgentSpecSecureSettingsEntriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetInput)(nil)).Elem(), AgentSpecStatefulSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetPtrInput)(nil)).Elem(), AgentSpecStatefulSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusInput)(nil)).Elem(), AgentStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentStatusPtrInput)(nil)).Elem(), AgentStatusArgs{})
	pulumi.RegisterOutputType(AgentSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefOutput{})
	pulumi.RegisterOutputType(AgentSpecConfigRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(AgentSpecDaemonSetUpdateStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdateOutput{})
	pulumi.RegisterOutputType(AgentSpecDeploymentStrategyRollingUpdatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsOutput{})
	pulumi.RegisterOutputType(AgentSpecElasticsearchRefsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefOutput{})
	pulumi.RegisterOutputType(AgentSpecFleetServerRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServicePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceMetadataPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecPortsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpServiceSpecSessionAffinityConfigClientIpPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificateOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsCertificatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificatePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesOutput{})
	pulumi.RegisterOutputType(AgentSpecHttpTlsSelfSignedCertificateSubjectAltNamesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefOutput{})
	pulumi.RegisterOutputType(AgentSpecKibanaRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesOutput{})
	pulumi.RegisterOutputType(AgentSpecSecureSettingsEntriesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesArrayOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesMetadataPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourcePtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecDataSourceRefPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(AgentSpecStatefulSetVolumeClaimTemplatesSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(AgentStatusOutput{})
	pulumi.RegisterOutputType(AgentStatusPtrOutput{})
}
