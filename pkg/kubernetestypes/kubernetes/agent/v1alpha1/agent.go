// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Agent is the Schema for the Agents API.
type Agent struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// AgentSpec defines the desired state of the Agent
	Spec AgentSpecPtrOutput `pulumi:"spec"`
	// AgentStatus defines the observed state of the Agent
	Status AgentStatusPtrOutput `pulumi:"status"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		args = &AgentArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("agent.k8s.elastic.co/v1alpha1")
	args.Kind = pulumi.StringPtr("Agent")
	if args.Spec != nil {
		args.Spec = args.Spec.ToAgentSpecPtrOutput().ApplyT(func(v *AgentSpec) *AgentSpec { return v.Defaults() }).(AgentSpecPtrOutput)
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource Agent
	err := ctx.RegisterResource("kubernetes:agent.k8s.elastic.co/v1alpha1:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("kubernetes:agent.k8s.elastic.co/v1alpha1:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
}

type AgentState struct {
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AgentSpec defines the desired state of the Agent
	Spec *AgentSpec `pulumi:"spec"`
	// AgentStatus defines the observed state of the Agent
	Status *AgentStatus `pulumi:"status"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// AgentSpec defines the desired state of the Agent
	Spec AgentSpecPtrInput
	// AgentStatus defines the observed state of the Agent
	Status AgentStatusPtrInput
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}

type AgentInput interface {
	pulumi.Input

	ToAgentOutput() AgentOutput
	ToAgentOutputWithContext(ctx context.Context) AgentOutput
}

func (*Agent) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (i *Agent) ToAgentOutput() AgentOutput {
	return i.ToAgentOutputWithContext(context.Background())
}

func (i *Agent) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOutput)
}

type AgentOutput struct{ *pulumi.OutputState }

func (AgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (o AgentOutput) ToAgentOutput() AgentOutput {
	return o
}

func (o AgentOutput) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return o
}

func (o AgentOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AgentOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AgentOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *Agent) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AgentSpec defines the desired state of the Agent
func (o AgentOutput) Spec() AgentSpecPtrOutput {
	return o.ApplyT(func(v *Agent) AgentSpecPtrOutput { return v.Spec }).(AgentSpecPtrOutput)
}

// AgentStatus defines the observed state of the Agent
func (o AgentOutput) Status() AgentStatusPtrOutput {
	return o.ApplyT(func(v *Agent) AgentStatusPtrOutput { return v.Status }).(AgentStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInput)(nil)).Elem(), &Agent{})
	pulumi.RegisterOutputType(AgentOutput{})
}
