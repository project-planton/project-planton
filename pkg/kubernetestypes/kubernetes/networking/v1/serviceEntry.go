// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceEntry struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
	Spec   ServiceEntrySpecPtrOutput `pulumi:"spec"`
	Status pulumi.MapOutput          `pulumi:"status"`
}

// NewServiceEntry registers a new resource with the given unique name, arguments, and options.
func NewServiceEntry(ctx *pulumi.Context,
	name string, args *ServiceEntryArgs, opts ...pulumi.ResourceOption) (*ServiceEntry, error) {
	if args == nil {
		args = &ServiceEntryArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("networking.istio.io/v1")
	args.Kind = pulumi.StringPtr("ServiceEntry")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ServiceEntry
	err := ctx.RegisterResource("kubernetes:networking.istio.io/v1:ServiceEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceEntry gets an existing ServiceEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceEntryState, opts ...pulumi.ResourceOption) (*ServiceEntry, error) {
	var resource ServiceEntry
	err := ctx.ReadResource("kubernetes:networking.istio.io/v1:ServiceEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceEntry resources.
type serviceEntryState struct {
}

type ServiceEntryState struct {
}

func (ServiceEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEntryState)(nil)).Elem()
}

type serviceEntryArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
	Spec   *ServiceEntrySpec      `pulumi:"spec"`
	Status map[string]interface{} `pulumi:"status"`
}

// The set of arguments for constructing a ServiceEntry resource.
type ServiceEntryArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
	Spec   ServiceEntrySpecPtrInput
	Status pulumi.MapInput
}

func (ServiceEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEntryArgs)(nil)).Elem()
}

type ServiceEntryInput interface {
	pulumi.Input

	ToServiceEntryOutput() ServiceEntryOutput
	ToServiceEntryOutputWithContext(ctx context.Context) ServiceEntryOutput
}

func (*ServiceEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntry)(nil)).Elem()
}

func (i *ServiceEntry) ToServiceEntryOutput() ServiceEntryOutput {
	return i.ToServiceEntryOutputWithContext(context.Background())
}

func (i *ServiceEntry) ToServiceEntryOutputWithContext(ctx context.Context) ServiceEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEntryOutput)
}

type ServiceEntryOutput struct{ *pulumi.OutputState }

func (ServiceEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEntry)(nil)).Elem()
}

func (o ServiceEntryOutput) ToServiceEntryOutput() ServiceEntryOutput {
	return o
}

func (o ServiceEntryOutput) ToServiceEntryOutputWithContext(ctx context.Context) ServiceEntryOutput {
	return o
}

func (o ServiceEntryOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntry) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ServiceEntryOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEntry) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ServiceEntryOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ServiceEntry) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html
func (o ServiceEntryOutput) Spec() ServiceEntrySpecPtrOutput {
	return o.ApplyT(func(v *ServiceEntry) ServiceEntrySpecPtrOutput { return v.Spec }).(ServiceEntrySpecPtrOutput)
}

func (o ServiceEntryOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *ServiceEntry) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEntryInput)(nil)).Elem(), &ServiceEntry{})
	pulumi.RegisterOutputType(ServiceEntryOutput{})
}
