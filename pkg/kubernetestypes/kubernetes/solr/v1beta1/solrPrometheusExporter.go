// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SolrPrometheusExporter is the Schema for the solrprometheusexporters API
type SolrPrometheusExporter struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// SolrPrometheusExporterSpec defines the desired state of SolrPrometheusExporter
	Spec SolrPrometheusExporterSpecPtrOutput `pulumi:"spec"`
	// SolrPrometheusExporterStatus defines the observed state of SolrPrometheusExporter
	Status SolrPrometheusExporterStatusPtrOutput `pulumi:"status"`
}

// NewSolrPrometheusExporter registers a new resource with the given unique name, arguments, and options.
func NewSolrPrometheusExporter(ctx *pulumi.Context,
	name string, args *SolrPrometheusExporterArgs, opts ...pulumi.ResourceOption) (*SolrPrometheusExporter, error) {
	if args == nil {
		args = &SolrPrometheusExporterArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("solr.apache.org/v1beta1")
	args.Kind = pulumi.StringPtr("SolrPrometheusExporter")
	if args.Spec != nil {
		args.Spec = args.Spec.ToSolrPrometheusExporterSpecPtrOutput().ApplyT(func(v *SolrPrometheusExporterSpec) *SolrPrometheusExporterSpec { return v.Defaults() }).(SolrPrometheusExporterSpecPtrOutput)
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SolrPrometheusExporter
	err := ctx.RegisterResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSolrPrometheusExporter gets an existing SolrPrometheusExporter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSolrPrometheusExporter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SolrPrometheusExporterState, opts ...pulumi.ResourceOption) (*SolrPrometheusExporter, error) {
	var resource SolrPrometheusExporter
	err := ctx.ReadResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SolrPrometheusExporter resources.
type solrPrometheusExporterState struct {
}

type SolrPrometheusExporterState struct {
}

func (SolrPrometheusExporterState) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterState)(nil)).Elem()
}

type solrPrometheusExporterArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// SolrPrometheusExporterSpec defines the desired state of SolrPrometheusExporter
	Spec *SolrPrometheusExporterSpec `pulumi:"spec"`
	// SolrPrometheusExporterStatus defines the observed state of SolrPrometheusExporter
	Status *SolrPrometheusExporterStatus `pulumi:"status"`
}

// The set of arguments for constructing a SolrPrometheusExporter resource.
type SolrPrometheusExporterArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// SolrPrometheusExporterSpec defines the desired state of SolrPrometheusExporter
	Spec SolrPrometheusExporterSpecPtrInput
	// SolrPrometheusExporterStatus defines the observed state of SolrPrometheusExporter
	Status SolrPrometheusExporterStatusPtrInput
}

func (SolrPrometheusExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterArgs)(nil)).Elem()
}

type SolrPrometheusExporterInput interface {
	pulumi.Input

	ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput
	ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput
}

func (*SolrPrometheusExporter) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporter)(nil)).Elem()
}

func (i *SolrPrometheusExporter) ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput {
	return i.ToSolrPrometheusExporterOutputWithContext(context.Background())
}

func (i *SolrPrometheusExporter) ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterOutput)
}

type SolrPrometheusExporterOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporter)(nil)).Elem()
}

func (o SolrPrometheusExporterOutput) ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput {
	return o
}

func (o SolrPrometheusExporterOutput) ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput {
	return o
}

func (o SolrPrometheusExporterOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o SolrPrometheusExporterOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o SolrPrometheusExporterOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// SolrPrometheusExporterSpec defines the desired state of SolrPrometheusExporter
func (o SolrPrometheusExporterOutput) Spec() SolrPrometheusExporterSpecPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) SolrPrometheusExporterSpecPtrOutput { return v.Spec }).(SolrPrometheusExporterSpecPtrOutput)
}

// SolrPrometheusExporterStatus defines the observed state of SolrPrometheusExporter
func (o SolrPrometheusExporterOutput) Status() SolrPrometheusExporterStatusPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) SolrPrometheusExporterStatusPtrOutput { return v.Status }).(SolrPrometheusExporterStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterInput)(nil)).Elem(), &SolrPrometheusExporter{})
	pulumi.RegisterOutputType(SolrPrometheusExporterOutput{})
}
