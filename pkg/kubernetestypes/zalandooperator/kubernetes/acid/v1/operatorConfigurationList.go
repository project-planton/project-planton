// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// OperatorConfigurationList is a list of OperatorConfiguration
type OperatorConfigurationList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of operatorconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items OperatorConfigurationTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewOperatorConfigurationList registers a new resource with the given unique name, arguments, and options.
func NewOperatorConfigurationList(ctx *pulumi.Context,
	name string, args *OperatorConfigurationListArgs, opts ...pulumi.ResourceOption) (*OperatorConfigurationList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("acid.zalan.do/v1")
	args.Kind = pulumi.StringPtr("OperatorConfigurationList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource OperatorConfigurationList
	err := ctx.RegisterResource("kubernetes:acid.zalan.do/v1:OperatorConfigurationList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOperatorConfigurationList gets an existing OperatorConfigurationList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOperatorConfigurationList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OperatorConfigurationListState, opts ...pulumi.ResourceOption) (*OperatorConfigurationList, error) {
	var resource OperatorConfigurationList
	err := ctx.ReadResource("kubernetes:acid.zalan.do/v1:OperatorConfigurationList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OperatorConfigurationList resources.
type operatorConfigurationListState struct {
}

type OperatorConfigurationListState struct {
}

func (OperatorConfigurationListState) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorConfigurationListState)(nil)).Elem()
}

type operatorConfigurationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of operatorconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []OperatorConfigurationType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a OperatorConfigurationList resource.
type OperatorConfigurationListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of operatorconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items OperatorConfigurationTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (OperatorConfigurationListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*operatorConfigurationListArgs)(nil)).Elem()
}

type OperatorConfigurationListInput interface {
	pulumi.Input

	ToOperatorConfigurationListOutput() OperatorConfigurationListOutput
	ToOperatorConfigurationListOutputWithContext(ctx context.Context) OperatorConfigurationListOutput
}

func (*OperatorConfigurationList) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorConfigurationList)(nil)).Elem()
}

func (i *OperatorConfigurationList) ToOperatorConfigurationListOutput() OperatorConfigurationListOutput {
	return i.ToOperatorConfigurationListOutputWithContext(context.Background())
}

func (i *OperatorConfigurationList) ToOperatorConfigurationListOutputWithContext(ctx context.Context) OperatorConfigurationListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorConfigurationListOutput)
}

// OperatorConfigurationListArrayInput is an input type that accepts OperatorConfigurationListArray and OperatorConfigurationListArrayOutput values.
// You can construct a concrete instance of `OperatorConfigurationListArrayInput` via:
//
//	OperatorConfigurationListArray{ OperatorConfigurationListArgs{...} }
type OperatorConfigurationListArrayInput interface {
	pulumi.Input

	ToOperatorConfigurationListArrayOutput() OperatorConfigurationListArrayOutput
	ToOperatorConfigurationListArrayOutputWithContext(context.Context) OperatorConfigurationListArrayOutput
}

type OperatorConfigurationListArray []OperatorConfigurationListInput

func (OperatorConfigurationListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OperatorConfigurationList)(nil)).Elem()
}

func (i OperatorConfigurationListArray) ToOperatorConfigurationListArrayOutput() OperatorConfigurationListArrayOutput {
	return i.ToOperatorConfigurationListArrayOutputWithContext(context.Background())
}

func (i OperatorConfigurationListArray) ToOperatorConfigurationListArrayOutputWithContext(ctx context.Context) OperatorConfigurationListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorConfigurationListArrayOutput)
}

// OperatorConfigurationListMapInput is an input type that accepts OperatorConfigurationListMap and OperatorConfigurationListMapOutput values.
// You can construct a concrete instance of `OperatorConfigurationListMapInput` via:
//
//	OperatorConfigurationListMap{ "key": OperatorConfigurationListArgs{...} }
type OperatorConfigurationListMapInput interface {
	pulumi.Input

	ToOperatorConfigurationListMapOutput() OperatorConfigurationListMapOutput
	ToOperatorConfigurationListMapOutputWithContext(context.Context) OperatorConfigurationListMapOutput
}

type OperatorConfigurationListMap map[string]OperatorConfigurationListInput

func (OperatorConfigurationListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OperatorConfigurationList)(nil)).Elem()
}

func (i OperatorConfigurationListMap) ToOperatorConfigurationListMapOutput() OperatorConfigurationListMapOutput {
	return i.ToOperatorConfigurationListMapOutputWithContext(context.Background())
}

func (i OperatorConfigurationListMap) ToOperatorConfigurationListMapOutputWithContext(ctx context.Context) OperatorConfigurationListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OperatorConfigurationListMapOutput)
}

type OperatorConfigurationListOutput struct{ *pulumi.OutputState }

func (OperatorConfigurationListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OperatorConfigurationList)(nil)).Elem()
}

func (o OperatorConfigurationListOutput) ToOperatorConfigurationListOutput() OperatorConfigurationListOutput {
	return o
}

func (o OperatorConfigurationListOutput) ToOperatorConfigurationListOutputWithContext(ctx context.Context) OperatorConfigurationListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o OperatorConfigurationListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorConfigurationList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of operatorconfigurations. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o OperatorConfigurationListOutput) Items() OperatorConfigurationTypeArrayOutput {
	return o.ApplyT(func(v *OperatorConfigurationList) OperatorConfigurationTypeArrayOutput { return v.Items }).(OperatorConfigurationTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o OperatorConfigurationListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *OperatorConfigurationList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o OperatorConfigurationListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *OperatorConfigurationList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type OperatorConfigurationListArrayOutput struct{ *pulumi.OutputState }

func (OperatorConfigurationListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OperatorConfigurationList)(nil)).Elem()
}

func (o OperatorConfigurationListArrayOutput) ToOperatorConfigurationListArrayOutput() OperatorConfigurationListArrayOutput {
	return o
}

func (o OperatorConfigurationListArrayOutput) ToOperatorConfigurationListArrayOutputWithContext(ctx context.Context) OperatorConfigurationListArrayOutput {
	return o
}

func (o OperatorConfigurationListArrayOutput) Index(i pulumi.IntInput) OperatorConfigurationListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OperatorConfigurationList {
		return vs[0].([]*OperatorConfigurationList)[vs[1].(int)]
	}).(OperatorConfigurationListOutput)
}

type OperatorConfigurationListMapOutput struct{ *pulumi.OutputState }

func (OperatorConfigurationListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OperatorConfigurationList)(nil)).Elem()
}

func (o OperatorConfigurationListMapOutput) ToOperatorConfigurationListMapOutput() OperatorConfigurationListMapOutput {
	return o
}

func (o OperatorConfigurationListMapOutput) ToOperatorConfigurationListMapOutputWithContext(ctx context.Context) OperatorConfigurationListMapOutput {
	return o
}

func (o OperatorConfigurationListMapOutput) MapIndex(k pulumi.StringInput) OperatorConfigurationListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OperatorConfigurationList {
		return vs[0].(map[string]*OperatorConfigurationList)[vs[1].(string)]
	}).(OperatorConfigurationListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorConfigurationListInput)(nil)).Elem(), &OperatorConfigurationList{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorConfigurationListArrayInput)(nil)).Elem(), OperatorConfigurationListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OperatorConfigurationListMapInput)(nil)).Elem(), OperatorConfigurationListMap{})
	pulumi.RegisterOutputType(OperatorConfigurationListOutput{})
	pulumi.RegisterOutputType(OperatorConfigurationListArrayOutput{})
	pulumi.RegisterOutputType(OperatorConfigurationListMapOutput{})
}
