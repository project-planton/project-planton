// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ElasticsearchAutoscaler represents an ElasticsearchAutoscaler resource in a Kubernetes cluster.
type ElasticsearchAutoscalerPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput             `pulumi:"metadata"`
	Spec     ElasticsearchAutoscalerSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ElasticsearchAutoscalerStatusPatchPtrOutput `pulumi:"status"`
}

// NewElasticsearchAutoscalerPatch registers a new resource with the given unique name, arguments, and options.
func NewElasticsearchAutoscalerPatch(ctx *pulumi.Context,
	name string, args *ElasticsearchAutoscalerPatchArgs, opts ...pulumi.ResourceOption) (*ElasticsearchAutoscalerPatch, error) {
	if args == nil {
		args = &ElasticsearchAutoscalerPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("autoscaling.k8s.elastic.co/v1alpha1")
	args.Kind = pulumi.StringPtr("ElasticsearchAutoscaler")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ElasticsearchAutoscalerPatch
	err := ctx.RegisterResource("kubernetes:autoscaling.k8s.elastic.co/v1alpha1:ElasticsearchAutoscalerPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticsearchAutoscalerPatch gets an existing ElasticsearchAutoscalerPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticsearchAutoscalerPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticsearchAutoscalerPatchState, opts ...pulumi.ResourceOption) (*ElasticsearchAutoscalerPatch, error) {
	var resource ElasticsearchAutoscalerPatch
	err := ctx.ReadResource("kubernetes:autoscaling.k8s.elastic.co/v1alpha1:ElasticsearchAutoscalerPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticsearchAutoscalerPatch resources.
type elasticsearchAutoscalerPatchState struct {
}

type ElasticsearchAutoscalerPatchState struct {
}

func (ElasticsearchAutoscalerPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticsearchAutoscalerPatchState)(nil)).Elem()
}

type elasticsearchAutoscalerPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch           `pulumi:"metadata"`
	Spec     *ElasticsearchAutoscalerSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ElasticsearchAutoscalerPatch resource.
type ElasticsearchAutoscalerPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ElasticsearchAutoscalerSpecPatchPtrInput
}

func (ElasticsearchAutoscalerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticsearchAutoscalerPatchArgs)(nil)).Elem()
}

type ElasticsearchAutoscalerPatchInput interface {
	pulumi.Input

	ToElasticsearchAutoscalerPatchOutput() ElasticsearchAutoscalerPatchOutput
	ToElasticsearchAutoscalerPatchOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchOutput
}

func (*ElasticsearchAutoscalerPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (i *ElasticsearchAutoscalerPatch) ToElasticsearchAutoscalerPatchOutput() ElasticsearchAutoscalerPatchOutput {
	return i.ToElasticsearchAutoscalerPatchOutputWithContext(context.Background())
}

func (i *ElasticsearchAutoscalerPatch) ToElasticsearchAutoscalerPatchOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchAutoscalerPatchOutput)
}

// ElasticsearchAutoscalerPatchArrayInput is an input type that accepts ElasticsearchAutoscalerPatchArray and ElasticsearchAutoscalerPatchArrayOutput values.
// You can construct a concrete instance of `ElasticsearchAutoscalerPatchArrayInput` via:
//
//	ElasticsearchAutoscalerPatchArray{ ElasticsearchAutoscalerPatchArgs{...} }
type ElasticsearchAutoscalerPatchArrayInput interface {
	pulumi.Input

	ToElasticsearchAutoscalerPatchArrayOutput() ElasticsearchAutoscalerPatchArrayOutput
	ToElasticsearchAutoscalerPatchArrayOutputWithContext(context.Context) ElasticsearchAutoscalerPatchArrayOutput
}

type ElasticsearchAutoscalerPatchArray []ElasticsearchAutoscalerPatchInput

func (ElasticsearchAutoscalerPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (i ElasticsearchAutoscalerPatchArray) ToElasticsearchAutoscalerPatchArrayOutput() ElasticsearchAutoscalerPatchArrayOutput {
	return i.ToElasticsearchAutoscalerPatchArrayOutputWithContext(context.Background())
}

func (i ElasticsearchAutoscalerPatchArray) ToElasticsearchAutoscalerPatchArrayOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchAutoscalerPatchArrayOutput)
}

// ElasticsearchAutoscalerPatchMapInput is an input type that accepts ElasticsearchAutoscalerPatchMap and ElasticsearchAutoscalerPatchMapOutput values.
// You can construct a concrete instance of `ElasticsearchAutoscalerPatchMapInput` via:
//
//	ElasticsearchAutoscalerPatchMap{ "key": ElasticsearchAutoscalerPatchArgs{...} }
type ElasticsearchAutoscalerPatchMapInput interface {
	pulumi.Input

	ToElasticsearchAutoscalerPatchMapOutput() ElasticsearchAutoscalerPatchMapOutput
	ToElasticsearchAutoscalerPatchMapOutputWithContext(context.Context) ElasticsearchAutoscalerPatchMapOutput
}

type ElasticsearchAutoscalerPatchMap map[string]ElasticsearchAutoscalerPatchInput

func (ElasticsearchAutoscalerPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (i ElasticsearchAutoscalerPatchMap) ToElasticsearchAutoscalerPatchMapOutput() ElasticsearchAutoscalerPatchMapOutput {
	return i.ToElasticsearchAutoscalerPatchMapOutputWithContext(context.Background())
}

func (i ElasticsearchAutoscalerPatchMap) ToElasticsearchAutoscalerPatchMapOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchAutoscalerPatchMapOutput)
}

type ElasticsearchAutoscalerPatchOutput struct{ *pulumi.OutputState }

func (ElasticsearchAutoscalerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (o ElasticsearchAutoscalerPatchOutput) ToElasticsearchAutoscalerPatchOutput() ElasticsearchAutoscalerPatchOutput {
	return o
}

func (o ElasticsearchAutoscalerPatchOutput) ToElasticsearchAutoscalerPatchOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ElasticsearchAutoscalerPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchAutoscalerPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ElasticsearchAutoscalerPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchAutoscalerPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ElasticsearchAutoscalerPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ElasticsearchAutoscalerPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ElasticsearchAutoscalerPatchOutput) Spec() ElasticsearchAutoscalerSpecPatchPtrOutput {
	return o.ApplyT(func(v *ElasticsearchAutoscalerPatch) ElasticsearchAutoscalerSpecPatchPtrOutput { return v.Spec }).(ElasticsearchAutoscalerSpecPatchPtrOutput)
}

func (o ElasticsearchAutoscalerPatchOutput) Status() ElasticsearchAutoscalerStatusPatchPtrOutput {
	return o.ApplyT(func(v *ElasticsearchAutoscalerPatch) ElasticsearchAutoscalerStatusPatchPtrOutput { return v.Status }).(ElasticsearchAutoscalerStatusPatchPtrOutput)
}

type ElasticsearchAutoscalerPatchArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchAutoscalerPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (o ElasticsearchAutoscalerPatchArrayOutput) ToElasticsearchAutoscalerPatchArrayOutput() ElasticsearchAutoscalerPatchArrayOutput {
	return o
}

func (o ElasticsearchAutoscalerPatchArrayOutput) ToElasticsearchAutoscalerPatchArrayOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchArrayOutput {
	return o
}

func (o ElasticsearchAutoscalerPatchArrayOutput) Index(i pulumi.IntInput) ElasticsearchAutoscalerPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticsearchAutoscalerPatch {
		return vs[0].([]*ElasticsearchAutoscalerPatch)[vs[1].(int)]
	}).(ElasticsearchAutoscalerPatchOutput)
}

type ElasticsearchAutoscalerPatchMapOutput struct{ *pulumi.OutputState }

func (ElasticsearchAutoscalerPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticsearchAutoscalerPatch)(nil)).Elem()
}

func (o ElasticsearchAutoscalerPatchMapOutput) ToElasticsearchAutoscalerPatchMapOutput() ElasticsearchAutoscalerPatchMapOutput {
	return o
}

func (o ElasticsearchAutoscalerPatchMapOutput) ToElasticsearchAutoscalerPatchMapOutputWithContext(ctx context.Context) ElasticsearchAutoscalerPatchMapOutput {
	return o
}

func (o ElasticsearchAutoscalerPatchMapOutput) MapIndex(k pulumi.StringInput) ElasticsearchAutoscalerPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticsearchAutoscalerPatch {
		return vs[0].(map[string]*ElasticsearchAutoscalerPatch)[vs[1].(string)]
	}).(ElasticsearchAutoscalerPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchAutoscalerPatchInput)(nil)).Elem(), &ElasticsearchAutoscalerPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchAutoscalerPatchArrayInput)(nil)).Elem(), ElasticsearchAutoscalerPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchAutoscalerPatchMapInput)(nil)).Elem(), ElasticsearchAutoscalerPatchMap{})
	pulumi.RegisterOutputType(ElasticsearchAutoscalerPatchOutput{})
	pulumi.RegisterOutputType(ElasticsearchAutoscalerPatchArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchAutoscalerPatchMapOutput{})
}
