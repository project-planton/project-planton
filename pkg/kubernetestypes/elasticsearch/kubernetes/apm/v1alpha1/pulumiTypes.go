// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
}

// ApmServerTypeInput is an input type that accepts ApmServerTypeArgs and ApmServerTypeOutput values.
// You can construct a concrete instance of `ApmServerTypeInput` via:
//
//	ApmServerTypeArgs{...}
type ApmServerTypeInput interface {
	pulumi.Input

	ToApmServerTypeOutput() ApmServerTypeOutput
	ToApmServerTypeOutputWithContext(context.Context) ApmServerTypeOutput
}

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
}

func (ApmServerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerType)(nil)).Elem()
}

func (i ApmServerTypeArgs) ToApmServerTypeOutput() ApmServerTypeOutput {
	return i.ToApmServerTypeOutputWithContext(context.Background())
}

func (i ApmServerTypeArgs) ToApmServerTypeOutputWithContext(ctx context.Context) ApmServerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmServerTypeOutput)
}

// ApmServerTypeArrayInput is an input type that accepts ApmServerTypeArray and ApmServerTypeArrayOutput values.
// You can construct a concrete instance of `ApmServerTypeArrayInput` via:
//
//	ApmServerTypeArray{ ApmServerTypeArgs{...} }
type ApmServerTypeArrayInput interface {
	pulumi.Input

	ToApmServerTypeArrayOutput() ApmServerTypeArrayOutput
	ToApmServerTypeArrayOutputWithContext(context.Context) ApmServerTypeArrayOutput
}

type ApmServerTypeArray []ApmServerTypeInput

func (ApmServerTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApmServerType)(nil)).Elem()
}

func (i ApmServerTypeArray) ToApmServerTypeArrayOutput() ApmServerTypeArrayOutput {
	return i.ToApmServerTypeArrayOutputWithContext(context.Background())
}

func (i ApmServerTypeArray) ToApmServerTypeArrayOutputWithContext(ctx context.Context) ApmServerTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmServerTypeArrayOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerTypeOutput struct{ *pulumi.OutputState }

func (ApmServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerType)(nil)).Elem()
}

func (o ApmServerTypeOutput) ToApmServerTypeOutput() ApmServerTypeOutput {
	return o
}

func (o ApmServerTypeOutput) ToApmServerTypeOutputWithContext(ctx context.Context) ApmServerTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ApmServerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApmServerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ApmServerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ApmServerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

type ApmServerTypeArrayOutput struct{ *pulumi.OutputState }

func (ApmServerTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApmServerType)(nil)).Elem()
}

func (o ApmServerTypeArrayOutput) ToApmServerTypeArrayOutput() ApmServerTypeArrayOutput {
	return o
}

func (o ApmServerTypeArrayOutput) ToApmServerTypeArrayOutputWithContext(ctx context.Context) ApmServerTypeArrayOutput {
	return o
}

func (o ApmServerTypeArrayOutput) Index(i pulumi.IntInput) ApmServerTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApmServerType {
		return vs[0].([]ApmServerType)[vs[1].(int)]
	}).(ApmServerTypeOutput)
}

// ApmServerList is a list of ApmServer
type ApmServerListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of apmservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ApmServerType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// ApmServerListTypeInput is an input type that accepts ApmServerListTypeArgs and ApmServerListTypeOutput values.
// You can construct a concrete instance of `ApmServerListTypeInput` via:
//
//	ApmServerListTypeArgs{...}
type ApmServerListTypeInput interface {
	pulumi.Input

	ToApmServerListTypeOutput() ApmServerListTypeOutput
	ToApmServerListTypeOutputWithContext(context.Context) ApmServerListTypeOutput
}

// ApmServerList is a list of ApmServer
type ApmServerListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of apmservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ApmServerTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (ApmServerListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerListType)(nil)).Elem()
}

func (i ApmServerListTypeArgs) ToApmServerListTypeOutput() ApmServerListTypeOutput {
	return i.ToApmServerListTypeOutputWithContext(context.Background())
}

func (i ApmServerListTypeArgs) ToApmServerListTypeOutputWithContext(ctx context.Context) ApmServerListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmServerListTypeOutput)
}

// ApmServerList is a list of ApmServer
type ApmServerListTypeOutput struct{ *pulumi.OutputState }

func (ApmServerListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerListType)(nil)).Elem()
}

func (o ApmServerListTypeOutput) ToApmServerListTypeOutput() ApmServerListTypeOutput {
	return o
}

func (o ApmServerListTypeOutput) ToApmServerListTypeOutputWithContext(ctx context.Context) ApmServerListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ApmServerListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of apmservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ApmServerListTypeOutput) Items() ApmServerTypeArrayOutput {
	return o.ApplyT(func(v ApmServerListType) []ApmServerType { return v.Items }).(ApmServerTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApmServerListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApmServerListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v ApmServerListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
}

// ApmServerPatchTypeInput is an input type that accepts ApmServerPatchTypeArgs and ApmServerPatchTypeOutput values.
// You can construct a concrete instance of `ApmServerPatchTypeInput` via:
//
//	ApmServerPatchTypeArgs{...}
type ApmServerPatchTypeInput interface {
	pulumi.Input

	ToApmServerPatchTypeOutput() ApmServerPatchTypeOutput
	ToApmServerPatchTypeOutputWithContext(context.Context) ApmServerPatchTypeOutput
}

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
}

func (ApmServerPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerPatchType)(nil)).Elem()
}

func (i ApmServerPatchTypeArgs) ToApmServerPatchTypeOutput() ApmServerPatchTypeOutput {
	return i.ToApmServerPatchTypeOutputWithContext(context.Background())
}

func (i ApmServerPatchTypeArgs) ToApmServerPatchTypeOutputWithContext(ctx context.Context) ApmServerPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmServerPatchTypeOutput)
}

// to not break compatibility when upgrading from previous versions of the CRD
type ApmServerPatchTypeOutput struct{ *pulumi.OutputState }

func (ApmServerPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApmServerPatchType)(nil)).Elem()
}

func (o ApmServerPatchTypeOutput) ToApmServerPatchTypeOutput() ApmServerPatchTypeOutput {
	return o
}

func (o ApmServerPatchTypeOutput) ToApmServerPatchTypeOutputWithContext(ctx context.Context) ApmServerPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ApmServerPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApmServerPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApmServerPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ApmServerPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v ApmServerPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApmServerTypeInput)(nil)).Elem(), ApmServerTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApmServerTypeArrayInput)(nil)).Elem(), ApmServerTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApmServerListTypeInput)(nil)).Elem(), ApmServerListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApmServerPatchTypeInput)(nil)).Elem(), ApmServerPatchTypeArgs{})
	pulumi.RegisterOutputType(ApmServerTypeOutput{})
	pulumi.RegisterOutputType(ApmServerTypeArrayOutput{})
	pulumi.RegisterOutputType(ApmServerListTypeOutput{})
	pulumi.RegisterOutputType(ApmServerPatchTypeOutput{})
}
