// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A ClusterIssuer represents a certificate issuing authority which can be
// referenced as part of `issuerRef` fields.
// It is similar to an Issuer, however it is cluster-scoped and therefore can
// be referenced by resources that exist in *any* namespace, not just the same
// namespace as the referent.
type ClusterIssuer struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput      `pulumi:"metadata"`
	Spec     ClusterIssuerSpecOutput      `pulumi:"spec"`
	Status   ClusterIssuerStatusPtrOutput `pulumi:"status"`
}

// NewClusterIssuer registers a new resource with the given unique name, arguments, and options.
func NewClusterIssuer(ctx *pulumi.Context,
	name string, args *ClusterIssuerArgs, opts ...pulumi.ResourceOption) (*ClusterIssuer, error) {
	if args == nil {
		args = &ClusterIssuerArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("cert-manager.io/v1")
	args.Kind = pulumi.StringPtr("ClusterIssuer")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterIssuer
	err := ctx.RegisterResource("kubernetes:cert-manager.io/v1:ClusterIssuer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterIssuer gets an existing ClusterIssuer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterIssuer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterIssuerState, opts ...pulumi.ResourceOption) (*ClusterIssuer, error) {
	var resource ClusterIssuer
	err := ctx.ReadResource("kubernetes:cert-manager.io/v1:ClusterIssuer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterIssuer resources.
type clusterIssuerState struct {
}

type ClusterIssuerState struct {
}

func (ClusterIssuerState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIssuerState)(nil)).Elem()
}

type clusterIssuerArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *ClusterIssuerSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterIssuer resource.
type ClusterIssuerArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ClusterIssuerSpecPtrInput
}

func (ClusterIssuerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterIssuerArgs)(nil)).Elem()
}

type ClusterIssuerInput interface {
	pulumi.Input

	ToClusterIssuerOutput() ClusterIssuerOutput
	ToClusterIssuerOutputWithContext(ctx context.Context) ClusterIssuerOutput
}

func (*ClusterIssuer) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuer)(nil)).Elem()
}

func (i *ClusterIssuer) ToClusterIssuerOutput() ClusterIssuerOutput {
	return i.ToClusterIssuerOutputWithContext(context.Background())
}

func (i *ClusterIssuer) ToClusterIssuerOutputWithContext(ctx context.Context) ClusterIssuerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerOutput)
}

// ClusterIssuerArrayInput is an input type that accepts ClusterIssuerArray and ClusterIssuerArrayOutput values.
// You can construct a concrete instance of `ClusterIssuerArrayInput` via:
//
//	ClusterIssuerArray{ ClusterIssuerArgs{...} }
type ClusterIssuerArrayInput interface {
	pulumi.Input

	ToClusterIssuerArrayOutput() ClusterIssuerArrayOutput
	ToClusterIssuerArrayOutputWithContext(context.Context) ClusterIssuerArrayOutput
}

type ClusterIssuerArray []ClusterIssuerInput

func (ClusterIssuerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterIssuer)(nil)).Elem()
}

func (i ClusterIssuerArray) ToClusterIssuerArrayOutput() ClusterIssuerArrayOutput {
	return i.ToClusterIssuerArrayOutputWithContext(context.Background())
}

func (i ClusterIssuerArray) ToClusterIssuerArrayOutputWithContext(ctx context.Context) ClusterIssuerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerArrayOutput)
}

// ClusterIssuerMapInput is an input type that accepts ClusterIssuerMap and ClusterIssuerMapOutput values.
// You can construct a concrete instance of `ClusterIssuerMapInput` via:
//
//	ClusterIssuerMap{ "key": ClusterIssuerArgs{...} }
type ClusterIssuerMapInput interface {
	pulumi.Input

	ToClusterIssuerMapOutput() ClusterIssuerMapOutput
	ToClusterIssuerMapOutputWithContext(context.Context) ClusterIssuerMapOutput
}

type ClusterIssuerMap map[string]ClusterIssuerInput

func (ClusterIssuerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterIssuer)(nil)).Elem()
}

func (i ClusterIssuerMap) ToClusterIssuerMapOutput() ClusterIssuerMapOutput {
	return i.ToClusterIssuerMapOutputWithContext(context.Background())
}

func (i ClusterIssuerMap) ToClusterIssuerMapOutputWithContext(ctx context.Context) ClusterIssuerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIssuerMapOutput)
}

type ClusterIssuerOutput struct{ *pulumi.OutputState }

func (ClusterIssuerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIssuer)(nil)).Elem()
}

func (o ClusterIssuerOutput) ToClusterIssuerOutput() ClusterIssuerOutput {
	return o
}

func (o ClusterIssuerOutput) ToClusterIssuerOutputWithContext(ctx context.Context) ClusterIssuerOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterIssuerOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterIssuer) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterIssuerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterIssuer) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterIssuerOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ClusterIssuer) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ClusterIssuerOutput) Spec() ClusterIssuerSpecOutput {
	return o.ApplyT(func(v *ClusterIssuer) ClusterIssuerSpecOutput { return v.Spec }).(ClusterIssuerSpecOutput)
}

func (o ClusterIssuerOutput) Status() ClusterIssuerStatusPtrOutput {
	return o.ApplyT(func(v *ClusterIssuer) ClusterIssuerStatusPtrOutput { return v.Status }).(ClusterIssuerStatusPtrOutput)
}

type ClusterIssuerArrayOutput struct{ *pulumi.OutputState }

func (ClusterIssuerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterIssuer)(nil)).Elem()
}

func (o ClusterIssuerArrayOutput) ToClusterIssuerArrayOutput() ClusterIssuerArrayOutput {
	return o
}

func (o ClusterIssuerArrayOutput) ToClusterIssuerArrayOutputWithContext(ctx context.Context) ClusterIssuerArrayOutput {
	return o
}

func (o ClusterIssuerArrayOutput) Index(i pulumi.IntInput) ClusterIssuerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterIssuer {
		return vs[0].([]*ClusterIssuer)[vs[1].(int)]
	}).(ClusterIssuerOutput)
}

type ClusterIssuerMapOutput struct{ *pulumi.OutputState }

func (ClusterIssuerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterIssuer)(nil)).Elem()
}

func (o ClusterIssuerMapOutput) ToClusterIssuerMapOutput() ClusterIssuerMapOutput {
	return o
}

func (o ClusterIssuerMapOutput) ToClusterIssuerMapOutputWithContext(ctx context.Context) ClusterIssuerMapOutput {
	return o
}

func (o ClusterIssuerMapOutput) MapIndex(k pulumi.StringInput) ClusterIssuerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterIssuer {
		return vs[0].(map[string]*ClusterIssuer)[vs[1].(string)]
	}).(ClusterIssuerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIssuerInput)(nil)).Elem(), &ClusterIssuer{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIssuerArrayInput)(nil)).Elem(), ClusterIssuerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIssuerMapInput)(nil)).Elem(), ClusterIssuerMap{})
	pulumi.RegisterOutputType(ClusterIssuerOutput{})
	pulumi.RegisterOutputType(ClusterIssuerArrayOutput{})
	pulumi.RegisterOutputType(ClusterIssuerMapOutput{})
}
