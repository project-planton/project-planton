// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KeycloakRealmImportList is a list of KeycloakRealmImport
type KeycloakRealmImportList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of keycloakrealmimports. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KeycloakRealmImportTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewKeycloakRealmImportList registers a new resource with the given unique name, arguments, and options.
func NewKeycloakRealmImportList(ctx *pulumi.Context,
	name string, args *KeycloakRealmImportListArgs, opts ...pulumi.ResourceOption) (*KeycloakRealmImportList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("k8s.keycloak.org/v2alpha1")
	args.Kind = pulumi.StringPtr("KeycloakRealmImportList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource KeycloakRealmImportList
	err := ctx.RegisterResource("kubernetes:k8s.keycloak.org/v2alpha1:KeycloakRealmImportList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKeycloakRealmImportList gets an existing KeycloakRealmImportList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKeycloakRealmImportList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KeycloakRealmImportListState, opts ...pulumi.ResourceOption) (*KeycloakRealmImportList, error) {
	var resource KeycloakRealmImportList
	err := ctx.ReadResource("kubernetes:k8s.keycloak.org/v2alpha1:KeycloakRealmImportList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KeycloakRealmImportList resources.
type keycloakRealmImportListState struct {
}

type KeycloakRealmImportListState struct {
}

func (KeycloakRealmImportListState) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakRealmImportListState)(nil)).Elem()
}

type keycloakRealmImportListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of keycloakrealmimports. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []KeycloakRealmImportType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a KeycloakRealmImportList resource.
type KeycloakRealmImportListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of keycloakrealmimports. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items KeycloakRealmImportTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (KeycloakRealmImportListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*keycloakRealmImportListArgs)(nil)).Elem()
}

type KeycloakRealmImportListInput interface {
	pulumi.Input

	ToKeycloakRealmImportListOutput() KeycloakRealmImportListOutput
	ToKeycloakRealmImportListOutputWithContext(ctx context.Context) KeycloakRealmImportListOutput
}

func (*KeycloakRealmImportList) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmImportList)(nil)).Elem()
}

func (i *KeycloakRealmImportList) ToKeycloakRealmImportListOutput() KeycloakRealmImportListOutput {
	return i.ToKeycloakRealmImportListOutputWithContext(context.Background())
}

func (i *KeycloakRealmImportList) ToKeycloakRealmImportListOutputWithContext(ctx context.Context) KeycloakRealmImportListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmImportListOutput)
}

// KeycloakRealmImportListArrayInput is an input type that accepts KeycloakRealmImportListArray and KeycloakRealmImportListArrayOutput values.
// You can construct a concrete instance of `KeycloakRealmImportListArrayInput` via:
//
//	KeycloakRealmImportListArray{ KeycloakRealmImportListArgs{...} }
type KeycloakRealmImportListArrayInput interface {
	pulumi.Input

	ToKeycloakRealmImportListArrayOutput() KeycloakRealmImportListArrayOutput
	ToKeycloakRealmImportListArrayOutputWithContext(context.Context) KeycloakRealmImportListArrayOutput
}

type KeycloakRealmImportListArray []KeycloakRealmImportListInput

func (KeycloakRealmImportListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeycloakRealmImportList)(nil)).Elem()
}

func (i KeycloakRealmImportListArray) ToKeycloakRealmImportListArrayOutput() KeycloakRealmImportListArrayOutput {
	return i.ToKeycloakRealmImportListArrayOutputWithContext(context.Background())
}

func (i KeycloakRealmImportListArray) ToKeycloakRealmImportListArrayOutputWithContext(ctx context.Context) KeycloakRealmImportListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmImportListArrayOutput)
}

// KeycloakRealmImportListMapInput is an input type that accepts KeycloakRealmImportListMap and KeycloakRealmImportListMapOutput values.
// You can construct a concrete instance of `KeycloakRealmImportListMapInput` via:
//
//	KeycloakRealmImportListMap{ "key": KeycloakRealmImportListArgs{...} }
type KeycloakRealmImportListMapInput interface {
	pulumi.Input

	ToKeycloakRealmImportListMapOutput() KeycloakRealmImportListMapOutput
	ToKeycloakRealmImportListMapOutputWithContext(context.Context) KeycloakRealmImportListMapOutput
}

type KeycloakRealmImportListMap map[string]KeycloakRealmImportListInput

func (KeycloakRealmImportListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeycloakRealmImportList)(nil)).Elem()
}

func (i KeycloakRealmImportListMap) ToKeycloakRealmImportListMapOutput() KeycloakRealmImportListMapOutput {
	return i.ToKeycloakRealmImportListMapOutputWithContext(context.Background())
}

func (i KeycloakRealmImportListMap) ToKeycloakRealmImportListMapOutputWithContext(ctx context.Context) KeycloakRealmImportListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeycloakRealmImportListMapOutput)
}

type KeycloakRealmImportListOutput struct{ *pulumi.OutputState }

func (KeycloakRealmImportListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeycloakRealmImportList)(nil)).Elem()
}

func (o KeycloakRealmImportListOutput) ToKeycloakRealmImportListOutput() KeycloakRealmImportListOutput {
	return o
}

func (o KeycloakRealmImportListOutput) ToKeycloakRealmImportListOutputWithContext(ctx context.Context) KeycloakRealmImportListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o KeycloakRealmImportListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KeycloakRealmImportList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of keycloakrealmimports. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o KeycloakRealmImportListOutput) Items() KeycloakRealmImportTypeArrayOutput {
	return o.ApplyT(func(v *KeycloakRealmImportList) KeycloakRealmImportTypeArrayOutput { return v.Items }).(KeycloakRealmImportTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KeycloakRealmImportListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *KeycloakRealmImportList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o KeycloakRealmImportListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *KeycloakRealmImportList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type KeycloakRealmImportListArrayOutput struct{ *pulumi.OutputState }

func (KeycloakRealmImportListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KeycloakRealmImportList)(nil)).Elem()
}

func (o KeycloakRealmImportListArrayOutput) ToKeycloakRealmImportListArrayOutput() KeycloakRealmImportListArrayOutput {
	return o
}

func (o KeycloakRealmImportListArrayOutput) ToKeycloakRealmImportListArrayOutputWithContext(ctx context.Context) KeycloakRealmImportListArrayOutput {
	return o
}

func (o KeycloakRealmImportListArrayOutput) Index(i pulumi.IntInput) KeycloakRealmImportListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KeycloakRealmImportList {
		return vs[0].([]*KeycloakRealmImportList)[vs[1].(int)]
	}).(KeycloakRealmImportListOutput)
}

type KeycloakRealmImportListMapOutput struct{ *pulumi.OutputState }

func (KeycloakRealmImportListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KeycloakRealmImportList)(nil)).Elem()
}

func (o KeycloakRealmImportListMapOutput) ToKeycloakRealmImportListMapOutput() KeycloakRealmImportListMapOutput {
	return o
}

func (o KeycloakRealmImportListMapOutput) ToKeycloakRealmImportListMapOutputWithContext(ctx context.Context) KeycloakRealmImportListMapOutput {
	return o
}

func (o KeycloakRealmImportListMapOutput) MapIndex(k pulumi.StringInput) KeycloakRealmImportListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KeycloakRealmImportList {
		return vs[0].(map[string]*KeycloakRealmImportList)[vs[1].(string)]
	}).(KeycloakRealmImportListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KeycloakRealmImportListInput)(nil)).Elem(), &KeycloakRealmImportList{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeycloakRealmImportListArrayInput)(nil)).Elem(), KeycloakRealmImportListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeycloakRealmImportListMapInput)(nil)).Elem(), KeycloakRealmImportListMap{})
	pulumi.RegisterOutputType(KeycloakRealmImportListOutput{})
	pulumi.RegisterOutputType(KeycloakRealmImportListArrayOutput{})
	pulumi.RegisterOutputType(KeycloakRealmImportListMapOutput{})
}
