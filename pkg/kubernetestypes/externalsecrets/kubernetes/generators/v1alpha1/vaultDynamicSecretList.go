// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VaultDynamicSecretList is a list of VaultDynamicSecret
type VaultDynamicSecretList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of vaultdynamicsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VaultDynamicSecretTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewVaultDynamicSecretList registers a new resource with the given unique name, arguments, and options.
func NewVaultDynamicSecretList(ctx *pulumi.Context,
	name string, args *VaultDynamicSecretListArgs, opts ...pulumi.ResourceOption) (*VaultDynamicSecretList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("VaultDynamicSecretList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VaultDynamicSecretList
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:VaultDynamicSecretList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultDynamicSecretList gets an existing VaultDynamicSecretList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultDynamicSecretList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultDynamicSecretListState, opts ...pulumi.ResourceOption) (*VaultDynamicSecretList, error) {
	var resource VaultDynamicSecretList
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:VaultDynamicSecretList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultDynamicSecretList resources.
type vaultDynamicSecretListState struct {
}

type VaultDynamicSecretListState struct {
}

func (VaultDynamicSecretListState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultDynamicSecretListState)(nil)).Elem()
}

type vaultDynamicSecretListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of vaultdynamicsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []VaultDynamicSecretType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a VaultDynamicSecretList resource.
type VaultDynamicSecretListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of vaultdynamicsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items VaultDynamicSecretTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (VaultDynamicSecretListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultDynamicSecretListArgs)(nil)).Elem()
}

type VaultDynamicSecretListInput interface {
	pulumi.Input

	ToVaultDynamicSecretListOutput() VaultDynamicSecretListOutput
	ToVaultDynamicSecretListOutputWithContext(ctx context.Context) VaultDynamicSecretListOutput
}

func (*VaultDynamicSecretList) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultDynamicSecretList)(nil)).Elem()
}

func (i *VaultDynamicSecretList) ToVaultDynamicSecretListOutput() VaultDynamicSecretListOutput {
	return i.ToVaultDynamicSecretListOutputWithContext(context.Background())
}

func (i *VaultDynamicSecretList) ToVaultDynamicSecretListOutputWithContext(ctx context.Context) VaultDynamicSecretListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretListOutput)
}

// VaultDynamicSecretListArrayInput is an input type that accepts VaultDynamicSecretListArray and VaultDynamicSecretListArrayOutput values.
// You can construct a concrete instance of `VaultDynamicSecretListArrayInput` via:
//
//	VaultDynamicSecretListArray{ VaultDynamicSecretListArgs{...} }
type VaultDynamicSecretListArrayInput interface {
	pulumi.Input

	ToVaultDynamicSecretListArrayOutput() VaultDynamicSecretListArrayOutput
	ToVaultDynamicSecretListArrayOutputWithContext(context.Context) VaultDynamicSecretListArrayOutput
}

type VaultDynamicSecretListArray []VaultDynamicSecretListInput

func (VaultDynamicSecretListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultDynamicSecretList)(nil)).Elem()
}

func (i VaultDynamicSecretListArray) ToVaultDynamicSecretListArrayOutput() VaultDynamicSecretListArrayOutput {
	return i.ToVaultDynamicSecretListArrayOutputWithContext(context.Background())
}

func (i VaultDynamicSecretListArray) ToVaultDynamicSecretListArrayOutputWithContext(ctx context.Context) VaultDynamicSecretListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretListArrayOutput)
}

// VaultDynamicSecretListMapInput is an input type that accepts VaultDynamicSecretListMap and VaultDynamicSecretListMapOutput values.
// You can construct a concrete instance of `VaultDynamicSecretListMapInput` via:
//
//	VaultDynamicSecretListMap{ "key": VaultDynamicSecretListArgs{...} }
type VaultDynamicSecretListMapInput interface {
	pulumi.Input

	ToVaultDynamicSecretListMapOutput() VaultDynamicSecretListMapOutput
	ToVaultDynamicSecretListMapOutputWithContext(context.Context) VaultDynamicSecretListMapOutput
}

type VaultDynamicSecretListMap map[string]VaultDynamicSecretListInput

func (VaultDynamicSecretListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultDynamicSecretList)(nil)).Elem()
}

func (i VaultDynamicSecretListMap) ToVaultDynamicSecretListMapOutput() VaultDynamicSecretListMapOutput {
	return i.ToVaultDynamicSecretListMapOutputWithContext(context.Background())
}

func (i VaultDynamicSecretListMap) ToVaultDynamicSecretListMapOutputWithContext(ctx context.Context) VaultDynamicSecretListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretListMapOutput)
}

type VaultDynamicSecretListOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultDynamicSecretList)(nil)).Elem()
}

func (o VaultDynamicSecretListOutput) ToVaultDynamicSecretListOutput() VaultDynamicSecretListOutput {
	return o
}

func (o VaultDynamicSecretListOutput) ToVaultDynamicSecretListOutputWithContext(ctx context.Context) VaultDynamicSecretListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VaultDynamicSecretListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultDynamicSecretList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of vaultdynamicsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o VaultDynamicSecretListOutput) Items() VaultDynamicSecretTypeArrayOutput {
	return o.ApplyT(func(v *VaultDynamicSecretList) VaultDynamicSecretTypeArrayOutput { return v.Items }).(VaultDynamicSecretTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VaultDynamicSecretListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultDynamicSecretList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VaultDynamicSecretListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *VaultDynamicSecretList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type VaultDynamicSecretListArrayOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultDynamicSecretList)(nil)).Elem()
}

func (o VaultDynamicSecretListArrayOutput) ToVaultDynamicSecretListArrayOutput() VaultDynamicSecretListArrayOutput {
	return o
}

func (o VaultDynamicSecretListArrayOutput) ToVaultDynamicSecretListArrayOutputWithContext(ctx context.Context) VaultDynamicSecretListArrayOutput {
	return o
}

func (o VaultDynamicSecretListArrayOutput) Index(i pulumi.IntInput) VaultDynamicSecretListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VaultDynamicSecretList {
		return vs[0].([]*VaultDynamicSecretList)[vs[1].(int)]
	}).(VaultDynamicSecretListOutput)
}

type VaultDynamicSecretListMapOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultDynamicSecretList)(nil)).Elem()
}

func (o VaultDynamicSecretListMapOutput) ToVaultDynamicSecretListMapOutput() VaultDynamicSecretListMapOutput {
	return o
}

func (o VaultDynamicSecretListMapOutput) ToVaultDynamicSecretListMapOutputWithContext(ctx context.Context) VaultDynamicSecretListMapOutput {
	return o
}

func (o VaultDynamicSecretListMapOutput) MapIndex(k pulumi.StringInput) VaultDynamicSecretListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VaultDynamicSecretList {
		return vs[0].(map[string]*VaultDynamicSecretList)[vs[1].(string)]
	}).(VaultDynamicSecretListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretListInput)(nil)).Elem(), &VaultDynamicSecretList{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretListArrayInput)(nil)).Elem(), VaultDynamicSecretListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretListMapInput)(nil)).Elem(), VaultDynamicSecretListMap{})
	pulumi.RegisterOutputType(VaultDynamicSecretListOutput{})
	pulumi.RegisterOutputType(VaultDynamicSecretListArrayOutput{})
	pulumi.RegisterOutputType(VaultDynamicSecretListMapOutput{})
}
