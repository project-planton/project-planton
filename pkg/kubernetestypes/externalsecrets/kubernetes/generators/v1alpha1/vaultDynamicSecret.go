// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VaultDynamicSecret struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput      `pulumi:"metadata"`
	Spec     VaultDynamicSecretSpecOutput `pulumi:"spec"`
}

// NewVaultDynamicSecret registers a new resource with the given unique name, arguments, and options.
func NewVaultDynamicSecret(ctx *pulumi.Context,
	name string, args *VaultDynamicSecretArgs, opts ...pulumi.ResourceOption) (*VaultDynamicSecret, error) {
	if args == nil {
		args = &VaultDynamicSecretArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("VaultDynamicSecret")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource VaultDynamicSecret
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:VaultDynamicSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultDynamicSecret gets an existing VaultDynamicSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultDynamicSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultDynamicSecretState, opts ...pulumi.ResourceOption) (*VaultDynamicSecret, error) {
	var resource VaultDynamicSecret
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:VaultDynamicSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultDynamicSecret resources.
type vaultDynamicSecretState struct {
}

type VaultDynamicSecretState struct {
}

func (VaultDynamicSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultDynamicSecretState)(nil)).Elem()
}

type vaultDynamicSecretArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec     *VaultDynamicSecretSpec `pulumi:"spec"`
}

// The set of arguments for constructing a VaultDynamicSecret resource.
type VaultDynamicSecretArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     VaultDynamicSecretSpecPtrInput
}

func (VaultDynamicSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultDynamicSecretArgs)(nil)).Elem()
}

type VaultDynamicSecretInput interface {
	pulumi.Input

	ToVaultDynamicSecretOutput() VaultDynamicSecretOutput
	ToVaultDynamicSecretOutputWithContext(ctx context.Context) VaultDynamicSecretOutput
}

func (*VaultDynamicSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultDynamicSecret)(nil)).Elem()
}

func (i *VaultDynamicSecret) ToVaultDynamicSecretOutput() VaultDynamicSecretOutput {
	return i.ToVaultDynamicSecretOutputWithContext(context.Background())
}

func (i *VaultDynamicSecret) ToVaultDynamicSecretOutputWithContext(ctx context.Context) VaultDynamicSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretOutput)
}

// VaultDynamicSecretArrayInput is an input type that accepts VaultDynamicSecretArray and VaultDynamicSecretArrayOutput values.
// You can construct a concrete instance of `VaultDynamicSecretArrayInput` via:
//
//	VaultDynamicSecretArray{ VaultDynamicSecretArgs{...} }
type VaultDynamicSecretArrayInput interface {
	pulumi.Input

	ToVaultDynamicSecretArrayOutput() VaultDynamicSecretArrayOutput
	ToVaultDynamicSecretArrayOutputWithContext(context.Context) VaultDynamicSecretArrayOutput
}

type VaultDynamicSecretArray []VaultDynamicSecretInput

func (VaultDynamicSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultDynamicSecret)(nil)).Elem()
}

func (i VaultDynamicSecretArray) ToVaultDynamicSecretArrayOutput() VaultDynamicSecretArrayOutput {
	return i.ToVaultDynamicSecretArrayOutputWithContext(context.Background())
}

func (i VaultDynamicSecretArray) ToVaultDynamicSecretArrayOutputWithContext(ctx context.Context) VaultDynamicSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretArrayOutput)
}

// VaultDynamicSecretMapInput is an input type that accepts VaultDynamicSecretMap and VaultDynamicSecretMapOutput values.
// You can construct a concrete instance of `VaultDynamicSecretMapInput` via:
//
//	VaultDynamicSecretMap{ "key": VaultDynamicSecretArgs{...} }
type VaultDynamicSecretMapInput interface {
	pulumi.Input

	ToVaultDynamicSecretMapOutput() VaultDynamicSecretMapOutput
	ToVaultDynamicSecretMapOutputWithContext(context.Context) VaultDynamicSecretMapOutput
}

type VaultDynamicSecretMap map[string]VaultDynamicSecretInput

func (VaultDynamicSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultDynamicSecret)(nil)).Elem()
}

func (i VaultDynamicSecretMap) ToVaultDynamicSecretMapOutput() VaultDynamicSecretMapOutput {
	return i.ToVaultDynamicSecretMapOutputWithContext(context.Background())
}

func (i VaultDynamicSecretMap) ToVaultDynamicSecretMapOutputWithContext(ctx context.Context) VaultDynamicSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultDynamicSecretMapOutput)
}

type VaultDynamicSecretOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultDynamicSecret)(nil)).Elem()
}

func (o VaultDynamicSecretOutput) ToVaultDynamicSecretOutput() VaultDynamicSecretOutput {
	return o
}

func (o VaultDynamicSecretOutput) ToVaultDynamicSecretOutputWithContext(ctx context.Context) VaultDynamicSecretOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o VaultDynamicSecretOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultDynamicSecret) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o VaultDynamicSecretOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultDynamicSecret) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o VaultDynamicSecretOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *VaultDynamicSecret) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o VaultDynamicSecretOutput) Spec() VaultDynamicSecretSpecOutput {
	return o.ApplyT(func(v *VaultDynamicSecret) VaultDynamicSecretSpecOutput { return v.Spec }).(VaultDynamicSecretSpecOutput)
}

type VaultDynamicSecretArrayOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultDynamicSecret)(nil)).Elem()
}

func (o VaultDynamicSecretArrayOutput) ToVaultDynamicSecretArrayOutput() VaultDynamicSecretArrayOutput {
	return o
}

func (o VaultDynamicSecretArrayOutput) ToVaultDynamicSecretArrayOutputWithContext(ctx context.Context) VaultDynamicSecretArrayOutput {
	return o
}

func (o VaultDynamicSecretArrayOutput) Index(i pulumi.IntInput) VaultDynamicSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VaultDynamicSecret {
		return vs[0].([]*VaultDynamicSecret)[vs[1].(int)]
	}).(VaultDynamicSecretOutput)
}

type VaultDynamicSecretMapOutput struct{ *pulumi.OutputState }

func (VaultDynamicSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultDynamicSecret)(nil)).Elem()
}

func (o VaultDynamicSecretMapOutput) ToVaultDynamicSecretMapOutput() VaultDynamicSecretMapOutput {
	return o
}

func (o VaultDynamicSecretMapOutput) ToVaultDynamicSecretMapOutputWithContext(ctx context.Context) VaultDynamicSecretMapOutput {
	return o
}

func (o VaultDynamicSecretMapOutput) MapIndex(k pulumi.StringInput) VaultDynamicSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VaultDynamicSecret {
		return vs[0].(map[string]*VaultDynamicSecret)[vs[1].(string)]
	}).(VaultDynamicSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretInput)(nil)).Elem(), &VaultDynamicSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretArrayInput)(nil)).Elem(), VaultDynamicSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultDynamicSecretMapInput)(nil)).Elem(), VaultDynamicSecretMap{})
	pulumi.RegisterOutputType(VaultDynamicSecretOutput{})
	pulumi.RegisterOutputType(VaultDynamicSecretArrayOutput{})
	pulumi.RegisterOutputType(VaultDynamicSecretMapOutput{})
}
