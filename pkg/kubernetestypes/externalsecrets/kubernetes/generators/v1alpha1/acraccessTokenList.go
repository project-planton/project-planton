// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ACRAccessTokenList is a list of ACRAccessToken
type ACRAccessTokenList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of acraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ACRAccessTokenTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewACRAccessTokenList registers a new resource with the given unique name, arguments, and options.
func NewACRAccessTokenList(ctx *pulumi.Context,
	name string, args *ACRAccessTokenListArgs, opts ...pulumi.ResourceOption) (*ACRAccessTokenList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ACRAccessTokenList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ACRAccessTokenList
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:ACRAccessTokenList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetACRAccessTokenList gets an existing ACRAccessTokenList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetACRAccessTokenList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ACRAccessTokenListState, opts ...pulumi.ResourceOption) (*ACRAccessTokenList, error) {
	var resource ACRAccessTokenList
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:ACRAccessTokenList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ACRAccessTokenList resources.
type acraccessTokenListState struct {
}

type ACRAccessTokenListState struct {
}

func (ACRAccessTokenListState) ElementType() reflect.Type {
	return reflect.TypeOf((*acraccessTokenListState)(nil)).Elem()
}

type acraccessTokenListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of acraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []ACRAccessTokenType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ACRAccessTokenList resource.
type ACRAccessTokenListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of acraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items ACRAccessTokenTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ACRAccessTokenListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*acraccessTokenListArgs)(nil)).Elem()
}

type ACRAccessTokenListInput interface {
	pulumi.Input

	ToACRAccessTokenListOutput() ACRAccessTokenListOutput
	ToACRAccessTokenListOutputWithContext(ctx context.Context) ACRAccessTokenListOutput
}

func (*ACRAccessTokenList) ElementType() reflect.Type {
	return reflect.TypeOf((**ACRAccessTokenList)(nil)).Elem()
}

func (i *ACRAccessTokenList) ToACRAccessTokenListOutput() ACRAccessTokenListOutput {
	return i.ToACRAccessTokenListOutputWithContext(context.Background())
}

func (i *ACRAccessTokenList) ToACRAccessTokenListOutputWithContext(ctx context.Context) ACRAccessTokenListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACRAccessTokenListOutput)
}

// ACRAccessTokenListArrayInput is an input type that accepts ACRAccessTokenListArray and ACRAccessTokenListArrayOutput values.
// You can construct a concrete instance of `ACRAccessTokenListArrayInput` via:
//
//	ACRAccessTokenListArray{ ACRAccessTokenListArgs{...} }
type ACRAccessTokenListArrayInput interface {
	pulumi.Input

	ToACRAccessTokenListArrayOutput() ACRAccessTokenListArrayOutput
	ToACRAccessTokenListArrayOutputWithContext(context.Context) ACRAccessTokenListArrayOutput
}

type ACRAccessTokenListArray []ACRAccessTokenListInput

func (ACRAccessTokenListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ACRAccessTokenList)(nil)).Elem()
}

func (i ACRAccessTokenListArray) ToACRAccessTokenListArrayOutput() ACRAccessTokenListArrayOutput {
	return i.ToACRAccessTokenListArrayOutputWithContext(context.Background())
}

func (i ACRAccessTokenListArray) ToACRAccessTokenListArrayOutputWithContext(ctx context.Context) ACRAccessTokenListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACRAccessTokenListArrayOutput)
}

// ACRAccessTokenListMapInput is an input type that accepts ACRAccessTokenListMap and ACRAccessTokenListMapOutput values.
// You can construct a concrete instance of `ACRAccessTokenListMapInput` via:
//
//	ACRAccessTokenListMap{ "key": ACRAccessTokenListArgs{...} }
type ACRAccessTokenListMapInput interface {
	pulumi.Input

	ToACRAccessTokenListMapOutput() ACRAccessTokenListMapOutput
	ToACRAccessTokenListMapOutputWithContext(context.Context) ACRAccessTokenListMapOutput
}

type ACRAccessTokenListMap map[string]ACRAccessTokenListInput

func (ACRAccessTokenListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ACRAccessTokenList)(nil)).Elem()
}

func (i ACRAccessTokenListMap) ToACRAccessTokenListMapOutput() ACRAccessTokenListMapOutput {
	return i.ToACRAccessTokenListMapOutputWithContext(context.Background())
}

func (i ACRAccessTokenListMap) ToACRAccessTokenListMapOutputWithContext(ctx context.Context) ACRAccessTokenListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ACRAccessTokenListMapOutput)
}

type ACRAccessTokenListOutput struct{ *pulumi.OutputState }

func (ACRAccessTokenListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ACRAccessTokenList)(nil)).Elem()
}

func (o ACRAccessTokenListOutput) ToACRAccessTokenListOutput() ACRAccessTokenListOutput {
	return o
}

func (o ACRAccessTokenListOutput) ToACRAccessTokenListOutputWithContext(ctx context.Context) ACRAccessTokenListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ACRAccessTokenListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ACRAccessTokenList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of acraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o ACRAccessTokenListOutput) Items() ACRAccessTokenTypeArrayOutput {
	return o.ApplyT(func(v *ACRAccessTokenList) ACRAccessTokenTypeArrayOutput { return v.Items }).(ACRAccessTokenTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ACRAccessTokenListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ACRAccessTokenList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ACRAccessTokenListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ACRAccessTokenList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ACRAccessTokenListArrayOutput struct{ *pulumi.OutputState }

func (ACRAccessTokenListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ACRAccessTokenList)(nil)).Elem()
}

func (o ACRAccessTokenListArrayOutput) ToACRAccessTokenListArrayOutput() ACRAccessTokenListArrayOutput {
	return o
}

func (o ACRAccessTokenListArrayOutput) ToACRAccessTokenListArrayOutputWithContext(ctx context.Context) ACRAccessTokenListArrayOutput {
	return o
}

func (o ACRAccessTokenListArrayOutput) Index(i pulumi.IntInput) ACRAccessTokenListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ACRAccessTokenList {
		return vs[0].([]*ACRAccessTokenList)[vs[1].(int)]
	}).(ACRAccessTokenListOutput)
}

type ACRAccessTokenListMapOutput struct{ *pulumi.OutputState }

func (ACRAccessTokenListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ACRAccessTokenList)(nil)).Elem()
}

func (o ACRAccessTokenListMapOutput) ToACRAccessTokenListMapOutput() ACRAccessTokenListMapOutput {
	return o
}

func (o ACRAccessTokenListMapOutput) ToACRAccessTokenListMapOutputWithContext(ctx context.Context) ACRAccessTokenListMapOutput {
	return o
}

func (o ACRAccessTokenListMapOutput) MapIndex(k pulumi.StringInput) ACRAccessTokenListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ACRAccessTokenList {
		return vs[0].(map[string]*ACRAccessTokenList)[vs[1].(string)]
	}).(ACRAccessTokenListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ACRAccessTokenListInput)(nil)).Elem(), &ACRAccessTokenList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ACRAccessTokenListArrayInput)(nil)).Elem(), ACRAccessTokenListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ACRAccessTokenListMapInput)(nil)).Elem(), ACRAccessTokenListMap{})
	pulumi.RegisterOutputType(ACRAccessTokenListOutput{})
	pulumi.RegisterOutputType(ACRAccessTokenListArrayOutput{})
	pulumi.RegisterOutputType(ACRAccessTokenListMapOutput{})
}
