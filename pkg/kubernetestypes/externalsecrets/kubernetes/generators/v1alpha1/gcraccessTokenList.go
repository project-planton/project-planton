// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GCRAccessTokenList is a list of GCRAccessToken
type GCRAccessTokenList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of gcraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items GCRAccessTokenTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewGCRAccessTokenList registers a new resource with the given unique name, arguments, and options.
func NewGCRAccessTokenList(ctx *pulumi.Context,
	name string, args *GCRAccessTokenListArgs, opts ...pulumi.ResourceOption) (*GCRAccessTokenList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("generators.external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("GCRAccessTokenList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource GCRAccessTokenList
	err := ctx.RegisterResource("kubernetes:generators.external-secrets.io/v1alpha1:GCRAccessTokenList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGCRAccessTokenList gets an existing GCRAccessTokenList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGCRAccessTokenList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GCRAccessTokenListState, opts ...pulumi.ResourceOption) (*GCRAccessTokenList, error) {
	var resource GCRAccessTokenList
	err := ctx.ReadResource("kubernetes:generators.external-secrets.io/v1alpha1:GCRAccessTokenList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GCRAccessTokenList resources.
type gcraccessTokenListState struct {
}

type GCRAccessTokenListState struct {
}

func (GCRAccessTokenListState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcraccessTokenListState)(nil)).Elem()
}

type gcraccessTokenListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of gcraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []GCRAccessTokenType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a GCRAccessTokenList resource.
type GCRAccessTokenListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of gcraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items GCRAccessTokenTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (GCRAccessTokenListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcraccessTokenListArgs)(nil)).Elem()
}

type GCRAccessTokenListInput interface {
	pulumi.Input

	ToGCRAccessTokenListOutput() GCRAccessTokenListOutput
	ToGCRAccessTokenListOutputWithContext(ctx context.Context) GCRAccessTokenListOutput
}

func (*GCRAccessTokenList) ElementType() reflect.Type {
	return reflect.TypeOf((**GCRAccessTokenList)(nil)).Elem()
}

func (i *GCRAccessTokenList) ToGCRAccessTokenListOutput() GCRAccessTokenListOutput {
	return i.ToGCRAccessTokenListOutputWithContext(context.Background())
}

func (i *GCRAccessTokenList) ToGCRAccessTokenListOutputWithContext(ctx context.Context) GCRAccessTokenListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCRAccessTokenListOutput)
}

// GCRAccessTokenListArrayInput is an input type that accepts GCRAccessTokenListArray and GCRAccessTokenListArrayOutput values.
// You can construct a concrete instance of `GCRAccessTokenListArrayInput` via:
//
//	GCRAccessTokenListArray{ GCRAccessTokenListArgs{...} }
type GCRAccessTokenListArrayInput interface {
	pulumi.Input

	ToGCRAccessTokenListArrayOutput() GCRAccessTokenListArrayOutput
	ToGCRAccessTokenListArrayOutputWithContext(context.Context) GCRAccessTokenListArrayOutput
}

type GCRAccessTokenListArray []GCRAccessTokenListInput

func (GCRAccessTokenListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GCRAccessTokenList)(nil)).Elem()
}

func (i GCRAccessTokenListArray) ToGCRAccessTokenListArrayOutput() GCRAccessTokenListArrayOutput {
	return i.ToGCRAccessTokenListArrayOutputWithContext(context.Background())
}

func (i GCRAccessTokenListArray) ToGCRAccessTokenListArrayOutputWithContext(ctx context.Context) GCRAccessTokenListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCRAccessTokenListArrayOutput)
}

// GCRAccessTokenListMapInput is an input type that accepts GCRAccessTokenListMap and GCRAccessTokenListMapOutput values.
// You can construct a concrete instance of `GCRAccessTokenListMapInput` via:
//
//	GCRAccessTokenListMap{ "key": GCRAccessTokenListArgs{...} }
type GCRAccessTokenListMapInput interface {
	pulumi.Input

	ToGCRAccessTokenListMapOutput() GCRAccessTokenListMapOutput
	ToGCRAccessTokenListMapOutputWithContext(context.Context) GCRAccessTokenListMapOutput
}

type GCRAccessTokenListMap map[string]GCRAccessTokenListInput

func (GCRAccessTokenListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GCRAccessTokenList)(nil)).Elem()
}

func (i GCRAccessTokenListMap) ToGCRAccessTokenListMapOutput() GCRAccessTokenListMapOutput {
	return i.ToGCRAccessTokenListMapOutputWithContext(context.Background())
}

func (i GCRAccessTokenListMap) ToGCRAccessTokenListMapOutputWithContext(ctx context.Context) GCRAccessTokenListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GCRAccessTokenListMapOutput)
}

type GCRAccessTokenListOutput struct{ *pulumi.OutputState }

func (GCRAccessTokenListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GCRAccessTokenList)(nil)).Elem()
}

func (o GCRAccessTokenListOutput) ToGCRAccessTokenListOutput() GCRAccessTokenListOutput {
	return o
}

func (o GCRAccessTokenListOutput) ToGCRAccessTokenListOutputWithContext(ctx context.Context) GCRAccessTokenListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o GCRAccessTokenListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *GCRAccessTokenList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of gcraccesstokens. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o GCRAccessTokenListOutput) Items() GCRAccessTokenTypeArrayOutput {
	return o.ApplyT(func(v *GCRAccessTokenList) GCRAccessTokenTypeArrayOutput { return v.Items }).(GCRAccessTokenTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GCRAccessTokenListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *GCRAccessTokenList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o GCRAccessTokenListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *GCRAccessTokenList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type GCRAccessTokenListArrayOutput struct{ *pulumi.OutputState }

func (GCRAccessTokenListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GCRAccessTokenList)(nil)).Elem()
}

func (o GCRAccessTokenListArrayOutput) ToGCRAccessTokenListArrayOutput() GCRAccessTokenListArrayOutput {
	return o
}

func (o GCRAccessTokenListArrayOutput) ToGCRAccessTokenListArrayOutputWithContext(ctx context.Context) GCRAccessTokenListArrayOutput {
	return o
}

func (o GCRAccessTokenListArrayOutput) Index(i pulumi.IntInput) GCRAccessTokenListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GCRAccessTokenList {
		return vs[0].([]*GCRAccessTokenList)[vs[1].(int)]
	}).(GCRAccessTokenListOutput)
}

type GCRAccessTokenListMapOutput struct{ *pulumi.OutputState }

func (GCRAccessTokenListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GCRAccessTokenList)(nil)).Elem()
}

func (o GCRAccessTokenListMapOutput) ToGCRAccessTokenListMapOutput() GCRAccessTokenListMapOutput {
	return o
}

func (o GCRAccessTokenListMapOutput) ToGCRAccessTokenListMapOutputWithContext(ctx context.Context) GCRAccessTokenListMapOutput {
	return o
}

func (o GCRAccessTokenListMapOutput) MapIndex(k pulumi.StringInput) GCRAccessTokenListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GCRAccessTokenList {
		return vs[0].(map[string]*GCRAccessTokenList)[vs[1].(string)]
	}).(GCRAccessTokenListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GCRAccessTokenListInput)(nil)).Elem(), &GCRAccessTokenList{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCRAccessTokenListArrayInput)(nil)).Elem(), GCRAccessTokenListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GCRAccessTokenListMapInput)(nil)).Elem(), GCRAccessTokenListMap{})
	pulumi.RegisterOutputType(GCRAccessTokenListOutput{})
	pulumi.RegisterOutputType(GCRAccessTokenListArrayOutput{})
	pulumi.RegisterOutputType(GCRAccessTokenListMapOutput{})
}
