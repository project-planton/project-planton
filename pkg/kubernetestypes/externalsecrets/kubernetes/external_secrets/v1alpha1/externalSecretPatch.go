// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ExternalSecret is the Schema for the external-secrets API.
type ExternalSecretPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput    `pulumi:"metadata"`
	Spec     ExternalSecretSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ExternalSecretStatusPatchPtrOutput `pulumi:"status"`
}

// NewExternalSecretPatch registers a new resource with the given unique name, arguments, and options.
func NewExternalSecretPatch(ctx *pulumi.Context,
	name string, args *ExternalSecretPatchArgs, opts ...pulumi.ResourceOption) (*ExternalSecretPatch, error) {
	if args == nil {
		args = &ExternalSecretPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ExternalSecret")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:external-secrets.io/v1beta1:ExternalSecretPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ExternalSecretPatch
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:ExternalSecretPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalSecretPatch gets an existing ExternalSecretPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalSecretPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalSecretPatchState, opts ...pulumi.ResourceOption) (*ExternalSecretPatch, error) {
	var resource ExternalSecretPatch
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:ExternalSecretPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalSecretPatch resources.
type externalSecretPatchState struct {
}

type ExternalSecretPatchState struct {
}

func (ExternalSecretPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretPatchState)(nil)).Elem()
}

type externalSecretPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch  `pulumi:"metadata"`
	Spec     *ExternalSecretSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ExternalSecretPatch resource.
type ExternalSecretPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ExternalSecretSpecPatchPtrInput
}

func (ExternalSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretPatchArgs)(nil)).Elem()
}

type ExternalSecretPatchInput interface {
	pulumi.Input

	ToExternalSecretPatchOutput() ExternalSecretPatchOutput
	ToExternalSecretPatchOutputWithContext(ctx context.Context) ExternalSecretPatchOutput
}

func (*ExternalSecretPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretPatch)(nil)).Elem()
}

func (i *ExternalSecretPatch) ToExternalSecretPatchOutput() ExternalSecretPatchOutput {
	return i.ToExternalSecretPatchOutputWithContext(context.Background())
}

func (i *ExternalSecretPatch) ToExternalSecretPatchOutputWithContext(ctx context.Context) ExternalSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretPatchOutput)
}

// ExternalSecretPatchArrayInput is an input type that accepts ExternalSecretPatchArray and ExternalSecretPatchArrayOutput values.
// You can construct a concrete instance of `ExternalSecretPatchArrayInput` via:
//
//	ExternalSecretPatchArray{ ExternalSecretPatchArgs{...} }
type ExternalSecretPatchArrayInput interface {
	pulumi.Input

	ToExternalSecretPatchArrayOutput() ExternalSecretPatchArrayOutput
	ToExternalSecretPatchArrayOutputWithContext(context.Context) ExternalSecretPatchArrayOutput
}

type ExternalSecretPatchArray []ExternalSecretPatchInput

func (ExternalSecretPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalSecretPatch)(nil)).Elem()
}

func (i ExternalSecretPatchArray) ToExternalSecretPatchArrayOutput() ExternalSecretPatchArrayOutput {
	return i.ToExternalSecretPatchArrayOutputWithContext(context.Background())
}

func (i ExternalSecretPatchArray) ToExternalSecretPatchArrayOutputWithContext(ctx context.Context) ExternalSecretPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretPatchArrayOutput)
}

// ExternalSecretPatchMapInput is an input type that accepts ExternalSecretPatchMap and ExternalSecretPatchMapOutput values.
// You can construct a concrete instance of `ExternalSecretPatchMapInput` via:
//
//	ExternalSecretPatchMap{ "key": ExternalSecretPatchArgs{...} }
type ExternalSecretPatchMapInput interface {
	pulumi.Input

	ToExternalSecretPatchMapOutput() ExternalSecretPatchMapOutput
	ToExternalSecretPatchMapOutputWithContext(context.Context) ExternalSecretPatchMapOutput
}

type ExternalSecretPatchMap map[string]ExternalSecretPatchInput

func (ExternalSecretPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalSecretPatch)(nil)).Elem()
}

func (i ExternalSecretPatchMap) ToExternalSecretPatchMapOutput() ExternalSecretPatchMapOutput {
	return i.ToExternalSecretPatchMapOutputWithContext(context.Background())
}

func (i ExternalSecretPatchMap) ToExternalSecretPatchMapOutputWithContext(ctx context.Context) ExternalSecretPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretPatchMapOutput)
}

type ExternalSecretPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretPatch)(nil)).Elem()
}

func (o ExternalSecretPatchOutput) ToExternalSecretPatchOutput() ExternalSecretPatchOutput {
	return o
}

func (o ExternalSecretPatchOutput) ToExternalSecretPatchOutputWithContext(ctx context.Context) ExternalSecretPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ExternalSecretPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ExternalSecretPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ExternalSecretPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ExternalSecretPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ExternalSecretPatchOutput) Spec() ExternalSecretSpecPatchPtrOutput {
	return o.ApplyT(func(v *ExternalSecretPatch) ExternalSecretSpecPatchPtrOutput { return v.Spec }).(ExternalSecretSpecPatchPtrOutput)
}

func (o ExternalSecretPatchOutput) Status() ExternalSecretStatusPatchPtrOutput {
	return o.ApplyT(func(v *ExternalSecretPatch) ExternalSecretStatusPatchPtrOutput { return v.Status }).(ExternalSecretStatusPatchPtrOutput)
}

type ExternalSecretPatchArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalSecretPatch)(nil)).Elem()
}

func (o ExternalSecretPatchArrayOutput) ToExternalSecretPatchArrayOutput() ExternalSecretPatchArrayOutput {
	return o
}

func (o ExternalSecretPatchArrayOutput) ToExternalSecretPatchArrayOutputWithContext(ctx context.Context) ExternalSecretPatchArrayOutput {
	return o
}

func (o ExternalSecretPatchArrayOutput) Index(i pulumi.IntInput) ExternalSecretPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalSecretPatch {
		return vs[0].([]*ExternalSecretPatch)[vs[1].(int)]
	}).(ExternalSecretPatchOutput)
}

type ExternalSecretPatchMapOutput struct{ *pulumi.OutputState }

func (ExternalSecretPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalSecretPatch)(nil)).Elem()
}

func (o ExternalSecretPatchMapOutput) ToExternalSecretPatchMapOutput() ExternalSecretPatchMapOutput {
	return o
}

func (o ExternalSecretPatchMapOutput) ToExternalSecretPatchMapOutputWithContext(ctx context.Context) ExternalSecretPatchMapOutput {
	return o
}

func (o ExternalSecretPatchMapOutput) MapIndex(k pulumi.StringInput) ExternalSecretPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalSecretPatch {
		return vs[0].(map[string]*ExternalSecretPatch)[vs[1].(string)]
	}).(ExternalSecretPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretPatchInput)(nil)).Elem(), &ExternalSecretPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretPatchArrayInput)(nil)).Elem(), ExternalSecretPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretPatchMapInput)(nil)).Elem(), ExternalSecretPatchMap{})
	pulumi.RegisterOutputType(ExternalSecretPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretPatchArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretPatchMapOutput{})
}
