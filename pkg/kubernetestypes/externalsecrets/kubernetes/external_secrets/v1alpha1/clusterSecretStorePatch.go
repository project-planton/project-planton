// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type ClusterSecretStorePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput        `pulumi:"metadata"`
	Spec     ClusterSecretStoreSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ClusterSecretStoreStatusPatchPtrOutput `pulumi:"status"`
}

// NewClusterSecretStorePatch registers a new resource with the given unique name, arguments, and options.
func NewClusterSecretStorePatch(ctx *pulumi.Context,
	name string, args *ClusterSecretStorePatchArgs, opts ...pulumi.ResourceOption) (*ClusterSecretStorePatch, error) {
	if args == nil {
		args = &ClusterSecretStorePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ClusterSecretStore")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:external-secrets.io/v1beta1:ClusterSecretStorePatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterSecretStorePatch
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:ClusterSecretStorePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterSecretStorePatch gets an existing ClusterSecretStorePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterSecretStorePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterSecretStorePatchState, opts ...pulumi.ResourceOption) (*ClusterSecretStorePatch, error) {
	var resource ClusterSecretStorePatch
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:ClusterSecretStorePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterSecretStorePatch resources.
type clusterSecretStorePatchState struct {
}

type ClusterSecretStorePatchState struct {
}

func (ClusterSecretStorePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterSecretStorePatchState)(nil)).Elem()
}

type clusterSecretStorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch      `pulumi:"metadata"`
	Spec     *ClusterSecretStoreSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterSecretStorePatch resource.
type ClusterSecretStorePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ClusterSecretStoreSpecPatchPtrInput
}

func (ClusterSecretStorePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterSecretStorePatchArgs)(nil)).Elem()
}

type ClusterSecretStorePatchInput interface {
	pulumi.Input

	ToClusterSecretStorePatchOutput() ClusterSecretStorePatchOutput
	ToClusterSecretStorePatchOutputWithContext(ctx context.Context) ClusterSecretStorePatchOutput
}

func (*ClusterSecretStorePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStorePatch)(nil)).Elem()
}

func (i *ClusterSecretStorePatch) ToClusterSecretStorePatchOutput() ClusterSecretStorePatchOutput {
	return i.ToClusterSecretStorePatchOutputWithContext(context.Background())
}

func (i *ClusterSecretStorePatch) ToClusterSecretStorePatchOutputWithContext(ctx context.Context) ClusterSecretStorePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStorePatchOutput)
}

// ClusterSecretStorePatchArrayInput is an input type that accepts ClusterSecretStorePatchArray and ClusterSecretStorePatchArrayOutput values.
// You can construct a concrete instance of `ClusterSecretStorePatchArrayInput` via:
//
//	ClusterSecretStorePatchArray{ ClusterSecretStorePatchArgs{...} }
type ClusterSecretStorePatchArrayInput interface {
	pulumi.Input

	ToClusterSecretStorePatchArrayOutput() ClusterSecretStorePatchArrayOutput
	ToClusterSecretStorePatchArrayOutputWithContext(context.Context) ClusterSecretStorePatchArrayOutput
}

type ClusterSecretStorePatchArray []ClusterSecretStorePatchInput

func (ClusterSecretStorePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterSecretStorePatch)(nil)).Elem()
}

func (i ClusterSecretStorePatchArray) ToClusterSecretStorePatchArrayOutput() ClusterSecretStorePatchArrayOutput {
	return i.ToClusterSecretStorePatchArrayOutputWithContext(context.Background())
}

func (i ClusterSecretStorePatchArray) ToClusterSecretStorePatchArrayOutputWithContext(ctx context.Context) ClusterSecretStorePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStorePatchArrayOutput)
}

// ClusterSecretStorePatchMapInput is an input type that accepts ClusterSecretStorePatchMap and ClusterSecretStorePatchMapOutput values.
// You can construct a concrete instance of `ClusterSecretStorePatchMapInput` via:
//
//	ClusterSecretStorePatchMap{ "key": ClusterSecretStorePatchArgs{...} }
type ClusterSecretStorePatchMapInput interface {
	pulumi.Input

	ToClusterSecretStorePatchMapOutput() ClusterSecretStorePatchMapOutput
	ToClusterSecretStorePatchMapOutputWithContext(context.Context) ClusterSecretStorePatchMapOutput
}

type ClusterSecretStorePatchMap map[string]ClusterSecretStorePatchInput

func (ClusterSecretStorePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterSecretStorePatch)(nil)).Elem()
}

func (i ClusterSecretStorePatchMap) ToClusterSecretStorePatchMapOutput() ClusterSecretStorePatchMapOutput {
	return i.ToClusterSecretStorePatchMapOutputWithContext(context.Background())
}

func (i ClusterSecretStorePatchMap) ToClusterSecretStorePatchMapOutputWithContext(ctx context.Context) ClusterSecretStorePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStorePatchMapOutput)
}

type ClusterSecretStorePatchOutput struct{ *pulumi.OutputState }

func (ClusterSecretStorePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStorePatch)(nil)).Elem()
}

func (o ClusterSecretStorePatchOutput) ToClusterSecretStorePatchOutput() ClusterSecretStorePatchOutput {
	return o
}

func (o ClusterSecretStorePatchOutput) ToClusterSecretStorePatchOutputWithContext(ctx context.Context) ClusterSecretStorePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterSecretStorePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStorePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSecretStorePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStorePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterSecretStorePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStorePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClusterSecretStorePatchOutput) Spec() ClusterSecretStoreSpecPatchPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStorePatch) ClusterSecretStoreSpecPatchPtrOutput { return v.Spec }).(ClusterSecretStoreSpecPatchPtrOutput)
}

func (o ClusterSecretStorePatchOutput) Status() ClusterSecretStoreStatusPatchPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStorePatch) ClusterSecretStoreStatusPatchPtrOutput { return v.Status }).(ClusterSecretStoreStatusPatchPtrOutput)
}

type ClusterSecretStorePatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecretStorePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterSecretStorePatch)(nil)).Elem()
}

func (o ClusterSecretStorePatchArrayOutput) ToClusterSecretStorePatchArrayOutput() ClusterSecretStorePatchArrayOutput {
	return o
}

func (o ClusterSecretStorePatchArrayOutput) ToClusterSecretStorePatchArrayOutputWithContext(ctx context.Context) ClusterSecretStorePatchArrayOutput {
	return o
}

func (o ClusterSecretStorePatchArrayOutput) Index(i pulumi.IntInput) ClusterSecretStorePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterSecretStorePatch {
		return vs[0].([]*ClusterSecretStorePatch)[vs[1].(int)]
	}).(ClusterSecretStorePatchOutput)
}

type ClusterSecretStorePatchMapOutput struct{ *pulumi.OutputState }

func (ClusterSecretStorePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterSecretStorePatch)(nil)).Elem()
}

func (o ClusterSecretStorePatchMapOutput) ToClusterSecretStorePatchMapOutput() ClusterSecretStorePatchMapOutput {
	return o
}

func (o ClusterSecretStorePatchMapOutput) ToClusterSecretStorePatchMapOutputWithContext(ctx context.Context) ClusterSecretStorePatchMapOutput {
	return o
}

func (o ClusterSecretStorePatchMapOutput) MapIndex(k pulumi.StringInput) ClusterSecretStorePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterSecretStorePatch {
		return vs[0].(map[string]*ClusterSecretStorePatch)[vs[1].(string)]
	}).(ClusterSecretStorePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStorePatchInput)(nil)).Elem(), &ClusterSecretStorePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStorePatchArrayInput)(nil)).Elem(), ClusterSecretStorePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStorePatchMapInput)(nil)).Elem(), ClusterSecretStorePatchMap{})
	pulumi.RegisterOutputType(ClusterSecretStorePatchOutput{})
	pulumi.RegisterOutputType(ClusterSecretStorePatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterSecretStorePatchMapOutput{})
}
