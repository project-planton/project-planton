// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PushSecretList is a list of PushSecret
type PushSecretList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of pushsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PushSecretTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPushSecretList registers a new resource with the given unique name, arguments, and options.
func NewPushSecretList(ctx *pulumi.Context,
	name string, args *PushSecretListArgs, opts ...pulumi.ResourceOption) (*PushSecretList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PushSecretList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PushSecretList
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:PushSecretList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPushSecretList gets an existing PushSecretList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPushSecretList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PushSecretListState, opts ...pulumi.ResourceOption) (*PushSecretList, error) {
	var resource PushSecretList
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:PushSecretList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PushSecretList resources.
type pushSecretListState struct {
}

type PushSecretListState struct {
}

func (PushSecretListState) ElementType() reflect.Type {
	return reflect.TypeOf((*pushSecretListState)(nil)).Elem()
}

type pushSecretListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of pushsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []PushSecretType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PushSecretList resource.
type PushSecretListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of pushsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items PushSecretTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PushSecretListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pushSecretListArgs)(nil)).Elem()
}

type PushSecretListInput interface {
	pulumi.Input

	ToPushSecretListOutput() PushSecretListOutput
	ToPushSecretListOutputWithContext(ctx context.Context) PushSecretListOutput
}

func (*PushSecretList) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretList)(nil)).Elem()
}

func (i *PushSecretList) ToPushSecretListOutput() PushSecretListOutput {
	return i.ToPushSecretListOutputWithContext(context.Background())
}

func (i *PushSecretList) ToPushSecretListOutputWithContext(ctx context.Context) PushSecretListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretListOutput)
}

// PushSecretListArrayInput is an input type that accepts PushSecretListArray and PushSecretListArrayOutput values.
// You can construct a concrete instance of `PushSecretListArrayInput` via:
//
//	PushSecretListArray{ PushSecretListArgs{...} }
type PushSecretListArrayInput interface {
	pulumi.Input

	ToPushSecretListArrayOutput() PushSecretListArrayOutput
	ToPushSecretListArrayOutputWithContext(context.Context) PushSecretListArrayOutput
}

type PushSecretListArray []PushSecretListInput

func (PushSecretListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PushSecretList)(nil)).Elem()
}

func (i PushSecretListArray) ToPushSecretListArrayOutput() PushSecretListArrayOutput {
	return i.ToPushSecretListArrayOutputWithContext(context.Background())
}

func (i PushSecretListArray) ToPushSecretListArrayOutputWithContext(ctx context.Context) PushSecretListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretListArrayOutput)
}

// PushSecretListMapInput is an input type that accepts PushSecretListMap and PushSecretListMapOutput values.
// You can construct a concrete instance of `PushSecretListMapInput` via:
//
//	PushSecretListMap{ "key": PushSecretListArgs{...} }
type PushSecretListMapInput interface {
	pulumi.Input

	ToPushSecretListMapOutput() PushSecretListMapOutput
	ToPushSecretListMapOutputWithContext(context.Context) PushSecretListMapOutput
}

type PushSecretListMap map[string]PushSecretListInput

func (PushSecretListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PushSecretList)(nil)).Elem()
}

func (i PushSecretListMap) ToPushSecretListMapOutput() PushSecretListMapOutput {
	return i.ToPushSecretListMapOutputWithContext(context.Background())
}

func (i PushSecretListMap) ToPushSecretListMapOutputWithContext(ctx context.Context) PushSecretListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PushSecretListMapOutput)
}

type PushSecretListOutput struct{ *pulumi.OutputState }

func (PushSecretListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PushSecretList)(nil)).Elem()
}

func (o PushSecretListOutput) ToPushSecretListOutput() PushSecretListOutput {
	return o
}

func (o PushSecretListOutput) ToPushSecretListOutputWithContext(ctx context.Context) PushSecretListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PushSecretListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PushSecretList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of pushsecrets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o PushSecretListOutput) Items() PushSecretTypeArrayOutput {
	return o.ApplyT(func(v *PushSecretList) PushSecretTypeArrayOutput { return v.Items }).(PushSecretTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PushSecretListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PushSecretList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PushSecretListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PushSecretList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PushSecretListArrayOutput struct{ *pulumi.OutputState }

func (PushSecretListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PushSecretList)(nil)).Elem()
}

func (o PushSecretListArrayOutput) ToPushSecretListArrayOutput() PushSecretListArrayOutput {
	return o
}

func (o PushSecretListArrayOutput) ToPushSecretListArrayOutputWithContext(ctx context.Context) PushSecretListArrayOutput {
	return o
}

func (o PushSecretListArrayOutput) Index(i pulumi.IntInput) PushSecretListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PushSecretList {
		return vs[0].([]*PushSecretList)[vs[1].(int)]
	}).(PushSecretListOutput)
}

type PushSecretListMapOutput struct{ *pulumi.OutputState }

func (PushSecretListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PushSecretList)(nil)).Elem()
}

func (o PushSecretListMapOutput) ToPushSecretListMapOutput() PushSecretListMapOutput {
	return o
}

func (o PushSecretListMapOutput) ToPushSecretListMapOutputWithContext(ctx context.Context) PushSecretListMapOutput {
	return o
}

func (o PushSecretListMapOutput) MapIndex(k pulumi.StringInput) PushSecretListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PushSecretList {
		return vs[0].(map[string]*PushSecretList)[vs[1].(string)]
	}).(PushSecretListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretListInput)(nil)).Elem(), &PushSecretList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretListArrayInput)(nil)).Elem(), PushSecretListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PushSecretListMapInput)(nil)).Elem(), PushSecretListMap{})
	pulumi.RegisterOutputType(PushSecretListOutput{})
	pulumi.RegisterOutputType(PushSecretListArrayOutput{})
	pulumi.RegisterOutputType(PushSecretListMapOutput{})
}
