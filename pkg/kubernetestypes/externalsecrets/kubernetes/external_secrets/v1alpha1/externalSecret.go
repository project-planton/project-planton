// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ExternalSecret is the Schema for the external-secrets API.
type ExternalSecret struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput       `pulumi:"metadata"`
	Spec     ExternalSecretSpecOutput      `pulumi:"spec"`
	Status   ExternalSecretStatusPtrOutput `pulumi:"status"`
}

// NewExternalSecret registers a new resource with the given unique name, arguments, and options.
func NewExternalSecret(ctx *pulumi.Context,
	name string, args *ExternalSecretArgs, opts ...pulumi.ResourceOption) (*ExternalSecret, error) {
	if args == nil {
		args = &ExternalSecretArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ExternalSecret")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:external-secrets.io/v1beta1:ExternalSecret"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ExternalSecret
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1alpha1:ExternalSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalSecret gets an existing ExternalSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalSecretState, opts ...pulumi.ResourceOption) (*ExternalSecret, error) {
	var resource ExternalSecret
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1alpha1:ExternalSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalSecret resources.
type externalSecretState struct {
}

type ExternalSecretState struct {
}

func (ExternalSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretState)(nil)).Elem()
}

type externalSecretArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta  `pulumi:"metadata"`
	Spec     *ExternalSecretSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ExternalSecret resource.
type ExternalSecretArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ExternalSecretSpecPtrInput
}

func (ExternalSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalSecretArgs)(nil)).Elem()
}

type ExternalSecretInput interface {
	pulumi.Input

	ToExternalSecretOutput() ExternalSecretOutput
	ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput
}

func (*ExternalSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecret)(nil)).Elem()
}

func (i *ExternalSecret) ToExternalSecretOutput() ExternalSecretOutput {
	return i.ToExternalSecretOutputWithContext(context.Background())
}

func (i *ExternalSecret) ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretOutput)
}

// ExternalSecretArrayInput is an input type that accepts ExternalSecretArray and ExternalSecretArrayOutput values.
// You can construct a concrete instance of `ExternalSecretArrayInput` via:
//
//	ExternalSecretArray{ ExternalSecretArgs{...} }
type ExternalSecretArrayInput interface {
	pulumi.Input

	ToExternalSecretArrayOutput() ExternalSecretArrayOutput
	ToExternalSecretArrayOutputWithContext(context.Context) ExternalSecretArrayOutput
}

type ExternalSecretArray []ExternalSecretInput

func (ExternalSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalSecret)(nil)).Elem()
}

func (i ExternalSecretArray) ToExternalSecretArrayOutput() ExternalSecretArrayOutput {
	return i.ToExternalSecretArrayOutputWithContext(context.Background())
}

func (i ExternalSecretArray) ToExternalSecretArrayOutputWithContext(ctx context.Context) ExternalSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretArrayOutput)
}

// ExternalSecretMapInput is an input type that accepts ExternalSecretMap and ExternalSecretMapOutput values.
// You can construct a concrete instance of `ExternalSecretMapInput` via:
//
//	ExternalSecretMap{ "key": ExternalSecretArgs{...} }
type ExternalSecretMapInput interface {
	pulumi.Input

	ToExternalSecretMapOutput() ExternalSecretMapOutput
	ToExternalSecretMapOutputWithContext(context.Context) ExternalSecretMapOutput
}

type ExternalSecretMap map[string]ExternalSecretInput

func (ExternalSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalSecret)(nil)).Elem()
}

func (i ExternalSecretMap) ToExternalSecretMapOutput() ExternalSecretMapOutput {
	return i.ToExternalSecretMapOutputWithContext(context.Background())
}

func (i ExternalSecretMap) ToExternalSecretMapOutputWithContext(ctx context.Context) ExternalSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretMapOutput)
}

type ExternalSecretOutput struct{ *pulumi.OutputState }

func (ExternalSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecret)(nil)).Elem()
}

func (o ExternalSecretOutput) ToExternalSecretOutput() ExternalSecretOutput {
	return o
}

func (o ExternalSecretOutput) ToExternalSecretOutputWithContext(ctx context.Context) ExternalSecretOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ExternalSecretOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalSecret) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ExternalSecretOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalSecret) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ExternalSecretOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ExternalSecret) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ExternalSecretOutput) Spec() ExternalSecretSpecOutput {
	return o.ApplyT(func(v *ExternalSecret) ExternalSecretSpecOutput { return v.Spec }).(ExternalSecretSpecOutput)
}

func (o ExternalSecretOutput) Status() ExternalSecretStatusPtrOutput {
	return o.ApplyT(func(v *ExternalSecret) ExternalSecretStatusPtrOutput { return v.Status }).(ExternalSecretStatusPtrOutput)
}

type ExternalSecretArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalSecret)(nil)).Elem()
}

func (o ExternalSecretArrayOutput) ToExternalSecretArrayOutput() ExternalSecretArrayOutput {
	return o
}

func (o ExternalSecretArrayOutput) ToExternalSecretArrayOutputWithContext(ctx context.Context) ExternalSecretArrayOutput {
	return o
}

func (o ExternalSecretArrayOutput) Index(i pulumi.IntInput) ExternalSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalSecret {
		return vs[0].([]*ExternalSecret)[vs[1].(int)]
	}).(ExternalSecretOutput)
}

type ExternalSecretMapOutput struct{ *pulumi.OutputState }

func (ExternalSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalSecret)(nil)).Elem()
}

func (o ExternalSecretMapOutput) ToExternalSecretMapOutput() ExternalSecretMapOutput {
	return o
}

func (o ExternalSecretMapOutput) ToExternalSecretMapOutputWithContext(ctx context.Context) ExternalSecretMapOutput {
	return o
}

func (o ExternalSecretMapOutput) MapIndex(k pulumi.StringInput) ExternalSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalSecret {
		return vs[0].(map[string]*ExternalSecret)[vs[1].(string)]
	}).(ExternalSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretInput)(nil)).Elem(), &ExternalSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretArrayInput)(nil)).Elem(), ExternalSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretMapInput)(nil)).Elem(), ExternalSecretMap{})
	pulumi.RegisterOutputType(ExternalSecretOutput{})
	pulumi.RegisterOutputType(ExternalSecretArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretMapOutput{})
}
