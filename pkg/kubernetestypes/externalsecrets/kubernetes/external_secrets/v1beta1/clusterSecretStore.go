// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type ClusterSecretStore struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput           `pulumi:"metadata"`
	Spec     ClusterSecretStoreSpecOutput      `pulumi:"spec"`
	Status   ClusterSecretStoreStatusPtrOutput `pulumi:"status"`
}

// NewClusterSecretStore registers a new resource with the given unique name, arguments, and options.
func NewClusterSecretStore(ctx *pulumi.Context,
	name string, args *ClusterSecretStoreArgs, opts ...pulumi.ResourceOption) (*ClusterSecretStore, error) {
	if args == nil {
		args = &ClusterSecretStoreArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1beta1")
	args.Kind = pulumi.StringPtr("ClusterSecretStore")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:external-secrets.io/v1alpha1:ClusterSecretStore"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterSecretStore
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1beta1:ClusterSecretStore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterSecretStore gets an existing ClusterSecretStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterSecretStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterSecretStoreState, opts ...pulumi.ResourceOption) (*ClusterSecretStore, error) {
	var resource ClusterSecretStore
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1beta1:ClusterSecretStore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterSecretStore resources.
type clusterSecretStoreState struct {
}

type ClusterSecretStoreState struct {
}

func (ClusterSecretStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterSecretStoreState)(nil)).Elem()
}

type clusterSecretStoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta      `pulumi:"metadata"`
	Spec     *ClusterSecretStoreSpec `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterSecretStore resource.
type ClusterSecretStoreArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     ClusterSecretStoreSpecPtrInput
}

func (ClusterSecretStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterSecretStoreArgs)(nil)).Elem()
}

type ClusterSecretStoreInput interface {
	pulumi.Input

	ToClusterSecretStoreOutput() ClusterSecretStoreOutput
	ToClusterSecretStoreOutputWithContext(ctx context.Context) ClusterSecretStoreOutput
}

func (*ClusterSecretStore) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStore)(nil)).Elem()
}

func (i *ClusterSecretStore) ToClusterSecretStoreOutput() ClusterSecretStoreOutput {
	return i.ToClusterSecretStoreOutputWithContext(context.Background())
}

func (i *ClusterSecretStore) ToClusterSecretStoreOutputWithContext(ctx context.Context) ClusterSecretStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreOutput)
}

// ClusterSecretStoreArrayInput is an input type that accepts ClusterSecretStoreArray and ClusterSecretStoreArrayOutput values.
// You can construct a concrete instance of `ClusterSecretStoreArrayInput` via:
//
//	ClusterSecretStoreArray{ ClusterSecretStoreArgs{...} }
type ClusterSecretStoreArrayInput interface {
	pulumi.Input

	ToClusterSecretStoreArrayOutput() ClusterSecretStoreArrayOutput
	ToClusterSecretStoreArrayOutputWithContext(context.Context) ClusterSecretStoreArrayOutput
}

type ClusterSecretStoreArray []ClusterSecretStoreInput

func (ClusterSecretStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterSecretStore)(nil)).Elem()
}

func (i ClusterSecretStoreArray) ToClusterSecretStoreArrayOutput() ClusterSecretStoreArrayOutput {
	return i.ToClusterSecretStoreArrayOutputWithContext(context.Background())
}

func (i ClusterSecretStoreArray) ToClusterSecretStoreArrayOutputWithContext(ctx context.Context) ClusterSecretStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreArrayOutput)
}

// ClusterSecretStoreMapInput is an input type that accepts ClusterSecretStoreMap and ClusterSecretStoreMapOutput values.
// You can construct a concrete instance of `ClusterSecretStoreMapInput` via:
//
//	ClusterSecretStoreMap{ "key": ClusterSecretStoreArgs{...} }
type ClusterSecretStoreMapInput interface {
	pulumi.Input

	ToClusterSecretStoreMapOutput() ClusterSecretStoreMapOutput
	ToClusterSecretStoreMapOutputWithContext(context.Context) ClusterSecretStoreMapOutput
}

type ClusterSecretStoreMap map[string]ClusterSecretStoreInput

func (ClusterSecretStoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterSecretStore)(nil)).Elem()
}

func (i ClusterSecretStoreMap) ToClusterSecretStoreMapOutput() ClusterSecretStoreMapOutput {
	return i.ToClusterSecretStoreMapOutputWithContext(context.Background())
}

func (i ClusterSecretStoreMap) ToClusterSecretStoreMapOutputWithContext(ctx context.Context) ClusterSecretStoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSecretStoreMapOutput)
}

type ClusterSecretStoreOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSecretStore)(nil)).Elem()
}

func (o ClusterSecretStoreOutput) ToClusterSecretStoreOutput() ClusterSecretStoreOutput {
	return o
}

func (o ClusterSecretStoreOutput) ToClusterSecretStoreOutputWithContext(ctx context.Context) ClusterSecretStoreOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterSecretStoreOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterSecretStore) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterSecretStoreOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterSecretStore) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterSecretStoreOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ClusterSecretStore) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o ClusterSecretStoreOutput) Spec() ClusterSecretStoreSpecOutput {
	return o.ApplyT(func(v *ClusterSecretStore) ClusterSecretStoreSpecOutput { return v.Spec }).(ClusterSecretStoreSpecOutput)
}

func (o ClusterSecretStoreOutput) Status() ClusterSecretStoreStatusPtrOutput {
	return o.ApplyT(func(v *ClusterSecretStore) ClusterSecretStoreStatusPtrOutput { return v.Status }).(ClusterSecretStoreStatusPtrOutput)
}

type ClusterSecretStoreArrayOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterSecretStore)(nil)).Elem()
}

func (o ClusterSecretStoreArrayOutput) ToClusterSecretStoreArrayOutput() ClusterSecretStoreArrayOutput {
	return o
}

func (o ClusterSecretStoreArrayOutput) ToClusterSecretStoreArrayOutputWithContext(ctx context.Context) ClusterSecretStoreArrayOutput {
	return o
}

func (o ClusterSecretStoreArrayOutput) Index(i pulumi.IntInput) ClusterSecretStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterSecretStore {
		return vs[0].([]*ClusterSecretStore)[vs[1].(int)]
	}).(ClusterSecretStoreOutput)
}

type ClusterSecretStoreMapOutput struct{ *pulumi.OutputState }

func (ClusterSecretStoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterSecretStore)(nil)).Elem()
}

func (o ClusterSecretStoreMapOutput) ToClusterSecretStoreMapOutput() ClusterSecretStoreMapOutput {
	return o
}

func (o ClusterSecretStoreMapOutput) ToClusterSecretStoreMapOutputWithContext(ctx context.Context) ClusterSecretStoreMapOutput {
	return o
}

func (o ClusterSecretStoreMapOutput) MapIndex(k pulumi.StringInput) ClusterSecretStoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterSecretStore {
		return vs[0].(map[string]*ClusterSecretStore)[vs[1].(string)]
	}).(ClusterSecretStoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreInput)(nil)).Elem(), &ClusterSecretStore{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreArrayInput)(nil)).Elem(), ClusterSecretStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSecretStoreMapInput)(nil)).Elem(), ClusterSecretStoreMap{})
	pulumi.RegisterOutputType(ClusterSecretStoreOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreArrayOutput{})
	pulumi.RegisterOutputType(ClusterSecretStoreMapOutput{})
}
