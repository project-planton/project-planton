// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type ExternalSecretSpecTargetTemplateTemplateFromPatch struct {
	ConfigMap *ExternalSecretSpecTargetTemplateTemplateFromConfigMapPatch `pulumi:"configMap"`
	Literal   *string                                                     `pulumi:"literal"`
	Secret    *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch    `pulumi:"secret"`
	Target    *string                                                     `pulumi:"target"`
}

// ExternalSecretSpecTargetTemplateTemplateFromPatchInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromPatchArgs and ExternalSecretSpecTargetTemplateTemplateFromPatchOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromPatchInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromPatchArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromPatchInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchOutput
	ToExternalSecretSpecTargetTemplateTemplateFromPatchOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromPatchArgs struct {
	ConfigMap ExternalSecretSpecTargetTemplateTemplateFromConfigMapPatchPtrInput `pulumi:"configMap"`
	Literal   pulumi.StringPtrInput                                              `pulumi:"literal"`
	Secret    ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput    `pulumi:"secret"`
	Target    pulumi.StringPtrInput                                              `pulumi:"target"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromPatch)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromPatchOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromPatchOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromPatchArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromPatchArray and ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromPatchArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromPatchArray{ ExternalSecretSpecTargetTemplateTemplateFromPatchArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromPatchArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromPatchArray []ExternalSecretSpecTargetTemplateTemplateFromPatchInput

func (ExternalSecretSpecTargetTemplateTemplateFromPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromPatch)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromPatchArray) ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromPatchArray) ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) ConfigMap() ExternalSecretSpecTargetTemplateTemplateFromConfigMapPatchPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromPatch) *ExternalSecretSpecTargetTemplateTemplateFromConfigMapPatch {
		return v.ConfigMap
	}).(ExternalSecretSpecTargetTemplateTemplateFromConfigMapPatchPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) Literal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromPatch) *string { return v.Literal }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) Secret() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromPatch) *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch {
		return v.Secret
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromPatch) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFromPatch {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFromPatch)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromPatchOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecret struct {
	Items []ExternalSecretSpecTargetTemplateTemplateFromSecretItems `pulumi:"items"`
	Name  *string                                                   `pulumi:"name"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretArgs struct {
	Items ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput `pulumi:"items"`
	Name  pulumi.StringPtrInput                                             `pulumi:"name"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput)
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput).ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretArgs, ExternalSecretSpecTargetTemplateTemplateFromSecretPtr and ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput
}

type externalSecretSpecTargetTemplateTemplateFromSecretPtrType ExternalSecretSpecTargetTemplateTemplateFromSecretArgs

func ExternalSecretSpecTargetTemplateTemplateFromSecretPtr(v *ExternalSecretSpecTargetTemplateTemplateFromSecretArgs) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput {
	return (*externalSecretSpecTargetTemplateTemplateFromSecretPtrType)(v)
}

func (*externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o.ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplateTemplateFromSecret) *ExternalSecretSpecTargetTemplateTemplateFromSecret {
		return &v
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecret) []ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecret)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Elem() ExternalSecretSpecTargetTemplateTemplateFromSecretOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) ExternalSecretSpecTargetTemplateTemplateFromSecret {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplateTemplateFromSecret
		return ret
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) []ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItems struct {
	Key        *string `pulumi:"key"`
	TemplateAs *string `pulumi:"templateAs"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs struct {
	Key        pulumi.StringPtrInput `pulumi:"key"`
	TemplateAs pulumi.StringPtrInput `pulumi:"templateAs"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray{ ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretItems) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput) TemplateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretItems) *string { return v.TemplateAs }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFromSecretItems {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFromSecretItems)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch struct {
	Key        *string `pulumi:"key"`
	TemplateAs *string `pulumi:"templateAs"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs struct {
	Key        pulumi.StringPtrInput `pulumi:"key"`
	TemplateAs pulumi.StringPtrInput `pulumi:"templateAs"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray and ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray{ ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs{...} }
type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchInput

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput) TemplateAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch) *string { return v.TemplateAs }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput) Index(i pulumi.IntInput) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch {
		return vs[0].([]ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch)[vs[1].(int)]
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPatch struct {
	Items []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch `pulumi:"items"`
	Name  *string                                                        `pulumi:"name"`
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretPatchInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs and ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretPatchInput` via:
//
//	ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs{...}
type ExternalSecretSpecTargetTemplateTemplateFromSecretPatchInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs struct {
	Items ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayInput `pulumi:"items"`
	Name  pulumi.StringPtrInput                                                  `pulumi:"name"`
}

func (ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPatch)(nil)).Elem()
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput)
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(context.Background())
}

func (i ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput).ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(ctx)
}

// ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput is an input type that accepts ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs, ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtr and ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput values.
// You can construct a concrete instance of `ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput` via:
//
//	        ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput interface {
	pulumi.Input

	ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput
	ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput
}

type externalSecretSpecTargetTemplateTemplateFromSecretPatchPtrType ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs

func ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtr(v *ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput {
	return (*externalSecretSpecTargetTemplateTemplateFromSecretPatchPtrType)(v)
}

func (*externalSecretSpecTargetTemplateTemplateFromSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecretPatch)(nil)).Elem()
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPatchPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return i.ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(context.Background())
}

func (i *externalSecretSpecTargetTemplateTemplateFromSecretPatchPtrType) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return o.ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(context.Background())
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch {
		return &v
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch {
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretSpecTargetTemplateTemplateFromSecretPatch)(nil)).Elem()
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) ToExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutputWithContext(ctx context.Context) ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput {
	return o
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) Elem() ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) ExternalSecretSpecTargetTemplateTemplateFromSecretPatch {
		if v != nil {
			return *v
		}
		var ret ExternalSecretSpecTargetTemplateTemplateFromSecretPatch
		return ret
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) Items() ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) []ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatch {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput)
}

func (o ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretSpecTargetTemplateTemplateFromSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretStatus struct {
	Binding    *ExternalSecretStatusBinding     `pulumi:"binding"`
	Conditions []ExternalSecretStatusConditions `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime *string `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion *string `pulumi:"syncedResourceVersion"`
}

// ExternalSecretStatusInput is an input type that accepts ExternalSecretStatusArgs and ExternalSecretStatusOutput values.
// You can construct a concrete instance of `ExternalSecretStatusInput` via:
//
//	ExternalSecretStatusArgs{...}
type ExternalSecretStatusInput interface {
	pulumi.Input

	ToExternalSecretStatusOutput() ExternalSecretStatusOutput
	ToExternalSecretStatusOutputWithContext(context.Context) ExternalSecretStatusOutput
}

type ExternalSecretStatusArgs struct {
	Binding    ExternalSecretStatusBindingPtrInput      `pulumi:"binding"`
	Conditions ExternalSecretStatusConditionsArrayInput `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime pulumi.StringPtrInput `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion pulumi.StringPtrInput `pulumi:"syncedResourceVersion"`
}

func (ExternalSecretStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatus)(nil)).Elem()
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusOutput() ExternalSecretStatusOutput {
	return i.ToExternalSecretStatusOutputWithContext(context.Background())
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusOutputWithContext(ctx context.Context) ExternalSecretStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusOutput)
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return i.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusArgs) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusOutput).ToExternalSecretStatusPtrOutputWithContext(ctx)
}

// ExternalSecretStatusPtrInput is an input type that accepts ExternalSecretStatusArgs, ExternalSecretStatusPtr and ExternalSecretStatusPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusPtrInput` via:
//
//	        ExternalSecretStatusArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput
	ToExternalSecretStatusPtrOutputWithContext(context.Context) ExternalSecretStatusPtrOutput
}

type externalSecretStatusPtrType ExternalSecretStatusArgs

func ExternalSecretStatusPtr(v *ExternalSecretStatusArgs) ExternalSecretStatusPtrInput {
	return (*externalSecretStatusPtrType)(v)
}

func (*externalSecretStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatus)(nil)).Elem()
}

func (i *externalSecretStatusPtrType) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return i.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusPtrType) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusPtrOutput)
}

type ExternalSecretStatusOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatus)(nil)).Elem()
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusOutput() ExternalSecretStatusOutput {
	return o
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusOutputWithContext(ctx context.Context) ExternalSecretStatusOutput {
	return o
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return o.ToExternalSecretStatusPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusOutput) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatus) *ExternalSecretStatus {
		return &v
	}).(ExternalSecretStatusPtrOutput)
}

func (o ExternalSecretStatusOutput) Binding() ExternalSecretStatusBindingPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *ExternalSecretStatusBinding { return v.Binding }).(ExternalSecretStatusBindingPtrOutput)
}

func (o ExternalSecretStatusOutput) Conditions() ExternalSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v ExternalSecretStatus) []ExternalSecretStatusConditions { return v.Conditions }).(ExternalSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatus) *string { return v.SyncedResourceVersion }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatus)(nil)).Elem()
}

func (o ExternalSecretStatusPtrOutput) ToExternalSecretStatusPtrOutput() ExternalSecretStatusPtrOutput {
	return o
}

func (o ExternalSecretStatusPtrOutput) ToExternalSecretStatusPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPtrOutput {
	return o
}

func (o ExternalSecretStatusPtrOutput) Elem() ExternalSecretStatusOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) ExternalSecretStatus {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatus
		return ret
	}).(ExternalSecretStatusOutput)
}

func (o ExternalSecretStatusPtrOutput) Binding() ExternalSecretStatusBindingPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *ExternalSecretStatusBinding {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(ExternalSecretStatusBindingPtrOutput)
}

func (o ExternalSecretStatusPtrOutput) Conditions() ExternalSecretStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) []ExternalSecretStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ExternalSecretStatusConditionsArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusPtrOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusPtrOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatus) *string {
		if v == nil {
			return nil
		}
		return v.SyncedResourceVersion
	}).(pulumi.StringPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBinding struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// ExternalSecretStatusBindingInput is an input type that accepts ExternalSecretStatusBindingArgs and ExternalSecretStatusBindingOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingInput` via:
//
//	ExternalSecretStatusBindingArgs{...}
type ExternalSecretStatusBindingInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput
	ToExternalSecretStatusBindingOutputWithContext(context.Context) ExternalSecretStatusBindingOutput
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExternalSecretStatusBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBinding)(nil)).Elem()
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput {
	return i.ToExternalSecretStatusBindingOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingOutputWithContext(ctx context.Context) ExternalSecretStatusBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingOutput)
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return i.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingArgs) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingOutput).ToExternalSecretStatusBindingPtrOutputWithContext(ctx)
}

// ExternalSecretStatusBindingPtrInput is an input type that accepts ExternalSecretStatusBindingArgs, ExternalSecretStatusBindingPtr and ExternalSecretStatusBindingPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingPtrInput` via:
//
//	        ExternalSecretStatusBindingArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusBindingPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput
	ToExternalSecretStatusBindingPtrOutputWithContext(context.Context) ExternalSecretStatusBindingPtrOutput
}

type externalSecretStatusBindingPtrType ExternalSecretStatusBindingArgs

func ExternalSecretStatusBindingPtr(v *ExternalSecretStatusBindingArgs) ExternalSecretStatusBindingPtrInput {
	return (*externalSecretStatusBindingPtrType)(v)
}

func (*externalSecretStatusBindingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBinding)(nil)).Elem()
}

func (i *externalSecretStatusBindingPtrType) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return i.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusBindingPtrType) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBinding)(nil)).Elem()
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingOutput() ExternalSecretStatusBindingOutput {
	return o
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingOutputWithContext(ctx context.Context) ExternalSecretStatusBindingOutput {
	return o
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return o.ToExternalSecretStatusBindingPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusBindingOutput) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatusBinding) *ExternalSecretStatusBinding {
		return &v
	}).(ExternalSecretStatusBindingPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusBinding) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusBindingPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBinding)(nil)).Elem()
}

func (o ExternalSecretStatusBindingPtrOutput) ToExternalSecretStatusBindingPtrOutput() ExternalSecretStatusBindingPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPtrOutput) ToExternalSecretStatusBindingPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPtrOutput) Elem() ExternalSecretStatusBindingOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBinding) ExternalSecretStatusBinding {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatusBinding
		return ret
	}).(ExternalSecretStatusBindingOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBinding) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingPatch struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// ExternalSecretStatusBindingPatchInput is an input type that accepts ExternalSecretStatusBindingPatchArgs and ExternalSecretStatusBindingPatchOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingPatchInput` via:
//
//	ExternalSecretStatusBindingPatchArgs{...}
type ExternalSecretStatusBindingPatchInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingPatchOutput() ExternalSecretStatusBindingPatchOutput
	ToExternalSecretStatusBindingPatchOutputWithContext(context.Context) ExternalSecretStatusBindingPatchOutput
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingPatchArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExternalSecretStatusBindingPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBindingPatch)(nil)).Elem()
}

func (i ExternalSecretStatusBindingPatchArgs) ToExternalSecretStatusBindingPatchOutput() ExternalSecretStatusBindingPatchOutput {
	return i.ToExternalSecretStatusBindingPatchOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingPatchArgs) ToExternalSecretStatusBindingPatchOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingPatchOutput)
}

func (i ExternalSecretStatusBindingPatchArgs) ToExternalSecretStatusBindingPatchPtrOutput() ExternalSecretStatusBindingPatchPtrOutput {
	return i.ToExternalSecretStatusBindingPatchPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusBindingPatchArgs) ToExternalSecretStatusBindingPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingPatchOutput).ToExternalSecretStatusBindingPatchPtrOutputWithContext(ctx)
}

// ExternalSecretStatusBindingPatchPtrInput is an input type that accepts ExternalSecretStatusBindingPatchArgs, ExternalSecretStatusBindingPatchPtr and ExternalSecretStatusBindingPatchPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusBindingPatchPtrInput` via:
//
//	        ExternalSecretStatusBindingPatchArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusBindingPatchPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusBindingPatchPtrOutput() ExternalSecretStatusBindingPatchPtrOutput
	ToExternalSecretStatusBindingPatchPtrOutputWithContext(context.Context) ExternalSecretStatusBindingPatchPtrOutput
}

type externalSecretStatusBindingPatchPtrType ExternalSecretStatusBindingPatchArgs

func ExternalSecretStatusBindingPatchPtr(v *ExternalSecretStatusBindingPatchArgs) ExternalSecretStatusBindingPatchPtrInput {
	return (*externalSecretStatusBindingPatchPtrType)(v)
}

func (*externalSecretStatusBindingPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBindingPatch)(nil)).Elem()
}

func (i *externalSecretStatusBindingPatchPtrType) ToExternalSecretStatusBindingPatchPtrOutput() ExternalSecretStatusBindingPatchPtrOutput {
	return i.ToExternalSecretStatusBindingPatchPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusBindingPatchPtrType) ToExternalSecretStatusBindingPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusBindingPatchPtrOutput)
}

// Binding represents a servicebinding.io Provisioned Service reference to the secret
type ExternalSecretStatusBindingPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusBindingPatch)(nil)).Elem()
}

func (o ExternalSecretStatusBindingPatchOutput) ToExternalSecretStatusBindingPatchOutput() ExternalSecretStatusBindingPatchOutput {
	return o
}

func (o ExternalSecretStatusBindingPatchOutput) ToExternalSecretStatusBindingPatchOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchOutput {
	return o
}

func (o ExternalSecretStatusBindingPatchOutput) ToExternalSecretStatusBindingPatchPtrOutput() ExternalSecretStatusBindingPatchPtrOutput {
	return o.ToExternalSecretStatusBindingPatchPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusBindingPatchOutput) ToExternalSecretStatusBindingPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatusBindingPatch) *ExternalSecretStatusBindingPatch {
		return &v
	}).(ExternalSecretStatusBindingPatchPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusBindingPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusBindingPatchPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusBindingPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusBindingPatch)(nil)).Elem()
}

func (o ExternalSecretStatusBindingPatchPtrOutput) ToExternalSecretStatusBindingPatchPtrOutput() ExternalSecretStatusBindingPatchPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPatchPtrOutput) ToExternalSecretStatusBindingPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusBindingPatchPtrOutput {
	return o
}

func (o ExternalSecretStatusBindingPatchPtrOutput) Elem() ExternalSecretStatusBindingPatchOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBindingPatch) ExternalSecretStatusBindingPatch {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatusBindingPatch
		return ret
	}).(ExternalSecretStatusBindingPatchOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o ExternalSecretStatusBindingPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusBindingPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             *string `pulumi:"status"`
	Type               *string `pulumi:"type"`
}

// ExternalSecretStatusConditionsInput is an input type that accepts ExternalSecretStatusConditionsArgs and ExternalSecretStatusConditionsOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsInput` via:
//
//	ExternalSecretStatusConditionsArgs{...}
type ExternalSecretStatusConditionsInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput
	ToExternalSecretStatusConditionsOutputWithContext(context.Context) ExternalSecretStatusConditionsOutput
}

type ExternalSecretStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
}

func (ExternalSecretStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditions)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsArgs) ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput {
	return i.ToExternalSecretStatusConditionsOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsArgs) ToExternalSecretStatusConditionsOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsOutput)
}

// ExternalSecretStatusConditionsArrayInput is an input type that accepts ExternalSecretStatusConditionsArray and ExternalSecretStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsArrayInput` via:
//
//	ExternalSecretStatusConditionsArray{ ExternalSecretStatusConditionsArgs{...} }
type ExternalSecretStatusConditionsArrayInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput
	ToExternalSecretStatusConditionsArrayOutputWithContext(context.Context) ExternalSecretStatusConditionsArrayOutput
}

type ExternalSecretStatusConditionsArray []ExternalSecretStatusConditionsInput

func (ExternalSecretStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditions)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsArray) ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput {
	return i.ToExternalSecretStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsArray) ToExternalSecretStatusConditionsArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsArrayOutput)
}

type ExternalSecretStatusConditionsOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditions)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsOutput) ToExternalSecretStatusConditionsOutput() ExternalSecretStatusConditionsOutput {
	return o
}

func (o ExternalSecretStatusConditionsOutput) ToExternalSecretStatusConditionsOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsOutput {
	return o
}

func (o ExternalSecretStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditions)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsArrayOutput) ToExternalSecretStatusConditionsArrayOutput() ExternalSecretStatusConditionsArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsArrayOutput) ToExternalSecretStatusConditionsArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsArrayOutput) Index(i pulumi.IntInput) ExternalSecretStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretStatusConditions {
		return vs[0].([]ExternalSecretStatusConditions)[vs[1].(int)]
	}).(ExternalSecretStatusConditionsOutput)
}

type ExternalSecretStatusConditionsPatch struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             *string `pulumi:"status"`
	Type               *string `pulumi:"type"`
}

// ExternalSecretStatusConditionsPatchInput is an input type that accepts ExternalSecretStatusConditionsPatchArgs and ExternalSecretStatusConditionsPatchOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsPatchInput` via:
//
//	ExternalSecretStatusConditionsPatchArgs{...}
type ExternalSecretStatusConditionsPatchInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsPatchOutput() ExternalSecretStatusConditionsPatchOutput
	ToExternalSecretStatusConditionsPatchOutputWithContext(context.Context) ExternalSecretStatusConditionsPatchOutput
}

type ExternalSecretStatusConditionsPatchArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
}

func (ExternalSecretStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditionsPatch)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsPatchArgs) ToExternalSecretStatusConditionsPatchOutput() ExternalSecretStatusConditionsPatchOutput {
	return i.ToExternalSecretStatusConditionsPatchOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsPatchArgs) ToExternalSecretStatusConditionsPatchOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsPatchOutput)
}

// ExternalSecretStatusConditionsPatchArrayInput is an input type that accepts ExternalSecretStatusConditionsPatchArray and ExternalSecretStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `ExternalSecretStatusConditionsPatchArrayInput` via:
//
//	ExternalSecretStatusConditionsPatchArray{ ExternalSecretStatusConditionsPatchArgs{...} }
type ExternalSecretStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToExternalSecretStatusConditionsPatchArrayOutput() ExternalSecretStatusConditionsPatchArrayOutput
	ToExternalSecretStatusConditionsPatchArrayOutputWithContext(context.Context) ExternalSecretStatusConditionsPatchArrayOutput
}

type ExternalSecretStatusConditionsPatchArray []ExternalSecretStatusConditionsPatchInput

func (ExternalSecretStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditionsPatch)(nil)).Elem()
}

func (i ExternalSecretStatusConditionsPatchArray) ToExternalSecretStatusConditionsPatchArrayOutput() ExternalSecretStatusConditionsPatchArrayOutput {
	return i.ToExternalSecretStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i ExternalSecretStatusConditionsPatchArray) ToExternalSecretStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusConditionsPatchArrayOutput)
}

type ExternalSecretStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusConditionsPatch)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsPatchOutput) ToExternalSecretStatusConditionsPatchOutput() ExternalSecretStatusConditionsPatchOutput {
	return o
}

func (o ExternalSecretStatusConditionsPatchOutput) ToExternalSecretStatusConditionsPatchOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsPatchOutput {
	return o
}

func (o ExternalSecretStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ExternalSecretStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExternalSecretStatusConditionsPatch)(nil)).Elem()
}

func (o ExternalSecretStatusConditionsPatchArrayOutput) ToExternalSecretStatusConditionsPatchArrayOutput() ExternalSecretStatusConditionsPatchArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsPatchArrayOutput) ToExternalSecretStatusConditionsPatchArrayOutputWithContext(ctx context.Context) ExternalSecretStatusConditionsPatchArrayOutput {
	return o
}

func (o ExternalSecretStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) ExternalSecretStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExternalSecretStatusConditionsPatch {
		return vs[0].([]ExternalSecretStatusConditionsPatch)[vs[1].(int)]
	}).(ExternalSecretStatusConditionsPatchOutput)
}

type ExternalSecretStatusPatch struct {
	Binding    *ExternalSecretStatusBindingPatch     `pulumi:"binding"`
	Conditions []ExternalSecretStatusConditionsPatch `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime *string `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion *string `pulumi:"syncedResourceVersion"`
}

// ExternalSecretStatusPatchInput is an input type that accepts ExternalSecretStatusPatchArgs and ExternalSecretStatusPatchOutput values.
// You can construct a concrete instance of `ExternalSecretStatusPatchInput` via:
//
//	ExternalSecretStatusPatchArgs{...}
type ExternalSecretStatusPatchInput interface {
	pulumi.Input

	ToExternalSecretStatusPatchOutput() ExternalSecretStatusPatchOutput
	ToExternalSecretStatusPatchOutputWithContext(context.Context) ExternalSecretStatusPatchOutput
}

type ExternalSecretStatusPatchArgs struct {
	Binding    ExternalSecretStatusBindingPatchPtrInput      `pulumi:"binding"`
	Conditions ExternalSecretStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// refreshTime is the time and date the external secret was fetched and
	// the target secret updated
	RefreshTime pulumi.StringPtrInput `pulumi:"refreshTime"`
	// SyncedResourceVersion keeps track of the last synced version
	SyncedResourceVersion pulumi.StringPtrInput `pulumi:"syncedResourceVersion"`
}

func (ExternalSecretStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusPatch)(nil)).Elem()
}

func (i ExternalSecretStatusPatchArgs) ToExternalSecretStatusPatchOutput() ExternalSecretStatusPatchOutput {
	return i.ToExternalSecretStatusPatchOutputWithContext(context.Background())
}

func (i ExternalSecretStatusPatchArgs) ToExternalSecretStatusPatchOutputWithContext(ctx context.Context) ExternalSecretStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusPatchOutput)
}

func (i ExternalSecretStatusPatchArgs) ToExternalSecretStatusPatchPtrOutput() ExternalSecretStatusPatchPtrOutput {
	return i.ToExternalSecretStatusPatchPtrOutputWithContext(context.Background())
}

func (i ExternalSecretStatusPatchArgs) ToExternalSecretStatusPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusPatchOutput).ToExternalSecretStatusPatchPtrOutputWithContext(ctx)
}

// ExternalSecretStatusPatchPtrInput is an input type that accepts ExternalSecretStatusPatchArgs, ExternalSecretStatusPatchPtr and ExternalSecretStatusPatchPtrOutput values.
// You can construct a concrete instance of `ExternalSecretStatusPatchPtrInput` via:
//
//	        ExternalSecretStatusPatchArgs{...}
//
//	or:
//
//	        nil
type ExternalSecretStatusPatchPtrInput interface {
	pulumi.Input

	ToExternalSecretStatusPatchPtrOutput() ExternalSecretStatusPatchPtrOutput
	ToExternalSecretStatusPatchPtrOutputWithContext(context.Context) ExternalSecretStatusPatchPtrOutput
}

type externalSecretStatusPatchPtrType ExternalSecretStatusPatchArgs

func ExternalSecretStatusPatchPtr(v *ExternalSecretStatusPatchArgs) ExternalSecretStatusPatchPtrInput {
	return (*externalSecretStatusPatchPtrType)(v)
}

func (*externalSecretStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusPatch)(nil)).Elem()
}

func (i *externalSecretStatusPatchPtrType) ToExternalSecretStatusPatchPtrOutput() ExternalSecretStatusPatchPtrOutput {
	return i.ToExternalSecretStatusPatchPtrOutputWithContext(context.Background())
}

func (i *externalSecretStatusPatchPtrType) ToExternalSecretStatusPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalSecretStatusPatchPtrOutput)
}

type ExternalSecretStatusPatchOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalSecretStatusPatch)(nil)).Elem()
}

func (o ExternalSecretStatusPatchOutput) ToExternalSecretStatusPatchOutput() ExternalSecretStatusPatchOutput {
	return o
}

func (o ExternalSecretStatusPatchOutput) ToExternalSecretStatusPatchOutputWithContext(ctx context.Context) ExternalSecretStatusPatchOutput {
	return o
}

func (o ExternalSecretStatusPatchOutput) ToExternalSecretStatusPatchPtrOutput() ExternalSecretStatusPatchPtrOutput {
	return o.ToExternalSecretStatusPatchPtrOutputWithContext(context.Background())
}

func (o ExternalSecretStatusPatchOutput) ToExternalSecretStatusPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalSecretStatusPatch) *ExternalSecretStatusPatch {
		return &v
	}).(ExternalSecretStatusPatchPtrOutput)
}

func (o ExternalSecretStatusPatchOutput) Binding() ExternalSecretStatusBindingPatchPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusPatch) *ExternalSecretStatusBindingPatch { return v.Binding }).(ExternalSecretStatusBindingPatchPtrOutput)
}

func (o ExternalSecretStatusPatchOutput) Conditions() ExternalSecretStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v ExternalSecretStatusPatch) []ExternalSecretStatusConditionsPatch { return v.Conditions }).(ExternalSecretStatusConditionsPatchArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusPatchOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusPatch) *string { return v.RefreshTime }).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusPatchOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalSecretStatusPatch) *string { return v.SyncedResourceVersion }).(pulumi.StringPtrOutput)
}

type ExternalSecretStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (ExternalSecretStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalSecretStatusPatch)(nil)).Elem()
}

func (o ExternalSecretStatusPatchPtrOutput) ToExternalSecretStatusPatchPtrOutput() ExternalSecretStatusPatchPtrOutput {
	return o
}

func (o ExternalSecretStatusPatchPtrOutput) ToExternalSecretStatusPatchPtrOutputWithContext(ctx context.Context) ExternalSecretStatusPatchPtrOutput {
	return o
}

func (o ExternalSecretStatusPatchPtrOutput) Elem() ExternalSecretStatusPatchOutput {
	return o.ApplyT(func(v *ExternalSecretStatusPatch) ExternalSecretStatusPatch {
		if v != nil {
			return *v
		}
		var ret ExternalSecretStatusPatch
		return ret
	}).(ExternalSecretStatusPatchOutput)
}

func (o ExternalSecretStatusPatchPtrOutput) Binding() ExternalSecretStatusBindingPatchPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusPatch) *ExternalSecretStatusBindingPatch {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(ExternalSecretStatusBindingPatchPtrOutput)
}

func (o ExternalSecretStatusPatchPtrOutput) Conditions() ExternalSecretStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *ExternalSecretStatusPatch) []ExternalSecretStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ExternalSecretStatusConditionsPatchArrayOutput)
}

// refreshTime is the time and date the external secret was fetched and
// the target secret updated
func (o ExternalSecretStatusPatchPtrOutput) RefreshTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.StringPtrOutput)
}

// SyncedResourceVersion keeps track of the last synced version
func (o ExternalSecretStatusPatchPtrOutput) SyncedResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalSecretStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.SyncedResourceVersion
	}).(pulumi.StringPtrOutput)
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStoreType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec     *SecretStoreSpec   `pulumi:"spec"`
	Status   *SecretStoreStatus `pulumi:"status"`
}

// SecretStoreTypeInput is an input type that accepts SecretStoreTypeArgs and SecretStoreTypeOutput values.
// You can construct a concrete instance of `SecretStoreTypeInput` via:
//
//	SecretStoreTypeArgs{...}
type SecretStoreTypeInput interface {
	pulumi.Input

	ToSecretStoreTypeOutput() SecretStoreTypeOutput
	ToSecretStoreTypeOutputWithContext(context.Context) SecretStoreTypeOutput
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStoreTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec     SecretStoreSpecPtrInput   `pulumi:"spec"`
	Status   SecretStoreStatusPtrInput `pulumi:"status"`
}

func (SecretStoreTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (i SecretStoreTypeArgs) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return i.ToSecretStoreTypeOutputWithContext(context.Background())
}

func (i SecretStoreTypeArgs) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreTypeOutput)
}

// SecretStoreTypeArrayInput is an input type that accepts SecretStoreTypeArray and SecretStoreTypeArrayOutput values.
// You can construct a concrete instance of `SecretStoreTypeArrayInput` via:
//
//	SecretStoreTypeArray{ SecretStoreTypeArgs{...} }
type SecretStoreTypeArrayInput interface {
	pulumi.Input

	ToSecretStoreTypeArrayOutput() SecretStoreTypeArrayOutput
	ToSecretStoreTypeArrayOutputWithContext(context.Context) SecretStoreTypeArrayOutput
}

type SecretStoreTypeArray []SecretStoreTypeInput

func (SecretStoreTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreType)(nil)).Elem()
}

func (i SecretStoreTypeArray) ToSecretStoreTypeArrayOutput() SecretStoreTypeArrayOutput {
	return i.ToSecretStoreTypeArrayOutputWithContext(context.Background())
}

func (i SecretStoreTypeArray) ToSecretStoreTypeArrayOutputWithContext(ctx context.Context) SecretStoreTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreTypeArrayOutput)
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStoreTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutput() SecretStoreTypeOutput {
	return o
}

func (o SecretStoreTypeOutput) ToSecretStoreTypeOutputWithContext(ctx context.Context) SecretStoreTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SecretStoreTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStoreTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SecretStoreTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v SecretStoreType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o SecretStoreTypeOutput) Spec() SecretStoreSpecPtrOutput {
	return o.ApplyT(func(v SecretStoreType) *SecretStoreSpec { return v.Spec }).(SecretStoreSpecPtrOutput)
}

func (o SecretStoreTypeOutput) Status() SecretStoreStatusPtrOutput {
	return o.ApplyT(func(v SecretStoreType) *SecretStoreStatus { return v.Status }).(SecretStoreStatusPtrOutput)
}

type SecretStoreTypeArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreType)(nil)).Elem()
}

func (o SecretStoreTypeArrayOutput) ToSecretStoreTypeArrayOutput() SecretStoreTypeArrayOutput {
	return o
}

func (o SecretStoreTypeArrayOutput) ToSecretStoreTypeArrayOutputWithContext(ctx context.Context) SecretStoreTypeArrayOutput {
	return o
}

func (o SecretStoreTypeArrayOutput) Index(i pulumi.IntInput) SecretStoreTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreType {
		return vs[0].([]SecretStoreType)[vs[1].(int)]
	}).(SecretStoreTypeOutput)
}

// SecretStoreList is a list of SecretStore
type SecretStoreListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []SecretStoreType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// SecretStoreListTypeInput is an input type that accepts SecretStoreListTypeArgs and SecretStoreListTypeOutput values.
// You can construct a concrete instance of `SecretStoreListTypeInput` via:
//
//	SecretStoreListTypeArgs{...}
type SecretStoreListTypeInput interface {
	pulumi.Input

	ToSecretStoreListTypeOutput() SecretStoreListTypeOutput
	ToSecretStoreListTypeOutputWithContext(context.Context) SecretStoreListTypeOutput
}

// SecretStoreList is a list of SecretStore
type SecretStoreListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SecretStoreTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (SecretStoreListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreListType)(nil)).Elem()
}

func (i SecretStoreListTypeArgs) ToSecretStoreListTypeOutput() SecretStoreListTypeOutput {
	return i.ToSecretStoreListTypeOutputWithContext(context.Background())
}

func (i SecretStoreListTypeArgs) ToSecretStoreListTypeOutputWithContext(ctx context.Context) SecretStoreListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreListTypeOutput)
}

// SecretStoreList is a list of SecretStore
type SecretStoreListTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreListType)(nil)).Elem()
}

func (o SecretStoreListTypeOutput) ToSecretStoreListTypeOutput() SecretStoreListTypeOutput {
	return o
}

func (o SecretStoreListTypeOutput) ToSecretStoreListTypeOutputWithContext(ctx context.Context) SecretStoreListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SecretStoreListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of secretstores. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o SecretStoreListTypeOutput) Items() SecretStoreTypeArrayOutput {
	return o.ApplyT(func(v SecretStoreListType) []SecretStoreType { return v.Items }).(SecretStoreTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStoreListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStoreListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v SecretStoreListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStorePatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	Spec     *SecretStoreSpecPatch   `pulumi:"spec"`
	Status   *SecretStoreStatusPatch `pulumi:"status"`
}

// SecretStorePatchTypeInput is an input type that accepts SecretStorePatchTypeArgs and SecretStorePatchTypeOutput values.
// You can construct a concrete instance of `SecretStorePatchTypeInput` via:
//
//	SecretStorePatchTypeArgs{...}
type SecretStorePatchTypeInput interface {
	pulumi.Input

	ToSecretStorePatchTypeOutput() SecretStorePatchTypeOutput
	ToSecretStorePatchTypeOutputWithContext(context.Context) SecretStorePatchTypeOutput
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStorePatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	Spec     SecretStoreSpecPatchPtrInput   `pulumi:"spec"`
	Status   SecretStoreStatusPatchPtrInput `pulumi:"status"`
}

func (SecretStorePatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStorePatchType)(nil)).Elem()
}

func (i SecretStorePatchTypeArgs) ToSecretStorePatchTypeOutput() SecretStorePatchTypeOutput {
	return i.ToSecretStorePatchTypeOutputWithContext(context.Background())
}

func (i SecretStorePatchTypeArgs) ToSecretStorePatchTypeOutputWithContext(ctx context.Context) SecretStorePatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStorePatchTypeOutput)
}

// SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
type SecretStorePatchTypeOutput struct{ *pulumi.OutputState }

func (SecretStorePatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStorePatchType)(nil)).Elem()
}

func (o SecretStorePatchTypeOutput) ToSecretStorePatchTypeOutput() SecretStorePatchTypeOutput {
	return o
}

func (o SecretStorePatchTypeOutput) ToSecretStorePatchTypeOutputWithContext(ctx context.Context) SecretStorePatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SecretStorePatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStorePatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SecretStorePatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStorePatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SecretStorePatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v SecretStorePatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o SecretStorePatchTypeOutput) Spec() SecretStoreSpecPatchPtrOutput {
	return o.ApplyT(func(v SecretStorePatchType) *SecretStoreSpecPatch { return v.Spec }).(SecretStoreSpecPatchPtrOutput)
}

func (o SecretStorePatchTypeOutput) Status() SecretStoreStatusPatchPtrOutput {
	return o.ApplyT(func(v SecretStorePatchType) *SecretStoreStatusPatch { return v.Status }).(SecretStoreStatusPatchPtrOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpec struct {
	// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
	Conditions []SecretStoreSpecConditions `pulumi:"conditions"`
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller *string                  `pulumi:"controller"`
	Provider   *SecretStoreSpecProvider `pulumi:"provider"`
	// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
	RefreshInterval *int                          `pulumi:"refreshInterval"`
	RetrySettings   *SecretStoreSpecRetrySettings `pulumi:"retrySettings"`
}

// SecretStoreSpecInput is an input type that accepts SecretStoreSpecArgs and SecretStoreSpecOutput values.
// You can construct a concrete instance of `SecretStoreSpecInput` via:
//
//	SecretStoreSpecArgs{...}
type SecretStoreSpecInput interface {
	pulumi.Input

	ToSecretStoreSpecOutput() SecretStoreSpecOutput
	ToSecretStoreSpecOutputWithContext(context.Context) SecretStoreSpecOutput
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecArgs struct {
	// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
	Conditions SecretStoreSpecConditionsArrayInput `pulumi:"conditions"`
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller pulumi.StringPtrInput           `pulumi:"controller"`
	Provider   SecretStoreSpecProviderPtrInput `pulumi:"provider"`
	// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
	RefreshInterval pulumi.IntPtrInput                   `pulumi:"refreshInterval"`
	RetrySettings   SecretStoreSpecRetrySettingsPtrInput `pulumi:"retrySettings"`
}

func (SecretStoreSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpec)(nil)).Elem()
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecOutput() SecretStoreSpecOutput {
	return i.ToSecretStoreSpecOutputWithContext(context.Background())
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecOutputWithContext(ctx context.Context) SecretStoreSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecOutput)
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return i.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecArgs) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecOutput).ToSecretStoreSpecPtrOutputWithContext(ctx)
}

// SecretStoreSpecPtrInput is an input type that accepts SecretStoreSpecArgs, SecretStoreSpecPtr and SecretStoreSpecPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecPtrInput` via:
//
//	        SecretStoreSpecArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput
	ToSecretStoreSpecPtrOutputWithContext(context.Context) SecretStoreSpecPtrOutput
}

type secretStoreSpecPtrType SecretStoreSpecArgs

func SecretStoreSpecPtr(v *SecretStoreSpecArgs) SecretStoreSpecPtrInput {
	return (*secretStoreSpecPtrType)(v)
}

func (*secretStoreSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpec)(nil)).Elem()
}

func (i *secretStoreSpecPtrType) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return i.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecPtrType) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecPtrOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpec)(nil)).Elem()
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecOutput() SecretStoreSpecOutput {
	return o
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecOutputWithContext(ctx context.Context) SecretStoreSpecOutput {
	return o
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return o.ToSecretStoreSpecPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecOutput) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpec) *SecretStoreSpec {
		return &v
	}).(SecretStoreSpecPtrOutput)
}

// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
func (o SecretStoreSpecOutput) Conditions() SecretStoreSpecConditionsArrayOutput {
	return o.ApplyT(func(v SecretStoreSpec) []SecretStoreSpecConditions { return v.Conditions }).(SecretStoreSpecConditionsArrayOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *string { return v.Controller }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecOutput) Provider() SecretStoreSpecProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *SecretStoreSpecProvider { return v.Provider }).(SecretStoreSpecProviderPtrOutput)
}

// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
func (o SecretStoreSpecOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *int { return v.RefreshInterval }).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecOutput) RetrySettings() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpec) *SecretStoreSpecRetrySettings { return v.RetrySettings }).(SecretStoreSpecRetrySettingsPtrOutput)
}

type SecretStoreSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpec)(nil)).Elem()
}

func (o SecretStoreSpecPtrOutput) ToSecretStoreSpecPtrOutput() SecretStoreSpecPtrOutput {
	return o
}

func (o SecretStoreSpecPtrOutput) ToSecretStoreSpecPtrOutputWithContext(ctx context.Context) SecretStoreSpecPtrOutput {
	return o
}

func (o SecretStoreSpecPtrOutput) Elem() SecretStoreSpecOutput {
	return o.ApplyT(func(v *SecretStoreSpec) SecretStoreSpec {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpec
		return ret
	}).(SecretStoreSpecOutput)
}

// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
func (o SecretStoreSpecPtrOutput) Conditions() SecretStoreSpecConditionsArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpec) []SecretStoreSpecConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SecretStoreSpecConditionsArrayOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecPtrOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *string {
		if v == nil {
			return nil
		}
		return v.Controller
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecPtrOutput) Provider() SecretStoreSpecProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *SecretStoreSpecProvider {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(SecretStoreSpecProviderPtrOutput)
}

// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
func (o SecretStoreSpecPtrOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *int {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecPtrOutput) RetrySettings() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpec) *SecretStoreSpecRetrySettings {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(SecretStoreSpecRetrySettingsPtrOutput)
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditions struct {
	// Choose namespaces by using regex matching
	NamespaceRegexes  []string                                    `pulumi:"namespaceRegexes"`
	NamespaceSelector *SecretStoreSpecConditionsNamespaceSelector `pulumi:"namespaceSelector"`
	// Choose namespaces by name
	Namespaces []string `pulumi:"namespaces"`
}

// SecretStoreSpecConditionsInput is an input type that accepts SecretStoreSpecConditionsArgs and SecretStoreSpecConditionsOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsInput` via:
//
//	SecretStoreSpecConditionsArgs{...}
type SecretStoreSpecConditionsInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsOutput() SecretStoreSpecConditionsOutput
	ToSecretStoreSpecConditionsOutputWithContext(context.Context) SecretStoreSpecConditionsOutput
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditionsArgs struct {
	// Choose namespaces by using regex matching
	NamespaceRegexes  pulumi.StringArrayInput                            `pulumi:"namespaceRegexes"`
	NamespaceSelector SecretStoreSpecConditionsNamespaceSelectorPtrInput `pulumi:"namespaceSelector"`
	// Choose namespaces by name
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
}

func (SecretStoreSpecConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditions)(nil)).Elem()
}

func (i SecretStoreSpecConditionsArgs) ToSecretStoreSpecConditionsOutput() SecretStoreSpecConditionsOutput {
	return i.ToSecretStoreSpecConditionsOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsArgs) ToSecretStoreSpecConditionsOutputWithContext(ctx context.Context) SecretStoreSpecConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsOutput)
}

// SecretStoreSpecConditionsArrayInput is an input type that accepts SecretStoreSpecConditionsArray and SecretStoreSpecConditionsArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsArrayInput` via:
//
//	SecretStoreSpecConditionsArray{ SecretStoreSpecConditionsArgs{...} }
type SecretStoreSpecConditionsArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsArrayOutput() SecretStoreSpecConditionsArrayOutput
	ToSecretStoreSpecConditionsArrayOutputWithContext(context.Context) SecretStoreSpecConditionsArrayOutput
}

type SecretStoreSpecConditionsArray []SecretStoreSpecConditionsInput

func (SecretStoreSpecConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditions)(nil)).Elem()
}

func (i SecretStoreSpecConditionsArray) ToSecretStoreSpecConditionsArrayOutput() SecretStoreSpecConditionsArrayOutput {
	return i.ToSecretStoreSpecConditionsArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsArray) ToSecretStoreSpecConditionsArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsArrayOutput)
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditionsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditions)(nil)).Elem()
}

func (o SecretStoreSpecConditionsOutput) ToSecretStoreSpecConditionsOutput() SecretStoreSpecConditionsOutput {
	return o
}

func (o SecretStoreSpecConditionsOutput) ToSecretStoreSpecConditionsOutputWithContext(ctx context.Context) SecretStoreSpecConditionsOutput {
	return o
}

// Choose namespaces by using regex matching
func (o SecretStoreSpecConditionsOutput) NamespaceRegexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditions) []string { return v.NamespaceRegexes }).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecConditionsOutput) NamespaceSelector() SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditions) *SecretStoreSpecConditionsNamespaceSelector {
		return v.NamespaceSelector
	}).(SecretStoreSpecConditionsNamespaceSelectorPtrOutput)
}

// Choose namespaces by name
func (o SecretStoreSpecConditionsOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditions) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecConditionsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditions)(nil)).Elem()
}

func (o SecretStoreSpecConditionsArrayOutput) ToSecretStoreSpecConditionsArrayOutput() SecretStoreSpecConditionsArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsArrayOutput) ToSecretStoreSpecConditionsArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecConditions {
		return vs[0].([]SecretStoreSpecConditions)[vs[1].(int)]
	}).(SecretStoreSpecConditionsOutput)
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []SecretStoreSpecConditionsNamespaceSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// SecretStoreSpecConditionsNamespaceSelectorInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorArgs and SecretStoreSpecConditionsNamespaceSelectorOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorArgs{...}
type SecretStoreSpecConditionsNamespaceSelectorInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorOutput() SecretStoreSpecConditionsNamespaceSelectorOutput
	ToSecretStoreSpecConditionsNamespaceSelectorOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorOutput
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (SecretStoreSpecConditionsNamespaceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelector)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorArgs) ToSecretStoreSpecConditionsNamespaceSelectorOutput() SecretStoreSpecConditionsNamespaceSelectorOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorArgs) ToSecretStoreSpecConditionsNamespaceSelectorOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorOutput)
}

func (i SecretStoreSpecConditionsNamespaceSelectorArgs) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorArgs) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorOutput).ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(ctx)
}

// SecretStoreSpecConditionsNamespaceSelectorPtrInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorArgs, SecretStoreSpecConditionsNamespaceSelectorPtr and SecretStoreSpecConditionsNamespaceSelectorPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorPtrInput` via:
//
//	        SecretStoreSpecConditionsNamespaceSelectorArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecConditionsNamespaceSelectorPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPtrOutput
	ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorPtrOutput
}

type secretStoreSpecConditionsNamespaceSelectorPtrType SecretStoreSpecConditionsNamespaceSelectorArgs

func SecretStoreSpecConditionsNamespaceSelectorPtr(v *SecretStoreSpecConditionsNamespaceSelectorArgs) SecretStoreSpecConditionsNamespaceSelectorPtrInput {
	return (*secretStoreSpecConditionsNamespaceSelectorPtrType)(v)
}

func (*secretStoreSpecConditionsNamespaceSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecConditionsNamespaceSelector)(nil)).Elem()
}

func (i *secretStoreSpecConditionsNamespaceSelectorPtrType) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecConditionsNamespaceSelectorPtrType) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorPtrOutput)
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelectorOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelector)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorOutput) ToSecretStoreSpecConditionsNamespaceSelectorOutput() SecretStoreSpecConditionsNamespaceSelectorOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorOutput) ToSecretStoreSpecConditionsNamespaceSelectorOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorOutput) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return o.ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecConditionsNamespaceSelectorOutput) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecConditionsNamespaceSelector) *SecretStoreSpecConditionsNamespaceSelector {
		return &v
	}).(SecretStoreSpecConditionsNamespaceSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorOutput) MatchExpressions() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelector) []SecretStoreSpecConditionsNamespaceSelectorMatchExpressions {
		return v.MatchExpressions
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type SecretStoreSpecConditionsNamespaceSelectorPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecConditionsNamespaceSelector)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorPtrOutput) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPtrOutput) ToSecretStoreSpecConditionsNamespaceSelectorPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPtrOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPtrOutput) Elem() SecretStoreSpecConditionsNamespaceSelectorOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelector) SecretStoreSpecConditionsNamespaceSelector {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecConditionsNamespaceSelector
		return ret
	}).(SecretStoreSpecConditionsNamespaceSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPtrOutput) MatchExpressions() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelector) []SecretStoreSpecConditionsNamespaceSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs and SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs{...}
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput
	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput)
}

// SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray and SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray{ SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs{...} }
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput
	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput
}

type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray []SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsInput

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressions) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsNamespaceSelectorMatchExpressions)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecConditionsNamespaceSelectorMatchExpressions {
		return vs[0].([]SecretStoreSpecConditionsNamespaceSelectorMatchExpressions)[vs[1].(int)]
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch struct {
	// key is the label key that the selector applies to.
	Key *string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator *string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs and SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs{...}
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput
	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput)
}

// SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray and SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray{ SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs{...} }
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput
	ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput
}

type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray []SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchInput

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput {
	return o
}

// key is the label key that the selector applies to.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput) ToSecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch {
		return vs[0].([]SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput)
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelectorPatch struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// SecretStoreSpecConditionsNamespaceSelectorPatchInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorPatchArgs and SecretStoreSpecConditionsNamespaceSelectorPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorPatchInput` via:
//
//	SecretStoreSpecConditionsNamespaceSelectorPatchArgs{...}
type SecretStoreSpecConditionsNamespaceSelectorPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorPatchOutput() SecretStoreSpecConditionsNamespaceSelectorPatchOutput
	ToSecretStoreSpecConditionsNamespaceSelectorPatchOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchOutput
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelectorPatchArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (SecretStoreSpecConditionsNamespaceSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorPatch)(nil)).Elem()
}

func (i SecretStoreSpecConditionsNamespaceSelectorPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorPatchOutput() SecretStoreSpecConditionsNamespaceSelectorPatchOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorPatchOutput)
}

func (i SecretStoreSpecConditionsNamespaceSelectorPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsNamespaceSelectorPatchArgs) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorPatchOutput).ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput is an input type that accepts SecretStoreSpecConditionsNamespaceSelectorPatchArgs, SecretStoreSpecConditionsNamespaceSelectorPatchPtr and SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput` via:
//
//	        SecretStoreSpecConditionsNamespaceSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput
	ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput
}

type secretStoreSpecConditionsNamespaceSelectorPatchPtrType SecretStoreSpecConditionsNamespaceSelectorPatchArgs

func SecretStoreSpecConditionsNamespaceSelectorPatchPtr(v *SecretStoreSpecConditionsNamespaceSelectorPatchArgs) SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput {
	return (*secretStoreSpecConditionsNamespaceSelectorPatchPtrType)(v)
}

func (*secretStoreSpecConditionsNamespaceSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecConditionsNamespaceSelectorPatch)(nil)).Elem()
}

func (i *secretStoreSpecConditionsNamespaceSelectorPatchPtrType) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return i.ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecConditionsNamespaceSelectorPatchPtrType) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput)
}

// Choose namespace using a labelSelector
type SecretStoreSpecConditionsNamespaceSelectorPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchOutput() SecretStoreSpecConditionsNamespaceSelectorPatchOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return o.ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecConditionsNamespaceSelectorPatch) *SecretStoreSpecConditionsNamespaceSelectorPatch {
		return &v
	}).(SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) MatchExpressions() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorPatch) []SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsNamespaceSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecConditionsNamespaceSelectorPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) ToSecretStoreSpecConditionsNamespaceSelectorPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return o
}

func (o SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) Elem() SecretStoreSpecConditionsNamespaceSelectorPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelectorPatch) SecretStoreSpecConditionsNamespaceSelectorPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecConditionsNamespaceSelectorPatch
		return ret
	}).(SecretStoreSpecConditionsNamespaceSelectorPatchOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) MatchExpressions() SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelectorPatch) []SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecConditionsNamespaceSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditionsPatch struct {
	// Choose namespaces by using regex matching
	NamespaceRegexes  []string                                         `pulumi:"namespaceRegexes"`
	NamespaceSelector *SecretStoreSpecConditionsNamespaceSelectorPatch `pulumi:"namespaceSelector"`
	// Choose namespaces by name
	Namespaces []string `pulumi:"namespaces"`
}

// SecretStoreSpecConditionsPatchInput is an input type that accepts SecretStoreSpecConditionsPatchArgs and SecretStoreSpecConditionsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsPatchInput` via:
//
//	SecretStoreSpecConditionsPatchArgs{...}
type SecretStoreSpecConditionsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsPatchOutput() SecretStoreSpecConditionsPatchOutput
	ToSecretStoreSpecConditionsPatchOutputWithContext(context.Context) SecretStoreSpecConditionsPatchOutput
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditionsPatchArgs struct {
	// Choose namespaces by using regex matching
	NamespaceRegexes  pulumi.StringArrayInput                                 `pulumi:"namespaceRegexes"`
	NamespaceSelector SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput `pulumi:"namespaceSelector"`
	// Choose namespaces by name
	Namespaces pulumi.StringArrayInput `pulumi:"namespaces"`
}

func (SecretStoreSpecConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsPatch)(nil)).Elem()
}

func (i SecretStoreSpecConditionsPatchArgs) ToSecretStoreSpecConditionsPatchOutput() SecretStoreSpecConditionsPatchOutput {
	return i.ToSecretStoreSpecConditionsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsPatchArgs) ToSecretStoreSpecConditionsPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsPatchOutput)
}

// SecretStoreSpecConditionsPatchArrayInput is an input type that accepts SecretStoreSpecConditionsPatchArray and SecretStoreSpecConditionsPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecConditionsPatchArrayInput` via:
//
//	SecretStoreSpecConditionsPatchArray{ SecretStoreSpecConditionsPatchArgs{...} }
type SecretStoreSpecConditionsPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecConditionsPatchArrayOutput() SecretStoreSpecConditionsPatchArrayOutput
	ToSecretStoreSpecConditionsPatchArrayOutputWithContext(context.Context) SecretStoreSpecConditionsPatchArrayOutput
}

type SecretStoreSpecConditionsPatchArray []SecretStoreSpecConditionsPatchInput

func (SecretStoreSpecConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsPatch)(nil)).Elem()
}

func (i SecretStoreSpecConditionsPatchArray) ToSecretStoreSpecConditionsPatchArrayOutput() SecretStoreSpecConditionsPatchArrayOutput {
	return i.ToSecretStoreSpecConditionsPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecConditionsPatchArray) ToSecretStoreSpecConditionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecConditionsPatchArrayOutput)
}

// ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in
// for a ClusterSecretStore instance.
type SecretStoreSpecConditionsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecConditionsPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsPatchOutput) ToSecretStoreSpecConditionsPatchOutput() SecretStoreSpecConditionsPatchOutput {
	return o
}

func (o SecretStoreSpecConditionsPatchOutput) ToSecretStoreSpecConditionsPatchOutputWithContext(ctx context.Context) SecretStoreSpecConditionsPatchOutput {
	return o
}

// Choose namespaces by using regex matching
func (o SecretStoreSpecConditionsPatchOutput) NamespaceRegexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsPatch) []string { return v.NamespaceRegexes }).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecConditionsPatchOutput) NamespaceSelector() SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsPatch) *SecretStoreSpecConditionsNamespaceSelectorPatch {
		return v.NamespaceSelector
	}).(SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput)
}

// Choose namespaces by name
func (o SecretStoreSpecConditionsPatchOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecConditionsPatch) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecConditionsPatch)(nil)).Elem()
}

func (o SecretStoreSpecConditionsPatchArrayOutput) ToSecretStoreSpecConditionsPatchArrayOutput() SecretStoreSpecConditionsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsPatchArrayOutput) ToSecretStoreSpecConditionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecConditionsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecConditionsPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecConditionsPatch {
		return vs[0].([]SecretStoreSpecConditionsPatch)[vs[1].(int)]
	}).(SecretStoreSpecConditionsPatchOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecPatch struct {
	// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
	Conditions []SecretStoreSpecConditionsPatch `pulumi:"conditions"`
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller *string                       `pulumi:"controller"`
	Provider   *SecretStoreSpecProviderPatch `pulumi:"provider"`
	// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
	RefreshInterval *int                               `pulumi:"refreshInterval"`
	RetrySettings   *SecretStoreSpecRetrySettingsPatch `pulumi:"retrySettings"`
}

// SecretStoreSpecPatchInput is an input type that accepts SecretStoreSpecPatchArgs and SecretStoreSpecPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecPatchInput` via:
//
//	SecretStoreSpecPatchArgs{...}
type SecretStoreSpecPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecPatchOutput() SecretStoreSpecPatchOutput
	ToSecretStoreSpecPatchOutputWithContext(context.Context) SecretStoreSpecPatchOutput
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecPatchArgs struct {
	// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
	Conditions SecretStoreSpecConditionsPatchArrayInput `pulumi:"conditions"`
	// Used to select the correct ESO controller (think: ingress.ingressClassName)
	// The ESO controller is instantiated with a specific controller name and filters ES based on this property
	Controller pulumi.StringPtrInput                `pulumi:"controller"`
	Provider   SecretStoreSpecProviderPatchPtrInput `pulumi:"provider"`
	// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
	RefreshInterval pulumi.IntPtrInput                        `pulumi:"refreshInterval"`
	RetrySettings   SecretStoreSpecRetrySettingsPatchPtrInput `pulumi:"retrySettings"`
}

func (SecretStoreSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecPatch)(nil)).Elem()
}

func (i SecretStoreSpecPatchArgs) ToSecretStoreSpecPatchOutput() SecretStoreSpecPatchOutput {
	return i.ToSecretStoreSpecPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecPatchArgs) ToSecretStoreSpecPatchOutputWithContext(ctx context.Context) SecretStoreSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecPatchOutput)
}

func (i SecretStoreSpecPatchArgs) ToSecretStoreSpecPatchPtrOutput() SecretStoreSpecPatchPtrOutput {
	return i.ToSecretStoreSpecPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecPatchArgs) ToSecretStoreSpecPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecPatchOutput).ToSecretStoreSpecPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecPatchPtrInput is an input type that accepts SecretStoreSpecPatchArgs, SecretStoreSpecPatchPtr and SecretStoreSpecPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecPatchPtrInput` via:
//
//	        SecretStoreSpecPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecPatchPtrOutput() SecretStoreSpecPatchPtrOutput
	ToSecretStoreSpecPatchPtrOutputWithContext(context.Context) SecretStoreSpecPatchPtrOutput
}

type secretStoreSpecPatchPtrType SecretStoreSpecPatchArgs

func SecretStoreSpecPatchPtr(v *SecretStoreSpecPatchArgs) SecretStoreSpecPatchPtrInput {
	return (*secretStoreSpecPatchPtrType)(v)
}

func (*secretStoreSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecPatch)(nil)).Elem()
}

func (i *secretStoreSpecPatchPtrType) ToSecretStoreSpecPatchPtrOutput() SecretStoreSpecPatchPtrOutput {
	return i.ToSecretStoreSpecPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecPatchPtrType) ToSecretStoreSpecPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecPatchPtrOutput)
}

// SecretStoreSpec defines the desired state of SecretStore.
type SecretStoreSpecPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecPatch)(nil)).Elem()
}

func (o SecretStoreSpecPatchOutput) ToSecretStoreSpecPatchOutput() SecretStoreSpecPatchOutput {
	return o
}

func (o SecretStoreSpecPatchOutput) ToSecretStoreSpecPatchOutputWithContext(ctx context.Context) SecretStoreSpecPatchOutput {
	return o
}

func (o SecretStoreSpecPatchOutput) ToSecretStoreSpecPatchPtrOutput() SecretStoreSpecPatchPtrOutput {
	return o.ToSecretStoreSpecPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecPatchOutput) ToSecretStoreSpecPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecPatch) *SecretStoreSpecPatch {
		return &v
	}).(SecretStoreSpecPatchPtrOutput)
}

// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
func (o SecretStoreSpecPatchOutput) Conditions() SecretStoreSpecConditionsPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecPatch) []SecretStoreSpecConditionsPatch { return v.Conditions }).(SecretStoreSpecConditionsPatchArrayOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecPatchOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecPatch) *string { return v.Controller }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecPatchOutput) Provider() SecretStoreSpecProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecPatch) *SecretStoreSpecProviderPatch { return v.Provider }).(SecretStoreSpecProviderPatchPtrOutput)
}

// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
func (o SecretStoreSpecPatchOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecPatch) *int { return v.RefreshInterval }).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecPatchOutput) RetrySettings() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecPatch) *SecretStoreSpecRetrySettingsPatch { return v.RetrySettings }).(SecretStoreSpecRetrySettingsPatchPtrOutput)
}

type SecretStoreSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecPatch)(nil)).Elem()
}

func (o SecretStoreSpecPatchPtrOutput) ToSecretStoreSpecPatchPtrOutput() SecretStoreSpecPatchPtrOutput {
	return o
}

func (o SecretStoreSpecPatchPtrOutput) ToSecretStoreSpecPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecPatchPtrOutput {
	return o
}

func (o SecretStoreSpecPatchPtrOutput) Elem() SecretStoreSpecPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) SecretStoreSpecPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecPatch
		return ret
	}).(SecretStoreSpecPatchOutput)
}

// Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
func (o SecretStoreSpecPatchPtrOutput) Conditions() SecretStoreSpecConditionsPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) []SecretStoreSpecConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SecretStoreSpecConditionsPatchArrayOutput)
}

// Used to select the correct ESO controller (think: ingress.ingressClassName)
// The ESO controller is instantiated with a specific controller name and filters ES based on this property
func (o SecretStoreSpecPatchPtrOutput) Controller() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Controller
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecPatchPtrOutput) Provider() SecretStoreSpecProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) *SecretStoreSpecProviderPatch {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(SecretStoreSpecProviderPatchPtrOutput)
}

// Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
func (o SecretStoreSpecPatchPtrOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) *int {
		if v == nil {
			return nil
		}
		return v.RefreshInterval
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecPatchPtrOutput) RetrySettings() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecPatch) *SecretStoreSpecRetrySettingsPatch {
		if v == nil {
			return nil
		}
		return v.RetrySettings
	}).(SecretStoreSpecRetrySettingsPatchPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProvider struct {
	Akeyless                 *SecretStoreSpecProviderAkeyless                 `pulumi:"akeyless"`
	Alibaba                  *SecretStoreSpecProviderAlibaba                  `pulumi:"alibaba"`
	Aws                      *SecretStoreSpecProviderAws                      `pulumi:"aws"`
	Azurekv                  *SecretStoreSpecProviderAzurekv                  `pulumi:"azurekv"`
	Bitwardensecretsmanager  *SecretStoreSpecProviderBitwardensecretsmanager  `pulumi:"bitwardensecretsmanager"`
	Chef                     *SecretStoreSpecProviderChef                     `pulumi:"chef"`
	Conjur                   *SecretStoreSpecProviderConjur                   `pulumi:"conjur"`
	Delinea                  *SecretStoreSpecProviderDelinea                  `pulumi:"delinea"`
	Device42                 *SecretStoreSpecProviderDevice42                 `pulumi:"device42"`
	Doppler                  *SecretStoreSpecProviderDoppler                  `pulumi:"doppler"`
	Fake                     *SecretStoreSpecProviderFake                     `pulumi:"fake"`
	Fortanix                 *SecretStoreSpecProviderFortanix                 `pulumi:"fortanix"`
	Gcpsm                    *SecretStoreSpecProviderGcpsm                    `pulumi:"gcpsm"`
	Gitlab                   *SecretStoreSpecProviderGitlab                   `pulumi:"gitlab"`
	Ibm                      *SecretStoreSpecProviderIbm                      `pulumi:"ibm"`
	Infisical                *SecretStoreSpecProviderInfisical                `pulumi:"infisical"`
	Keepersecurity           *SecretStoreSpecProviderKeepersecurity           `pulumi:"keepersecurity"`
	Kubernetes               *SecretStoreSpecProviderKubernetes               `pulumi:"kubernetes"`
	Onboardbase              *SecretStoreSpecProviderOnboardbase              `pulumi:"onboardbase"`
	Onepassword              *SecretStoreSpecProviderOnepassword              `pulumi:"onepassword"`
	Oracle                   *SecretStoreSpecProviderOracle                   `pulumi:"oracle"`
	Passbolt                 *SecretStoreSpecProviderPassbolt                 `pulumi:"passbolt"`
	Passworddepot            *SecretStoreSpecProviderPassworddepot            `pulumi:"passworddepot"`
	Pulumi                   *SecretStoreSpecProviderPulumi                   `pulumi:"pulumi"`
	Scaleway                 *SecretStoreSpecProviderScaleway                 `pulumi:"scaleway"`
	Senhasegura              *SecretStoreSpecProviderSenhasegura              `pulumi:"senhasegura"`
	Vault                    *SecretStoreSpecProviderVault                    `pulumi:"vault"`
	Webhook                  *SecretStoreSpecProviderWebhook                  `pulumi:"webhook"`
	Yandexcertificatemanager *SecretStoreSpecProviderYandexcertificatemanager `pulumi:"yandexcertificatemanager"`
	Yandexlockbox            *SecretStoreSpecProviderYandexlockbox            `pulumi:"yandexlockbox"`
}

// SecretStoreSpecProviderInput is an input type that accepts SecretStoreSpecProviderArgs and SecretStoreSpecProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInput` via:
//
//	SecretStoreSpecProviderArgs{...}
type SecretStoreSpecProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput
	ToSecretStoreSpecProviderOutputWithContext(context.Context) SecretStoreSpecProviderOutput
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderArgs struct {
	Akeyless                 SecretStoreSpecProviderAkeylessPtrInput                 `pulumi:"akeyless"`
	Alibaba                  SecretStoreSpecProviderAlibabaPtrInput                  `pulumi:"alibaba"`
	Aws                      SecretStoreSpecProviderAwsPtrInput                      `pulumi:"aws"`
	Azurekv                  SecretStoreSpecProviderAzurekvPtrInput                  `pulumi:"azurekv"`
	Bitwardensecretsmanager  SecretStoreSpecProviderBitwardensecretsmanagerPtrInput  `pulumi:"bitwardensecretsmanager"`
	Chef                     SecretStoreSpecProviderChefPtrInput                     `pulumi:"chef"`
	Conjur                   SecretStoreSpecProviderConjurPtrInput                   `pulumi:"conjur"`
	Delinea                  SecretStoreSpecProviderDelineaPtrInput                  `pulumi:"delinea"`
	Device42                 SecretStoreSpecProviderDevice42PtrInput                 `pulumi:"device42"`
	Doppler                  SecretStoreSpecProviderDopplerPtrInput                  `pulumi:"doppler"`
	Fake                     SecretStoreSpecProviderFakePtrInput                     `pulumi:"fake"`
	Fortanix                 SecretStoreSpecProviderFortanixPtrInput                 `pulumi:"fortanix"`
	Gcpsm                    SecretStoreSpecProviderGcpsmPtrInput                    `pulumi:"gcpsm"`
	Gitlab                   SecretStoreSpecProviderGitlabPtrInput                   `pulumi:"gitlab"`
	Ibm                      SecretStoreSpecProviderIbmPtrInput                      `pulumi:"ibm"`
	Infisical                SecretStoreSpecProviderInfisicalPtrInput                `pulumi:"infisical"`
	Keepersecurity           SecretStoreSpecProviderKeepersecurityPtrInput           `pulumi:"keepersecurity"`
	Kubernetes               SecretStoreSpecProviderKubernetesPtrInput               `pulumi:"kubernetes"`
	Onboardbase              SecretStoreSpecProviderOnboardbasePtrInput              `pulumi:"onboardbase"`
	Onepassword              SecretStoreSpecProviderOnepasswordPtrInput              `pulumi:"onepassword"`
	Oracle                   SecretStoreSpecProviderOraclePtrInput                   `pulumi:"oracle"`
	Passbolt                 SecretStoreSpecProviderPassboltPtrInput                 `pulumi:"passbolt"`
	Passworddepot            SecretStoreSpecProviderPassworddepotPtrInput            `pulumi:"passworddepot"`
	Pulumi                   SecretStoreSpecProviderPulumiPtrInput                   `pulumi:"pulumi"`
	Scaleway                 SecretStoreSpecProviderScalewayPtrInput                 `pulumi:"scaleway"`
	Senhasegura              SecretStoreSpecProviderSenhaseguraPtrInput              `pulumi:"senhasegura"`
	Vault                    SecretStoreSpecProviderVaultPtrInput                    `pulumi:"vault"`
	Webhook                  SecretStoreSpecProviderWebhookPtrInput                  `pulumi:"webhook"`
	Yandexcertificatemanager SecretStoreSpecProviderYandexcertificatemanagerPtrInput `pulumi:"yandexcertificatemanager"`
	Yandexlockbox            SecretStoreSpecProviderYandexlockboxPtrInput            `pulumi:"yandexlockbox"`
}

func (SecretStoreSpecProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput {
	return i.ToSecretStoreSpecProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOutput)
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return i.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderArgs) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOutput).ToSecretStoreSpecProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPtrInput is an input type that accepts SecretStoreSpecProviderArgs, SecretStoreSpecProviderPtr and SecretStoreSpecProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPtrInput` via:
//
//	        SecretStoreSpecProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput
	ToSecretStoreSpecProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderPtrOutput
}

type secretStoreSpecProviderPtrType SecretStoreSpecProviderArgs

func SecretStoreSpecProviderPtr(v *SecretStoreSpecProviderArgs) SecretStoreSpecProviderPtrInput {
	return (*secretStoreSpecProviderPtrType)(v)
}

func (*secretStoreSpecProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderPtrType) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return i.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPtrType) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderOutput() SecretStoreSpecProviderOutput {
	return o
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderOutput {
	return o
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return o.ToSecretStoreSpecProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOutput) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProvider) *SecretStoreSpecProvider {
		return &v
	}).(SecretStoreSpecProviderPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Akeyless() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAkeyless { return v.Akeyless }).(SecretStoreSpecProviderAkeylessPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Alibaba() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAlibaba { return v.Alibaba }).(SecretStoreSpecProviderAlibabaPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Aws() SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAws { return v.Aws }).(SecretStoreSpecProviderAwsPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Azurekv() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderAzurekv { return v.Azurekv }).(SecretStoreSpecProviderAzurekvPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Bitwardensecretsmanager() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderBitwardensecretsmanager {
		return v.Bitwardensecretsmanager
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Chef() SecretStoreSpecProviderChefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderChef { return v.Chef }).(SecretStoreSpecProviderChefPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Conjur() SecretStoreSpecProviderConjurPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderConjur { return v.Conjur }).(SecretStoreSpecProviderConjurPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Delinea() SecretStoreSpecProviderDelineaPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderDelinea { return v.Delinea }).(SecretStoreSpecProviderDelineaPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Device42() SecretStoreSpecProviderDevice42PtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderDevice42 { return v.Device42 }).(SecretStoreSpecProviderDevice42PtrOutput)
}

func (o SecretStoreSpecProviderOutput) Doppler() SecretStoreSpecProviderDopplerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderDoppler { return v.Doppler }).(SecretStoreSpecProviderDopplerPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Fake() SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderFake { return v.Fake }).(SecretStoreSpecProviderFakePtrOutput)
}

func (o SecretStoreSpecProviderOutput) Fortanix() SecretStoreSpecProviderFortanixPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderFortanix { return v.Fortanix }).(SecretStoreSpecProviderFortanixPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Gcpsm() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderGcpsm { return v.Gcpsm }).(SecretStoreSpecProviderGcpsmPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Gitlab() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderGitlab { return v.Gitlab }).(SecretStoreSpecProviderGitlabPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Ibm() SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderIbm { return v.Ibm }).(SecretStoreSpecProviderIbmPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Infisical() SecretStoreSpecProviderInfisicalPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderInfisical { return v.Infisical }).(SecretStoreSpecProviderInfisicalPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Keepersecurity() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderKeepersecurity { return v.Keepersecurity }).(SecretStoreSpecProviderKeepersecurityPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Kubernetes() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderKubernetes { return v.Kubernetes }).(SecretStoreSpecProviderKubernetesPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Onboardbase() SecretStoreSpecProviderOnboardbasePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderOnboardbase { return v.Onboardbase }).(SecretStoreSpecProviderOnboardbasePtrOutput)
}

func (o SecretStoreSpecProviderOutput) Onepassword() SecretStoreSpecProviderOnepasswordPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderOnepassword { return v.Onepassword }).(SecretStoreSpecProviderOnepasswordPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Oracle() SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderOracle { return v.Oracle }).(SecretStoreSpecProviderOraclePtrOutput)
}

func (o SecretStoreSpecProviderOutput) Passbolt() SecretStoreSpecProviderPassboltPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderPassbolt { return v.Passbolt }).(SecretStoreSpecProviderPassboltPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderPassworddepot { return v.Passworddepot }).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Pulumi() SecretStoreSpecProviderPulumiPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderPulumi { return v.Pulumi }).(SecretStoreSpecProviderPulumiPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Scaleway() SecretStoreSpecProviderScalewayPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderScaleway { return v.Scaleway }).(SecretStoreSpecProviderScalewayPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Senhasegura() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderSenhasegura { return v.Senhasegura }).(SecretStoreSpecProviderSenhaseguraPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Vault() SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderVault { return v.Vault }).(SecretStoreSpecProviderVaultPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Webhook() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderWebhook { return v.Webhook }).(SecretStoreSpecProviderWebhookPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Yandexcertificatemanager() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderYandexcertificatemanager {
		return v.Yandexcertificatemanager
	}).(SecretStoreSpecProviderYandexcertificatemanagerPtrOutput)
}

func (o SecretStoreSpecProviderOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProvider) *SecretStoreSpecProviderYandexlockbox { return v.Yandexlockbox }).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

type SecretStoreSpecProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderPtrOutput) ToSecretStoreSpecProviderPtrOutput() SecretStoreSpecProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPtrOutput) ToSecretStoreSpecProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPtrOutput) Elem() SecretStoreSpecProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) SecretStoreSpecProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProvider
		return ret
	}).(SecretStoreSpecProviderOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Akeyless() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAkeyless {
		if v == nil {
			return nil
		}
		return v.Akeyless
	}).(SecretStoreSpecProviderAkeylessPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Alibaba() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAlibaba {
		if v == nil {
			return nil
		}
		return v.Alibaba
	}).(SecretStoreSpecProviderAlibabaPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Aws() SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAws {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(SecretStoreSpecProviderAwsPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Azurekv() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderAzurekv {
		if v == nil {
			return nil
		}
		return v.Azurekv
	}).(SecretStoreSpecProviderAzurekvPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Bitwardensecretsmanager() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderBitwardensecretsmanager {
		if v == nil {
			return nil
		}
		return v.Bitwardensecretsmanager
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Chef() SecretStoreSpecProviderChefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderChef {
		if v == nil {
			return nil
		}
		return v.Chef
	}).(SecretStoreSpecProviderChefPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Conjur() SecretStoreSpecProviderConjurPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderConjur {
		if v == nil {
			return nil
		}
		return v.Conjur
	}).(SecretStoreSpecProviderConjurPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Delinea() SecretStoreSpecProviderDelineaPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderDelinea {
		if v == nil {
			return nil
		}
		return v.Delinea
	}).(SecretStoreSpecProviderDelineaPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Device42() SecretStoreSpecProviderDevice42PtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderDevice42 {
		if v == nil {
			return nil
		}
		return v.Device42
	}).(SecretStoreSpecProviderDevice42PtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Doppler() SecretStoreSpecProviderDopplerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderDoppler {
		if v == nil {
			return nil
		}
		return v.Doppler
	}).(SecretStoreSpecProviderDopplerPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Fake() SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderFake {
		if v == nil {
			return nil
		}
		return v.Fake
	}).(SecretStoreSpecProviderFakePtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Fortanix() SecretStoreSpecProviderFortanixPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderFortanix {
		if v == nil {
			return nil
		}
		return v.Fortanix
	}).(SecretStoreSpecProviderFortanixPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Gcpsm() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderGcpsm {
		if v == nil {
			return nil
		}
		return v.Gcpsm
	}).(SecretStoreSpecProviderGcpsmPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Gitlab() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderGitlab {
		if v == nil {
			return nil
		}
		return v.Gitlab
	}).(SecretStoreSpecProviderGitlabPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Ibm() SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderIbm {
		if v == nil {
			return nil
		}
		return v.Ibm
	}).(SecretStoreSpecProviderIbmPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Infisical() SecretStoreSpecProviderInfisicalPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderInfisical {
		if v == nil {
			return nil
		}
		return v.Infisical
	}).(SecretStoreSpecProviderInfisicalPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Keepersecurity() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderKeepersecurity {
		if v == nil {
			return nil
		}
		return v.Keepersecurity
	}).(SecretStoreSpecProviderKeepersecurityPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Kubernetes() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderKubernetesPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Onboardbase() SecretStoreSpecProviderOnboardbasePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderOnboardbase {
		if v == nil {
			return nil
		}
		return v.Onboardbase
	}).(SecretStoreSpecProviderOnboardbasePtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Onepassword() SecretStoreSpecProviderOnepasswordPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderOnepassword {
		if v == nil {
			return nil
		}
		return v.Onepassword
	}).(SecretStoreSpecProviderOnepasswordPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Oracle() SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderOracle {
		if v == nil {
			return nil
		}
		return v.Oracle
	}).(SecretStoreSpecProviderOraclePtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Passbolt() SecretStoreSpecProviderPassboltPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderPassbolt {
		if v == nil {
			return nil
		}
		return v.Passbolt
	}).(SecretStoreSpecProviderPassboltPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderPassworddepot {
		if v == nil {
			return nil
		}
		return v.Passworddepot
	}).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Pulumi() SecretStoreSpecProviderPulumiPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderPulumi {
		if v == nil {
			return nil
		}
		return v.Pulumi
	}).(SecretStoreSpecProviderPulumiPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Scaleway() SecretStoreSpecProviderScalewayPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderScaleway {
		if v == nil {
			return nil
		}
		return v.Scaleway
	}).(SecretStoreSpecProviderScalewayPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Senhasegura() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderSenhasegura {
		if v == nil {
			return nil
		}
		return v.Senhasegura
	}).(SecretStoreSpecProviderSenhaseguraPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Vault() SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderVault {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(SecretStoreSpecProviderVaultPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Webhook() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderWebhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(SecretStoreSpecProviderWebhookPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Yandexcertificatemanager() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderYandexcertificatemanager {
		if v == nil {
			return nil
		}
		return v.Yandexcertificatemanager
	}).(SecretStoreSpecProviderYandexcertificatemanagerPtrOutput)
}

func (o SecretStoreSpecProviderPtrOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProvider) *SecretStoreSpecProviderYandexlockbox {
		if v == nil {
			return nil
		}
		return v.Yandexlockbox
	}).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeyless struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL *string                                       `pulumi:"akeylessGWApiURL"`
	AuthSecretRef    *SecretStoreSpecProviderAkeylessAuthSecretRef `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                    `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderAkeylessCaProvider `pulumi:"caProvider"`
}

// SecretStoreSpecProviderAkeylessInput is an input type that accepts SecretStoreSpecProviderAkeylessArgs and SecretStoreSpecProviderAkeylessOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessInput` via:
//
//	SecretStoreSpecProviderAkeylessArgs{...}
type SecretStoreSpecProviderAkeylessInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput
	ToSecretStoreSpecProviderAkeylessOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessOutput
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessArgs struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL pulumi.StringPtrInput                                `pulumi:"akeylessGWApiURL"`
	AuthSecretRef    SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                             `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderAkeylessCaProviderPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderAkeylessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput {
	return i.ToSecretStoreSpecProviderAkeylessOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessOutput)
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessArgs) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessOutput).ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessArgs, SecretStoreSpecProviderAkeylessPtr and SecretStoreSpecProviderAkeylessPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput
	ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessPtrOutput
}

type secretStoreSpecProviderAkeylessPtrType SecretStoreSpecProviderAkeylessArgs

func SecretStoreSpecProviderAkeylessPtr(v *SecretStoreSpecProviderAkeylessArgs) SecretStoreSpecProviderAkeylessPtrInput {
	return (*secretStoreSpecProviderAkeylessPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessPtrType) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessPtrType) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessOutput() SecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessOutput) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeyless {
		return &v
	}).(SecretStoreSpecProviderAkeylessPtrOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *string { return v.AkeylessGWApiURL }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessAuthSecretRef {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

type SecretStoreSpecProviderAkeylessPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeyless)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) ToSecretStoreSpecProviderAkeylessPtrOutput() SecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) ToSecretStoreSpecProviderAkeylessPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) Elem() SecretStoreSpecProviderAkeylessOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) SecretStoreSpecProviderAkeyless {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeyless
		return ret
	}).(SecretStoreSpecProviderAkeylessOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessPtrOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return v.AkeylessGWApiURL
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPtrOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeyless) *SecretStoreSpecProviderAkeylessCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRef struct {
	KubernetesAuth *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth `pulumi:"kubernetesAuth"`
	SecretRef      *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef      `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefArgs struct {
	KubernetesAuth SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput `pulumi:"kubernetesAuth"`
	SecretRef      SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput      `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v == nil {
			return nil
		}
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID *string `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName       *string                                                                      `pulumi:"k8sConfName"`
	SecretRef         *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID pulumi.StringPtrInput `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName       pulumi.StringPtrInput                                                               `pulumi:"k8sConfName"`
	SecretRef         SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string { return v.AccessID }).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string { return v.K8sConfName }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *string {
		if v == nil {
			return nil
		}
		return v.K8sConfName
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuth) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID *string `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName       *string                                                                           `pulumi:"k8sConfName"`
	SecretRef         *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs struct {
	// the Akeyless Kubernetes auth-method access-id
	AccessID pulumi.StringPtrInput `pulumi:"accessID"`
	// Kubernetes-auth configuration name in Akeyless-Gateway
	K8sConfName       pulumi.StringPtrInput                                                                    `pulumi:"k8sConfName"`
	SecretRef         SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput)
}

// Kubernetes authenticates with Akeyless by passing the ServiceAccount
// token stored in the named Secret resource.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *string { return v.AccessID }).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *string { return v.K8sConfName }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput)
}

// the Akeyless Kubernetes auth-method access-id
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) AccessID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(pulumi.StringPtrOutput)
}

// Kubernetes-auth configuration name in Akeyless-Gateway
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) K8sConfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.K8sConfName
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Akeyless. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Akeyless. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefPatch struct {
	KubernetesAuth *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch `pulumi:"kubernetesAuth"`
	SecretRef      *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch      `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs struct {
	KubernetesAuth SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput `pulumi:"kubernetesAuth"`
	SecretRef      SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput      `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput)
}

// Auth configures how the operator authenticates with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch {
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefPatch) SecretStoreSpecProviderAkeylessAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) KubernetesAuth() SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatch {
		if v == nil {
			return nil
		}
		return v.KubernetesAuth
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput) SecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef struct {
	AccessID        *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID        `pulumi:"accessID"`
	AccessType      *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType      `pulumi:"accessType"`
	AccessTypeParam *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam `pulumi:"accessTypeParam"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs struct {
	AccessID        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput        `pulumi:"accessID"`
	AccessType      SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput      `pulumi:"accessType"`
	AccessTypeParam SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput `pulumi:"accessTypeParam"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID {
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v == nil {
			return nil
		}
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRef) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v == nil {
			return nil
		}
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessID) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput)
}

// The SecretAccessID is used for authentication
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessType) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParam) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch struct {
	AccessID        *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch        `pulumi:"accessID"`
	AccessType      *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch      `pulumi:"accessType"`
	AccessTypeParam *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch `pulumi:"accessTypeParam"`
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs{...}
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs struct {
	AccessID        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput        `pulumi:"accessID"`
	AccessType      SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput      `pulumi:"accessType"`
	AccessTypeParam SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput `pulumi:"accessTypeParam"`
}

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput).ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs, SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtr and SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrType SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs

func SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtr(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrType) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput)
}

// Reference to a Secret that contains the details
// to authenticate with Akeyless.
type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch {
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch {
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch {
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput)
}

type SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) AccessID() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatch {
		if v == nil {
			return nil
		}
		return v.AccessID
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) AccessType() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatch {
		if v == nil {
			return nil
		}
		return v.AccessType
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput) AccessTypeParam() SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatch {
		if v == nil {
			return nil
		}
		return v.AccessTypeParam
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProvider struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderAkeylessCaProviderInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderArgs and SecretStoreSpecProviderAkeylessCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderInput` via:
//
//	SecretStoreSpecProviderAkeylessCaProviderArgs{...}
type SecretStoreSpecProviderAkeylessCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput
	ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderAkeylessCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderOutput)
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderArgs) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderOutput).ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderArgs, SecretStoreSpecProviderAkeylessCaProviderPtr and SecretStoreSpecProviderAkeylessCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput
	ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput
}

type secretStoreSpecProviderAkeylessCaProviderPtrType SecretStoreSpecProviderAkeylessCaProviderArgs

func SecretStoreSpecProviderAkeylessCaProviderPtr(v *SecretStoreSpecProviderAkeylessCaProviderArgs) SecretStoreSpecProviderAkeylessCaProviderPtrInput {
	return (*secretStoreSpecProviderAkeylessCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessCaProviderPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessCaProviderPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderOutput() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessCaProviderOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessCaProvider) *SecretStoreSpecProviderAkeylessCaProvider {
		return &v
	}).(SecretStoreSpecProviderAkeylessCaProviderPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProvider) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Elem() SecretStoreSpecProviderAkeylessCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) SecretStoreSpecProviderAkeylessCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessCaProvider
		return ret
	}).(SecretStoreSpecProviderAkeylessCaProviderOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderPatch struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderAkeylessCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderPatchArgs and SecretStoreSpecProviderAkeylessCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessCaProviderPatchArgs{...}
type SecretStoreSpecProviderAkeylessCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderPatchOutput() SecretStoreSpecProviderAkeylessCaProviderPatchOutput
	ToSecretStoreSpecProviderAkeylessCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchOutput
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderPatchArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderAkeylessCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessCaProviderPatchArgs) ToSecretStoreSpecProviderAkeylessCaProviderPatchOutput() SecretStoreSpecProviderAkeylessCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderPatchArgs) ToSecretStoreSpecProviderAkeylessCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessCaProviderPatchArgs) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessCaProviderPatchArgs) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderPatchOutput).ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessCaProviderPatchArgs, SecretStoreSpecProviderAkeylessCaProviderPatchPtr and SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput
}

type secretStoreSpecProviderAkeylessCaProviderPatchPtrType SecretStoreSpecProviderAkeylessCaProviderPatchArgs

func SecretStoreSpecProviderAkeylessCaProviderPatchPtr(v *SecretStoreSpecProviderAkeylessCaProviderPatchArgs) SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessCaProviderPatchPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessCaProviderPatchPtrType) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Akeyless Gateway certificate.
type SecretStoreSpecProviderAkeylessCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchOutput() SecretStoreSpecProviderAkeylessCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessCaProviderPatch) *SecretStoreSpecProviderAkeylessCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProviderPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProviderPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessCaProviderPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) ToSecretStoreSpecProviderAkeylessCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProviderPatch) SecretStoreSpecProviderAkeylessCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessCaProviderPatchOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessPatch struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL *string                                            `pulumi:"akeylessGWApiURL"`
	AuthSecretRef    *SecretStoreSpecProviderAkeylessAuthSecretRefPatch `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                         `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderAkeylessCaProviderPatch `pulumi:"caProvider"`
}

// SecretStoreSpecProviderAkeylessPatchInput is an input type that accepts SecretStoreSpecProviderAkeylessPatchArgs and SecretStoreSpecProviderAkeylessPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessPatchInput` via:
//
//	SecretStoreSpecProviderAkeylessPatchArgs{...}
type SecretStoreSpecProviderAkeylessPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessPatchOutput() SecretStoreSpecProviderAkeylessPatchOutput
	ToSecretStoreSpecProviderAkeylessPatchOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessPatchOutput
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessPatchArgs struct {
	// Akeyless GW API Url from which the secrets to be fetched from.
	AkeylessGWApiURL pulumi.StringPtrInput                                     `pulumi:"akeylessGWApiURL"`
	AuthSecretRef    SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput `pulumi:"authSecretRef"`
	// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
	// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                                  `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderAkeylessPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAkeylessPatchArgs) ToSecretStoreSpecProviderAkeylessPatchOutput() SecretStoreSpecProviderAkeylessPatchOutput {
	return i.ToSecretStoreSpecProviderAkeylessPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessPatchArgs) ToSecretStoreSpecProviderAkeylessPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessPatchOutput)
}

func (i SecretStoreSpecProviderAkeylessPatchArgs) ToSecretStoreSpecProviderAkeylessPatchPtrOutput() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAkeylessPatchArgs) ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessPatchOutput).ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAkeylessPatchPtrInput is an input type that accepts SecretStoreSpecProviderAkeylessPatchArgs, SecretStoreSpecProviderAkeylessPatchPtr and SecretStoreSpecProviderAkeylessPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAkeylessPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAkeylessPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAkeylessPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAkeylessPatchPtrOutput() SecretStoreSpecProviderAkeylessPatchPtrOutput
	ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAkeylessPatchPtrOutput
}

type secretStoreSpecProviderAkeylessPatchPtrType SecretStoreSpecProviderAkeylessPatchArgs

func SecretStoreSpecProviderAkeylessPatchPtr(v *SecretStoreSpecProviderAkeylessPatchArgs) SecretStoreSpecProviderAkeylessPatchPtrInput {
	return (*secretStoreSpecProviderAkeylessPatchPtrType)(v)
}

func (*secretStoreSpecProviderAkeylessPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAkeylessPatchPtrType) ToSecretStoreSpecProviderAkeylessPatchPtrOutput() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAkeylessPatchPtrType) ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAkeylessPatchPtrOutput)
}

// Akeyless configures this store to sync secrets using Akeyless Vault provider
type SecretStoreSpecProviderAkeylessPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAkeylessPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) ToSecretStoreSpecProviderAkeylessPatchOutput() SecretStoreSpecProviderAkeylessPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) ToSecretStoreSpecProviderAkeylessPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) ToSecretStoreSpecProviderAkeylessPatchPtrOutput() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAkeylessPatch) *SecretStoreSpecProviderAkeylessPatch {
		return &v
	}).(SecretStoreSpecProviderAkeylessPatchPtrOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessPatchOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessPatch) *string { return v.AkeylessGWApiURL }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefPatch {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPatchOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAkeylessPatch) *SecretStoreSpecProviderAkeylessCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput)
}

type SecretStoreSpecProviderAkeylessPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAkeylessPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAkeylessPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) ToSecretStoreSpecProviderAkeylessPatchPtrOutput() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) ToSecretStoreSpecProviderAkeylessPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) Elem() SecretStoreSpecProviderAkeylessPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessPatch) SecretStoreSpecProviderAkeylessPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAkeylessPatch
		return ret
	}).(SecretStoreSpecProviderAkeylessPatchOutput)
}

// Akeyless GW API Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) AkeylessGWApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessPatch) *string {
		if v == nil {
			return nil
		}
		return v.AkeylessGWApiURL
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) AuthSecretRef() SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessPatch) *SecretStoreSpecProviderAkeylessAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput)
}

// PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used
// if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAkeylessPatchPtrOutput) CaProvider() SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAkeylessPatch) *SecretStoreSpecProviderAkeylessCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibaba struct {
	Auth *SecretStoreSpecProviderAlibabaAuth `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID *string `pulumi:"regionID"`
}

// SecretStoreSpecProviderAlibabaInput is an input type that accepts SecretStoreSpecProviderAlibabaArgs and SecretStoreSpecProviderAlibabaOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaInput` via:
//
//	SecretStoreSpecProviderAlibabaArgs{...}
type SecretStoreSpecProviderAlibabaInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput
	ToSecretStoreSpecProviderAlibabaOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaOutput
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaArgs struct {
	Auth SecretStoreSpecProviderAlibabaAuthPtrInput `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID pulumi.StringPtrInput `pulumi:"regionID"`
}

func (SecretStoreSpecProviderAlibabaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput {
	return i.ToSecretStoreSpecProviderAlibabaOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaOutput)
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaArgs) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaOutput).ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaArgs, SecretStoreSpecProviderAlibabaPtr and SecretStoreSpecProviderAlibabaPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput
	ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaPtrOutput
}

type secretStoreSpecProviderAlibabaPtrType SecretStoreSpecProviderAlibabaArgs

func SecretStoreSpecProviderAlibabaPtr(v *SecretStoreSpecProviderAlibabaArgs) SecretStoreSpecProviderAlibabaPtrInput {
	return (*secretStoreSpecProviderAlibabaPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaPtrType) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaPtrType) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaOutput() SecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaOutput) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibaba) *SecretStoreSpecProviderAlibaba {
		return &v
	}).(SecretStoreSpecProviderAlibabaPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaOutput) Auth() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibaba) *SecretStoreSpecProviderAlibabaAuth { return v.Auth }).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibaba) *string { return v.RegionID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibaba)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) ToSecretStoreSpecProviderAlibabaPtrOutput() SecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) ToSecretStoreSpecProviderAlibabaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) Elem() SecretStoreSpecProviderAlibabaOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) SecretStoreSpecProviderAlibaba {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibaba
		return ret
	}).(SecretStoreSpecProviderAlibabaOutput)
}

func (o SecretStoreSpecProviderAlibabaPtrOutput) Auth() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) *SecretStoreSpecProviderAlibabaAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaPtrOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibaba) *string {
		if v == nil {
			return nil
		}
		return v.RegionID
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuth struct {
	Rrsa      *SecretStoreSpecProviderAlibabaAuthRrsa      `pulumi:"rrsa"`
	SecretRef *SecretStoreSpecProviderAlibabaAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAlibabaAuthInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthArgs and SecretStoreSpecProviderAlibabaAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthArgs{...}
type SecretStoreSpecProviderAlibabaAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput
	ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthOutput
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthArgs struct {
	Rrsa      SecretStoreSpecProviderAlibabaAuthRrsaPtrInput      `pulumi:"rrsa"`
	SecretRef SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthArgs) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthOutput).ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthArgs, SecretStoreSpecProviderAlibabaAuthPtr and SecretStoreSpecProviderAlibabaAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput
}

type secretStoreSpecProviderAlibabaAuthPtrType SecretStoreSpecProviderAlibabaAuthArgs

func SecretStoreSpecProviderAlibabaAuthPtr(v *SecretStoreSpecProviderAlibabaAuthArgs) SecretStoreSpecProviderAlibabaAuthPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthPtrType) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthPtrType) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthOutput() SecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuth {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthRrsa { return v.Rrsa }).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutput() SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) SecretStoreSpecProviderAlibabaAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuth
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthRrsa {
		if v == nil {
			return nil
		}
		return v.Rrsa
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPtrOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuth) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthPatch struct {
	Rrsa      *SecretStoreSpecProviderAlibabaAuthRrsaPatch      `pulumi:"rrsa"`
	SecretRef *SecretStoreSpecProviderAlibabaAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAlibabaAuthPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthPatchArgs and SecretStoreSpecProviderAlibabaAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthPatchArgs{...}
type SecretStoreSpecProviderAlibabaAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthPatchOutput() SecretStoreSpecProviderAlibabaAuthPatchOutput
	ToSecretStoreSpecProviderAlibabaAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthPatchOutput
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthPatchArgs struct {
	Rrsa      SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput      `pulumi:"rrsa"`
	SecretRef SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthPatchArgs) ToSecretStoreSpecProviderAlibabaAuthPatchOutput() SecretStoreSpecProviderAlibabaAuthPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthPatchArgs) ToSecretStoreSpecProviderAlibabaAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthPatchArgs) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthPatchArgs) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthPatchOutput).ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthPatchArgs, SecretStoreSpecProviderAlibabaAuthPatchPtr and SecretStoreSpecProviderAlibabaAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthPatchPtrOutput
}

type secretStoreSpecProviderAlibabaAuthPatchPtrType SecretStoreSpecProviderAlibabaAuthPatchArgs

func SecretStoreSpecProviderAlibabaAuthPatchPtr(v *SecretStoreSpecProviderAlibabaAuthPatchArgs) SecretStoreSpecProviderAlibabaAuthPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthPatchPtrOutput)
}

// AlibabaAuth contains a secretRef for credentials.
type SecretStoreSpecProviderAlibabaAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) ToSecretStoreSpecProviderAlibabaAuthPatchOutput() SecretStoreSpecProviderAlibabaAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) ToSecretStoreSpecProviderAlibabaAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthPatch) *SecretStoreSpecProviderAlibabaAuthPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthPatch) *SecretStoreSpecProviderAlibabaAuthRrsaPatch {
		return v.Rrsa
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPatchOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthPatch) SecretStoreSpecProviderAlibabaAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthPatchOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) Rrsa() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthPatch) *SecretStoreSpecProviderAlibabaAuthRrsaPatch {
		if v == nil {
			return nil
		}
		return v.Rrsa
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsa struct {
	OidcProviderArn   *string `pulumi:"oidcProviderArn"`
	OidcTokenFilePath *string `pulumi:"oidcTokenFilePath"`
	RoleArn           *string `pulumi:"roleArn"`
	SessionName       *string `pulumi:"sessionName"`
}

// SecretStoreSpecProviderAlibabaAuthRrsaInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaArgs and SecretStoreSpecProviderAlibabaAuthRrsaOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
type SecretStoreSpecProviderAlibabaAuthRrsaInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaArgs struct {
	OidcProviderArn   pulumi.StringPtrInput `pulumi:"oidcProviderArn"`
	OidcTokenFilePath pulumi.StringPtrInput `pulumi:"oidcTokenFilePath"`
	RoleArn           pulumi.StringPtrInput `pulumi:"roleArn"`
	SessionName       pulumi.StringPtrInput `pulumi:"sessionName"`
}

func (SecretStoreSpecProviderAlibabaAuthRrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaOutput).ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthRrsaPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaArgs, SecretStoreSpecProviderAlibabaAuthRrsaPtr and SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthRrsaArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthRrsaPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput
}

type secretStoreSpecProviderAlibabaAuthRrsaPtrType SecretStoreSpecProviderAlibabaAuthRrsaArgs

func SecretStoreSpecProviderAlibabaAuthRrsaPtr(v *SecretStoreSpecProviderAlibabaAuthRrsaArgs) SecretStoreSpecProviderAlibabaAuthRrsaPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthRrsaPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthRrsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaOutput() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthRrsa) *SecretStoreSpecProviderAlibabaAuthRrsa {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) *string { return v.OidcProviderArn }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) *string { return v.OidcTokenFilePath }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsa) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsa)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthRrsaOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) SecretStoreSpecProviderAlibabaAuthRrsa {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthRrsa
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthRrsaOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return v.OidcProviderArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return v.OidcTokenFilePath
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsa) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaPatch struct {
	OidcProviderArn   *string `pulumi:"oidcProviderArn"`
	OidcTokenFilePath *string `pulumi:"oidcTokenFilePath"`
	RoleArn           *string `pulumi:"roleArn"`
	SessionName       *string `pulumi:"sessionName"`
}

// SecretStoreSpecProviderAlibabaAuthRrsaPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs and SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs{...}
type SecretStoreSpecProviderAlibabaAuthRrsaPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs struct {
	OidcProviderArn   pulumi.StringPtrInput `pulumi:"oidcProviderArn"`
	OidcTokenFilePath pulumi.StringPtrInput `pulumi:"oidcTokenFilePath"`
	RoleArn           pulumi.StringPtrInput `pulumi:"roleArn"`
	SessionName       pulumi.StringPtrInput `pulumi:"sessionName"`
}

func (SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput).ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs, SecretStoreSpecProviderAlibabaAuthRrsaPatchPtr and SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput
}

type secretStoreSpecProviderAlibabaAuthRrsaPatchPtrType SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs

func SecretStoreSpecProviderAlibabaAuthRrsaPatchPtr(v *SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthRrsaPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthRrsaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsaPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthRrsaPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput)
}

// Authenticate against Alibaba using RRSA.
type SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthRrsaPatch) *SecretStoreSpecProviderAlibabaAuthRrsaPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string { return v.OidcProviderArn }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string { return v.OidcTokenFilePath }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthRrsaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsaPatch) SecretStoreSpecProviderAlibabaAuthRrsaPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthRrsaPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) OidcProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string {
		if v == nil {
			return nil
		}
		return v.OidcProviderArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) OidcTokenFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string {
		if v == nil {
			return nil
		}
		return v.OidcTokenFilePath
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthRrsaPatch) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRef struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef     `pulumi:"accessKeyIDSecretRef"`
	AccessKeySecretSecretRef *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef `pulumi:"accessKeySecretSecretRef"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput     `pulumi:"accessKeyIDSecretRef"`
	AccessKeySecretSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput `pulumi:"accessKeySecretSecretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs, SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtr and SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrType SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput)
}

// The AccessKeySecret is used for authentication
type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefPatch struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch     `pulumi:"accessKeyIDSecretRef"`
	AccessKeySecretSecretRef *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch `pulumi:"accessKeySecretSecretRef"`
}

// SecretStoreSpecProviderAlibabaAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs and SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderAlibabaAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput     `pulumi:"accessKeyIDSecretRef"`
	AccessKeySecretSecretRef SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput `pulumi:"accessKeySecretSecretRef"`
}

func (SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput).ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs, SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtr and SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAlibabaAuthSecretRefPatchPtrType SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs

func SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtr(v *SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput)
}

// AlibabaAuthSecretRef holds secret references for Alibaba credentials.
type SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaAuthSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaAuthSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch {
		return v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefPatch) SecretStoreSpecProviderAlibabaAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput) AccessKeySecretSecretRef() SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaAuthSecretRefPatch) *SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AccessKeySecretSecretRef
	}).(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaPatch struct {
	Auth *SecretStoreSpecProviderAlibabaAuthPatch `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID *string `pulumi:"regionID"`
}

// SecretStoreSpecProviderAlibabaPatchInput is an input type that accepts SecretStoreSpecProviderAlibabaPatchArgs and SecretStoreSpecProviderAlibabaPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaPatchInput` via:
//
//	SecretStoreSpecProviderAlibabaPatchArgs{...}
type SecretStoreSpecProviderAlibabaPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaPatchOutput() SecretStoreSpecProviderAlibabaPatchOutput
	ToSecretStoreSpecProviderAlibabaPatchOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaPatchOutput
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaPatchArgs struct {
	Auth SecretStoreSpecProviderAlibabaAuthPatchPtrInput `pulumi:"auth"`
	// Alibaba Region to be used for the provider
	RegionID pulumi.StringPtrInput `pulumi:"regionID"`
}

func (SecretStoreSpecProviderAlibabaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAlibabaPatchArgs) ToSecretStoreSpecProviderAlibabaPatchOutput() SecretStoreSpecProviderAlibabaPatchOutput {
	return i.ToSecretStoreSpecProviderAlibabaPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaPatchArgs) ToSecretStoreSpecProviderAlibabaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaPatchOutput)
}

func (i SecretStoreSpecProviderAlibabaPatchArgs) ToSecretStoreSpecProviderAlibabaPatchPtrOutput() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAlibabaPatchArgs) ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaPatchOutput).ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAlibabaPatchPtrInput is an input type that accepts SecretStoreSpecProviderAlibabaPatchArgs, SecretStoreSpecProviderAlibabaPatchPtr and SecretStoreSpecProviderAlibabaPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAlibabaPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAlibabaPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAlibabaPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAlibabaPatchPtrOutput() SecretStoreSpecProviderAlibabaPatchPtrOutput
	ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAlibabaPatchPtrOutput
}

type secretStoreSpecProviderAlibabaPatchPtrType SecretStoreSpecProviderAlibabaPatchArgs

func SecretStoreSpecProviderAlibabaPatchPtr(v *SecretStoreSpecProviderAlibabaPatchArgs) SecretStoreSpecProviderAlibabaPatchPtrInput {
	return (*secretStoreSpecProviderAlibabaPatchPtrType)(v)
}

func (*secretStoreSpecProviderAlibabaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAlibabaPatchPtrType) ToSecretStoreSpecProviderAlibabaPatchPtrOutput() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAlibabaPatchPtrType) ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAlibabaPatchPtrOutput)
}

// Alibaba configures this store to sync secrets using Alibaba Cloud provider
type SecretStoreSpecProviderAlibabaPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAlibabaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaPatchOutput) ToSecretStoreSpecProviderAlibabaPatchOutput() SecretStoreSpecProviderAlibabaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPatchOutput) ToSecretStoreSpecProviderAlibabaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPatchOutput) ToSecretStoreSpecProviderAlibabaPatchPtrOutput() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAlibabaPatchOutput) ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAlibabaPatch) *SecretStoreSpecProviderAlibabaPatch {
		return &v
	}).(SecretStoreSpecProviderAlibabaPatchPtrOutput)
}

func (o SecretStoreSpecProviderAlibabaPatchOutput) Auth() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaPatch) *SecretStoreSpecProviderAlibabaAuthPatch { return v.Auth }).(SecretStoreSpecProviderAlibabaAuthPatchPtrOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaPatchOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAlibabaPatch) *string { return v.RegionID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAlibabaPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAlibabaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAlibabaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAlibabaPatchPtrOutput) ToSecretStoreSpecProviderAlibabaPatchPtrOutput() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPatchPtrOutput) ToSecretStoreSpecProviderAlibabaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAlibabaPatchPtrOutput) Elem() SecretStoreSpecProviderAlibabaPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaPatch) SecretStoreSpecProviderAlibabaPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAlibabaPatch
		return ret
	}).(SecretStoreSpecProviderAlibabaPatchOutput)
}

func (o SecretStoreSpecProviderAlibabaPatchPtrOutput) Auth() SecretStoreSpecProviderAlibabaAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaPatch) *SecretStoreSpecProviderAlibabaAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderAlibabaAuthPatchPtrOutput)
}

// Alibaba Region to be used for the provider
func (o SecretStoreSpecProviderAlibabaPatchPtrOutput) RegionID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAlibabaPatch) *string {
		if v == nil {
			return nil
		}
		return v.RegionID
	}).(pulumi.StringPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAws struct {
	// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
	AdditionalRoles []string                        `pulumi:"additionalRoles"`
	Auth            *SecretStoreSpecProviderAwsAuth `pulumi:"auth"`
	// AWS External ID set on assumed IAM roles
	ExternalID *string `pulumi:"externalID"`
	// AWS Region to be used for the provider
	Region *string `pulumi:"region"`
	// Role is a Role ARN which the provider will assume
	Role           *string                                   `pulumi:"role"`
	SecretsManager *SecretStoreSpecProviderAwsSecretsManager `pulumi:"secretsManager"`
	// Service defines which service should be used to fetch the secrets
	Service *string `pulumi:"service"`
	// AWS STS assume role session tags
	SessionTags []SecretStoreSpecProviderAwsSessionTags `pulumi:"sessionTags"`
	// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
	TransitiveTagKeys []string `pulumi:"transitiveTagKeys"`
}

// SecretStoreSpecProviderAwsInput is an input type that accepts SecretStoreSpecProviderAwsArgs and SecretStoreSpecProviderAwsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsInput` via:
//
//	SecretStoreSpecProviderAwsArgs{...}
type SecretStoreSpecProviderAwsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput
	ToSecretStoreSpecProviderAwsOutputWithContext(context.Context) SecretStoreSpecProviderAwsOutput
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsArgs struct {
	// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
	AdditionalRoles pulumi.StringArrayInput                `pulumi:"additionalRoles"`
	Auth            SecretStoreSpecProviderAwsAuthPtrInput `pulumi:"auth"`
	// AWS External ID set on assumed IAM roles
	ExternalID pulumi.StringPtrInput `pulumi:"externalID"`
	// AWS Region to be used for the provider
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Role is a Role ARN which the provider will assume
	Role           pulumi.StringPtrInput                            `pulumi:"role"`
	SecretsManager SecretStoreSpecProviderAwsSecretsManagerPtrInput `pulumi:"secretsManager"`
	// Service defines which service should be used to fetch the secrets
	Service pulumi.StringPtrInput `pulumi:"service"`
	// AWS STS assume role session tags
	SessionTags SecretStoreSpecProviderAwsSessionTagsArrayInput `pulumi:"sessionTags"`
	// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (SecretStoreSpecProviderAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAws)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput {
	return i.ToSecretStoreSpecProviderAwsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsOutput)
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsArgs) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsOutput).ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsPtrInput is an input type that accepts SecretStoreSpecProviderAwsArgs, SecretStoreSpecProviderAwsPtr and SecretStoreSpecProviderAwsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsPtrInput` via:
//
//	        SecretStoreSpecProviderAwsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput
	ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsPtrOutput
}

type secretStoreSpecProviderAwsPtrType SecretStoreSpecProviderAwsArgs

func SecretStoreSpecProviderAwsPtr(v *SecretStoreSpecProviderAwsArgs) SecretStoreSpecProviderAwsPtrInput {
	return (*secretStoreSpecProviderAwsPtrType)(v)
}

func (*secretStoreSpecProviderAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAws)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsPtrType) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsPtrType) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAws)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsOutput() SecretStoreSpecProviderAwsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return o.ToSecretStoreSpecProviderAwsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsOutput) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAws) *SecretStoreSpecProviderAws {
		return &v
	}).(SecretStoreSpecProviderAwsPtrOutput)
}

// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
func (o SecretStoreSpecProviderAwsOutput) AdditionalRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) []string { return v.AdditionalRoles }).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecProviderAwsOutput) Auth() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsAuth { return v.Auth }).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderAwsOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *string { return v.ExternalID }).(pulumi.StringPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the provider will assume
func (o SecretStoreSpecProviderAwsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsOutput) SecretsManager() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsSecretsManager { return v.SecretsManager }).(SecretStoreSpecProviderAwsSecretsManagerPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// AWS STS assume role session tags
func (o SecretStoreSpecProviderAwsOutput) SessionTags() SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) []SecretStoreSpecProviderAwsSessionTags { return v.SessionTags }).(SecretStoreSpecProviderAwsSessionTagsArrayOutput)
}

// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
func (o SecretStoreSpecProviderAwsOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAws) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecProviderAwsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAws)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsPtrOutput) ToSecretStoreSpecProviderAwsPtrOutput() SecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPtrOutput) ToSecretStoreSpecProviderAwsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPtrOutput) Elem() SecretStoreSpecProviderAwsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) SecretStoreSpecProviderAws {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAws
		return ret
	}).(SecretStoreSpecProviderAwsOutput)
}

// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
func (o SecretStoreSpecProviderAwsPtrOutput) AdditionalRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalRoles
	}).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecProviderAwsPtrOutput) Auth() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderAwsPtrOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.ExternalID
	}).(pulumi.StringPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the provider will assume
func (o SecretStoreSpecProviderAwsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsPtrOutput) SecretsManager() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *SecretStoreSpecProviderAwsSecretsManager {
		if v == nil {
			return nil
		}
		return v.SecretsManager
	}).(SecretStoreSpecProviderAwsSecretsManagerPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// AWS STS assume role session tags
func (o SecretStoreSpecProviderAwsPtrOutput) SessionTags() SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) []SecretStoreSpecProviderAwsSessionTags {
		if v == nil {
			return nil
		}
		return v.SessionTags
	}).(SecretStoreSpecProviderAwsSessionTagsArrayOutput)
}

// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
func (o SecretStoreSpecProviderAwsPtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAws) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuth struct {
	Jwt       *SecretStoreSpecProviderAwsAuthJwt       `pulumi:"jwt"`
	SecretRef *SecretStoreSpecProviderAwsAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAwsAuthInput is an input type that accepts SecretStoreSpecProviderAwsAuthArgs and SecretStoreSpecProviderAwsAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthInput` via:
//
//	SecretStoreSpecProviderAwsAuthArgs{...}
type SecretStoreSpecProviderAwsAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput
	ToSecretStoreSpecProviderAwsAuthOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthOutput
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthArgs struct {
	Jwt       SecretStoreSpecProviderAwsAuthJwtPtrInput       `pulumi:"jwt"`
	SecretRef SecretStoreSpecProviderAwsAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAwsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput {
	return i.ToSecretStoreSpecProviderAwsAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthOutput)
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthArgs) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthOutput).ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthArgs, SecretStoreSpecProviderAwsAuthPtr and SecretStoreSpecProviderAwsAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput
	ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthPtrOutput
}

type secretStoreSpecProviderAwsAuthPtrType SecretStoreSpecProviderAwsAuthArgs

func SecretStoreSpecProviderAwsAuthPtr(v *SecretStoreSpecProviderAwsAuthArgs) SecretStoreSpecProviderAwsAuthPtrInput {
	return (*secretStoreSpecProviderAwsAuthPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthPtrType) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthPtrType) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthOutput() SecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthOutput) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuth {
		return &v
	}).(SecretStoreSpecProviderAwsAuthPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthJwt { return v.Jwt }).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthSecretRef { return v.SecretRef }).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) ToSecretStoreSpecProviderAwsAuthPtrOutput() SecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) ToSecretStoreSpecProviderAwsAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) Elem() SecretStoreSpecProviderAwsAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) SecretStoreSpecProviderAwsAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuth
		return ret
	}).(SecretStoreSpecProviderAwsAuthOutput)
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthPtrOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuth) *SecretStoreSpecProviderAwsAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwt struct {
	ServiceAccountRef *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAwsAuthJwtInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtArgs and SecretStoreSpecProviderAwsAuthJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtArgs{...}
type SecretStoreSpecProviderAwsAuthJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput
	ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtOutput
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtArgs struct {
	ServiceAccountRef SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAwsAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtArgs) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtOutput).ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtArgs, SecretStoreSpecProviderAwsAuthJwtPtr and SecretStoreSpecProviderAwsAuthJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtPtrType SecretStoreSpecProviderAwsAuthJwtArgs

func SecretStoreSpecProviderAwsAuthJwtPtr(v *SecretStoreSpecProviderAwsAuthJwtArgs) SecretStoreSpecProviderAwsAuthJwtPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtPtrType) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtPtrType) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtOutput() SecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwt {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthJwtOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutput() SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwt) SecretStoreSpecProviderAwsAuthJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwt
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtOutput)
}

func (o SecretStoreSpecProviderAwsAuthJwtPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwt) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtPatch struct {
	ServiceAccountRef *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderAwsAuthJwtPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtPatchArgs and SecretStoreSpecProviderAwsAuthJwtPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtPatchArgs{...}
type SecretStoreSpecProviderAwsAuthJwtPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtPatchOutput() SecretStoreSpecProviderAwsAuthJwtPatchOutput
	ToSecretStoreSpecProviderAwsAuthJwtPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtPatchOutput
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtPatchArgs struct {
	ServiceAccountRef SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderAwsAuthJwtPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtPatchOutput() SecretStoreSpecProviderAwsAuthJwtPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtPatchOutput).ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtPatchArgs, SecretStoreSpecProviderAwsAuthJwtPatchPtr and SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtPatchPtrType SecretStoreSpecProviderAwsAuthJwtPatchArgs

func SecretStoreSpecProviderAwsAuthJwtPatchPtr(v *SecretStoreSpecProviderAwsAuthJwtPatchArgs) SecretStoreSpecProviderAwsAuthJwtPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtPatchPtrType) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtPatchPtrType) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput)
}

// Authenticate against AWS using service account tokens.
type SecretStoreSpecProviderAwsAuthJwtPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchOutput() SecretStoreSpecProviderAwsAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwtPatch) *SecretStoreSpecProviderAwsAuthJwtPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtPatch) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtPatch) SecretStoreSpecProviderAwsAuthJwtPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwtPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtPatchOutput)
}

func (o SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtPatch) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput).ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs, SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs

func SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtr(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) SecretStoreSpecProviderAwsAuthJwtServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwtServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput).ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs, SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtr and SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrType SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs

func SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtr(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthPatch struct {
	Jwt       *SecretStoreSpecProviderAwsAuthJwtPatch       `pulumi:"jwt"`
	SecretRef *SecretStoreSpecProviderAwsAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderAwsAuthPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthPatchArgs and SecretStoreSpecProviderAwsAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthPatchArgs{...}
type SecretStoreSpecProviderAwsAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthPatchOutput() SecretStoreSpecProviderAwsAuthPatchOutput
	ToSecretStoreSpecProviderAwsAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthPatchOutput
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthPatchArgs struct {
	Jwt       SecretStoreSpecProviderAwsAuthJwtPatchPtrInput       `pulumi:"jwt"`
	SecretRef SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderAwsAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthPatchArgs) ToSecretStoreSpecProviderAwsAuthPatchOutput() SecretStoreSpecProviderAwsAuthPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthPatchArgs) ToSecretStoreSpecProviderAwsAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthPatchArgs) ToSecretStoreSpecProviderAwsAuthPatchPtrOutput() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthPatchArgs) ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthPatchOutput).ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthPatchArgs, SecretStoreSpecProviderAwsAuthPatchPtr and SecretStoreSpecProviderAwsAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthPatchPtrOutput() SecretStoreSpecProviderAwsAuthPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthPatchPtrType SecretStoreSpecProviderAwsAuthPatchArgs

func SecretStoreSpecProviderAwsAuthPatchPtr(v *SecretStoreSpecProviderAwsAuthPatchArgs) SecretStoreSpecProviderAwsAuthPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthPatchPtrType) ToSecretStoreSpecProviderAwsAuthPatchPtrOutput() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthPatchPtrType) ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against AWS
// if not set aws sdk will infer credentials from your environment
// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
type SecretStoreSpecProviderAwsAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) ToSecretStoreSpecProviderAwsAuthPatchOutput() SecretStoreSpecProviderAwsAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) ToSecretStoreSpecProviderAwsAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) ToSecretStoreSpecProviderAwsAuthPatchPtrOutput() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthPatch) *SecretStoreSpecProviderAwsAuthPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthPatch) *SecretStoreSpecProviderAwsAuthJwtPatch { return v.Jwt }).(SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthPatchOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthPatch) *SecretStoreSpecProviderAwsAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderAwsAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthPatchPtrOutput() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthPatch) SecretStoreSpecProviderAwsAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthPatchOutput)
}

func (o SecretStoreSpecProviderAwsAuthPatchPtrOutput) Jwt() SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthPatch) *SecretStoreSpecProviderAwsAuthJwtPatch {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthPatch) *SecretStoreSpecProviderAwsAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRef struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef    `pulumi:"sessionTokenSecretRef"`
}

// SecretStoreSpecProviderAwsAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput    `pulumi:"sessionTokenSecretRef"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefOutput) SessionTokenSecretRef() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef {
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) SecretStoreSpecProviderAwsAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPtrOutput) SessionTokenSecretRef() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput).ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs, SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtr and SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrType SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs

func SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtr(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefPatch struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch    `pulumi:"sessionTokenSecretRef"`
}

// SecretStoreSpecProviderAwsAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefPatchArgs and SecretStoreSpecProviderAwsAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchOutput
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefPatchArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput    `pulumi:"sessionTokenSecretRef"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefPatchOutput).ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefPatchArgs, SecretStoreSpecProviderAwsAuthSecretRefPatchPtr and SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefPatchPtrType SecretStoreSpecProviderAwsAuthSecretRefPatchArgs

func SecretStoreSpecProviderAwsAuthSecretRefPatchPtr(v *SecretStoreSpecProviderAwsAuthSecretRefPatchArgs) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
type SecretStoreSpecProviderAwsAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchOutput) SessionTokenSecretRef() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch {
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefPatch) SecretStoreSpecProviderAwsAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput) SessionTokenSecretRef() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput).ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs, SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtr and SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrType SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs

func SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtr(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs and SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput).ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs, SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtr and SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrType SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs

func SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtr(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs and SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs{...}
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput).ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs, SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtr and SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrType SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs

func SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtr(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsPatch struct {
	// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
	AdditionalRoles []string                             `pulumi:"additionalRoles"`
	Auth            *SecretStoreSpecProviderAwsAuthPatch `pulumi:"auth"`
	// AWS External ID set on assumed IAM roles
	ExternalID *string `pulumi:"externalID"`
	// AWS Region to be used for the provider
	Region *string `pulumi:"region"`
	// Role is a Role ARN which the provider will assume
	Role           *string                                        `pulumi:"role"`
	SecretsManager *SecretStoreSpecProviderAwsSecretsManagerPatch `pulumi:"secretsManager"`
	// Service defines which service should be used to fetch the secrets
	Service *string `pulumi:"service"`
	// AWS STS assume role session tags
	SessionTags []SecretStoreSpecProviderAwsSessionTagsPatch `pulumi:"sessionTags"`
	// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
	TransitiveTagKeys []string `pulumi:"transitiveTagKeys"`
}

// SecretStoreSpecProviderAwsPatchInput is an input type that accepts SecretStoreSpecProviderAwsPatchArgs and SecretStoreSpecProviderAwsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsPatchInput` via:
//
//	SecretStoreSpecProviderAwsPatchArgs{...}
type SecretStoreSpecProviderAwsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsPatchOutput() SecretStoreSpecProviderAwsPatchOutput
	ToSecretStoreSpecProviderAwsPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsPatchOutput
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsPatchArgs struct {
	// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
	AdditionalRoles pulumi.StringArrayInput                     `pulumi:"additionalRoles"`
	Auth            SecretStoreSpecProviderAwsAuthPatchPtrInput `pulumi:"auth"`
	// AWS External ID set on assumed IAM roles
	ExternalID pulumi.StringPtrInput `pulumi:"externalID"`
	// AWS Region to be used for the provider
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Role is a Role ARN which the provider will assume
	Role           pulumi.StringPtrInput                                 `pulumi:"role"`
	SecretsManager SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput `pulumi:"secretsManager"`
	// Service defines which service should be used to fetch the secrets
	Service pulumi.StringPtrInput `pulumi:"service"`
	// AWS STS assume role session tags
	SessionTags SecretStoreSpecProviderAwsSessionTagsPatchArrayInput `pulumi:"sessionTags"`
	// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (SecretStoreSpecProviderAwsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsPatchArgs) ToSecretStoreSpecProviderAwsPatchOutput() SecretStoreSpecProviderAwsPatchOutput {
	return i.ToSecretStoreSpecProviderAwsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsPatchArgs) ToSecretStoreSpecProviderAwsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsPatchOutput)
}

func (i SecretStoreSpecProviderAwsPatchArgs) ToSecretStoreSpecProviderAwsPatchPtrOutput() SecretStoreSpecProviderAwsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsPatchArgs) ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsPatchOutput).ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsPatchArgs, SecretStoreSpecProviderAwsPatchPtr and SecretStoreSpecProviderAwsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsPatchPtrOutput() SecretStoreSpecProviderAwsPatchPtrOutput
	ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsPatchPtrOutput
}

type secretStoreSpecProviderAwsPatchPtrType SecretStoreSpecProviderAwsPatchArgs

func SecretStoreSpecProviderAwsPatchPtr(v *SecretStoreSpecProviderAwsPatchArgs) SecretStoreSpecProviderAwsPatchPtrInput {
	return (*secretStoreSpecProviderAwsPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsPatchPtrType) ToSecretStoreSpecProviderAwsPatchPtrOutput() SecretStoreSpecProviderAwsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsPatchPtrType) ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsPatchPtrOutput)
}

// AWS configures this store to sync secrets using AWS Secret Manager provider
type SecretStoreSpecProviderAwsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsPatchOutput) ToSecretStoreSpecProviderAwsPatchOutput() SecretStoreSpecProviderAwsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPatchOutput) ToSecretStoreSpecProviderAwsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPatchOutput) ToSecretStoreSpecProviderAwsPatchPtrOutput() SecretStoreSpecProviderAwsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsPatchOutput) ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsPatch) *SecretStoreSpecProviderAwsPatch {
		return &v
	}).(SecretStoreSpecProviderAwsPatchPtrOutput)
}

// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
func (o SecretStoreSpecProviderAwsPatchOutput) AdditionalRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) []string { return v.AdditionalRoles }).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecProviderAwsPatchOutput) Auth() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *SecretStoreSpecProviderAwsAuthPatch { return v.Auth }).(SecretStoreSpecProviderAwsAuthPatchPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderAwsPatchOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *string { return v.ExternalID }).(pulumi.StringPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsPatchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the provider will assume
func (o SecretStoreSpecProviderAwsPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsPatchOutput) SecretsManager() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *SecretStoreSpecProviderAwsSecretsManagerPatch {
		return v.SecretsManager
	}).(SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsPatchOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// AWS STS assume role session tags
func (o SecretStoreSpecProviderAwsPatchOutput) SessionTags() SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) []SecretStoreSpecProviderAwsSessionTagsPatch {
		return v.SessionTags
	}).(SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput)
}

// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
func (o SecretStoreSpecProviderAwsPatchOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsPatch) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type SecretStoreSpecProviderAwsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsPatchPtrOutput) ToSecretStoreSpecProviderAwsPatchPtrOutput() SecretStoreSpecProviderAwsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPatchPtrOutput) ToSecretStoreSpecProviderAwsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsPatchPtrOutput) Elem() SecretStoreSpecProviderAwsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) SecretStoreSpecProviderAwsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsPatch
		return ret
	}).(SecretStoreSpecProviderAwsPatchOutput)
}

// AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
func (o SecretStoreSpecProviderAwsPatchPtrOutput) AdditionalRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalRoles
	}).(pulumi.StringArrayOutput)
}

func (o SecretStoreSpecProviderAwsPatchPtrOutput) Auth() SecretStoreSpecProviderAwsAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *SecretStoreSpecProviderAwsAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderAwsAuthPatchPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderAwsPatchPtrOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExternalID
	}).(pulumi.StringPtrOutput)
}

// AWS Region to be used for the provider
func (o SecretStoreSpecProviderAwsPatchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Role is a Role ARN which the provider will assume
func (o SecretStoreSpecProviderAwsPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsPatchPtrOutput) SecretsManager() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *SecretStoreSpecProviderAwsSecretsManagerPatch {
		if v == nil {
			return nil
		}
		return v.SecretsManager
	}).(SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput)
}

// Service defines which service should be used to fetch the secrets
func (o SecretStoreSpecProviderAwsPatchPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// AWS STS assume role session tags
func (o SecretStoreSpecProviderAwsPatchPtrOutput) SessionTags() SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) []SecretStoreSpecProviderAwsSessionTagsPatch {
		if v == nil {
			return nil
		}
		return v.SessionTags
	}).(SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput)
}

// AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
func (o SecretStoreSpecProviderAwsPatchPtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsPatch) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManager struct {
	// Specifies whether to delete the secret without any recovery window. You
	// can't use both this parameter and RecoveryWindowInDays in the same call.
	// If you don't use either, then by default Secrets Manager uses a 30 day
	// recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
	ForceDeleteWithoutRecovery *bool `pulumi:"forceDeleteWithoutRecovery"`
	// The number of days from 7 to 30 that Secrets Manager waits before
	// permanently deleting the secret. You can't use both this parameter and
	// ForceDeleteWithoutRecovery in the same call. If you don't use either,
	// then by default Secrets Manager uses a 30 day recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
}

// SecretStoreSpecProviderAwsSecretsManagerInput is an input type that accepts SecretStoreSpecProviderAwsSecretsManagerArgs and SecretStoreSpecProviderAwsSecretsManagerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSecretsManagerInput` via:
//
//	SecretStoreSpecProviderAwsSecretsManagerArgs{...}
type SecretStoreSpecProviderAwsSecretsManagerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSecretsManagerOutput() SecretStoreSpecProviderAwsSecretsManagerOutput
	ToSecretStoreSpecProviderAwsSecretsManagerOutputWithContext(context.Context) SecretStoreSpecProviderAwsSecretsManagerOutput
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManagerArgs struct {
	// Specifies whether to delete the secret without any recovery window. You
	// can't use both this parameter and RecoveryWindowInDays in the same call.
	// If you don't use either, then by default Secrets Manager uses a 30 day
	// recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
	ForceDeleteWithoutRecovery pulumi.BoolPtrInput `pulumi:"forceDeleteWithoutRecovery"`
	// The number of days from 7 to 30 that Secrets Manager waits before
	// permanently deleting the secret. You can't use both this parameter and
	// ForceDeleteWithoutRecovery in the same call. If you don't use either,
	// then by default Secrets Manager uses a 30 day recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
	RecoveryWindowInDays pulumi.IntPtrInput `pulumi:"recoveryWindowInDays"`
}

func (SecretStoreSpecProviderAwsSecretsManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManager)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSecretsManagerArgs) ToSecretStoreSpecProviderAwsSecretsManagerOutput() SecretStoreSpecProviderAwsSecretsManagerOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSecretsManagerArgs) ToSecretStoreSpecProviderAwsSecretsManagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerOutput)
}

func (i SecretStoreSpecProviderAwsSecretsManagerArgs) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSecretsManagerArgs) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerOutput).ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsSecretsManagerPtrInput is an input type that accepts SecretStoreSpecProviderAwsSecretsManagerArgs, SecretStoreSpecProviderAwsSecretsManagerPtr and SecretStoreSpecProviderAwsSecretsManagerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSecretsManagerPtrInput` via:
//
//	        SecretStoreSpecProviderAwsSecretsManagerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsSecretsManagerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSecretsManagerPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPtrOutput
	ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsSecretsManagerPtrOutput
}

type secretStoreSpecProviderAwsSecretsManagerPtrType SecretStoreSpecProviderAwsSecretsManagerArgs

func SecretStoreSpecProviderAwsSecretsManagerPtr(v *SecretStoreSpecProviderAwsSecretsManagerArgs) SecretStoreSpecProviderAwsSecretsManagerPtrInput {
	return (*secretStoreSpecProviderAwsSecretsManagerPtrType)(v)
}

func (*secretStoreSpecProviderAwsSecretsManagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsSecretsManager)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsSecretsManagerPtrType) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsSecretsManagerPtrType) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerPtrOutput)
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManagerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSecretsManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManager)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSecretsManagerOutput) ToSecretStoreSpecProviderAwsSecretsManagerOutput() SecretStoreSpecProviderAwsSecretsManagerOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerOutput) ToSecretStoreSpecProviderAwsSecretsManagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerOutput) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o.ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsSecretsManagerOutput) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsSecretsManager) *SecretStoreSpecProviderAwsSecretsManager {
		return &v
	}).(SecretStoreSpecProviderAwsSecretsManagerPtrOutput)
}

// Specifies whether to delete the secret without any recovery window. You
// can't use both this parameter and RecoveryWindowInDays in the same call.
// If you don't use either, then by default Secrets Manager uses a 30 day
// recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
func (o SecretStoreSpecProviderAwsSecretsManagerOutput) ForceDeleteWithoutRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSecretsManager) *bool { return v.ForceDeleteWithoutRecovery }).(pulumi.BoolPtrOutput)
}

// The number of days from 7 to 30 that Secrets Manager waits before
// permanently deleting the secret. You can't use both this parameter and
// ForceDeleteWithoutRecovery in the same call. If you don't use either,
// then by default Secrets Manager uses a 30 day recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
func (o SecretStoreSpecProviderAwsSecretsManagerOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSecretsManager) *int { return v.RecoveryWindowInDays }).(pulumi.IntPtrOutput)
}

type SecretStoreSpecProviderAwsSecretsManagerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSecretsManagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsSecretsManager)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSecretsManagerPtrOutput) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPtrOutput) ToSecretStoreSpecProviderAwsSecretsManagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPtrOutput) Elem() SecretStoreSpecProviderAwsSecretsManagerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManager) SecretStoreSpecProviderAwsSecretsManager {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsSecretsManager
		return ret
	}).(SecretStoreSpecProviderAwsSecretsManagerOutput)
}

// Specifies whether to delete the secret without any recovery window. You
// can't use both this parameter and RecoveryWindowInDays in the same call.
// If you don't use either, then by default Secrets Manager uses a 30 day
// recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
func (o SecretStoreSpecProviderAwsSecretsManagerPtrOutput) ForceDeleteWithoutRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManager) *bool {
		if v == nil {
			return nil
		}
		return v.ForceDeleteWithoutRecovery
	}).(pulumi.BoolPtrOutput)
}

// The number of days from 7 to 30 that Secrets Manager waits before
// permanently deleting the secret. You can't use both this parameter and
// ForceDeleteWithoutRecovery in the same call. If you don't use either,
// then by default Secrets Manager uses a 30 day recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
func (o SecretStoreSpecProviderAwsSecretsManagerPtrOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManager) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryWindowInDays
	}).(pulumi.IntPtrOutput)
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManagerPatch struct {
	// Specifies whether to delete the secret without any recovery window. You
	// can't use both this parameter and RecoveryWindowInDays in the same call.
	// If you don't use either, then by default Secrets Manager uses a 30 day
	// recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
	ForceDeleteWithoutRecovery *bool `pulumi:"forceDeleteWithoutRecovery"`
	// The number of days from 7 to 30 that Secrets Manager waits before
	// permanently deleting the secret. You can't use both this parameter and
	// ForceDeleteWithoutRecovery in the same call. If you don't use either,
	// then by default Secrets Manager uses a 30 day recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
	RecoveryWindowInDays *int `pulumi:"recoveryWindowInDays"`
}

// SecretStoreSpecProviderAwsSecretsManagerPatchInput is an input type that accepts SecretStoreSpecProviderAwsSecretsManagerPatchArgs and SecretStoreSpecProviderAwsSecretsManagerPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSecretsManagerPatchInput` via:
//
//	SecretStoreSpecProviderAwsSecretsManagerPatchArgs{...}
type SecretStoreSpecProviderAwsSecretsManagerPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSecretsManagerPatchOutput() SecretStoreSpecProviderAwsSecretsManagerPatchOutput
	ToSecretStoreSpecProviderAwsSecretsManagerPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchOutput
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManagerPatchArgs struct {
	// Specifies whether to delete the secret without any recovery window. You
	// can't use both this parameter and RecoveryWindowInDays in the same call.
	// If you don't use either, then by default Secrets Manager uses a 30 day
	// recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
	ForceDeleteWithoutRecovery pulumi.BoolPtrInput `pulumi:"forceDeleteWithoutRecovery"`
	// The number of days from 7 to 30 that Secrets Manager waits before
	// permanently deleting the secret. You can't use both this parameter and
	// ForceDeleteWithoutRecovery in the same call. If you don't use either,
	// then by default Secrets Manager uses a 30 day recovery window.
	// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
	RecoveryWindowInDays pulumi.IntPtrInput `pulumi:"recoveryWindowInDays"`
}

func (SecretStoreSpecProviderAwsSecretsManagerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSecretsManagerPatchArgs) ToSecretStoreSpecProviderAwsSecretsManagerPatchOutput() SecretStoreSpecProviderAwsSecretsManagerPatchOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSecretsManagerPatchArgs) ToSecretStoreSpecProviderAwsSecretsManagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerPatchOutput)
}

func (i SecretStoreSpecProviderAwsSecretsManagerPatchArgs) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSecretsManagerPatchArgs) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerPatchOutput).ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput is an input type that accepts SecretStoreSpecProviderAwsSecretsManagerPatchArgs, SecretStoreSpecProviderAwsSecretsManagerPatchPtr and SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAwsSecretsManagerPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput
	ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput
}

type secretStoreSpecProviderAwsSecretsManagerPatchPtrType SecretStoreSpecProviderAwsSecretsManagerPatchArgs

func SecretStoreSpecProviderAwsSecretsManagerPatchPtr(v *SecretStoreSpecProviderAwsSecretsManagerPatchArgs) SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput {
	return (*secretStoreSpecProviderAwsSecretsManagerPatchPtrType)(v)
}

func (*secretStoreSpecProviderAwsSecretsManagerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsSecretsManagerPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAwsSecretsManagerPatchPtrType) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAwsSecretsManagerPatchPtrType) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput)
}

// SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
type SecretStoreSpecProviderAwsSecretsManagerPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchOutput() SecretStoreSpecProviderAwsSecretsManagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAwsSecretsManagerPatch) *SecretStoreSpecProviderAwsSecretsManagerPatch {
		return &v
	}).(SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput)
}

// Specifies whether to delete the secret without any recovery window. You
// can't use both this parameter and RecoveryWindowInDays in the same call.
// If you don't use either, then by default Secrets Manager uses a 30 day
// recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) ForceDeleteWithoutRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSecretsManagerPatch) *bool { return v.ForceDeleteWithoutRecovery }).(pulumi.BoolPtrOutput)
}

// The number of days from 7 to 30 that Secrets Manager waits before
// permanently deleting the secret. You can't use both this parameter and
// ForceDeleteWithoutRecovery in the same call. If you don't use either,
// then by default Secrets Manager uses a 30 day recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
func (o SecretStoreSpecProviderAwsSecretsManagerPatchOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSecretsManagerPatch) *int { return v.RecoveryWindowInDays }).(pulumi.IntPtrOutput)
}

type SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAwsSecretsManagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput() SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) ToSecretStoreSpecProviderAwsSecretsManagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) Elem() SecretStoreSpecProviderAwsSecretsManagerPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManagerPatch) SecretStoreSpecProviderAwsSecretsManagerPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAwsSecretsManagerPatch
		return ret
	}).(SecretStoreSpecProviderAwsSecretsManagerPatchOutput)
}

// Specifies whether to delete the secret without any recovery window. You
// can't use both this parameter and RecoveryWindowInDays in the same call.
// If you don't use either, then by default Secrets Manager uses a 30 day
// recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery
func (o SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) ForceDeleteWithoutRecovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManagerPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ForceDeleteWithoutRecovery
	}).(pulumi.BoolPtrOutput)
}

// The number of days from 7 to 30 that Secrets Manager waits before
// permanently deleting the secret. You can't use both this parameter and
// ForceDeleteWithoutRecovery in the same call. If you don't use either,
// then by default Secrets Manager uses a 30 day recovery window.
// see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays
func (o SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput) RecoveryWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAwsSecretsManagerPatch) *int {
		if v == nil {
			return nil
		}
		return v.RecoveryWindowInDays
	}).(pulumi.IntPtrOutput)
}

type SecretStoreSpecProviderAwsSessionTags struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderAwsSessionTagsInput is an input type that accepts SecretStoreSpecProviderAwsSessionTagsArgs and SecretStoreSpecProviderAwsSessionTagsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSessionTagsInput` via:
//
//	SecretStoreSpecProviderAwsSessionTagsArgs{...}
type SecretStoreSpecProviderAwsSessionTagsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSessionTagsOutput() SecretStoreSpecProviderAwsSessionTagsOutput
	ToSecretStoreSpecProviderAwsSessionTagsOutputWithContext(context.Context) SecretStoreSpecProviderAwsSessionTagsOutput
}

type SecretStoreSpecProviderAwsSessionTagsArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderAwsSessionTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTags)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSessionTagsArgs) ToSecretStoreSpecProviderAwsSessionTagsOutput() SecretStoreSpecProviderAwsSessionTagsOutput {
	return i.ToSecretStoreSpecProviderAwsSessionTagsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSessionTagsArgs) ToSecretStoreSpecProviderAwsSessionTagsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSessionTagsOutput)
}

// SecretStoreSpecProviderAwsSessionTagsArrayInput is an input type that accepts SecretStoreSpecProviderAwsSessionTagsArray and SecretStoreSpecProviderAwsSessionTagsArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSessionTagsArrayInput` via:
//
//	SecretStoreSpecProviderAwsSessionTagsArray{ SecretStoreSpecProviderAwsSessionTagsArgs{...} }
type SecretStoreSpecProviderAwsSessionTagsArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSessionTagsArrayOutput() SecretStoreSpecProviderAwsSessionTagsArrayOutput
	ToSecretStoreSpecProviderAwsSessionTagsArrayOutputWithContext(context.Context) SecretStoreSpecProviderAwsSessionTagsArrayOutput
}

type SecretStoreSpecProviderAwsSessionTagsArray []SecretStoreSpecProviderAwsSessionTagsInput

func (SecretStoreSpecProviderAwsSessionTagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderAwsSessionTags)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSessionTagsArray) ToSecretStoreSpecProviderAwsSessionTagsArrayOutput() SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return i.ToSecretStoreSpecProviderAwsSessionTagsArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSessionTagsArray) ToSecretStoreSpecProviderAwsSessionTagsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSessionTagsArrayOutput)
}

type SecretStoreSpecProviderAwsSessionTagsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSessionTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTags)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSessionTagsOutput) ToSecretStoreSpecProviderAwsSessionTagsOutput() SecretStoreSpecProviderAwsSessionTagsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsOutput) ToSecretStoreSpecProviderAwsSessionTagsOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSessionTags) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsSessionTagsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSessionTags) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsSessionTagsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSessionTagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderAwsSessionTags)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSessionTagsArrayOutput) ToSecretStoreSpecProviderAwsSessionTagsArrayOutput() SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsArrayOutput) ToSecretStoreSpecProviderAwsSessionTagsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderAwsSessionTagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderAwsSessionTags {
		return vs[0].([]SecretStoreSpecProviderAwsSessionTags)[vs[1].(int)]
	}).(SecretStoreSpecProviderAwsSessionTagsOutput)
}

type SecretStoreSpecProviderAwsSessionTagsPatch struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderAwsSessionTagsPatchInput is an input type that accepts SecretStoreSpecProviderAwsSessionTagsPatchArgs and SecretStoreSpecProviderAwsSessionTagsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSessionTagsPatchInput` via:
//
//	SecretStoreSpecProviderAwsSessionTagsPatchArgs{...}
type SecretStoreSpecProviderAwsSessionTagsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSessionTagsPatchOutput() SecretStoreSpecProviderAwsSessionTagsPatchOutput
	ToSecretStoreSpecProviderAwsSessionTagsPatchOutputWithContext(context.Context) SecretStoreSpecProviderAwsSessionTagsPatchOutput
}

type SecretStoreSpecProviderAwsSessionTagsPatchArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderAwsSessionTagsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSessionTagsPatchArgs) ToSecretStoreSpecProviderAwsSessionTagsPatchOutput() SecretStoreSpecProviderAwsSessionTagsPatchOutput {
	return i.ToSecretStoreSpecProviderAwsSessionTagsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSessionTagsPatchArgs) ToSecretStoreSpecProviderAwsSessionTagsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSessionTagsPatchOutput)
}

// SecretStoreSpecProviderAwsSessionTagsPatchArrayInput is an input type that accepts SecretStoreSpecProviderAwsSessionTagsPatchArray and SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAwsSessionTagsPatchArrayInput` via:
//
//	SecretStoreSpecProviderAwsSessionTagsPatchArray{ SecretStoreSpecProviderAwsSessionTagsPatchArgs{...} }
type SecretStoreSpecProviderAwsSessionTagsPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutput() SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput
	ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutputWithContext(context.Context) SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput
}

type SecretStoreSpecProviderAwsSessionTagsPatchArray []SecretStoreSpecProviderAwsSessionTagsPatchInput

func (SecretStoreSpecProviderAwsSessionTagsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderAwsSessionTagsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAwsSessionTagsPatchArray) ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutput() SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return i.ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAwsSessionTagsPatchArray) ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput)
}

type SecretStoreSpecProviderAwsSessionTagsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSessionTagsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchOutput) ToSecretStoreSpecProviderAwsSessionTagsPatchOutput() SecretStoreSpecProviderAwsSessionTagsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchOutput) ToSecretStoreSpecProviderAwsSessionTagsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSessionTagsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAwsSessionTagsPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderAwsSessionTagsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput) ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutput() SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput) ToSecretStoreSpecProviderAwsSessionTagsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderAwsSessionTagsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderAwsSessionTagsPatch {
		return vs[0].([]SecretStoreSpecProviderAwsSessionTagsPatch)[vs[1].(int)]
	}).(SecretStoreSpecProviderAwsSessionTagsPatchOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekv struct {
	AuthSecretRef *SecretStoreSpecProviderAzurekvAuthSecretRef `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType *string `pulumi:"authType"`
	// EnvironmentType specifies the Azure cloud environment endpoints to use for
	// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
	// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
	// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
	EnvironmentType *string `pulumi:"environmentType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId        *string                                          `pulumi:"identityId"`
	ServiceAccountRef *SecretStoreSpecProviderAzurekvServiceAccountRef `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
	TenantId *string `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl *string `pulumi:"vaultUrl"`
}

// SecretStoreSpecProviderAzurekvInput is an input type that accepts SecretStoreSpecProviderAzurekvArgs and SecretStoreSpecProviderAzurekvOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvInput` via:
//
//	SecretStoreSpecProviderAzurekvArgs{...}
type SecretStoreSpecProviderAzurekvInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput
	ToSecretStoreSpecProviderAzurekvOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvOutput
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvArgs struct {
	AuthSecretRef SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// EnvironmentType specifies the Azure cloud environment endpoints to use for
	// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
	// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
	// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
	EnvironmentType pulumi.StringPtrInput `pulumi:"environmentType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId        pulumi.StringPtrInput                                   `pulumi:"identityId"`
	ServiceAccountRef SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl pulumi.StringPtrInput `pulumi:"vaultUrl"`
}

func (SecretStoreSpecProviderAzurekvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput {
	return i.ToSecretStoreSpecProviderAzurekvOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvOutput)
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvArgs) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvOutput).ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvArgs, SecretStoreSpecProviderAzurekvPtr and SecretStoreSpecProviderAzurekvPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput
	ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvPtrOutput
}

type secretStoreSpecProviderAzurekvPtrType SecretStoreSpecProviderAzurekvArgs

func SecretStoreSpecProviderAzurekvPtr(v *SecretStoreSpecProviderAzurekvArgs) SecretStoreSpecProviderAzurekvPtrInput {
	return (*secretStoreSpecProviderAzurekvPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvPtrType) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvPtrType) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvOutput() SecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvOutput) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekv {
		return &v
	}).(SecretStoreSpecProviderAzurekvPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// EnvironmentType specifies the Azure cloud environment endpoints to use for
// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
func (o SecretStoreSpecProviderAzurekvOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekv) *string { return v.VaultUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekv)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) ToSecretStoreSpecProviderAzurekvPtrOutput() SecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) ToSecretStoreSpecProviderAzurekvPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) Elem() SecretStoreSpecProviderAzurekvOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) SecretStoreSpecProviderAzurekv {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekv
		return ret
	}).(SecretStoreSpecProviderAzurekvOutput)
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// EnvironmentType specifies the Azure cloud environment endpoints to use for
// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
func (o SecretStoreSpecProviderAzurekvPtrOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentType
	}).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvPtrOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekv) *string {
		if v == nil {
			return nil
		}
		return v.VaultUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRef struct {
	ClientCertificate *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate `pulumi:"clientCertificate"`
	ClientId          *SecretStoreSpecProviderAzurekvAuthSecretRefClientId          `pulumi:"clientId"`
	ClientSecret      *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret      `pulumi:"clientSecret"`
	TenantId          *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId          `pulumi:"tenantId"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefArgs and SecretStoreSpecProviderAzurekvAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRefArgs struct {
	ClientCertificate SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput `pulumi:"clientCertificate"`
	ClientId          SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput          `pulumi:"clientId"`
	ClientSecret      SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput      `pulumi:"clientSecret"`
	TenantId          SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput          `pulumi:"tenantId"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefArgs, SecretStoreSpecProviderAzurekvAuthSecretRefPtr and SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefPtrType SecretStoreSpecProviderAzurekvAuthSecretRefArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefArgs) SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutput() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientCertificate() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate {
		return v.ClientCertificate
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefOutput) TenantId() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId {
		return v.TenantId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) SecretStoreSpecProviderAzurekvAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientCertificate() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput) TenantId() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRef) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput)
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput)
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput)
}

// The Azure ClientCertificate of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) SecretStoreSpecProviderAzurekvAuthSecretRefClientId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientId
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput)
}

// The Azure clientId of the service principle or managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs, SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtr and SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrType SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput)
}

// The Azure ClientSecret of the service principle used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRefPatch struct {
	ClientCertificate *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch `pulumi:"clientCertificate"`
	ClientId          *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch          `pulumi:"clientId"`
	ClientSecret      *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch      `pulumi:"clientSecret"`
	TenantId          *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch          `pulumi:"tenantId"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs and SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs struct {
	ClientCertificate SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput `pulumi:"clientCertificate"`
	ClientId          SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput          `pulumi:"clientId"`
	ClientSecret      SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput      `pulumi:"clientSecret"`
	TenantId          SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput          `pulumi:"tenantId"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs, SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtr and SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefPatchPtrType SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput)
}

// Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
type SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ClientCertificate() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch {
		return v.ClientCertificate
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch {
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch {
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput) TenantId() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch {
		return v.TenantId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatch) SecretStoreSpecProviderAzurekvAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ClientCertificate() SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatch {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ClientId() SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatch {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) ClientSecret() SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatch {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput) TenantId() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput)
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs and SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantId)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs, SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtr and SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrType SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefTenantId)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput)
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefTenantId)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) SecretStoreSpecProviderAzurekvAuthSecretRefTenantId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefTenantId
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs and SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs{...}
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput).ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs, SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtr and SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput
}

type secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrType SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs

func SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtr(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrType) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput)
}

// The Azure tenantId of the managed identity used for authentication.
type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) ToSecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvPatch struct {
	AuthSecretRef *SecretStoreSpecProviderAzurekvAuthSecretRefPatch `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType *string `pulumi:"authType"`
	// EnvironmentType specifies the Azure cloud environment endpoints to use for
	// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
	// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
	// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
	EnvironmentType *string `pulumi:"environmentType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId        *string                                               `pulumi:"identityId"`
	ServiceAccountRef *SecretStoreSpecProviderAzurekvServiceAccountRefPatch `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
	TenantId *string `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl *string `pulumi:"vaultUrl"`
}

// SecretStoreSpecProviderAzurekvPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvPatchArgs and SecretStoreSpecProviderAzurekvPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvPatchArgs{...}
type SecretStoreSpecProviderAzurekvPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvPatchOutput() SecretStoreSpecProviderAzurekvPatchOutput
	ToSecretStoreSpecProviderAzurekvPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvPatchOutput
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvPatchArgs struct {
	AuthSecretRef SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput `pulumi:"authSecretRef"`
	// Auth type defines how to authenticate to the keyvault service.
	// Valid values are:
	// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
	// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// EnvironmentType specifies the Azure cloud environment endpoints to use for
	// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
	// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
	// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
	EnvironmentType pulumi.StringPtrInput `pulumi:"environmentType"`
	// If multiple Managed Identity is assigned to the pod, you can select the one to be used
	IdentityId        pulumi.StringPtrInput                                        `pulumi:"identityId"`
	ServiceAccountRef SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
	// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Vault Url from which the secrets to be fetched from.
	VaultUrl pulumi.StringPtrInput `pulumi:"vaultUrl"`
}

func (SecretStoreSpecProviderAzurekvPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvPatchArgs) ToSecretStoreSpecProviderAzurekvPatchOutput() SecretStoreSpecProviderAzurekvPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvPatchArgs) ToSecretStoreSpecProviderAzurekvPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvPatchArgs) ToSecretStoreSpecProviderAzurekvPatchPtrOutput() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvPatchArgs) ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvPatchOutput).ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvPatchArgs, SecretStoreSpecProviderAzurekvPatchPtr and SecretStoreSpecProviderAzurekvPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvPatchPtrOutput() SecretStoreSpecProviderAzurekvPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvPatchPtrOutput
}

type secretStoreSpecProviderAzurekvPatchPtrType SecretStoreSpecProviderAzurekvPatchArgs

func SecretStoreSpecProviderAzurekvPatchPtr(v *SecretStoreSpecProviderAzurekvPatchArgs) SecretStoreSpecProviderAzurekvPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvPatchPtrType) ToSecretStoreSpecProviderAzurekvPatchPtrOutput() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvPatchPtrType) ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvPatchPtrOutput)
}

// AzureKV configures this store to sync secrets using Azure Key Vault provider
type SecretStoreSpecProviderAzurekvPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) ToSecretStoreSpecProviderAzurekvPatchOutput() SecretStoreSpecProviderAzurekvPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) ToSecretStoreSpecProviderAzurekvPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) ToSecretStoreSpecProviderAzurekvPatchPtrOutput() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvPatch) *SecretStoreSpecProviderAzurekvPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvPatchPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefPatch {
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvPatchOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// EnvironmentType specifies the Azure cloud environment endpoints to use for
// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
func (o SecretStoreSpecProviderAzurekvPatchOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *string { return v.EnvironmentType }).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvPatchOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvPatchOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *SecretStoreSpecProviderAzurekvServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvPatchOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvPatchOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvPatch) *string { return v.VaultUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) ToSecretStoreSpecProviderAzurekvPatchPtrOutput() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) ToSecretStoreSpecProviderAzurekvPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) SecretStoreSpecProviderAzurekvPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvPatchOutput)
}

func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) AuthSecretRef() SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *SecretStoreSpecProviderAzurekvAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthSecretRef
	}).(SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput)
}

// Auth type defines how to authenticate to the keyvault service.
// Valid values are:
// - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret)
// - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)
func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// EnvironmentType specifies the Azure cloud environment endpoints to use for
// connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.
// The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152
// PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud
func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) EnvironmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentType
	}).(pulumi.StringPtrOutput)
}

// If multiple Managed Identity is assigned to the pod, you can select the one to be used
func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *SecretStoreSpecProviderAzurekvServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput)
}

// TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type. Optional for WorkloadIdentity.
func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Vault Url from which the secrets to be fetched from.
func (o SecretStoreSpecProviderAzurekvPatchPtrOutput) VaultUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvPatch) *string {
		if v == nil {
			return nil
		}
		return v.VaultUrl
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefArgs and SecretStoreSpecProviderAzurekvServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
type SecretStoreSpecProviderAzurekvServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput).ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefArgs, SecretStoreSpecProviderAzurekvServiceAccountRefPtr and SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput
}

type secretStoreSpecProviderAzurekvServiceAccountRefPtrType SecretStoreSpecProviderAzurekvServiceAccountRefArgs

func SecretStoreSpecProviderAzurekvServiceAccountRefPtr(v *SecretStoreSpecProviderAzurekvServiceAccountRefArgs) SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderAzurekvServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutput() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvServiceAccountRef) *SecretStoreSpecProviderAzurekvServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderAzurekvServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) SecretStoreSpecProviderAzurekvServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderAzurekvServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs and SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderAzurekvServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput).ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs, SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtr and SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderAzurekvServiceAccountRefPatchPtrType SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs

func SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtr(v *SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderAzurekvServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderAzurekvServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderAzurekvServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderAzurekvServiceAccountRefPatch) *SecretStoreSpecProviderAzurekvServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderAzurekvServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderAzurekvServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRefPatch) SecretStoreSpecProviderAzurekvServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderAzurekvServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderAzurekvServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanager struct {
	ApiURL                *string                                             `pulumi:"apiURL"`
	Auth                  *SecretStoreSpecProviderBitwardensecretsmanagerAuth `pulumi:"auth"`
	BitwardenServerSDKURL *string                                             `pulumi:"bitwardenServerSDKURL"`
	// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
	// can be performed.
	CaBundle    *string `pulumi:"caBundle"`
	IdentityURL *string `pulumi:"identityURL"`
	// OrganizationID determines which organization this secret store manages.
	OrganizationID *string `pulumi:"organizationID"`
	// ProjectID determines which project this secret store manages.
	ProjectID *string `pulumi:"projectID"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerArgs and SecretStoreSpecProviderBitwardensecretsmanagerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerOutput() SecretStoreSpecProviderBitwardensecretsmanagerOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerOutput
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanagerArgs struct {
	ApiURL                pulumi.StringPtrInput                                      `pulumi:"apiURL"`
	Auth                  SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput `pulumi:"auth"`
	BitwardenServerSDKURL pulumi.StringPtrInput                                      `pulumi:"bitwardenServerSDKURL"`
	// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
	// can be performed.
	CaBundle    pulumi.StringPtrInput `pulumi:"caBundle"`
	IdentityURL pulumi.StringPtrInput `pulumi:"identityURL"`
	// OrganizationID determines which organization this secret store manages.
	OrganizationID pulumi.StringPtrInput `pulumi:"organizationID"`
	// ProjectID determines which project this secret store manages.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanager)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerOutput() SecretStoreSpecProviderBitwardensecretsmanagerOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerArgs, SecretStoreSpecProviderBitwardensecretsmanagerPtr and SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerPtrType SecretStoreSpecProviderBitwardensecretsmanagerArgs

func SecretStoreSpecProviderBitwardensecretsmanagerPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerArgs) SecretStoreSpecProviderBitwardensecretsmanagerPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanager)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput)
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanagerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanager)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerOutput() SecretStoreSpecProviderBitwardensecretsmanagerOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanager) *SecretStoreSpecProviderBitwardensecretsmanager {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.ApiURL }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) Auth() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *SecretStoreSpecProviderBitwardensecretsmanagerAuth {
		return v.Auth
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) BitwardenServerSDKURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.BitwardenServerSDKURL }).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
// can be performed.
func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) IdentityURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.IdentityURL }).(pulumi.StringPtrOutput)
}

// OrganizationID determines which organization this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) OrganizationID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.OrganizationID }).(pulumi.StringPtrOutput)
}

// ProjectID determines which project this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanager) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanager)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) SecretStoreSpecProviderBitwardensecretsmanager {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanager
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) ApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.ApiURL
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) Auth() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *SecretStoreSpecProviderBitwardensecretsmanagerAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) BitwardenServerSDKURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.BitwardenServerSDKURL
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
// can be performed.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) IdentityURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.IdentityURL
	}).(pulumi.StringPtrOutput)
}

// OrganizationID determines which organization this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) OrganizationID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationID
	}).(pulumi.StringPtrOutput)
}

// ProjectID determines which project this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanager) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuth struct {
	SecretRef *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs struct {
	SecretRef SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuth) *SecretStoreSpecProviderBitwardensecretsmanagerAuth {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput) SecretRef() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuth) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuth) SecretStoreSpecProviderBitwardensecretsmanagerAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuth
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput) SecretRef() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuth) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput)
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch struct {
	SecretRef *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a bitwarden machine account instance.
// Make sure that the token being used has permissions on the given secret.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput) SecretRef() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch) SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput)
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef struct {
	Credentials *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials `pulumi:"credentials"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs struct {
	Credentials SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput)
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput) Credentials() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials {
		return v.Credentials
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput) Credentials() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRef) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput)
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput)
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput)
}

// AccessToken used for the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch struct {
	Credentials *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch `pulumi:"credentials"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs struct {
	Credentials SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs, SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtr and SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrType SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs

func SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput)
}

// BitwardenSecretsManagerSecretRef contains the credential ref to the bitwarden instance.
type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput) Credentials() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch {
		return v.Credentials
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch) SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput) Credentials() SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatch {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput)
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanagerPatch struct {
	ApiURL                *string                                                  `pulumi:"apiURL"`
	Auth                  *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch `pulumi:"auth"`
	BitwardenServerSDKURL *string                                                  `pulumi:"bitwardenServerSDKURL"`
	// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
	// can be performed.
	CaBundle    *string `pulumi:"caBundle"`
	IdentityURL *string `pulumi:"identityURL"`
	// OrganizationID determines which organization this secret store manages.
	OrganizationID *string `pulumi:"organizationID"`
	// ProjectID determines which project this secret store manages.
	ProjectID *string `pulumi:"projectID"`
}

// SecretStoreSpecProviderBitwardensecretsmanagerPatchInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs and SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerPatchInput` via:
//
//	SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs{...}
type SecretStoreSpecProviderBitwardensecretsmanagerPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs struct {
	ApiURL                pulumi.StringPtrInput                                           `pulumi:"apiURL"`
	Auth                  SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput `pulumi:"auth"`
	BitwardenServerSDKURL pulumi.StringPtrInput                                           `pulumi:"bitwardenServerSDKURL"`
	// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
	// can be performed.
	CaBundle    pulumi.StringPtrInput `pulumi:"caBundle"`
	IdentityURL pulumi.StringPtrInput `pulumi:"identityURL"`
	// OrganizationID determines which organization this secret store manages.
	OrganizationID pulumi.StringPtrInput `pulumi:"organizationID"`
	// ProjectID determines which project this secret store manages.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput)
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput).ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput is an input type that accepts SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs, SecretStoreSpecProviderBitwardensecretsmanagerPatchPtr and SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput` via:
//
//	        SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput
	ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput
}

type secretStoreSpecProviderBitwardensecretsmanagerPatchPtrType SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs

func SecretStoreSpecProviderBitwardensecretsmanagerPatchPtr(v *SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput {
	return (*secretStoreSpecProviderBitwardensecretsmanagerPatchPtrType)(v)
}

func (*secretStoreSpecProviderBitwardensecretsmanagerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderBitwardensecretsmanagerPatchPtrType) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput)
}

// BitwardenSecretsManager configures this store to sync secrets using BitwardenSecretsManager provider
type SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o.ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *SecretStoreSpecProviderBitwardensecretsmanagerPatch {
		return &v
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.ApiURL }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) Auth() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) BitwardenServerSDKURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.BitwardenServerSDKURL }).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
// can be performed.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) IdentityURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.IdentityURL }).(pulumi.StringPtrOutput)
}

// OrganizationID determines which organization this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) OrganizationID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.OrganizationID }).(pulumi.StringPtrOutput)
}

// ProjectID determines which project this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderBitwardensecretsmanagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) ToSecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) Elem() SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) SecretStoreSpecProviderBitwardensecretsmanagerPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderBitwardensecretsmanagerPatch
		return ret
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) ApiURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiURL
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) Auth() SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *SecretStoreSpecProviderBitwardensecretsmanagerAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) BitwardenServerSDKURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.BitwardenServerSDKURL
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded certificate for the bitwarden server sdk. The sdk MUST run with HTTPS to make sure no MITM attack
// can be performed.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) IdentityURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.IdentityURL
	}).(pulumi.StringPtrOutput)
}

// OrganizationID determines which organization this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) OrganizationID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationID
	}).(pulumi.StringPtrOutput)
}

// ProjectID determines which project this secret store manages.
func (o SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderBitwardensecretsmanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChef struct {
	Auth *SecretStoreSpecProviderChefAuth `pulumi:"auth"`
	// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
	ServerUrl *string `pulumi:"serverUrl"`
	// UserName should be the user ID on the chef server
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderChefInput is an input type that accepts SecretStoreSpecProviderChefArgs and SecretStoreSpecProviderChefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefInput` via:
//
//	SecretStoreSpecProviderChefArgs{...}
type SecretStoreSpecProviderChefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefOutput() SecretStoreSpecProviderChefOutput
	ToSecretStoreSpecProviderChefOutputWithContext(context.Context) SecretStoreSpecProviderChefOutput
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChefArgs struct {
	Auth SecretStoreSpecProviderChefAuthPtrInput `pulumi:"auth"`
	// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
	ServerUrl pulumi.StringPtrInput `pulumi:"serverUrl"`
	// UserName should be the user ID on the chef server
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderChefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChef)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefArgs) ToSecretStoreSpecProviderChefOutput() SecretStoreSpecProviderChefOutput {
	return i.ToSecretStoreSpecProviderChefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefArgs) ToSecretStoreSpecProviderChefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefOutput)
}

func (i SecretStoreSpecProviderChefArgs) ToSecretStoreSpecProviderChefPtrOutput() SecretStoreSpecProviderChefPtrOutput {
	return i.ToSecretStoreSpecProviderChefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefArgs) ToSecretStoreSpecProviderChefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefOutput).ToSecretStoreSpecProviderChefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefPtrInput is an input type that accepts SecretStoreSpecProviderChefArgs, SecretStoreSpecProviderChefPtr and SecretStoreSpecProviderChefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefPtrInput` via:
//
//	        SecretStoreSpecProviderChefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefPtrOutput() SecretStoreSpecProviderChefPtrOutput
	ToSecretStoreSpecProviderChefPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefPtrOutput
}

type secretStoreSpecProviderChefPtrType SecretStoreSpecProviderChefArgs

func SecretStoreSpecProviderChefPtr(v *SecretStoreSpecProviderChefArgs) SecretStoreSpecProviderChefPtrInput {
	return (*secretStoreSpecProviderChefPtrType)(v)
}

func (*secretStoreSpecProviderChefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChef)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefPtrType) ToSecretStoreSpecProviderChefPtrOutput() SecretStoreSpecProviderChefPtrOutput {
	return i.ToSecretStoreSpecProviderChefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefPtrType) ToSecretStoreSpecProviderChefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefPtrOutput)
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefOutput) ToSecretStoreSpecProviderChefOutput() SecretStoreSpecProviderChefOutput {
	return o
}

func (o SecretStoreSpecProviderChefOutput) ToSecretStoreSpecProviderChefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefOutput {
	return o
}

func (o SecretStoreSpecProviderChefOutput) ToSecretStoreSpecProviderChefPtrOutput() SecretStoreSpecProviderChefPtrOutput {
	return o.ToSecretStoreSpecProviderChefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefOutput) ToSecretStoreSpecProviderChefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChef) *SecretStoreSpecProviderChef {
		return &v
	}).(SecretStoreSpecProviderChefPtrOutput)
}

func (o SecretStoreSpecProviderChefOutput) Auth() SecretStoreSpecProviderChefAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChef) *SecretStoreSpecProviderChefAuth { return v.Auth }).(SecretStoreSpecProviderChefAuthPtrOutput)
}

// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
func (o SecretStoreSpecProviderChefOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChef) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// UserName should be the user ID on the chef server
func (o SecretStoreSpecProviderChefOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChef) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderChefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefPtrOutput) ToSecretStoreSpecProviderChefPtrOutput() SecretStoreSpecProviderChefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefPtrOutput) ToSecretStoreSpecProviderChefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefPtrOutput) Elem() SecretStoreSpecProviderChefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChef) SecretStoreSpecProviderChef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChef
		return ret
	}).(SecretStoreSpecProviderChefOutput)
}

func (o SecretStoreSpecProviderChefPtrOutput) Auth() SecretStoreSpecProviderChefAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChef) *SecretStoreSpecProviderChefAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderChefAuthPtrOutput)
}

// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
func (o SecretStoreSpecProviderChefPtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChef) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// UserName should be the user ID on the chef server
func (o SecretStoreSpecProviderChefPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChef) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuth struct {
	SecretRef *SecretStoreSpecProviderChefAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderChefAuthInput is an input type that accepts SecretStoreSpecProviderChefAuthArgs and SecretStoreSpecProviderChefAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthInput` via:
//
//	SecretStoreSpecProviderChefAuthArgs{...}
type SecretStoreSpecProviderChefAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthOutput() SecretStoreSpecProviderChefAuthOutput
	ToSecretStoreSpecProviderChefAuthOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthOutput
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuthArgs struct {
	SecretRef SecretStoreSpecProviderChefAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderChefAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthArgs) ToSecretStoreSpecProviderChefAuthOutput() SecretStoreSpecProviderChefAuthOutput {
	return i.ToSecretStoreSpecProviderChefAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthArgs) ToSecretStoreSpecProviderChefAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthOutput)
}

func (i SecretStoreSpecProviderChefAuthArgs) ToSecretStoreSpecProviderChefAuthPtrOutput() SecretStoreSpecProviderChefAuthPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthArgs) ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthOutput).ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthArgs, SecretStoreSpecProviderChefAuthPtr and SecretStoreSpecProviderChefAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthPtrOutput() SecretStoreSpecProviderChefAuthPtrOutput
	ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthPtrOutput
}

type secretStoreSpecProviderChefAuthPtrType SecretStoreSpecProviderChefAuthArgs

func SecretStoreSpecProviderChefAuthPtr(v *SecretStoreSpecProviderChefAuthArgs) SecretStoreSpecProviderChefAuthPtrInput {
	return (*secretStoreSpecProviderChefAuthPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthPtrType) ToSecretStoreSpecProviderChefAuthPtrOutput() SecretStoreSpecProviderChefAuthPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthPtrType) ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthOutput) ToSecretStoreSpecProviderChefAuthOutput() SecretStoreSpecProviderChefAuthOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthOutput) ToSecretStoreSpecProviderChefAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthOutput) ToSecretStoreSpecProviderChefAuthPtrOutput() SecretStoreSpecProviderChefAuthPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthOutput) ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuth) *SecretStoreSpecProviderChefAuth {
		return &v
	}).(SecretStoreSpecProviderChefAuthPtrOutput)
}

func (o SecretStoreSpecProviderChefAuthOutput) SecretRef() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuth) *SecretStoreSpecProviderChefAuthSecretRef { return v.SecretRef }).(SecretStoreSpecProviderChefAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderChefAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthPtrOutput) ToSecretStoreSpecProviderChefAuthPtrOutput() SecretStoreSpecProviderChefAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPtrOutput) ToSecretStoreSpecProviderChefAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPtrOutput) Elem() SecretStoreSpecProviderChefAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuth) SecretStoreSpecProviderChefAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuth
		return ret
	}).(SecretStoreSpecProviderChefAuthOutput)
}

func (o SecretStoreSpecProviderChefAuthPtrOutput) SecretRef() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuth) *SecretStoreSpecProviderChefAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPtrOutput)
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuthPatch struct {
	SecretRef *SecretStoreSpecProviderChefAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderChefAuthPatchInput is an input type that accepts SecretStoreSpecProviderChefAuthPatchArgs and SecretStoreSpecProviderChefAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthPatchInput` via:
//
//	SecretStoreSpecProviderChefAuthPatchArgs{...}
type SecretStoreSpecProviderChefAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthPatchOutput() SecretStoreSpecProviderChefAuthPatchOutput
	ToSecretStoreSpecProviderChefAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthPatchOutput
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderChefAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthPatchArgs) ToSecretStoreSpecProviderChefAuthPatchOutput() SecretStoreSpecProviderChefAuthPatchOutput {
	return i.ToSecretStoreSpecProviderChefAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthPatchArgs) ToSecretStoreSpecProviderChefAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthPatchOutput)
}

func (i SecretStoreSpecProviderChefAuthPatchArgs) ToSecretStoreSpecProviderChefAuthPatchPtrOutput() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthPatchArgs) ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthPatchOutput).ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthPatchArgs, SecretStoreSpecProviderChefAuthPatchPtr and SecretStoreSpecProviderChefAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthPatchPtrOutput() SecretStoreSpecProviderChefAuthPatchPtrOutput
	ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthPatchPtrOutput
}

type secretStoreSpecProviderChefAuthPatchPtrType SecretStoreSpecProviderChefAuthPatchArgs

func SecretStoreSpecProviderChefAuthPatchPtr(v *SecretStoreSpecProviderChefAuthPatchArgs) SecretStoreSpecProviderChefAuthPatchPtrInput {
	return (*secretStoreSpecProviderChefAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthPatchPtrType) ToSecretStoreSpecProviderChefAuthPatchPtrOutput() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthPatchPtrType) ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against chef Server
type SecretStoreSpecProviderChefAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthPatchOutput) ToSecretStoreSpecProviderChefAuthPatchOutput() SecretStoreSpecProviderChefAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPatchOutput) ToSecretStoreSpecProviderChefAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPatchOutput) ToSecretStoreSpecProviderChefAuthPatchPtrOutput() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthPatchOutput) ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuthPatch) *SecretStoreSpecProviderChefAuthPatch {
		return &v
	}).(SecretStoreSpecProviderChefAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderChefAuthPatchOutput) SecretRef() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthPatch) *SecretStoreSpecProviderChefAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderChefAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthPatchPtrOutput) ToSecretStoreSpecProviderChefAuthPatchPtrOutput() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPatchPtrOutput) ToSecretStoreSpecProviderChefAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthPatchPtrOutput) Elem() SecretStoreSpecProviderChefAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthPatch) SecretStoreSpecProviderChefAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuthPatch
		return ret
	}).(SecretStoreSpecProviderChefAuthPatchOutput)
}

func (o SecretStoreSpecProviderChefAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthPatch) *SecretStoreSpecProviderChefAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput)
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRef struct {
	PrivateKeySecretRef *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef `pulumi:"privateKeySecretRef"`
}

// SecretStoreSpecProviderChefAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefArgs and SecretStoreSpecProviderChefAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderChefAuthSecretRefArgs{...}
type SecretStoreSpecProviderChefAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefOutput
	ToSecretStoreSpecProviderChefAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefOutput
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRefArgs struct {
	PrivateKeySecretRef SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput `pulumi:"privateKeySecretRef"`
}

func (SecretStoreSpecProviderChefAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthSecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderChefAuthSecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefOutput).ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefArgs, SecretStoreSpecProviderChefAuthSecretRefPtr and SecretStoreSpecProviderChefAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPtrOutput
}

type secretStoreSpecProviderChefAuthSecretRefPtrType SecretStoreSpecProviderChefAuthSecretRefArgs

func SecretStoreSpecProviderChefAuthSecretRefPtr(v *SecretStoreSpecProviderChefAuthSecretRefArgs) SecretStoreSpecProviderChefAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderChefAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthSecretRefPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthSecretRefPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPtrOutput)
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthSecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuthSecretRef) *SecretStoreSpecProviderChefAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderChefAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderChefAuthSecretRefOutput) PrivateKeySecretRef() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRef) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef {
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderChefAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderChefAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRef) SecretStoreSpecProviderChefAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderChefAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderChefAuthSecretRefPtrOutput) PrivateKeySecretRef() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRef) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput)
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRefPatch struct {
	PrivateKeySecretRef *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch `pulumi:"privateKeySecretRef"`
}

// SecretStoreSpecProviderChefAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPatchArgs and SecretStoreSpecProviderChefAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderChefAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderChefAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchOutput
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRefPatchArgs struct {
	PrivateKeySecretRef SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput `pulumi:"privateKeySecretRef"`
}

func (SecretStoreSpecProviderChefAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthSecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderChefAuthSecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPatchOutput).ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPatchArgs, SecretStoreSpecProviderChefAuthSecretRefPatchPtr and SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderChefAuthSecretRefPatchPtrType SecretStoreSpecProviderChefAuthSecretRefPatchArgs

func SecretStoreSpecProviderChefAuthSecretRefPatchPtr(v *SecretStoreSpecProviderChefAuthSecretRefPatchArgs) SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderChefAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput)
}

// ChefAuthSecretRef holds secret references for chef server login credentials.
type SecretStoreSpecProviderChefAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuthSecretRefPatch) *SecretStoreSpecProviderChefAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchOutput) PrivateKeySecretRef() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPatch) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch {
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderChefAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPatch) SecretStoreSpecProviderChefAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderChefAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput) PrivateKeySecretRef() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPatch) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput)
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs and SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefInput` via:
//
//	SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs{...}
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput)
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput).ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs, SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtr and SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput
}

type secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrType SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs

func SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtr(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput {
	return (*secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput)
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef
		return ret
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs and SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput).ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs, SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtr and SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrType SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs

func SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtr(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrType) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput)
}

// SecretKey is the Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChefPatch struct {
	Auth *SecretStoreSpecProviderChefAuthPatch `pulumi:"auth"`
	// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
	ServerUrl *string `pulumi:"serverUrl"`
	// UserName should be the user ID on the chef server
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderChefPatchInput is an input type that accepts SecretStoreSpecProviderChefPatchArgs and SecretStoreSpecProviderChefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefPatchInput` via:
//
//	SecretStoreSpecProviderChefPatchArgs{...}
type SecretStoreSpecProviderChefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefPatchOutput() SecretStoreSpecProviderChefPatchOutput
	ToSecretStoreSpecProviderChefPatchOutputWithContext(context.Context) SecretStoreSpecProviderChefPatchOutput
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChefPatchArgs struct {
	Auth SecretStoreSpecProviderChefAuthPatchPtrInput `pulumi:"auth"`
	// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
	ServerUrl pulumi.StringPtrInput `pulumi:"serverUrl"`
	// UserName should be the user ID on the chef server
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderChefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderChefPatchArgs) ToSecretStoreSpecProviderChefPatchOutput() SecretStoreSpecProviderChefPatchOutput {
	return i.ToSecretStoreSpecProviderChefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefPatchArgs) ToSecretStoreSpecProviderChefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefPatchOutput)
}

func (i SecretStoreSpecProviderChefPatchArgs) ToSecretStoreSpecProviderChefPatchPtrOutput() SecretStoreSpecProviderChefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderChefPatchArgs) ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefPatchOutput).ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderChefPatchPtrInput is an input type that accepts SecretStoreSpecProviderChefPatchArgs, SecretStoreSpecProviderChefPatchPtr and SecretStoreSpecProviderChefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderChefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderChefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderChefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderChefPatchPtrOutput() SecretStoreSpecProviderChefPatchPtrOutput
	ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderChefPatchPtrOutput
}

type secretStoreSpecProviderChefPatchPtrType SecretStoreSpecProviderChefPatchArgs

func SecretStoreSpecProviderChefPatchPtr(v *SecretStoreSpecProviderChefPatchArgs) SecretStoreSpecProviderChefPatchPtrInput {
	return (*secretStoreSpecProviderChefPatchPtrType)(v)
}

func (*secretStoreSpecProviderChefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderChefPatchPtrType) ToSecretStoreSpecProviderChefPatchPtrOutput() SecretStoreSpecProviderChefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderChefPatchPtrType) ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderChefPatchPtrOutput)
}

// Chef configures this store to sync secrets with chef server
type SecretStoreSpecProviderChefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderChefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefPatchOutput) ToSecretStoreSpecProviderChefPatchOutput() SecretStoreSpecProviderChefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefPatchOutput) ToSecretStoreSpecProviderChefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderChefPatchOutput) ToSecretStoreSpecProviderChefPatchPtrOutput() SecretStoreSpecProviderChefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderChefPatchOutput) ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderChefPatch) *SecretStoreSpecProviderChefPatch {
		return &v
	}).(SecretStoreSpecProviderChefPatchPtrOutput)
}

func (o SecretStoreSpecProviderChefPatchOutput) Auth() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefPatch) *SecretStoreSpecProviderChefAuthPatch { return v.Auth }).(SecretStoreSpecProviderChefAuthPatchPtrOutput)
}

// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
func (o SecretStoreSpecProviderChefPatchOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefPatch) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// UserName should be the user ID on the chef server
func (o SecretStoreSpecProviderChefPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderChefPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderChefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderChefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderChefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderChefPatchPtrOutput) ToSecretStoreSpecProviderChefPatchPtrOutput() SecretStoreSpecProviderChefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefPatchPtrOutput) ToSecretStoreSpecProviderChefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderChefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderChefPatchPtrOutput) Elem() SecretStoreSpecProviderChefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefPatch) SecretStoreSpecProviderChefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderChefPatch
		return ret
	}).(SecretStoreSpecProviderChefPatchOutput)
}

func (o SecretStoreSpecProviderChefPatchPtrOutput) Auth() SecretStoreSpecProviderChefAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefPatch) *SecretStoreSpecProviderChefAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderChefAuthPatchPtrOutput)
}

// ServerURL is the chef server URL used to connect to. If using orgs you should include your org in the url and terminate the url with a "/"
func (o SecretStoreSpecProviderChefPatchPtrOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServerUrl
	}).(pulumi.StringPtrOutput)
}

// UserName should be the user ID on the chef server
func (o SecretStoreSpecProviderChefPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderChefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjur struct {
	Auth       *SecretStoreSpecProviderConjurAuth       `pulumi:"auth"`
	CaBundle   *string                                  `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderConjurCaProvider `pulumi:"caProvider"`
	Url        *string                                  `pulumi:"url"`
}

// SecretStoreSpecProviderConjurInput is an input type that accepts SecretStoreSpecProviderConjurArgs and SecretStoreSpecProviderConjurOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurInput` via:
//
//	SecretStoreSpecProviderConjurArgs{...}
type SecretStoreSpecProviderConjurInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurOutput() SecretStoreSpecProviderConjurOutput
	ToSecretStoreSpecProviderConjurOutputWithContext(context.Context) SecretStoreSpecProviderConjurOutput
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjurArgs struct {
	Auth       SecretStoreSpecProviderConjurAuthPtrInput       `pulumi:"auth"`
	CaBundle   pulumi.StringPtrInput                           `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderConjurCaProviderPtrInput `pulumi:"caProvider"`
	Url        pulumi.StringPtrInput                           `pulumi:"url"`
}

func (SecretStoreSpecProviderConjurArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjur)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurArgs) ToSecretStoreSpecProviderConjurOutput() SecretStoreSpecProviderConjurOutput {
	return i.ToSecretStoreSpecProviderConjurOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurArgs) ToSecretStoreSpecProviderConjurOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurOutput)
}

func (i SecretStoreSpecProviderConjurArgs) ToSecretStoreSpecProviderConjurPtrOutput() SecretStoreSpecProviderConjurPtrOutput {
	return i.ToSecretStoreSpecProviderConjurPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurArgs) ToSecretStoreSpecProviderConjurPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurOutput).ToSecretStoreSpecProviderConjurPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurPtrInput is an input type that accepts SecretStoreSpecProviderConjurArgs, SecretStoreSpecProviderConjurPtr and SecretStoreSpecProviderConjurPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurPtrInput` via:
//
//	        SecretStoreSpecProviderConjurArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurPtrOutput() SecretStoreSpecProviderConjurPtrOutput
	ToSecretStoreSpecProviderConjurPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurPtrOutput
}

type secretStoreSpecProviderConjurPtrType SecretStoreSpecProviderConjurArgs

func SecretStoreSpecProviderConjurPtr(v *SecretStoreSpecProviderConjurArgs) SecretStoreSpecProviderConjurPtrInput {
	return (*secretStoreSpecProviderConjurPtrType)(v)
}

func (*secretStoreSpecProviderConjurPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjur)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurPtrType) ToSecretStoreSpecProviderConjurPtrOutput() SecretStoreSpecProviderConjurPtrOutput {
	return i.ToSecretStoreSpecProviderConjurPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurPtrType) ToSecretStoreSpecProviderConjurPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurPtrOutput)
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjurOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjur)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurOutput) ToSecretStoreSpecProviderConjurOutput() SecretStoreSpecProviderConjurOutput {
	return o
}

func (o SecretStoreSpecProviderConjurOutput) ToSecretStoreSpecProviderConjurOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurOutput {
	return o
}

func (o SecretStoreSpecProviderConjurOutput) ToSecretStoreSpecProviderConjurPtrOutput() SecretStoreSpecProviderConjurPtrOutput {
	return o.ToSecretStoreSpecProviderConjurPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurOutput) ToSecretStoreSpecProviderConjurPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjur) *SecretStoreSpecProviderConjur {
		return &v
	}).(SecretStoreSpecProviderConjurPtrOutput)
}

func (o SecretStoreSpecProviderConjurOutput) Auth() SecretStoreSpecProviderConjurAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjur) *SecretStoreSpecProviderConjurAuth { return v.Auth }).(SecretStoreSpecProviderConjurAuthPtrOutput)
}

func (o SecretStoreSpecProviderConjurOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjur) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurOutput) CaProvider() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjur) *SecretStoreSpecProviderConjurCaProvider { return v.CaProvider }).(SecretStoreSpecProviderConjurCaProviderPtrOutput)
}

func (o SecretStoreSpecProviderConjurOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjur) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjur)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurPtrOutput) ToSecretStoreSpecProviderConjurPtrOutput() SecretStoreSpecProviderConjurPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPtrOutput) ToSecretStoreSpecProviderConjurPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPtrOutput) Elem() SecretStoreSpecProviderConjurOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjur) SecretStoreSpecProviderConjur {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjur
		return ret
	}).(SecretStoreSpecProviderConjurOutput)
}

func (o SecretStoreSpecProviderConjurPtrOutput) Auth() SecretStoreSpecProviderConjurAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjur) *SecretStoreSpecProviderConjurAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderConjurAuthPtrOutput)
}

func (o SecretStoreSpecProviderConjurPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjur) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurPtrOutput) CaProvider() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjur) *SecretStoreSpecProviderConjurCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderConjurCaProviderPtrOutput)
}

func (o SecretStoreSpecProviderConjurPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjur) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuth struct {
	Apikey *SecretStoreSpecProviderConjurAuthApikey `pulumi:"apikey"`
	Jwt    *SecretStoreSpecProviderConjurAuthJwt    `pulumi:"jwt"`
}

// SecretStoreSpecProviderConjurAuthInput is an input type that accepts SecretStoreSpecProviderConjurAuthArgs and SecretStoreSpecProviderConjurAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthInput` via:
//
//	SecretStoreSpecProviderConjurAuthArgs{...}
type SecretStoreSpecProviderConjurAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthOutput() SecretStoreSpecProviderConjurAuthOutput
	ToSecretStoreSpecProviderConjurAuthOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthOutput
}

type SecretStoreSpecProviderConjurAuthArgs struct {
	Apikey SecretStoreSpecProviderConjurAuthApikeyPtrInput `pulumi:"apikey"`
	Jwt    SecretStoreSpecProviderConjurAuthJwtPtrInput    `pulumi:"jwt"`
}

func (SecretStoreSpecProviderConjurAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthArgs) ToSecretStoreSpecProviderConjurAuthOutput() SecretStoreSpecProviderConjurAuthOutput {
	return i.ToSecretStoreSpecProviderConjurAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthArgs) ToSecretStoreSpecProviderConjurAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthOutput)
}

func (i SecretStoreSpecProviderConjurAuthArgs) ToSecretStoreSpecProviderConjurAuthPtrOutput() SecretStoreSpecProviderConjurAuthPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthArgs) ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthOutput).ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthArgs, SecretStoreSpecProviderConjurAuthPtr and SecretStoreSpecProviderConjurAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthPtrOutput() SecretStoreSpecProviderConjurAuthPtrOutput
	ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthPtrOutput
}

type secretStoreSpecProviderConjurAuthPtrType SecretStoreSpecProviderConjurAuthArgs

func SecretStoreSpecProviderConjurAuthPtr(v *SecretStoreSpecProviderConjurAuthArgs) SecretStoreSpecProviderConjurAuthPtrInput {
	return (*secretStoreSpecProviderConjurAuthPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthPtrType) ToSecretStoreSpecProviderConjurAuthPtrOutput() SecretStoreSpecProviderConjurAuthPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthPtrType) ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthPtrOutput)
}

type SecretStoreSpecProviderConjurAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthOutput) ToSecretStoreSpecProviderConjurAuthOutput() SecretStoreSpecProviderConjurAuthOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthOutput) ToSecretStoreSpecProviderConjurAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthOutput) ToSecretStoreSpecProviderConjurAuthPtrOutput() SecretStoreSpecProviderConjurAuthPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthOutput) ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuth) *SecretStoreSpecProviderConjurAuth {
		return &v
	}).(SecretStoreSpecProviderConjurAuthPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthOutput) Apikey() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuth) *SecretStoreSpecProviderConjurAuthApikey { return v.Apikey }).(SecretStoreSpecProviderConjurAuthApikeyPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthOutput) Jwt() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuth) *SecretStoreSpecProviderConjurAuthJwt { return v.Jwt }).(SecretStoreSpecProviderConjurAuthJwtPtrOutput)
}

type SecretStoreSpecProviderConjurAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthPtrOutput) ToSecretStoreSpecProviderConjurAuthPtrOutput() SecretStoreSpecProviderConjurAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPtrOutput) ToSecretStoreSpecProviderConjurAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPtrOutput) Elem() SecretStoreSpecProviderConjurAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuth) SecretStoreSpecProviderConjurAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuth
		return ret
	}).(SecretStoreSpecProviderConjurAuthOutput)
}

func (o SecretStoreSpecProviderConjurAuthPtrOutput) Apikey() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuth) *SecretStoreSpecProviderConjurAuthApikey {
		if v == nil {
			return nil
		}
		return v.Apikey
	}).(SecretStoreSpecProviderConjurAuthApikeyPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthPtrOutput) Jwt() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuth) *SecretStoreSpecProviderConjurAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderConjurAuthJwtPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikey struct {
	Account   *string                                           `pulumi:"account"`
	ApiKeyRef *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef `pulumi:"apiKeyRef"`
	UserRef   *SecretStoreSpecProviderConjurAuthApikeyUserRef   `pulumi:"userRef"`
}

// SecretStoreSpecProviderConjurAuthApikeyInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyArgs and SecretStoreSpecProviderConjurAuthApikeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyOutput() SecretStoreSpecProviderConjurAuthApikeyOutput
	ToSecretStoreSpecProviderConjurAuthApikeyOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyOutput
}

type SecretStoreSpecProviderConjurAuthApikeyArgs struct {
	Account   pulumi.StringPtrInput                                    `pulumi:"account"`
	ApiKeyRef SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput `pulumi:"apiKeyRef"`
	UserRef   SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput   `pulumi:"userRef"`
}

func (SecretStoreSpecProviderConjurAuthApikeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikey)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyArgs) ToSecretStoreSpecProviderConjurAuthApikeyOutput() SecretStoreSpecProviderConjurAuthApikeyOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyArgs) ToSecretStoreSpecProviderConjurAuthApikeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyArgs) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyArgs) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyOutput).ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyArgs, SecretStoreSpecProviderConjurAuthApikeyPtr and SecretStoreSpecProviderConjurAuthApikeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyPtrType SecretStoreSpecProviderConjurAuthApikeyArgs

func SecretStoreSpecProviderConjurAuthApikeyPtr(v *SecretStoreSpecProviderConjurAuthApikeyArgs) SecretStoreSpecProviderConjurAuthApikeyPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikey)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyPtrType) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyPtrType) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikey)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) ToSecretStoreSpecProviderConjurAuthApikeyOutput() SecretStoreSpecProviderConjurAuthApikeyOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) ToSecretStoreSpecProviderConjurAuthApikeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikey) *SecretStoreSpecProviderConjurAuthApikey {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikey) *string { return v.Account }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) ApiKeyRef() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikey) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef {
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyOutput) UserRef() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikey) *SecretStoreSpecProviderConjurAuthApikeyUserRef {
		return v.UserRef
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikey)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikey) SecretStoreSpecProviderConjurAuthApikey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikey
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikey) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) ApiKeyRef() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikey) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef {
		if v == nil {
			return nil
		}
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPtrOutput) UserRef() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikey) *SecretStoreSpecProviderConjurAuthApikeyUserRef {
		if v == nil {
			return nil
		}
		return v.UserRef
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthApikeyApiKeyRefInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs and SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyApiKeyRefInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput
	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput).ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs, SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtr and SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrType SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs

func SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtr(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyApiKeyRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrType) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrType) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyApiKeyRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) SecretStoreSpecProviderConjurAuthApikeyApiKeyRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikeyApiKeyRef
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs and SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput
	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput).ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs, SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtr and SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrType SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs

func SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtr(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyPatch struct {
	Account   *string                                                `pulumi:"account"`
	ApiKeyRef *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch `pulumi:"apiKeyRef"`
	UserRef   *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch   `pulumi:"userRef"`
}

// SecretStoreSpecProviderConjurAuthApikeyPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyPatchArgs and SecretStoreSpecProviderConjurAuthApikeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyPatchArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyPatchOutput() SecretStoreSpecProviderConjurAuthApikeyPatchOutput
	ToSecretStoreSpecProviderConjurAuthApikeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchOutput
}

type SecretStoreSpecProviderConjurAuthApikeyPatchArgs struct {
	Account   pulumi.StringPtrInput                                         `pulumi:"account"`
	ApiKeyRef SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput `pulumi:"apiKeyRef"`
	UserRef   SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput   `pulumi:"userRef"`
}

func (SecretStoreSpecProviderConjurAuthApikeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyPatchOutput() SecretStoreSpecProviderConjurAuthApikeyPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyPatchOutput).ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyPatchArgs, SecretStoreSpecProviderConjurAuthApikeyPatchPtr and SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyPatchPtrType SecretStoreSpecProviderConjurAuthApikeyPatchArgs

func SecretStoreSpecProviderConjurAuthApikeyPatchPtr(v *SecretStoreSpecProviderConjurAuthApikeyPatchArgs) SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchOutput() SecretStoreSpecProviderConjurAuthApikeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikeyPatch) *SecretStoreSpecProviderConjurAuthApikeyPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyPatch) *string { return v.Account }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) ApiKeyRef() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyPatch) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch {
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchOutput) UserRef() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyPatch) *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch {
		return v.UserRef
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyPatch) SecretStoreSpecProviderConjurAuthApikeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikeyPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyPatchOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) ApiKeyRef() SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyPatch) *SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput) UserRef() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyPatch) *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch {
		if v == nil {
			return nil
		}
		return v.UserRef
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthApikeyUserRefInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyUserRefArgs and SecretStoreSpecProviderConjurAuthApikeyUserRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyUserRefInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyUserRefArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyUserRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefOutput
	ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefOutput).ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyUserRefArgs, SecretStoreSpecProviderConjurAuthApikeyUserRefPtr and SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyUserRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyUserRefPtrType SecretStoreSpecProviderConjurAuthApikeyUserRefArgs

func SecretStoreSpecProviderConjurAuthApikeyUserRefPtr(v *SecretStoreSpecProviderConjurAuthApikeyUserRefArgs) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyUserRefPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyUserRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyUserRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyUserRefPtrType) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyUserRefPtrType) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikeyUserRef) *SecretStoreSpecProviderConjurAuthApikeyUserRef {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyUserRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyUserRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRef) SecretStoreSpecProviderConjurAuthApikeyUserRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikeyUserRef
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthApikeyUserRefPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs and SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyUserRefPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs{...}
type SecretStoreSpecProviderConjurAuthApikeyUserRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput
	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput).ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs, SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtr and SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrType SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs

func SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtr(v *SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyUserRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthApikeyUserRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) SecretStoreSpecProviderConjurAuthApikeyUserRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthApikeyUserRefPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthApikeyUserRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwt struct {
	Account *string `pulumi:"account"`
	// Optional HostID for JWT authentication. This may be used depending
	// on how the Conjur JWT authenticator policy is configured.
	HostId            *string                                                `pulumi:"hostId"`
	SecretRef         *SecretStoreSpecProviderConjurAuthJwtSecretRef         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef `pulumi:"serviceAccountRef"`
	// The conjur authn jwt webservice id
	ServiceID *string `pulumi:"serviceID"`
}

// SecretStoreSpecProviderConjurAuthJwtInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtArgs and SecretStoreSpecProviderConjurAuthJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtArgs{...}
type SecretStoreSpecProviderConjurAuthJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtOutput() SecretStoreSpecProviderConjurAuthJwtOutput
	ToSecretStoreSpecProviderConjurAuthJwtOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtOutput
}

type SecretStoreSpecProviderConjurAuthJwtArgs struct {
	Account pulumi.StringPtrInput `pulumi:"account"`
	// Optional HostID for JWT authentication. This may be used depending
	// on how the Conjur JWT authenticator policy is configured.
	HostId            pulumi.StringPtrInput                                         `pulumi:"hostId"`
	SecretRef         SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// The conjur authn jwt webservice id
	ServiceID pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (SecretStoreSpecProviderConjurAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtArgs) ToSecretStoreSpecProviderConjurAuthJwtOutput() SecretStoreSpecProviderConjurAuthJwtOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtArgs) ToSecretStoreSpecProviderConjurAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtArgs) ToSecretStoreSpecProviderConjurAuthJwtPtrOutput() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtArgs) ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtOutput).ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtArgs, SecretStoreSpecProviderConjurAuthJwtPtr and SecretStoreSpecProviderConjurAuthJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtPtrOutput() SecretStoreSpecProviderConjurAuthJwtPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtPtrType SecretStoreSpecProviderConjurAuthJwtArgs

func SecretStoreSpecProviderConjurAuthJwtPtr(v *SecretStoreSpecProviderConjurAuthJwtArgs) SecretStoreSpecProviderConjurAuthJwtPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtPtrType) ToSecretStoreSpecProviderConjurAuthJwtPtrOutput() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtPtrType) ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) ToSecretStoreSpecProviderConjurAuthJwtOutput() SecretStoreSpecProviderConjurAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) ToSecretStoreSpecProviderConjurAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) ToSecretStoreSpecProviderConjurAuthJwtPtrOutput() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwt) *SecretStoreSpecProviderConjurAuthJwt {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwt) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// Optional HostID for JWT authentication. This may be used depending
// on how the Conjur JWT authenticator policy is configured.
func (o SecretStoreSpecProviderConjurAuthJwtOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwt) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) SecretRef() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwt) *SecretStoreSpecProviderConjurAuthJwtSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtOutput) ServiceAccountRef() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwt) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput)
}

// The conjur authn jwt webservice id
func (o SecretStoreSpecProviderConjurAuthJwtOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwt) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtPtrOutput() SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) SecretStoreSpecProviderConjurAuthJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwt
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

// Optional HostID for JWT authentication. This may be used depending
// on how the Conjur JWT authenticator policy is configured.
func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.HostId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) SecretRef() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) *SecretStoreSpecProviderConjurAuthJwtSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) ServiceAccountRef() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput)
}

// The conjur authn jwt webservice id
func (o SecretStoreSpecProviderConjurAuthJwtPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtPatch struct {
	Account *string `pulumi:"account"`
	// Optional HostID for JWT authentication. This may be used depending
	// on how the Conjur JWT authenticator policy is configured.
	HostId            *string                                                     `pulumi:"hostId"`
	SecretRef         *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch `pulumi:"serviceAccountRef"`
	// The conjur authn jwt webservice id
	ServiceID *string `pulumi:"serviceID"`
}

// SecretStoreSpecProviderConjurAuthJwtPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtPatchArgs and SecretStoreSpecProviderConjurAuthJwtPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtPatchArgs{...}
type SecretStoreSpecProviderConjurAuthJwtPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtPatchOutput() SecretStoreSpecProviderConjurAuthJwtPatchOutput
	ToSecretStoreSpecProviderConjurAuthJwtPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtPatchOutput
}

type SecretStoreSpecProviderConjurAuthJwtPatchArgs struct {
	Account pulumi.StringPtrInput `pulumi:"account"`
	// Optional HostID for JWT authentication. This may be used depending
	// on how the Conjur JWT authenticator policy is configured.
	HostId            pulumi.StringPtrInput                                              `pulumi:"hostId"`
	SecretRef         SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
	// The conjur authn jwt webservice id
	ServiceID pulumi.StringPtrInput `pulumi:"serviceID"`
}

func (SecretStoreSpecProviderConjurAuthJwtPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtPatchOutput() SecretStoreSpecProviderConjurAuthJwtPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtPatchOutput).ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtPatchArgs, SecretStoreSpecProviderConjurAuthJwtPatchPtr and SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtPatchPtrType SecretStoreSpecProviderConjurAuthJwtPatchArgs

func SecretStoreSpecProviderConjurAuthJwtPatchPtr(v *SecretStoreSpecProviderConjurAuthJwtPatchArgs) SecretStoreSpecProviderConjurAuthJwtPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchOutput() SecretStoreSpecProviderConjurAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwtPatch) *SecretStoreSpecProviderConjurAuthJwtPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtPatch) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// Optional HostID for JWT authentication. This may be used depending
// on how the Conjur JWT authenticator policy is configured.
func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtPatch) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) SecretRef() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtPatch) *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ServiceAccountRef() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtPatch) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput)
}

// The conjur authn jwt webservice id
func (o SecretStoreSpecProviderConjurAuthJwtPatchOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtPatch) *string { return v.ServiceID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) SecretStoreSpecProviderConjurAuthJwtPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwtPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtPatchOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

// Optional HostID for JWT authentication. This may be used depending
// on how the Conjur JWT authenticator policy is configured.
func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) *string {
		if v == nil {
			return nil
		}
		return v.HostId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) SecretRef() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput)
}

// The conjur authn jwt webservice id
func (o SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput) ServiceID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceID
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthJwtSecretRefInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtSecretRefArgs and SecretStoreSpecProviderConjurAuthJwtSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtSecretRefInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtSecretRefArgs{...}
type SecretStoreSpecProviderConjurAuthJwtSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefOutput
	ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefOutput).ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtSecretRefArgs, SecretStoreSpecProviderConjurAuthJwtSecretRefPtr and SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtSecretRefPtrType SecretStoreSpecProviderConjurAuthJwtSecretRefArgs

func SecretStoreSpecProviderConjurAuthJwtSecretRefPtr(v *SecretStoreSpecProviderConjurAuthJwtSecretRefArgs) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwtSecretRef) *SecretStoreSpecProviderConjurAuthJwtSecretRef {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRef) SecretStoreSpecProviderConjurAuthJwtSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwtSecretRef
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthJwtSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs and SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs{...}
type SecretStoreSpecProviderConjurAuthJwtSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput
	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput).ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs, SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtr and SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrType SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs

func SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtr(v *SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Conjur using the JWT authentication method.
type SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) SecretStoreSpecProviderConjurAuthJwtSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwtSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthJwtServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs and SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs{...}
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput
	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput).ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs, SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtr and SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrType SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs

func SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtr(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput)
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) SecretStoreSpecProviderConjurAuthJwtServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwtServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs and SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput).ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs, SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtr and SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrType SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs

func SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtr(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput)
}

// Optional ServiceAccountRef specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurAuthPatch struct {
	Apikey *SecretStoreSpecProviderConjurAuthApikeyPatch `pulumi:"apikey"`
	Jwt    *SecretStoreSpecProviderConjurAuthJwtPatch    `pulumi:"jwt"`
}

// SecretStoreSpecProviderConjurAuthPatchInput is an input type that accepts SecretStoreSpecProviderConjurAuthPatchArgs and SecretStoreSpecProviderConjurAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthPatchInput` via:
//
//	SecretStoreSpecProviderConjurAuthPatchArgs{...}
type SecretStoreSpecProviderConjurAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthPatchOutput() SecretStoreSpecProviderConjurAuthPatchOutput
	ToSecretStoreSpecProviderConjurAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthPatchOutput
}

type SecretStoreSpecProviderConjurAuthPatchArgs struct {
	Apikey SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput `pulumi:"apikey"`
	Jwt    SecretStoreSpecProviderConjurAuthJwtPatchPtrInput    `pulumi:"jwt"`
}

func (SecretStoreSpecProviderConjurAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurAuthPatchArgs) ToSecretStoreSpecProviderConjurAuthPatchOutput() SecretStoreSpecProviderConjurAuthPatchOutput {
	return i.ToSecretStoreSpecProviderConjurAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthPatchArgs) ToSecretStoreSpecProviderConjurAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthPatchOutput)
}

func (i SecretStoreSpecProviderConjurAuthPatchArgs) ToSecretStoreSpecProviderConjurAuthPatchPtrOutput() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurAuthPatchArgs) ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthPatchOutput).ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurAuthPatchArgs, SecretStoreSpecProviderConjurAuthPatchPtr and SecretStoreSpecProviderConjurAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurAuthPatchPtrOutput() SecretStoreSpecProviderConjurAuthPatchPtrOutput
	ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurAuthPatchPtrOutput
}

type secretStoreSpecProviderConjurAuthPatchPtrType SecretStoreSpecProviderConjurAuthPatchArgs

func SecretStoreSpecProviderConjurAuthPatchPtr(v *SecretStoreSpecProviderConjurAuthPatchArgs) SecretStoreSpecProviderConjurAuthPatchPtrInput {
	return (*secretStoreSpecProviderConjurAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurAuthPatchPtrType) ToSecretStoreSpecProviderConjurAuthPatchPtrOutput() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurAuthPatchPtrType) ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurAuthPatchPtrOutput)
}

type SecretStoreSpecProviderConjurAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) ToSecretStoreSpecProviderConjurAuthPatchOutput() SecretStoreSpecProviderConjurAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) ToSecretStoreSpecProviderConjurAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) ToSecretStoreSpecProviderConjurAuthPatchPtrOutput() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurAuthPatch) *SecretStoreSpecProviderConjurAuthPatch {
		return &v
	}).(SecretStoreSpecProviderConjurAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) Apikey() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthPatch) *SecretStoreSpecProviderConjurAuthApikeyPatch {
		return v.Apikey
	}).(SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthPatchOutput) Jwt() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurAuthPatch) *SecretStoreSpecProviderConjurAuthJwtPatch {
		return v.Jwt
	}).(SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput)
}

type SecretStoreSpecProviderConjurAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurAuthPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthPatchPtrOutput() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPatchPtrOutput) ToSecretStoreSpecProviderConjurAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurAuthPatchPtrOutput) Elem() SecretStoreSpecProviderConjurAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthPatch) SecretStoreSpecProviderConjurAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurAuthPatch
		return ret
	}).(SecretStoreSpecProviderConjurAuthPatchOutput)
}

func (o SecretStoreSpecProviderConjurAuthPatchPtrOutput) Apikey() SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthPatch) *SecretStoreSpecProviderConjurAuthApikeyPatch {
		if v == nil {
			return nil
		}
		return v.Apikey
	}).(SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurAuthPatchPtrOutput) Jwt() SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurAuthPatch) *SecretStoreSpecProviderConjurAuthJwtPatch {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput)
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProvider struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderConjurCaProviderInput is an input type that accepts SecretStoreSpecProviderConjurCaProviderArgs and SecretStoreSpecProviderConjurCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurCaProviderInput` via:
//
//	SecretStoreSpecProviderConjurCaProviderArgs{...}
type SecretStoreSpecProviderConjurCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurCaProviderOutput() SecretStoreSpecProviderConjurCaProviderOutput
	ToSecretStoreSpecProviderConjurCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderConjurCaProviderOutput
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProviderArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderConjurCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurCaProviderArgs) ToSecretStoreSpecProviderConjurCaProviderOutput() SecretStoreSpecProviderConjurCaProviderOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurCaProviderArgs) ToSecretStoreSpecProviderConjurCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderOutput)
}

func (i SecretStoreSpecProviderConjurCaProviderArgs) ToSecretStoreSpecProviderConjurCaProviderPtrOutput() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurCaProviderArgs) ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderOutput).ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderConjurCaProviderArgs, SecretStoreSpecProviderConjurCaProviderPtr and SecretStoreSpecProviderConjurCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderConjurCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurCaProviderPtrOutput() SecretStoreSpecProviderConjurCaProviderPtrOutput
	ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurCaProviderPtrOutput
}

type secretStoreSpecProviderConjurCaProviderPtrType SecretStoreSpecProviderConjurCaProviderArgs

func SecretStoreSpecProviderConjurCaProviderPtr(v *SecretStoreSpecProviderConjurCaProviderArgs) SecretStoreSpecProviderConjurCaProviderPtrInput {
	return (*secretStoreSpecProviderConjurCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderConjurCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurCaProviderPtrType) ToSecretStoreSpecProviderConjurCaProviderPtrOutput() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurCaProviderPtrType) ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderPtrOutput)
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurCaProviderOutput) ToSecretStoreSpecProviderConjurCaProviderOutput() SecretStoreSpecProviderConjurCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderOutput) ToSecretStoreSpecProviderConjurCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderOutput) ToSecretStoreSpecProviderConjurCaProviderPtrOutput() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurCaProviderOutput) ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurCaProvider) *SecretStoreSpecProviderConjurCaProvider {
		return &v
	}).(SecretStoreSpecProviderConjurCaProviderPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderConjurCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderConjurCaProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderConjurCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderConjurCaProviderOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProvider) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) ToSecretStoreSpecProviderConjurCaProviderPtrOutput() SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) ToSecretStoreSpecProviderConjurCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) Elem() SecretStoreSpecProviderConjurCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProvider) SecretStoreSpecProviderConjurCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurCaProvider
		return ret
	}).(SecretStoreSpecProviderConjurCaProviderOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderConjurCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProviderPatch struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderConjurCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderConjurCaProviderPatchArgs and SecretStoreSpecProviderConjurCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderConjurCaProviderPatchArgs{...}
type SecretStoreSpecProviderConjurCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurCaProviderPatchOutput() SecretStoreSpecProviderConjurCaProviderPatchOutput
	ToSecretStoreSpecProviderConjurCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurCaProviderPatchOutput
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProviderPatchArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderConjurCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurCaProviderPatchArgs) ToSecretStoreSpecProviderConjurCaProviderPatchOutput() SecretStoreSpecProviderConjurCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurCaProviderPatchArgs) ToSecretStoreSpecProviderConjurCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderConjurCaProviderPatchArgs) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutput() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurCaProviderPatchArgs) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderPatchOutput).ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurCaProviderPatchArgs, SecretStoreSpecProviderConjurCaProviderPatchPtr and SecretStoreSpecProviderConjurCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutput() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurCaProviderPatchPtrOutput
}

type secretStoreSpecProviderConjurCaProviderPatchPtrType SecretStoreSpecProviderConjurCaProviderPatchArgs

func SecretStoreSpecProviderConjurCaProviderPatchPtr(v *SecretStoreSpecProviderConjurCaProviderPatchArgs) SecretStoreSpecProviderConjurCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderConjurCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurCaProviderPatchPtrType) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutput() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurCaProviderPatchPtrType) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurCaProviderPatchPtrOutput)
}

// Used to provide custom certificate authority (CA) certificates
// for a secret store. The CAProvider points to a Secret or ConfigMap resource
// that contains a PEM-encoded certificate.
type SecretStoreSpecProviderConjurCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) ToSecretStoreSpecProviderConjurCaProviderPatchOutput() SecretStoreSpecProviderConjurCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) ToSecretStoreSpecProviderConjurCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutput() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurCaProviderPatch) *SecretStoreSpecProviderConjurCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderConjurCaProviderPatchPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProviderPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProviderPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderConjurCaProviderPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurCaProviderPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutput() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) ToSecretStoreSpecProviderConjurCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderConjurCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProviderPatch) SecretStoreSpecProviderConjurCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderConjurCaProviderPatchOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderConjurCaProviderPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjurPatch struct {
	Auth       *SecretStoreSpecProviderConjurAuthPatch       `pulumi:"auth"`
	CaBundle   *string                                       `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderConjurCaProviderPatch `pulumi:"caProvider"`
	Url        *string                                       `pulumi:"url"`
}

// SecretStoreSpecProviderConjurPatchInput is an input type that accepts SecretStoreSpecProviderConjurPatchArgs and SecretStoreSpecProviderConjurPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurPatchInput` via:
//
//	SecretStoreSpecProviderConjurPatchArgs{...}
type SecretStoreSpecProviderConjurPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurPatchOutput() SecretStoreSpecProviderConjurPatchOutput
	ToSecretStoreSpecProviderConjurPatchOutputWithContext(context.Context) SecretStoreSpecProviderConjurPatchOutput
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjurPatchArgs struct {
	Auth       SecretStoreSpecProviderConjurAuthPatchPtrInput       `pulumi:"auth"`
	CaBundle   pulumi.StringPtrInput                                `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderConjurCaProviderPatchPtrInput `pulumi:"caProvider"`
	Url        pulumi.StringPtrInput                                `pulumi:"url"`
}

func (SecretStoreSpecProviderConjurPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderConjurPatchArgs) ToSecretStoreSpecProviderConjurPatchOutput() SecretStoreSpecProviderConjurPatchOutput {
	return i.ToSecretStoreSpecProviderConjurPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurPatchArgs) ToSecretStoreSpecProviderConjurPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurPatchOutput)
}

func (i SecretStoreSpecProviderConjurPatchArgs) ToSecretStoreSpecProviderConjurPatchPtrOutput() SecretStoreSpecProviderConjurPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderConjurPatchArgs) ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurPatchOutput).ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderConjurPatchPtrInput is an input type that accepts SecretStoreSpecProviderConjurPatchArgs, SecretStoreSpecProviderConjurPatchPtr and SecretStoreSpecProviderConjurPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderConjurPatchPtrInput` via:
//
//	        SecretStoreSpecProviderConjurPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderConjurPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderConjurPatchPtrOutput() SecretStoreSpecProviderConjurPatchPtrOutput
	ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderConjurPatchPtrOutput
}

type secretStoreSpecProviderConjurPatchPtrType SecretStoreSpecProviderConjurPatchArgs

func SecretStoreSpecProviderConjurPatchPtr(v *SecretStoreSpecProviderConjurPatchArgs) SecretStoreSpecProviderConjurPatchPtrInput {
	return (*secretStoreSpecProviderConjurPatchPtrType)(v)
}

func (*secretStoreSpecProviderConjurPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderConjurPatchPtrType) ToSecretStoreSpecProviderConjurPatchPtrOutput() SecretStoreSpecProviderConjurPatchPtrOutput {
	return i.ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderConjurPatchPtrType) ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderConjurPatchPtrOutput)
}

// Conjur configures this store to sync secrets using conjur provider
type SecretStoreSpecProviderConjurPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderConjurPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurPatchOutput) ToSecretStoreSpecProviderConjurPatchOutput() SecretStoreSpecProviderConjurPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPatchOutput) ToSecretStoreSpecProviderConjurPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPatchOutput) ToSecretStoreSpecProviderConjurPatchPtrOutput() SecretStoreSpecProviderConjurPatchPtrOutput {
	return o.ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderConjurPatchOutput) ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderConjurPatch) *SecretStoreSpecProviderConjurPatch {
		return &v
	}).(SecretStoreSpecProviderConjurPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchOutput) Auth() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurPatch) *SecretStoreSpecProviderConjurAuthPatch { return v.Auth }).(SecretStoreSpecProviderConjurAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchOutput) CaProvider() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurPatch) *SecretStoreSpecProviderConjurCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderConjurCaProviderPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderConjurPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderConjurPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderConjurPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderConjurPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) ToSecretStoreSpecProviderConjurPatchPtrOutput() SecretStoreSpecProviderConjurPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) ToSecretStoreSpecProviderConjurPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderConjurPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) Elem() SecretStoreSpecProviderConjurPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurPatch) SecretStoreSpecProviderConjurPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderConjurPatch
		return ret
	}).(SecretStoreSpecProviderConjurPatchOutput)
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) Auth() SecretStoreSpecProviderConjurAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurPatch) *SecretStoreSpecProviderConjurAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderConjurAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) CaProvider() SecretStoreSpecProviderConjurCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurPatch) *SecretStoreSpecProviderConjurCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderConjurCaProviderPatchPtrOutput)
}

func (o SecretStoreSpecProviderConjurPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderConjurPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelinea struct {
	ClientId     *SecretStoreSpecProviderDelineaClientId     `pulumi:"clientId"`
	ClientSecret *SecretStoreSpecProviderDelineaClientSecret `pulumi:"clientSecret"`
	// Tenant is the chosen hostname / site name.
	Tenant *string `pulumi:"tenant"`
	// TLD is based on the server location that was chosen during provisioning.
	// If unset, defaults to "com".
	Tld *string `pulumi:"tld"`
	// URLTemplate
	// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
	UrlTemplate *string `pulumi:"urlTemplate"`
}

// SecretStoreSpecProviderDelineaInput is an input type that accepts SecretStoreSpecProviderDelineaArgs and SecretStoreSpecProviderDelineaOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaInput` via:
//
//	SecretStoreSpecProviderDelineaArgs{...}
type SecretStoreSpecProviderDelineaInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaOutput() SecretStoreSpecProviderDelineaOutput
	ToSecretStoreSpecProviderDelineaOutputWithContext(context.Context) SecretStoreSpecProviderDelineaOutput
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelineaArgs struct {
	ClientId     SecretStoreSpecProviderDelineaClientIdPtrInput     `pulumi:"clientId"`
	ClientSecret SecretStoreSpecProviderDelineaClientSecretPtrInput `pulumi:"clientSecret"`
	// Tenant is the chosen hostname / site name.
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// TLD is based on the server location that was chosen during provisioning.
	// If unset, defaults to "com".
	Tld pulumi.StringPtrInput `pulumi:"tld"`
	// URLTemplate
	// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
	UrlTemplate pulumi.StringPtrInput `pulumi:"urlTemplate"`
}

func (SecretStoreSpecProviderDelineaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelinea)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaArgs) ToSecretStoreSpecProviderDelineaOutput() SecretStoreSpecProviderDelineaOutput {
	return i.ToSecretStoreSpecProviderDelineaOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaArgs) ToSecretStoreSpecProviderDelineaOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaOutput)
}

func (i SecretStoreSpecProviderDelineaArgs) ToSecretStoreSpecProviderDelineaPtrOutput() SecretStoreSpecProviderDelineaPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaArgs) ToSecretStoreSpecProviderDelineaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaOutput).ToSecretStoreSpecProviderDelineaPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaPtrInput is an input type that accepts SecretStoreSpecProviderDelineaArgs, SecretStoreSpecProviderDelineaPtr and SecretStoreSpecProviderDelineaPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaPtrOutput() SecretStoreSpecProviderDelineaPtrOutput
	ToSecretStoreSpecProviderDelineaPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaPtrOutput
}

type secretStoreSpecProviderDelineaPtrType SecretStoreSpecProviderDelineaArgs

func SecretStoreSpecProviderDelineaPtr(v *SecretStoreSpecProviderDelineaArgs) SecretStoreSpecProviderDelineaPtrInput {
	return (*secretStoreSpecProviderDelineaPtrType)(v)
}

func (*secretStoreSpecProviderDelineaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelinea)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaPtrType) ToSecretStoreSpecProviderDelineaPtrOutput() SecretStoreSpecProviderDelineaPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaPtrType) ToSecretStoreSpecProviderDelineaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaPtrOutput)
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelineaOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelinea)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaOutput) ToSecretStoreSpecProviderDelineaOutput() SecretStoreSpecProviderDelineaOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaOutput) ToSecretStoreSpecProviderDelineaOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaOutput) ToSecretStoreSpecProviderDelineaPtrOutput() SecretStoreSpecProviderDelineaPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaOutput) ToSecretStoreSpecProviderDelineaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelinea) *SecretStoreSpecProviderDelinea {
		return &v
	}).(SecretStoreSpecProviderDelineaPtrOutput)
}

func (o SecretStoreSpecProviderDelineaOutput) ClientId() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelinea) *SecretStoreSpecProviderDelineaClientId { return v.ClientId }).(SecretStoreSpecProviderDelineaClientIdPtrOutput)
}

func (o SecretStoreSpecProviderDelineaOutput) ClientSecret() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelinea) *SecretStoreSpecProviderDelineaClientSecret {
		return v.ClientSecret
	}).(SecretStoreSpecProviderDelineaClientSecretPtrOutput)
}

// Tenant is the chosen hostname / site name.
func (o SecretStoreSpecProviderDelineaOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelinea) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// TLD is based on the server location that was chosen during provisioning.
// If unset, defaults to "com".
func (o SecretStoreSpecProviderDelineaOutput) Tld() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelinea) *string { return v.Tld }).(pulumi.StringPtrOutput)
}

// URLTemplate
// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
func (o SecretStoreSpecProviderDelineaOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelinea) *string { return v.UrlTemplate }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelinea)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaPtrOutput) ToSecretStoreSpecProviderDelineaPtrOutput() SecretStoreSpecProviderDelineaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPtrOutput) ToSecretStoreSpecProviderDelineaPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPtrOutput) Elem() SecretStoreSpecProviderDelineaOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) SecretStoreSpecProviderDelinea {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelinea
		return ret
	}).(SecretStoreSpecProviderDelineaOutput)
}

func (o SecretStoreSpecProviderDelineaPtrOutput) ClientId() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) *SecretStoreSpecProviderDelineaClientId {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderDelineaClientIdPtrOutput)
}

func (o SecretStoreSpecProviderDelineaPtrOutput) ClientSecret() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) *SecretStoreSpecProviderDelineaClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderDelineaClientSecretPtrOutput)
}

// Tenant is the chosen hostname / site name.
func (o SecretStoreSpecProviderDelineaPtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// TLD is based on the server location that was chosen during provisioning.
// If unset, defaults to "com".
func (o SecretStoreSpecProviderDelineaPtrOutput) Tld() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) *string {
		if v == nil {
			return nil
		}
		return v.Tld
	}).(pulumi.StringPtrOutput)
}

// URLTemplate
// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
func (o SecretStoreSpecProviderDelineaPtrOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelinea) *string {
		if v == nil {
			return nil
		}
		return v.UrlTemplate
	}).(pulumi.StringPtrOutput)
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientId struct {
	SecretRef *SecretStoreSpecProviderDelineaClientIdSecretRef `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderDelineaClientIdInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdArgs and SecretStoreSpecProviderDelineaClientIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdInput` via:
//
//	SecretStoreSpecProviderDelineaClientIdArgs{...}
type SecretStoreSpecProviderDelineaClientIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdOutput() SecretStoreSpecProviderDelineaClientIdOutput
	ToSecretStoreSpecProviderDelineaClientIdOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdOutput
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientIdArgs struct {
	SecretRef SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderDelineaClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientId)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientIdArgs) ToSecretStoreSpecProviderDelineaClientIdOutput() SecretStoreSpecProviderDelineaClientIdOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdArgs) ToSecretStoreSpecProviderDelineaClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdOutput)
}

func (i SecretStoreSpecProviderDelineaClientIdArgs) ToSecretStoreSpecProviderDelineaClientIdPtrOutput() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdArgs) ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdOutput).ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientIdPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdArgs, SecretStoreSpecProviderDelineaClientIdPtr and SecretStoreSpecProviderDelineaClientIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdPtrOutput() SecretStoreSpecProviderDelineaClientIdPtrOutput
	ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdPtrOutput
}

type secretStoreSpecProviderDelineaClientIdPtrType SecretStoreSpecProviderDelineaClientIdArgs

func SecretStoreSpecProviderDelineaClientIdPtr(v *SecretStoreSpecProviderDelineaClientIdArgs) SecretStoreSpecProviderDelineaClientIdPtrInput {
	return (*secretStoreSpecProviderDelineaClientIdPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientId)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientIdPtrType) ToSecretStoreSpecProviderDelineaClientIdPtrOutput() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientIdPtrType) ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdPtrOutput)
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdOutput) ToSecretStoreSpecProviderDelineaClientIdOutput() SecretStoreSpecProviderDelineaClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdOutput) ToSecretStoreSpecProviderDelineaClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdOutput) ToSecretStoreSpecProviderDelineaClientIdPtrOutput() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientIdOutput) ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientId) *SecretStoreSpecProviderDelineaClientId {
		return &v
	}).(SecretStoreSpecProviderDelineaClientIdPtrOutput)
}

func (o SecretStoreSpecProviderDelineaClientIdOutput) SecretRef() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientId) *SecretStoreSpecProviderDelineaClientIdSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientIdOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientId) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdPtrOutput) ToSecretStoreSpecProviderDelineaClientIdPtrOutput() SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPtrOutput) ToSecretStoreSpecProviderDelineaClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPtrOutput) Elem() SecretStoreSpecProviderDelineaClientIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientId) SecretStoreSpecProviderDelineaClientId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientId
		return ret
	}).(SecretStoreSpecProviderDelineaClientIdOutput)
}

func (o SecretStoreSpecProviderDelineaClientIdPtrOutput) SecretRef() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientId) *SecretStoreSpecProviderDelineaClientIdSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientIdPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientId) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientIdPatch struct {
	SecretRef *SecretStoreSpecProviderDelineaClientIdSecretRefPatch `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderDelineaClientIdPatchInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdPatchArgs and SecretStoreSpecProviderDelineaClientIdPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdPatchInput` via:
//
//	SecretStoreSpecProviderDelineaClientIdPatchArgs{...}
type SecretStoreSpecProviderDelineaClientIdPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdPatchOutput() SecretStoreSpecProviderDelineaClientIdPatchOutput
	ToSecretStoreSpecProviderDelineaClientIdPatchOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdPatchOutput
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientIdPatchArgs struct {
	SecretRef SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderDelineaClientIdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientIdPatchArgs) ToSecretStoreSpecProviderDelineaClientIdPatchOutput() SecretStoreSpecProviderDelineaClientIdPatchOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdPatchArgs) ToSecretStoreSpecProviderDelineaClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdPatchOutput)
}

func (i SecretStoreSpecProviderDelineaClientIdPatchArgs) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdPatchArgs) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdPatchOutput).ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientIdPatchPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdPatchArgs, SecretStoreSpecProviderDelineaClientIdPatchPtr and SecretStoreSpecProviderDelineaClientIdPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientIdPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientIdPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput
	ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdPatchPtrOutput
}

type secretStoreSpecProviderDelineaClientIdPatchPtrType SecretStoreSpecProviderDelineaClientIdPatchArgs

func SecretStoreSpecProviderDelineaClientIdPatchPtr(v *SecretStoreSpecProviderDelineaClientIdPatchArgs) SecretStoreSpecProviderDelineaClientIdPatchPtrInput {
	return (*secretStoreSpecProviderDelineaClientIdPatchPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientIdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientIdPatchPtrType) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientIdPatchPtrType) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdPatchPtrOutput)
}

// ClientID is the non-secret part of the credential.
type SecretStoreSpecProviderDelineaClientIdPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) ToSecretStoreSpecProviderDelineaClientIdPatchOutput() SecretStoreSpecProviderDelineaClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) ToSecretStoreSpecProviderDelineaClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientIdPatch) *SecretStoreSpecProviderDelineaClientIdPatch {
		return &v
	}).(SecretStoreSpecProviderDelineaClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) SecretRef() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdPatch) *SecretStoreSpecProviderDelineaClientIdSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientIdPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientIdPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) Elem() SecretStoreSpecProviderDelineaClientIdPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdPatch) SecretStoreSpecProviderDelineaClientIdPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientIdPatch
		return ret
	}).(SecretStoreSpecProviderDelineaClientIdPatchOutput)
}

func (o SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) SecretRef() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdPatch) *SecretStoreSpecProviderDelineaClientIdSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientIdPatchPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDelineaClientIdSecretRefInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdSecretRefArgs and SecretStoreSpecProviderDelineaClientIdSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdSecretRefInput` via:
//
//	SecretStoreSpecProviderDelineaClientIdSecretRefArgs{...}
type SecretStoreSpecProviderDelineaClientIdSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdSecretRefOutput() SecretStoreSpecProviderDelineaClientIdSecretRefOutput
	ToSecretStoreSpecProviderDelineaClientIdSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDelineaClientIdSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefOutput() SecretStoreSpecProviderDelineaClientIdSecretRefOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefOutput)
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefOutput).ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdSecretRefArgs, SecretStoreSpecProviderDelineaClientIdSecretRefPtr and SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientIdSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput
	ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput
}

type secretStoreSpecProviderDelineaClientIdSecretRefPtrType SecretStoreSpecProviderDelineaClientIdSecretRefArgs

func SecretStoreSpecProviderDelineaClientIdSecretRefPtr(v *SecretStoreSpecProviderDelineaClientIdSecretRefArgs) SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput {
	return (*secretStoreSpecProviderDelineaClientIdSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientIdSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientIdSecretRefPtrType) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientIdSecretRefPtrType) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefOutput() SecretStoreSpecProviderDelineaClientIdSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientIdSecretRef) *SecretStoreSpecProviderDelineaClientIdSecretRef {
		return &v
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) Elem() SecretStoreSpecProviderDelineaClientIdSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRef) SecretStoreSpecProviderDelineaClientIdSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientIdSecretRef
		return ret
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDelineaClientIdSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs and SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs{...}
type SecretStoreSpecProviderDelineaClientIdSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput
	ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput).ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs, SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtr and SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput
}

type secretStoreSpecProviderDelineaClientIdSecretRefPatchPtrType SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs

func SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtr(v *SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderDelineaClientIdSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientIdSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientIdSecretRefPatchPtrType) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientIdSecretRefPatchPtrType) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *SecretStoreSpecProviderDelineaClientIdSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientIdSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRefPatch) SecretStoreSpecProviderDelineaClientIdSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientIdSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientIdSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecret struct {
	SecretRef *SecretStoreSpecProviderDelineaClientSecretSecretRef `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderDelineaClientSecretInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretArgs and SecretStoreSpecProviderDelineaClientSecretOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretInput` via:
//
//	SecretStoreSpecProviderDelineaClientSecretArgs{...}
type SecretStoreSpecProviderDelineaClientSecretInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretOutput() SecretStoreSpecProviderDelineaClientSecretOutput
	ToSecretStoreSpecProviderDelineaClientSecretOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretOutput
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecretArgs struct {
	SecretRef SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderDelineaClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecret)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientSecretArgs) ToSecretStoreSpecProviderDelineaClientSecretOutput() SecretStoreSpecProviderDelineaClientSecretOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretArgs) ToSecretStoreSpecProviderDelineaClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretOutput)
}

func (i SecretStoreSpecProviderDelineaClientSecretArgs) ToSecretStoreSpecProviderDelineaClientSecretPtrOutput() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretArgs) ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretOutput).ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientSecretPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretArgs, SecretStoreSpecProviderDelineaClientSecretPtr and SecretStoreSpecProviderDelineaClientSecretPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientSecretArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientSecretPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretPtrOutput() SecretStoreSpecProviderDelineaClientSecretPtrOutput
	ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretPtrOutput
}

type secretStoreSpecProviderDelineaClientSecretPtrType SecretStoreSpecProviderDelineaClientSecretArgs

func SecretStoreSpecProviderDelineaClientSecretPtr(v *SecretStoreSpecProviderDelineaClientSecretArgs) SecretStoreSpecProviderDelineaClientSecretPtrInput {
	return (*secretStoreSpecProviderDelineaClientSecretPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecret)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientSecretPtrType) ToSecretStoreSpecProviderDelineaClientSecretPtrOutput() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientSecretPtrType) ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretPtrOutput)
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecretOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretOutput) ToSecretStoreSpecProviderDelineaClientSecretOutput() SecretStoreSpecProviderDelineaClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretOutput) ToSecretStoreSpecProviderDelineaClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretOutput) ToSecretStoreSpecProviderDelineaClientSecretPtrOutput() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientSecretOutput) ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientSecret) *SecretStoreSpecProviderDelineaClientSecret {
		return &v
	}).(SecretStoreSpecProviderDelineaClientSecretPtrOutput)
}

func (o SecretStoreSpecProviderDelineaClientSecretOutput) SecretRef() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecret) *SecretStoreSpecProviderDelineaClientSecretSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientSecretOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecret) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientSecretPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretPtrOutput() SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPtrOutput) Elem() SecretStoreSpecProviderDelineaClientSecretOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecret) SecretStoreSpecProviderDelineaClientSecret {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientSecret
		return ret
	}).(SecretStoreSpecProviderDelineaClientSecretOutput)
}

func (o SecretStoreSpecProviderDelineaClientSecretPtrOutput) SecretRef() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecret) *SecretStoreSpecProviderDelineaClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientSecretPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecretPatch struct {
	SecretRef *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderDelineaClientSecretPatchInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretPatchArgs and SecretStoreSpecProviderDelineaClientSecretPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretPatchInput` via:
//
//	SecretStoreSpecProviderDelineaClientSecretPatchArgs{...}
type SecretStoreSpecProviderDelineaClientSecretPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretPatchOutput() SecretStoreSpecProviderDelineaClientSecretPatchOutput
	ToSecretStoreSpecProviderDelineaClientSecretPatchOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretPatchOutput
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecretPatchArgs struct {
	SecretRef SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderDelineaClientSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientSecretPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretPatchOutput() SecretStoreSpecProviderDelineaClientSecretPatchOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretPatchOutput)
}

func (i SecretStoreSpecProviderDelineaClientSecretPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretPatchOutput).ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientSecretPatchPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretPatchArgs, SecretStoreSpecProviderDelineaClientSecretPatchPtr and SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientSecretPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientSecretPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput
	ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput
}

type secretStoreSpecProviderDelineaClientSecretPatchPtrType SecretStoreSpecProviderDelineaClientSecretPatchArgs

func SecretStoreSpecProviderDelineaClientSecretPatchPtr(v *SecretStoreSpecProviderDelineaClientSecretPatchArgs) SecretStoreSpecProviderDelineaClientSecretPatchPtrInput {
	return (*secretStoreSpecProviderDelineaClientSecretPatchPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientSecretPatchPtrType) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientSecretPatchPtrType) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput)
}

// ClientSecret is the secret part of the credential.
type SecretStoreSpecProviderDelineaClientSecretPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchOutput() SecretStoreSpecProviderDelineaClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientSecretPatch) *SecretStoreSpecProviderDelineaClientSecretPatch {
		return &v
	}).(SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput)
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) SecretRef() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretPatch) *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientSecretPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) Elem() SecretStoreSpecProviderDelineaClientSecretPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretPatch) SecretStoreSpecProviderDelineaClientSecretPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientSecretPatch
		return ret
	}).(SecretStoreSpecProviderDelineaClientSecretPatchOutput)
}

func (o SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) SecretRef() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretPatch) *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDelineaClientSecretSecretRefInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretSecretRefArgs and SecretStoreSpecProviderDelineaClientSecretSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretSecretRefInput` via:
//
//	SecretStoreSpecProviderDelineaClientSecretSecretRefArgs{...}
type SecretStoreSpecProviderDelineaClientSecretSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefOutput
	ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefOutput)
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefOutput).ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretSecretRefArgs, SecretStoreSpecProviderDelineaClientSecretSecretRefPtr and SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientSecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput
	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput
}

type secretStoreSpecProviderDelineaClientSecretSecretRefPtrType SecretStoreSpecProviderDelineaClientSecretSecretRefArgs

func SecretStoreSpecProviderDelineaClientSecretSecretRefPtr(v *SecretStoreSpecProviderDelineaClientSecretSecretRefArgs) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput {
	return (*secretStoreSpecProviderDelineaClientSecretSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientSecretSecretRefPtrType) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientSecretSecretRefPtrType) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientSecretSecretRef) *SecretStoreSpecProviderDelineaClientSecretSecretRef {
		return &v
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) Elem() SecretStoreSpecProviderDelineaClientSecretSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRef) SecretStoreSpecProviderDelineaClientSecretSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientSecretSecretRef
		return ret
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDelineaClientSecretSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs and SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs{...}
type SecretStoreSpecProviderDelineaClientSecretSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput
	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput).ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs, SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtr and SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput
}

type secretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrType SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs

func SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtr(v *SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrType) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrType) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaClientSecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) SecretStoreSpecProviderDelineaClientSecretSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaClientSecretSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelineaPatch struct {
	ClientId     *SecretStoreSpecProviderDelineaClientIdPatch     `pulumi:"clientId"`
	ClientSecret *SecretStoreSpecProviderDelineaClientSecretPatch `pulumi:"clientSecret"`
	// Tenant is the chosen hostname / site name.
	Tenant *string `pulumi:"tenant"`
	// TLD is based on the server location that was chosen during provisioning.
	// If unset, defaults to "com".
	Tld *string `pulumi:"tld"`
	// URLTemplate
	// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
	UrlTemplate *string `pulumi:"urlTemplate"`
}

// SecretStoreSpecProviderDelineaPatchInput is an input type that accepts SecretStoreSpecProviderDelineaPatchArgs and SecretStoreSpecProviderDelineaPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaPatchInput` via:
//
//	SecretStoreSpecProviderDelineaPatchArgs{...}
type SecretStoreSpecProviderDelineaPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaPatchOutput() SecretStoreSpecProviderDelineaPatchOutput
	ToSecretStoreSpecProviderDelineaPatchOutputWithContext(context.Context) SecretStoreSpecProviderDelineaPatchOutput
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelineaPatchArgs struct {
	ClientId     SecretStoreSpecProviderDelineaClientIdPatchPtrInput     `pulumi:"clientId"`
	ClientSecret SecretStoreSpecProviderDelineaClientSecretPatchPtrInput `pulumi:"clientSecret"`
	// Tenant is the chosen hostname / site name.
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// TLD is based on the server location that was chosen during provisioning.
	// If unset, defaults to "com".
	Tld pulumi.StringPtrInput `pulumi:"tld"`
	// URLTemplate
	// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
	UrlTemplate pulumi.StringPtrInput `pulumi:"urlTemplate"`
}

func (SecretStoreSpecProviderDelineaPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDelineaPatchArgs) ToSecretStoreSpecProviderDelineaPatchOutput() SecretStoreSpecProviderDelineaPatchOutput {
	return i.ToSecretStoreSpecProviderDelineaPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaPatchArgs) ToSecretStoreSpecProviderDelineaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaPatchOutput)
}

func (i SecretStoreSpecProviderDelineaPatchArgs) ToSecretStoreSpecProviderDelineaPatchPtrOutput() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDelineaPatchArgs) ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaPatchOutput).ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDelineaPatchPtrInput is an input type that accepts SecretStoreSpecProviderDelineaPatchArgs, SecretStoreSpecProviderDelineaPatchPtr and SecretStoreSpecProviderDelineaPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDelineaPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDelineaPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDelineaPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDelineaPatchPtrOutput() SecretStoreSpecProviderDelineaPatchPtrOutput
	ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDelineaPatchPtrOutput
}

type secretStoreSpecProviderDelineaPatchPtrType SecretStoreSpecProviderDelineaPatchArgs

func SecretStoreSpecProviderDelineaPatchPtr(v *SecretStoreSpecProviderDelineaPatchArgs) SecretStoreSpecProviderDelineaPatchPtrInput {
	return (*secretStoreSpecProviderDelineaPatchPtrType)(v)
}

func (*secretStoreSpecProviderDelineaPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDelineaPatchPtrType) ToSecretStoreSpecProviderDelineaPatchPtrOutput() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDelineaPatchPtrType) ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDelineaPatchPtrOutput)
}

// Delinea DevOps Secrets Vault
// https://docs.delinea.com/online-help/products/devops-secrets-vault/current
type SecretStoreSpecProviderDelineaPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDelineaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ToSecretStoreSpecProviderDelineaPatchOutput() SecretStoreSpecProviderDelineaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ToSecretStoreSpecProviderDelineaPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ToSecretStoreSpecProviderDelineaPatchPtrOutput() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDelineaPatch) *SecretStoreSpecProviderDelineaPatch {
		return &v
	}).(SecretStoreSpecProviderDelineaPatchPtrOutput)
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ClientId() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaPatch) *SecretStoreSpecProviderDelineaClientIdPatch {
		return v.ClientId
	}).(SecretStoreSpecProviderDelineaClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderDelineaPatchOutput) ClientSecret() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaPatch) *SecretStoreSpecProviderDelineaClientSecretPatch {
		return v.ClientSecret
	}).(SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput)
}

// Tenant is the chosen hostname / site name.
func (o SecretStoreSpecProviderDelineaPatchOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaPatch) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// TLD is based on the server location that was chosen during provisioning.
// If unset, defaults to "com".
func (o SecretStoreSpecProviderDelineaPatchOutput) Tld() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaPatch) *string { return v.Tld }).(pulumi.StringPtrOutput)
}

// URLTemplate
// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
func (o SecretStoreSpecProviderDelineaPatchOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDelineaPatch) *string { return v.UrlTemplate }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDelineaPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDelineaPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDelineaPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDelineaPatchPtrOutput) ToSecretStoreSpecProviderDelineaPatchPtrOutput() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPatchPtrOutput) ToSecretStoreSpecProviderDelineaPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDelineaPatchPtrOutput) Elem() SecretStoreSpecProviderDelineaPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) SecretStoreSpecProviderDelineaPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDelineaPatch
		return ret
	}).(SecretStoreSpecProviderDelineaPatchOutput)
}

func (o SecretStoreSpecProviderDelineaPatchPtrOutput) ClientId() SecretStoreSpecProviderDelineaClientIdPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) *SecretStoreSpecProviderDelineaClientIdPatch {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderDelineaClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderDelineaPatchPtrOutput) ClientSecret() SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) *SecretStoreSpecProviderDelineaClientSecretPatch {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput)
}

// Tenant is the chosen hostname / site name.
func (o SecretStoreSpecProviderDelineaPatchPtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// TLD is based on the server location that was chosen during provisioning.
// If unset, defaults to "com".
func (o SecretStoreSpecProviderDelineaPatchPtrOutput) Tld() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) *string {
		if v == nil {
			return nil
		}
		return v.Tld
	}).(pulumi.StringPtrOutput)
}

// URLTemplate
// If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
func (o SecretStoreSpecProviderDelineaPatchPtrOutput) UrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDelineaPatch) *string {
		if v == nil {
			return nil
		}
		return v.UrlTemplate
	}).(pulumi.StringPtrOutput)
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42 struct {
	Auth *SecretStoreSpecProviderDevice42Auth `pulumi:"auth"`
	// URL configures the Device42 instance URL.
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderDevice42Input is an input type that accepts SecretStoreSpecProviderDevice42Args and SecretStoreSpecProviderDevice42Output values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42Input` via:
//
//	SecretStoreSpecProviderDevice42Args{...}
type SecretStoreSpecProviderDevice42Input interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42Output() SecretStoreSpecProviderDevice42Output
	ToSecretStoreSpecProviderDevice42OutputWithContext(context.Context) SecretStoreSpecProviderDevice42Output
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42Args struct {
	Auth SecretStoreSpecProviderDevice42AuthPtrInput `pulumi:"auth"`
	// URL configures the Device42 instance URL.
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderDevice42Args) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42Args) ToSecretStoreSpecProviderDevice42Output() SecretStoreSpecProviderDevice42Output {
	return i.ToSecretStoreSpecProviderDevice42OutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42Args) ToSecretStoreSpecProviderDevice42OutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42Output {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42Output)
}

func (i SecretStoreSpecProviderDevice42Args) ToSecretStoreSpecProviderDevice42PtrOutput() SecretStoreSpecProviderDevice42PtrOutput {
	return i.ToSecretStoreSpecProviderDevice42PtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42Args) ToSecretStoreSpecProviderDevice42PtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42Output).ToSecretStoreSpecProviderDevice42PtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42PtrInput is an input type that accepts SecretStoreSpecProviderDevice42Args, SecretStoreSpecProviderDevice42Ptr and SecretStoreSpecProviderDevice42PtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42PtrInput` via:
//
//	        SecretStoreSpecProviderDevice42Args{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42PtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42PtrOutput() SecretStoreSpecProviderDevice42PtrOutput
	ToSecretStoreSpecProviderDevice42PtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42PtrOutput
}

type secretStoreSpecProviderDevice42PtrType SecretStoreSpecProviderDevice42Args

func SecretStoreSpecProviderDevice42Ptr(v *SecretStoreSpecProviderDevice42Args) SecretStoreSpecProviderDevice42PtrInput {
	return (*secretStoreSpecProviderDevice42PtrType)(v)
}

func (*secretStoreSpecProviderDevice42PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42PtrType) ToSecretStoreSpecProviderDevice42PtrOutput() SecretStoreSpecProviderDevice42PtrOutput {
	return i.ToSecretStoreSpecProviderDevice42PtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42PtrType) ToSecretStoreSpecProviderDevice42PtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42PtrOutput)
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42Output struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42Output) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42Output) ToSecretStoreSpecProviderDevice42Output() SecretStoreSpecProviderDevice42Output {
	return o
}

func (o SecretStoreSpecProviderDevice42Output) ToSecretStoreSpecProviderDevice42OutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42Output {
	return o
}

func (o SecretStoreSpecProviderDevice42Output) ToSecretStoreSpecProviderDevice42PtrOutput() SecretStoreSpecProviderDevice42PtrOutput {
	return o.ToSecretStoreSpecProviderDevice42PtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42Output) ToSecretStoreSpecProviderDevice42PtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42) *SecretStoreSpecProviderDevice42 {
		return &v
	}).(SecretStoreSpecProviderDevice42PtrOutput)
}

func (o SecretStoreSpecProviderDevice42Output) Auth() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42) *SecretStoreSpecProviderDevice42Auth { return v.Auth }).(SecretStoreSpecProviderDevice42AuthPtrOutput)
}

// URL configures the Device42 instance URL.
func (o SecretStoreSpecProviderDevice42Output) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDevice42PtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42PtrOutput) ToSecretStoreSpecProviderDevice42PtrOutput() SecretStoreSpecProviderDevice42PtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PtrOutput) ToSecretStoreSpecProviderDevice42PtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PtrOutput) Elem() SecretStoreSpecProviderDevice42Output {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42) SecretStoreSpecProviderDevice42 {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42
		return ret
	}).(SecretStoreSpecProviderDevice42Output)
}

func (o SecretStoreSpecProviderDevice42PtrOutput) Auth() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42) *SecretStoreSpecProviderDevice42Auth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderDevice42AuthPtrOutput)
}

// URL configures the Device42 instance URL.
func (o SecretStoreSpecProviderDevice42PtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42Auth struct {
	SecretRef *SecretStoreSpecProviderDevice42AuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderDevice42AuthInput is an input type that accepts SecretStoreSpecProviderDevice42AuthArgs and SecretStoreSpecProviderDevice42AuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthInput` via:
//
//	SecretStoreSpecProviderDevice42AuthArgs{...}
type SecretStoreSpecProviderDevice42AuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthOutput() SecretStoreSpecProviderDevice42AuthOutput
	ToSecretStoreSpecProviderDevice42AuthOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthOutput
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42AuthArgs struct {
	SecretRef SecretStoreSpecProviderDevice42AuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderDevice42AuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42Auth)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthArgs) ToSecretStoreSpecProviderDevice42AuthOutput() SecretStoreSpecProviderDevice42AuthOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthArgs) ToSecretStoreSpecProviderDevice42AuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthOutput)
}

func (i SecretStoreSpecProviderDevice42AuthArgs) ToSecretStoreSpecProviderDevice42AuthPtrOutput() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthArgs) ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthOutput).ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthArgs, SecretStoreSpecProviderDevice42AuthPtr and SecretStoreSpecProviderDevice42AuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthPtrOutput() SecretStoreSpecProviderDevice42AuthPtrOutput
	ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthPtrOutput
}

type secretStoreSpecProviderDevice42AuthPtrType SecretStoreSpecProviderDevice42AuthArgs

func SecretStoreSpecProviderDevice42AuthPtr(v *SecretStoreSpecProviderDevice42AuthArgs) SecretStoreSpecProviderDevice42AuthPtrInput {
	return (*secretStoreSpecProviderDevice42AuthPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42Auth)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthPtrType) ToSecretStoreSpecProviderDevice42AuthPtrOutput() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthPtrType) ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42AuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42Auth)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthOutput) ToSecretStoreSpecProviderDevice42AuthOutput() SecretStoreSpecProviderDevice42AuthOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthOutput) ToSecretStoreSpecProviderDevice42AuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthOutput) ToSecretStoreSpecProviderDevice42AuthPtrOutput() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthOutput) ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42Auth) *SecretStoreSpecProviderDevice42Auth {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthPtrOutput)
}

func (o SecretStoreSpecProviderDevice42AuthOutput) SecretRef() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42Auth) *SecretStoreSpecProviderDevice42AuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42Auth)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthPtrOutput) ToSecretStoreSpecProviderDevice42AuthPtrOutput() SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPtrOutput) ToSecretStoreSpecProviderDevice42AuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42Auth) SecretStoreSpecProviderDevice42Auth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42Auth
		return ret
	}).(SecretStoreSpecProviderDevice42AuthOutput)
}

func (o SecretStoreSpecProviderDevice42AuthPtrOutput) SecretRef() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42Auth) *SecretStoreSpecProviderDevice42AuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput)
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42AuthPatch struct {
	SecretRef *SecretStoreSpecProviderDevice42AuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderDevice42AuthPatchInput is an input type that accepts SecretStoreSpecProviderDevice42AuthPatchArgs and SecretStoreSpecProviderDevice42AuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthPatchInput` via:
//
//	SecretStoreSpecProviderDevice42AuthPatchArgs{...}
type SecretStoreSpecProviderDevice42AuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthPatchOutput() SecretStoreSpecProviderDevice42AuthPatchOutput
	ToSecretStoreSpecProviderDevice42AuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthPatchOutput
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42AuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderDevice42AuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthPatchArgs) ToSecretStoreSpecProviderDevice42AuthPatchOutput() SecretStoreSpecProviderDevice42AuthPatchOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthPatchArgs) ToSecretStoreSpecProviderDevice42AuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthPatchOutput)
}

func (i SecretStoreSpecProviderDevice42AuthPatchArgs) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutput() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthPatchArgs) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthPatchOutput).ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthPatchArgs, SecretStoreSpecProviderDevice42AuthPatchPtr and SecretStoreSpecProviderDevice42AuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthPatchPtrOutput() SecretStoreSpecProviderDevice42AuthPatchPtrOutput
	ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthPatchPtrOutput
}

type secretStoreSpecProviderDevice42AuthPatchPtrType SecretStoreSpecProviderDevice42AuthPatchArgs

func SecretStoreSpecProviderDevice42AuthPatchPtr(v *SecretStoreSpecProviderDevice42AuthPatchArgs) SecretStoreSpecProviderDevice42AuthPatchPtrInput {
	return (*secretStoreSpecProviderDevice42AuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthPatchPtrType) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutput() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthPatchPtrType) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a Device42 instance.
type SecretStoreSpecProviderDevice42AuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthPatchOutput) ToSecretStoreSpecProviderDevice42AuthPatchOutput() SecretStoreSpecProviderDevice42AuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPatchOutput) ToSecretStoreSpecProviderDevice42AuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPatchOutput) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutput() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthPatchOutput) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42AuthPatch) *SecretStoreSpecProviderDevice42AuthPatch {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderDevice42AuthPatchOutput) SecretRef() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthPatch) *SecretStoreSpecProviderDevice42AuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutput() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthPatchPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthPatch) SecretStoreSpecProviderDevice42AuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42AuthPatch
		return ret
	}).(SecretStoreSpecProviderDevice42AuthPatchOutput)
}

func (o SecretStoreSpecProviderDevice42AuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthPatch) *SecretStoreSpecProviderDevice42AuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRef struct {
	Credentials *SecretStoreSpecProviderDevice42AuthSecretRefCredentials `pulumi:"credentials"`
}

// SecretStoreSpecProviderDevice42AuthSecretRefInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefArgs and SecretStoreSpecProviderDevice42AuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefInput` via:
//
//	SecretStoreSpecProviderDevice42AuthSecretRefArgs{...}
type SecretStoreSpecProviderDevice42AuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefOutput() SecretStoreSpecProviderDevice42AuthSecretRefOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefOutput
}

type SecretStoreSpecProviderDevice42AuthSecretRefArgs struct {
	Credentials SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderDevice42AuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefOutput() SecretStoreSpecProviderDevice42AuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefOutput)
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefOutput).ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefArgs, SecretStoreSpecProviderDevice42AuthSecretRefPtr and SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput
}

type secretStoreSpecProviderDevice42AuthSecretRefPtrType SecretStoreSpecProviderDevice42AuthSecretRefArgs

func SecretStoreSpecProviderDevice42AuthSecretRefPtr(v *SecretStoreSpecProviderDevice42AuthSecretRefArgs) SecretStoreSpecProviderDevice42AuthSecretRefPtrInput {
	return (*secretStoreSpecProviderDevice42AuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefOutput() SecretStoreSpecProviderDevice42AuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42AuthSecretRef) *SecretStoreSpecProviderDevice42AuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefOutput) Credentials() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRef) *SecretStoreSpecProviderDevice42AuthSecretRefCredentials {
		return v.Credentials
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRef) SecretStoreSpecProviderDevice42AuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42AuthSecretRef
		return ret
	}).(SecretStoreSpecProviderDevice42AuthSecretRefOutput)
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput) Credentials() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRef) *SecretStoreSpecProviderDevice42AuthSecretRefCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentials struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDevice42AuthSecretRefCredentialsInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs and SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefCredentialsInput` via:
//
//	SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs{...}
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentials)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput)
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput).ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs, SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtr and SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput
}

type secretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrType SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs

func SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtr(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput {
	return (*secretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefCredentials)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *SecretStoreSpecProviderDevice42AuthSecretRefCredentials {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentials) SecretStoreSpecProviderDevice42AuthSecretRefCredentials {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42AuthSecretRefCredentials
		return ret
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs and SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchInput` via:
//
//	SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs{...}
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput)
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput).ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs, SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtr and SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput
}

type secretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrType SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs

func SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtr(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput {
	return (*secretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch
		return ret
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefPatch struct {
	Credentials *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch `pulumi:"credentials"`
}

// SecretStoreSpecProviderDevice42AuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs and SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderDevice42AuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput
}

type SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs struct {
	Credentials SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput).ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs, SecretStoreSpecProviderDevice42AuthSecretRefPatchPtr and SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderDevice42AuthSecretRefPatchPtrType SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs

func SecretStoreSpecProviderDevice42AuthSecretRefPatchPtr(v *SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderDevice42AuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderDevice42AuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefPatchPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42AuthSecretRefPatchPtrType) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42AuthSecretRefPatch) *SecretStoreSpecProviderDevice42AuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput) Credentials() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42AuthSecretRefPatch) *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch {
		return v.Credentials
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42AuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefPatch) SecretStoreSpecProviderDevice42AuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42AuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput) Credentials() SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42AuthSecretRefPatch) *SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatch {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput)
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42Patch struct {
	Auth *SecretStoreSpecProviderDevice42AuthPatch `pulumi:"auth"`
	// URL configures the Device42 instance URL.
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderDevice42PatchInput is an input type that accepts SecretStoreSpecProviderDevice42PatchArgs and SecretStoreSpecProviderDevice42PatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42PatchInput` via:
//
//	SecretStoreSpecProviderDevice42PatchArgs{...}
type SecretStoreSpecProviderDevice42PatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42PatchOutput() SecretStoreSpecProviderDevice42PatchOutput
	ToSecretStoreSpecProviderDevice42PatchOutputWithContext(context.Context) SecretStoreSpecProviderDevice42PatchOutput
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42PatchArgs struct {
	Auth SecretStoreSpecProviderDevice42AuthPatchPtrInput `pulumi:"auth"`
	// URL configures the Device42 instance URL.
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderDevice42PatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42Patch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDevice42PatchArgs) ToSecretStoreSpecProviderDevice42PatchOutput() SecretStoreSpecProviderDevice42PatchOutput {
	return i.ToSecretStoreSpecProviderDevice42PatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42PatchArgs) ToSecretStoreSpecProviderDevice42PatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42PatchOutput)
}

func (i SecretStoreSpecProviderDevice42PatchArgs) ToSecretStoreSpecProviderDevice42PatchPtrOutput() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDevice42PatchArgs) ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42PatchOutput).ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDevice42PatchPtrInput is an input type that accepts SecretStoreSpecProviderDevice42PatchArgs, SecretStoreSpecProviderDevice42PatchPtr and SecretStoreSpecProviderDevice42PatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDevice42PatchPtrInput` via:
//
//	        SecretStoreSpecProviderDevice42PatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDevice42PatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDevice42PatchPtrOutput() SecretStoreSpecProviderDevice42PatchPtrOutput
	ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDevice42PatchPtrOutput
}

type secretStoreSpecProviderDevice42PatchPtrType SecretStoreSpecProviderDevice42PatchArgs

func SecretStoreSpecProviderDevice42PatchPtr(v *SecretStoreSpecProviderDevice42PatchArgs) SecretStoreSpecProviderDevice42PatchPtrInput {
	return (*secretStoreSpecProviderDevice42PatchPtrType)(v)
}

func (*secretStoreSpecProviderDevice42PatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42Patch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDevice42PatchPtrType) ToSecretStoreSpecProviderDevice42PatchPtrOutput() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return i.ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDevice42PatchPtrType) ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDevice42PatchPtrOutput)
}

// Device42 configures this store to sync secrets using the Device42 provider
type SecretStoreSpecProviderDevice42PatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42PatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDevice42Patch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42PatchOutput) ToSecretStoreSpecProviderDevice42PatchOutput() SecretStoreSpecProviderDevice42PatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PatchOutput) ToSecretStoreSpecProviderDevice42PatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PatchOutput) ToSecretStoreSpecProviderDevice42PatchPtrOutput() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o.ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDevice42PatchOutput) ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDevice42Patch) *SecretStoreSpecProviderDevice42Patch {
		return &v
	}).(SecretStoreSpecProviderDevice42PatchPtrOutput)
}

func (o SecretStoreSpecProviderDevice42PatchOutput) Auth() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42Patch) *SecretStoreSpecProviderDevice42AuthPatch { return v.Auth }).(SecretStoreSpecProviderDevice42AuthPatchPtrOutput)
}

// URL configures the Device42 instance URL.
func (o SecretStoreSpecProviderDevice42PatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDevice42Patch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDevice42PatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDevice42PatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDevice42Patch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDevice42PatchPtrOutput) ToSecretStoreSpecProviderDevice42PatchPtrOutput() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PatchPtrOutput) ToSecretStoreSpecProviderDevice42PatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDevice42PatchPtrOutput) Elem() SecretStoreSpecProviderDevice42PatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42Patch) SecretStoreSpecProviderDevice42Patch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDevice42Patch
		return ret
	}).(SecretStoreSpecProviderDevice42PatchOutput)
}

func (o SecretStoreSpecProviderDevice42PatchPtrOutput) Auth() SecretStoreSpecProviderDevice42AuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42Patch) *SecretStoreSpecProviderDevice42AuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderDevice42AuthPatchPtrOutput)
}

// URL configures the Device42 instance URL.
func (o SecretStoreSpecProviderDevice42PatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDevice42Patch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDoppler struct {
	Auth *SecretStoreSpecProviderDopplerAuth `pulumi:"auth"`
	// Doppler config (required if not using a Service Token)
	Config *string `pulumi:"config"`
	// Format enables the downloading of secrets as a file (string)
	Format *string `pulumi:"format"`
	// Environment variable compatible name transforms that change secret names to a different format
	NameTransformer *string `pulumi:"nameTransformer"`
	// Doppler project (required if not using a Service Token)
	Project *string `pulumi:"project"`
}

// SecretStoreSpecProviderDopplerInput is an input type that accepts SecretStoreSpecProviderDopplerArgs and SecretStoreSpecProviderDopplerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerInput` via:
//
//	SecretStoreSpecProviderDopplerArgs{...}
type SecretStoreSpecProviderDopplerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerOutput() SecretStoreSpecProviderDopplerOutput
	ToSecretStoreSpecProviderDopplerOutputWithContext(context.Context) SecretStoreSpecProviderDopplerOutput
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDopplerArgs struct {
	Auth SecretStoreSpecProviderDopplerAuthPtrInput `pulumi:"auth"`
	// Doppler config (required if not using a Service Token)
	Config pulumi.StringPtrInput `pulumi:"config"`
	// Format enables the downloading of secrets as a file (string)
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Environment variable compatible name transforms that change secret names to a different format
	NameTransformer pulumi.StringPtrInput `pulumi:"nameTransformer"`
	// Doppler project (required if not using a Service Token)
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (SecretStoreSpecProviderDopplerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDoppler)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerArgs) ToSecretStoreSpecProviderDopplerOutput() SecretStoreSpecProviderDopplerOutput {
	return i.ToSecretStoreSpecProviderDopplerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerArgs) ToSecretStoreSpecProviderDopplerOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerOutput)
}

func (i SecretStoreSpecProviderDopplerArgs) ToSecretStoreSpecProviderDopplerPtrOutput() SecretStoreSpecProviderDopplerPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerArgs) ToSecretStoreSpecProviderDopplerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerOutput).ToSecretStoreSpecProviderDopplerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerPtrInput is an input type that accepts SecretStoreSpecProviderDopplerArgs, SecretStoreSpecProviderDopplerPtr and SecretStoreSpecProviderDopplerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerPtrOutput() SecretStoreSpecProviderDopplerPtrOutput
	ToSecretStoreSpecProviderDopplerPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerPtrOutput
}

type secretStoreSpecProviderDopplerPtrType SecretStoreSpecProviderDopplerArgs

func SecretStoreSpecProviderDopplerPtr(v *SecretStoreSpecProviderDopplerArgs) SecretStoreSpecProviderDopplerPtrInput {
	return (*secretStoreSpecProviderDopplerPtrType)(v)
}

func (*secretStoreSpecProviderDopplerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDoppler)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerPtrType) ToSecretStoreSpecProviderDopplerPtrOutput() SecretStoreSpecProviderDopplerPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerPtrType) ToSecretStoreSpecProviderDopplerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerPtrOutput)
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDopplerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDoppler)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerOutput) ToSecretStoreSpecProviderDopplerOutput() SecretStoreSpecProviderDopplerOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerOutput) ToSecretStoreSpecProviderDopplerOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerOutput) ToSecretStoreSpecProviderDopplerPtrOutput() SecretStoreSpecProviderDopplerPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerOutput) ToSecretStoreSpecProviderDopplerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDoppler) *SecretStoreSpecProviderDoppler {
		return &v
	}).(SecretStoreSpecProviderDopplerPtrOutput)
}

func (o SecretStoreSpecProviderDopplerOutput) Auth() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDoppler) *SecretStoreSpecProviderDopplerAuth { return v.Auth }).(SecretStoreSpecProviderDopplerAuthPtrOutput)
}

// Doppler config (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDoppler) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Format enables the downloading of secrets as a file (string)
func (o SecretStoreSpecProviderDopplerOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDoppler) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Environment variable compatible name transforms that change secret names to a different format
func (o SecretStoreSpecProviderDopplerOutput) NameTransformer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDoppler) *string { return v.NameTransformer }).(pulumi.StringPtrOutput)
}

// Doppler project (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDoppler) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDopplerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDoppler)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerPtrOutput) ToSecretStoreSpecProviderDopplerPtrOutput() SecretStoreSpecProviderDopplerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPtrOutput) ToSecretStoreSpecProviderDopplerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPtrOutput) Elem() SecretStoreSpecProviderDopplerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) SecretStoreSpecProviderDoppler {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDoppler
		return ret
	}).(SecretStoreSpecProviderDopplerOutput)
}

func (o SecretStoreSpecProviderDopplerPtrOutput) Auth() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) *SecretStoreSpecProviderDopplerAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderDopplerAuthPtrOutput)
}

// Doppler config (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

// Format enables the downloading of secrets as a file (string)
func (o SecretStoreSpecProviderDopplerPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Environment variable compatible name transforms that change secret names to a different format
func (o SecretStoreSpecProviderDopplerPtrOutput) NameTransformer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) *string {
		if v == nil {
			return nil
		}
		return v.NameTransformer
	}).(pulumi.StringPtrOutput)
}

// Doppler project (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDoppler) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuth struct {
	SecretRef *SecretStoreSpecProviderDopplerAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderDopplerAuthInput is an input type that accepts SecretStoreSpecProviderDopplerAuthArgs and SecretStoreSpecProviderDopplerAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthInput` via:
//
//	SecretStoreSpecProviderDopplerAuthArgs{...}
type SecretStoreSpecProviderDopplerAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthOutput() SecretStoreSpecProviderDopplerAuthOutput
	ToSecretStoreSpecProviderDopplerAuthOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthOutput
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuthArgs struct {
	SecretRef SecretStoreSpecProviderDopplerAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderDopplerAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthArgs) ToSecretStoreSpecProviderDopplerAuthOutput() SecretStoreSpecProviderDopplerAuthOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthArgs) ToSecretStoreSpecProviderDopplerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthOutput)
}

func (i SecretStoreSpecProviderDopplerAuthArgs) ToSecretStoreSpecProviderDopplerAuthPtrOutput() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthArgs) ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthOutput).ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthArgs, SecretStoreSpecProviderDopplerAuthPtr and SecretStoreSpecProviderDopplerAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthPtrOutput() SecretStoreSpecProviderDopplerAuthPtrOutput
	ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthPtrOutput
}

type secretStoreSpecProviderDopplerAuthPtrType SecretStoreSpecProviderDopplerAuthArgs

func SecretStoreSpecProviderDopplerAuthPtr(v *SecretStoreSpecProviderDopplerAuthArgs) SecretStoreSpecProviderDopplerAuthPtrInput {
	return (*secretStoreSpecProviderDopplerAuthPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthPtrType) ToSecretStoreSpecProviderDopplerAuthPtrOutput() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthPtrType) ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthPtrOutput)
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthOutput) ToSecretStoreSpecProviderDopplerAuthOutput() SecretStoreSpecProviderDopplerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthOutput) ToSecretStoreSpecProviderDopplerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthOutput) ToSecretStoreSpecProviderDopplerAuthPtrOutput() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthOutput) ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuth) *SecretStoreSpecProviderDopplerAuth {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthPtrOutput)
}

func (o SecretStoreSpecProviderDopplerAuthOutput) SecretRef() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuth) *SecretStoreSpecProviderDopplerAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthPtrOutput) ToSecretStoreSpecProviderDopplerAuthPtrOutput() SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPtrOutput) ToSecretStoreSpecProviderDopplerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuth) SecretStoreSpecProviderDopplerAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuth
		return ret
	}).(SecretStoreSpecProviderDopplerAuthOutput)
}

func (o SecretStoreSpecProviderDopplerAuthPtrOutput) SecretRef() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuth) *SecretStoreSpecProviderDopplerAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput)
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuthPatch struct {
	SecretRef *SecretStoreSpecProviderDopplerAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderDopplerAuthPatchInput is an input type that accepts SecretStoreSpecProviderDopplerAuthPatchArgs and SecretStoreSpecProviderDopplerAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthPatchInput` via:
//
//	SecretStoreSpecProviderDopplerAuthPatchArgs{...}
type SecretStoreSpecProviderDopplerAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthPatchOutput() SecretStoreSpecProviderDopplerAuthPatchOutput
	ToSecretStoreSpecProviderDopplerAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthPatchOutput
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderDopplerAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthPatchArgs) ToSecretStoreSpecProviderDopplerAuthPatchOutput() SecretStoreSpecProviderDopplerAuthPatchOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthPatchArgs) ToSecretStoreSpecProviderDopplerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthPatchOutput)
}

func (i SecretStoreSpecProviderDopplerAuthPatchArgs) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutput() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthPatchArgs) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthPatchOutput).ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthPatchArgs, SecretStoreSpecProviderDopplerAuthPatchPtr and SecretStoreSpecProviderDopplerAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthPatchPtrOutput() SecretStoreSpecProviderDopplerAuthPatchPtrOutput
	ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthPatchPtrOutput
}

type secretStoreSpecProviderDopplerAuthPatchPtrType SecretStoreSpecProviderDopplerAuthPatchArgs

func SecretStoreSpecProviderDopplerAuthPatchPtr(v *SecretStoreSpecProviderDopplerAuthPatchArgs) SecretStoreSpecProviderDopplerAuthPatchPtrInput {
	return (*secretStoreSpecProviderDopplerAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthPatchPtrType) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutput() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthPatchPtrType) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthPatchPtrOutput)
}

// Auth configures how the Operator authenticates with the Doppler API
type SecretStoreSpecProviderDopplerAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthPatchOutput) ToSecretStoreSpecProviderDopplerAuthPatchOutput() SecretStoreSpecProviderDopplerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPatchOutput) ToSecretStoreSpecProviderDopplerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPatchOutput) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutput() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthPatchOutput) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuthPatch) *SecretStoreSpecProviderDopplerAuthPatch {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderDopplerAuthPatchOutput) SecretRef() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthPatch) *SecretStoreSpecProviderDopplerAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutput() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthPatchPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthPatch) SecretStoreSpecProviderDopplerAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuthPatch
		return ret
	}).(SecretStoreSpecProviderDopplerAuthPatchOutput)
}

func (o SecretStoreSpecProviderDopplerAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthPatch) *SecretStoreSpecProviderDopplerAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRef struct {
	DopplerToken *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken `pulumi:"dopplerToken"`
}

// SecretStoreSpecProviderDopplerAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefArgs and SecretStoreSpecProviderDopplerAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderDopplerAuthSecretRefArgs{...}
type SecretStoreSpecProviderDopplerAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefOutput() SecretStoreSpecProviderDopplerAuthSecretRefOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefOutput
}

type SecretStoreSpecProviderDopplerAuthSecretRefArgs struct {
	DopplerToken SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput `pulumi:"dopplerToken"`
}

func (SecretStoreSpecProviderDopplerAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefOutput() SecretStoreSpecProviderDopplerAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefOutput).ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefArgs, SecretStoreSpecProviderDopplerAuthSecretRefPtr and SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput
}

type secretStoreSpecProviderDopplerAuthSecretRefPtrType SecretStoreSpecProviderDopplerAuthSecretRefArgs

func SecretStoreSpecProviderDopplerAuthSecretRefPtr(v *SecretStoreSpecProviderDopplerAuthSecretRefArgs) SecretStoreSpecProviderDopplerAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderDopplerAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefOutput() SecretStoreSpecProviderDopplerAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuthSecretRef) *SecretStoreSpecProviderDopplerAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefOutput) DopplerToken() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRef) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken {
		return v.DopplerToken
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRef) SecretStoreSpecProviderDopplerAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderDopplerAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput) DopplerToken() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRef) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken {
		if v == nil {
			return nil
		}
		return v.DopplerToken
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput)
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs and SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenInput` via:
//
//	SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs{...}
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput)
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput).ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs, SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtr and SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput
}

type secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrType SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs

func SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtr(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput {
	return (*secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput)
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken
		return ret
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs and SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchInput` via:
//
//	SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs{...}
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput)
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput).ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs, SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtr and SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput
}

type secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrType SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs

func SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtr(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput {
	return (*secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput)
}

// The DopplerToken is used for authentication.
// See https://docs.doppler.com/reference/api#authentication for auth token types.
// The Key attribute defaults to dopplerToken if not specified.
type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch
		return ret
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefPatch struct {
	DopplerToken *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch `pulumi:"dopplerToken"`
}

// SecretStoreSpecProviderDopplerAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs and SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderDopplerAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput
}

type SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs struct {
	DopplerToken SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput `pulumi:"dopplerToken"`
}

func (SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput).ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs, SecretStoreSpecProviderDopplerAuthSecretRefPatchPtr and SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderDopplerAuthSecretRefPatchPtrType SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs

func SecretStoreSpecProviderDopplerAuthSecretRefPatchPtr(v *SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderDopplerAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderDopplerAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerAuthSecretRefPatch) *SecretStoreSpecProviderDopplerAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput) DopplerToken() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerAuthSecretRefPatch) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch {
		return v.DopplerToken
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput)
}

type SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefPatch) SecretStoreSpecProviderDopplerAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput) DopplerToken() SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerAuthSecretRefPatch) *SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatch {
		if v == nil {
			return nil
		}
		return v.DopplerToken
	}).(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput)
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDopplerPatch struct {
	Auth *SecretStoreSpecProviderDopplerAuthPatch `pulumi:"auth"`
	// Doppler config (required if not using a Service Token)
	Config *string `pulumi:"config"`
	// Format enables the downloading of secrets as a file (string)
	Format *string `pulumi:"format"`
	// Environment variable compatible name transforms that change secret names to a different format
	NameTransformer *string `pulumi:"nameTransformer"`
	// Doppler project (required if not using a Service Token)
	Project *string `pulumi:"project"`
}

// SecretStoreSpecProviderDopplerPatchInput is an input type that accepts SecretStoreSpecProviderDopplerPatchArgs and SecretStoreSpecProviderDopplerPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerPatchInput` via:
//
//	SecretStoreSpecProviderDopplerPatchArgs{...}
type SecretStoreSpecProviderDopplerPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerPatchOutput() SecretStoreSpecProviderDopplerPatchOutput
	ToSecretStoreSpecProviderDopplerPatchOutputWithContext(context.Context) SecretStoreSpecProviderDopplerPatchOutput
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDopplerPatchArgs struct {
	Auth SecretStoreSpecProviderDopplerAuthPatchPtrInput `pulumi:"auth"`
	// Doppler config (required if not using a Service Token)
	Config pulumi.StringPtrInput `pulumi:"config"`
	// Format enables the downloading of secrets as a file (string)
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Environment variable compatible name transforms that change secret names to a different format
	NameTransformer pulumi.StringPtrInput `pulumi:"nameTransformer"`
	// Doppler project (required if not using a Service Token)
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (SecretStoreSpecProviderDopplerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderDopplerPatchArgs) ToSecretStoreSpecProviderDopplerPatchOutput() SecretStoreSpecProviderDopplerPatchOutput {
	return i.ToSecretStoreSpecProviderDopplerPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerPatchArgs) ToSecretStoreSpecProviderDopplerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerPatchOutput)
}

func (i SecretStoreSpecProviderDopplerPatchArgs) ToSecretStoreSpecProviderDopplerPatchPtrOutput() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderDopplerPatchArgs) ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerPatchOutput).ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderDopplerPatchPtrInput is an input type that accepts SecretStoreSpecProviderDopplerPatchArgs, SecretStoreSpecProviderDopplerPatchPtr and SecretStoreSpecProviderDopplerPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderDopplerPatchPtrInput` via:
//
//	        SecretStoreSpecProviderDopplerPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderDopplerPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderDopplerPatchPtrOutput() SecretStoreSpecProviderDopplerPatchPtrOutput
	ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderDopplerPatchPtrOutput
}

type secretStoreSpecProviderDopplerPatchPtrType SecretStoreSpecProviderDopplerPatchArgs

func SecretStoreSpecProviderDopplerPatchPtr(v *SecretStoreSpecProviderDopplerPatchArgs) SecretStoreSpecProviderDopplerPatchPtrInput {
	return (*secretStoreSpecProviderDopplerPatchPtrType)(v)
}

func (*secretStoreSpecProviderDopplerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderDopplerPatchPtrType) ToSecretStoreSpecProviderDopplerPatchPtrOutput() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderDopplerPatchPtrType) ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderDopplerPatchPtrOutput)
}

// Doppler configures this store to sync secrets using the Doppler provider
type SecretStoreSpecProviderDopplerPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderDopplerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerPatchOutput) ToSecretStoreSpecProviderDopplerPatchOutput() SecretStoreSpecProviderDopplerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPatchOutput) ToSecretStoreSpecProviderDopplerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPatchOutput) ToSecretStoreSpecProviderDopplerPatchPtrOutput() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o.ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderDopplerPatchOutput) ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderDopplerPatch) *SecretStoreSpecProviderDopplerPatch {
		return &v
	}).(SecretStoreSpecProviderDopplerPatchPtrOutput)
}

func (o SecretStoreSpecProviderDopplerPatchOutput) Auth() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerPatch) *SecretStoreSpecProviderDopplerAuthPatch { return v.Auth }).(SecretStoreSpecProviderDopplerAuthPatchPtrOutput)
}

// Doppler config (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPatchOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerPatch) *string { return v.Config }).(pulumi.StringPtrOutput)
}

// Format enables the downloading of secrets as a file (string)
func (o SecretStoreSpecProviderDopplerPatchOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerPatch) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Environment variable compatible name transforms that change secret names to a different format
func (o SecretStoreSpecProviderDopplerPatchOutput) NameTransformer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerPatch) *string { return v.NameTransformer }).(pulumi.StringPtrOutput)
}

// Doppler project (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPatchOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderDopplerPatch) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderDopplerPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderDopplerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderDopplerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderDopplerPatchPtrOutput) ToSecretStoreSpecProviderDopplerPatchPtrOutput() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPatchPtrOutput) ToSecretStoreSpecProviderDopplerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderDopplerPatchPtrOutput) Elem() SecretStoreSpecProviderDopplerPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) SecretStoreSpecProviderDopplerPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderDopplerPatch
		return ret
	}).(SecretStoreSpecProviderDopplerPatchOutput)
}

func (o SecretStoreSpecProviderDopplerPatchPtrOutput) Auth() SecretStoreSpecProviderDopplerAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) *SecretStoreSpecProviderDopplerAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderDopplerAuthPatchPtrOutput)
}

// Doppler config (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPatchPtrOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.StringPtrOutput)
}

// Format enables the downloading of secrets as a file (string)
func (o SecretStoreSpecProviderDopplerPatchPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Environment variable compatible name transforms that change secret names to a different format
func (o SecretStoreSpecProviderDopplerPatchPtrOutput) NameTransformer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) *string {
		if v == nil {
			return nil
		}
		return v.NameTransformer
	}).(pulumi.StringPtrOutput)
}

// Doppler project (required if not using a Service Token)
func (o SecretStoreSpecProviderDopplerPatchPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderDopplerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFake struct {
	Data []SecretStoreSpecProviderFakeData `pulumi:"data"`
}

// SecretStoreSpecProviderFakeInput is an input type that accepts SecretStoreSpecProviderFakeArgs and SecretStoreSpecProviderFakeOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeInput` via:
//
//	SecretStoreSpecProviderFakeArgs{...}
type SecretStoreSpecProviderFakeInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput
	ToSecretStoreSpecProviderFakeOutputWithContext(context.Context) SecretStoreSpecProviderFakeOutput
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakeArgs struct {
	Data SecretStoreSpecProviderFakeDataArrayInput `pulumi:"data"`
}

func (SecretStoreSpecProviderFakeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFake)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput {
	return i.ToSecretStoreSpecProviderFakeOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeOutput)
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return i.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeArgs) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeOutput).ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFakePtrInput is an input type that accepts SecretStoreSpecProviderFakeArgs, SecretStoreSpecProviderFakePtr and SecretStoreSpecProviderFakePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakePtrInput` via:
//
//	        SecretStoreSpecProviderFakeArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFakePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput
	ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Context) SecretStoreSpecProviderFakePtrOutput
}

type secretStoreSpecProviderFakePtrType SecretStoreSpecProviderFakeArgs

func SecretStoreSpecProviderFakePtr(v *SecretStoreSpecProviderFakeArgs) SecretStoreSpecProviderFakePtrInput {
	return (*secretStoreSpecProviderFakePtrType)(v)
}

func (*secretStoreSpecProviderFakePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFake)(nil)).Elem()
}

func (i *secretStoreSpecProviderFakePtrType) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return i.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFakePtrType) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakePtrOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakeOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFake)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakeOutput() SecretStoreSpecProviderFakeOutput {
	return o
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakeOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeOutput {
	return o
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return o.ToSecretStoreSpecProviderFakePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFakeOutput) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFake) *SecretStoreSpecProviderFake {
		return &v
	}).(SecretStoreSpecProviderFakePtrOutput)
}

func (o SecretStoreSpecProviderFakeOutput) Data() SecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFake) []SecretStoreSpecProviderFakeData { return v.Data }).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFake)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakePtrOutput) ToSecretStoreSpecProviderFakePtrOutput() SecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePtrOutput) ToSecretStoreSpecProviderFakePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePtrOutput) Elem() SecretStoreSpecProviderFakeOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFake) SecretStoreSpecProviderFake {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFake
		return ret
	}).(SecretStoreSpecProviderFakeOutput)
}

func (o SecretStoreSpecProviderFakePtrOutput) Data() SecretStoreSpecProviderFakeDataArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFake) []SecretStoreSpecProviderFakeData {
		if v == nil {
			return nil
		}
		return v.Data
	}).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakeData struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
	// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
	ValueMap map[string]string `pulumi:"valueMap"`
	Version  *string           `pulumi:"version"`
}

// SecretStoreSpecProviderFakeDataInput is an input type that accepts SecretStoreSpecProviderFakeDataArgs and SecretStoreSpecProviderFakeDataOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataInput` via:
//
//	SecretStoreSpecProviderFakeDataArgs{...}
type SecretStoreSpecProviderFakeDataInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput
	ToSecretStoreSpecProviderFakeDataOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataOutput
}

type SecretStoreSpecProviderFakeDataArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
	ValueMap pulumi.StringMapInput `pulumi:"valueMap"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretStoreSpecProviderFakeDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataArgs) ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput {
	return i.ToSecretStoreSpecProviderFakeDataOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataArgs) ToSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataOutput)
}

// SecretStoreSpecProviderFakeDataArrayInput is an input type that accepts SecretStoreSpecProviderFakeDataArray and SecretStoreSpecProviderFakeDataArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataArrayInput` via:
//
//	SecretStoreSpecProviderFakeDataArray{ SecretStoreSpecProviderFakeDataArgs{...} }
type SecretStoreSpecProviderFakeDataArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput
	ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataArrayOutput
}

type SecretStoreSpecProviderFakeDataArray []SecretStoreSpecProviderFakeDataInput

func (SecretStoreSpecProviderFakeDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataArray) ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput {
	return i.ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataArray) ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataArrayOutput)
}

type SecretStoreSpecProviderFakeDataOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataOutput) ToSecretStoreSpecProviderFakeDataOutput() SecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataOutput) ToSecretStoreSpecProviderFakeDataOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderFakeDataOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
func (o SecretStoreSpecProviderFakeDataOutput) ValueMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) map[string]string { return v.ValueMap }).(pulumi.StringMapOutput)
}

func (o SecretStoreSpecProviderFakeDataOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeData) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFakeDataArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeData)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) ToSecretStoreSpecProviderFakeDataArrayOutput() SecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) ToSecretStoreSpecProviderFakeDataArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderFakeDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderFakeData {
		return vs[0].([]SecretStoreSpecProviderFakeData)[vs[1].(int)]
	}).(SecretStoreSpecProviderFakeDataOutput)
}

type SecretStoreSpecProviderFakeDataPatch struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
	// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
	ValueMap map[string]string `pulumi:"valueMap"`
	Version  *string           `pulumi:"version"`
}

// SecretStoreSpecProviderFakeDataPatchInput is an input type that accepts SecretStoreSpecProviderFakeDataPatchArgs and SecretStoreSpecProviderFakeDataPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataPatchInput` via:
//
//	SecretStoreSpecProviderFakeDataPatchArgs{...}
type SecretStoreSpecProviderFakeDataPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataPatchOutput() SecretStoreSpecProviderFakeDataPatchOutput
	ToSecretStoreSpecProviderFakeDataPatchOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataPatchOutput
}

type SecretStoreSpecProviderFakeDataPatchArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
	ValueMap pulumi.StringMapInput `pulumi:"valueMap"`
	Version  pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretStoreSpecProviderFakeDataPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeDataPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataPatchArgs) ToSecretStoreSpecProviderFakeDataPatchOutput() SecretStoreSpecProviderFakeDataPatchOutput {
	return i.ToSecretStoreSpecProviderFakeDataPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataPatchArgs) ToSecretStoreSpecProviderFakeDataPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataPatchOutput)
}

// SecretStoreSpecProviderFakeDataPatchArrayInput is an input type that accepts SecretStoreSpecProviderFakeDataPatchArray and SecretStoreSpecProviderFakeDataPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakeDataPatchArrayInput` via:
//
//	SecretStoreSpecProviderFakeDataPatchArray{ SecretStoreSpecProviderFakeDataPatchArgs{...} }
type SecretStoreSpecProviderFakeDataPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakeDataPatchArrayOutput() SecretStoreSpecProviderFakeDataPatchArrayOutput
	ToSecretStoreSpecProviderFakeDataPatchArrayOutputWithContext(context.Context) SecretStoreSpecProviderFakeDataPatchArrayOutput
}

type SecretStoreSpecProviderFakeDataPatchArray []SecretStoreSpecProviderFakeDataPatchInput

func (SecretStoreSpecProviderFakeDataPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeDataPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakeDataPatchArray) ToSecretStoreSpecProviderFakeDataPatchArrayOutput() SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return i.ToSecretStoreSpecProviderFakeDataPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakeDataPatchArray) ToSecretStoreSpecProviderFakeDataPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakeDataPatchArrayOutput)
}

type SecretStoreSpecProviderFakeDataPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakeDataPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataPatchOutput) ToSecretStoreSpecProviderFakeDataPatchOutput() SecretStoreSpecProviderFakeDataPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataPatchOutput) ToSecretStoreSpecProviderFakeDataPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeDataPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderFakeDataPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeDataPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.
func (o SecretStoreSpecProviderFakeDataPatchOutput) ValueMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeDataPatch) map[string]string { return v.ValueMap }).(pulumi.StringMapOutput)
}

func (o SecretStoreSpecProviderFakeDataPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakeDataPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFakeDataPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakeDataPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderFakeDataPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakeDataPatchArrayOutput) ToSecretStoreSpecProviderFakeDataPatchArrayOutput() SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataPatchArrayOutput) ToSecretStoreSpecProviderFakeDataPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderFakeDataPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderFakeDataPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderFakeDataPatch {
		return vs[0].([]SecretStoreSpecProviderFakeDataPatch)[vs[1].(int)]
	}).(SecretStoreSpecProviderFakeDataPatchOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakePatch struct {
	Data []SecretStoreSpecProviderFakeDataPatch `pulumi:"data"`
}

// SecretStoreSpecProviderFakePatchInput is an input type that accepts SecretStoreSpecProviderFakePatchArgs and SecretStoreSpecProviderFakePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakePatchInput` via:
//
//	SecretStoreSpecProviderFakePatchArgs{...}
type SecretStoreSpecProviderFakePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakePatchOutput() SecretStoreSpecProviderFakePatchOutput
	ToSecretStoreSpecProviderFakePatchOutputWithContext(context.Context) SecretStoreSpecProviderFakePatchOutput
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakePatchArgs struct {
	Data SecretStoreSpecProviderFakeDataPatchArrayInput `pulumi:"data"`
}

func (SecretStoreSpecProviderFakePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFakePatchArgs) ToSecretStoreSpecProviderFakePatchOutput() SecretStoreSpecProviderFakePatchOutput {
	return i.ToSecretStoreSpecProviderFakePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakePatchArgs) ToSecretStoreSpecProviderFakePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakePatchOutput)
}

func (i SecretStoreSpecProviderFakePatchArgs) ToSecretStoreSpecProviderFakePatchPtrOutput() SecretStoreSpecProviderFakePatchPtrOutput {
	return i.ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFakePatchArgs) ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakePatchOutput).ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFakePatchPtrInput is an input type that accepts SecretStoreSpecProviderFakePatchArgs, SecretStoreSpecProviderFakePatchPtr and SecretStoreSpecProviderFakePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFakePatchPtrInput` via:
//
//	        SecretStoreSpecProviderFakePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFakePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFakePatchPtrOutput() SecretStoreSpecProviderFakePatchPtrOutput
	ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderFakePatchPtrOutput
}

type secretStoreSpecProviderFakePatchPtrType SecretStoreSpecProviderFakePatchArgs

func SecretStoreSpecProviderFakePatchPtr(v *SecretStoreSpecProviderFakePatchArgs) SecretStoreSpecProviderFakePatchPtrInput {
	return (*secretStoreSpecProviderFakePatchPtrType)(v)
}

func (*secretStoreSpecProviderFakePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFakePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderFakePatchPtrType) ToSecretStoreSpecProviderFakePatchPtrOutput() SecretStoreSpecProviderFakePatchPtrOutput {
	return i.ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFakePatchPtrType) ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFakePatchPtrOutput)
}

// Fake configures a store with static key/value pairs
type SecretStoreSpecProviderFakePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFakePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakePatchOutput) ToSecretStoreSpecProviderFakePatchOutput() SecretStoreSpecProviderFakePatchOutput {
	return o
}

func (o SecretStoreSpecProviderFakePatchOutput) ToSecretStoreSpecProviderFakePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchOutput {
	return o
}

func (o SecretStoreSpecProviderFakePatchOutput) ToSecretStoreSpecProviderFakePatchPtrOutput() SecretStoreSpecProviderFakePatchPtrOutput {
	return o.ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFakePatchOutput) ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFakePatch) *SecretStoreSpecProviderFakePatch {
		return &v
	}).(SecretStoreSpecProviderFakePatchPtrOutput)
}

func (o SecretStoreSpecProviderFakePatchOutput) Data() SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFakePatch) []SecretStoreSpecProviderFakeDataPatch { return v.Data }).(SecretStoreSpecProviderFakeDataPatchArrayOutput)
}

type SecretStoreSpecProviderFakePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFakePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFakePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFakePatchPtrOutput) ToSecretStoreSpecProviderFakePatchPtrOutput() SecretStoreSpecProviderFakePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePatchPtrOutput) ToSecretStoreSpecProviderFakePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFakePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFakePatchPtrOutput) Elem() SecretStoreSpecProviderFakePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFakePatch) SecretStoreSpecProviderFakePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFakePatch
		return ret
	}).(SecretStoreSpecProviderFakePatchOutput)
}

func (o SecretStoreSpecProviderFakePatchPtrOutput) Data() SecretStoreSpecProviderFakeDataPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFakePatch) []SecretStoreSpecProviderFakeDataPatch {
		if v == nil {
			return nil
		}
		return v.Data
	}).(SecretStoreSpecProviderFakeDataPatchArrayOutput)
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanix struct {
	ApiKey *SecretStoreSpecProviderFortanixApiKey `pulumi:"apiKey"`
	// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
	ApiUrl *string `pulumi:"apiUrl"`
}

// SecretStoreSpecProviderFortanixInput is an input type that accepts SecretStoreSpecProviderFortanixArgs and SecretStoreSpecProviderFortanixOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixInput` via:
//
//	SecretStoreSpecProviderFortanixArgs{...}
type SecretStoreSpecProviderFortanixInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixOutput() SecretStoreSpecProviderFortanixOutput
	ToSecretStoreSpecProviderFortanixOutputWithContext(context.Context) SecretStoreSpecProviderFortanixOutput
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanixArgs struct {
	ApiKey SecretStoreSpecProviderFortanixApiKeyPtrInput `pulumi:"apiKey"`
	// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
}

func (SecretStoreSpecProviderFortanixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanix)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixArgs) ToSecretStoreSpecProviderFortanixOutput() SecretStoreSpecProviderFortanixOutput {
	return i.ToSecretStoreSpecProviderFortanixOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixArgs) ToSecretStoreSpecProviderFortanixOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixOutput)
}

func (i SecretStoreSpecProviderFortanixArgs) ToSecretStoreSpecProviderFortanixPtrOutput() SecretStoreSpecProviderFortanixPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixArgs) ToSecretStoreSpecProviderFortanixPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixOutput).ToSecretStoreSpecProviderFortanixPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixPtrInput is an input type that accepts SecretStoreSpecProviderFortanixArgs, SecretStoreSpecProviderFortanixPtr and SecretStoreSpecProviderFortanixPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixPtrOutput() SecretStoreSpecProviderFortanixPtrOutput
	ToSecretStoreSpecProviderFortanixPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixPtrOutput
}

type secretStoreSpecProviderFortanixPtrType SecretStoreSpecProviderFortanixArgs

func SecretStoreSpecProviderFortanixPtr(v *SecretStoreSpecProviderFortanixArgs) SecretStoreSpecProviderFortanixPtrInput {
	return (*secretStoreSpecProviderFortanixPtrType)(v)
}

func (*secretStoreSpecProviderFortanixPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanix)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixPtrType) ToSecretStoreSpecProviderFortanixPtrOutput() SecretStoreSpecProviderFortanixPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixPtrType) ToSecretStoreSpecProviderFortanixPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixPtrOutput)
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanixOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanix)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixOutput) ToSecretStoreSpecProviderFortanixOutput() SecretStoreSpecProviderFortanixOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixOutput) ToSecretStoreSpecProviderFortanixOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixOutput) ToSecretStoreSpecProviderFortanixPtrOutput() SecretStoreSpecProviderFortanixPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixOutput) ToSecretStoreSpecProviderFortanixPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanix) *SecretStoreSpecProviderFortanix {
		return &v
	}).(SecretStoreSpecProviderFortanixPtrOutput)
}

func (o SecretStoreSpecProviderFortanixOutput) ApiKey() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanix) *SecretStoreSpecProviderFortanixApiKey { return v.ApiKey }).(SecretStoreSpecProviderFortanixApiKeyPtrOutput)
}

// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
func (o SecretStoreSpecProviderFortanixOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanix) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFortanixPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanix)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixPtrOutput) ToSecretStoreSpecProviderFortanixPtrOutput() SecretStoreSpecProviderFortanixPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPtrOutput) ToSecretStoreSpecProviderFortanixPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPtrOutput) Elem() SecretStoreSpecProviderFortanixOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanix) SecretStoreSpecProviderFortanix {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanix
		return ret
	}).(SecretStoreSpecProviderFortanixOutput)
}

func (o SecretStoreSpecProviderFortanixPtrOutput) ApiKey() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanix) *SecretStoreSpecProviderFortanixApiKey {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(SecretStoreSpecProviderFortanixApiKeyPtrOutput)
}

// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
func (o SecretStoreSpecProviderFortanixPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanix) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKey struct {
	SecretRef *SecretStoreSpecProviderFortanixApiKeySecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderFortanixApiKeyInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeyArgs and SecretStoreSpecProviderFortanixApiKeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeyInput` via:
//
//	SecretStoreSpecProviderFortanixApiKeyArgs{...}
type SecretStoreSpecProviderFortanixApiKeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeyOutput() SecretStoreSpecProviderFortanixApiKeyOutput
	ToSecretStoreSpecProviderFortanixApiKeyOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeyOutput
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKeyArgs struct {
	SecretRef SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderFortanixApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKey)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixApiKeyArgs) ToSecretStoreSpecProviderFortanixApiKeyOutput() SecretStoreSpecProviderFortanixApiKeyOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeyArgs) ToSecretStoreSpecProviderFortanixApiKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyOutput)
}

func (i SecretStoreSpecProviderFortanixApiKeyArgs) ToSecretStoreSpecProviderFortanixApiKeyPtrOutput() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeyArgs) ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyOutput).ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixApiKeyPtrInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeyArgs, SecretStoreSpecProviderFortanixApiKeyPtr and SecretStoreSpecProviderFortanixApiKeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeyPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixApiKeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixApiKeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeyPtrOutput() SecretStoreSpecProviderFortanixApiKeyPtrOutput
	ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeyPtrOutput
}

type secretStoreSpecProviderFortanixApiKeyPtrType SecretStoreSpecProviderFortanixApiKeyArgs

func SecretStoreSpecProviderFortanixApiKeyPtr(v *SecretStoreSpecProviderFortanixApiKeyArgs) SecretStoreSpecProviderFortanixApiKeyPtrInput {
	return (*secretStoreSpecProviderFortanixApiKeyPtrType)(v)
}

func (*secretStoreSpecProviderFortanixApiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKey)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixApiKeyPtrType) ToSecretStoreSpecProviderFortanixApiKeyPtrOutput() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixApiKeyPtrType) ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyPtrOutput)
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeyOutput) ToSecretStoreSpecProviderFortanixApiKeyOutput() SecretStoreSpecProviderFortanixApiKeyOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyOutput) ToSecretStoreSpecProviderFortanixApiKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyOutput) ToSecretStoreSpecProviderFortanixApiKeyPtrOutput() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixApiKeyOutput) ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanixApiKey) *SecretStoreSpecProviderFortanixApiKey {
		return &v
	}).(SecretStoreSpecProviderFortanixApiKeyPtrOutput)
}

func (o SecretStoreSpecProviderFortanixApiKeyOutput) SecretRef() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKey) *SecretStoreSpecProviderFortanixApiKeySecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderFortanixApiKeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeyPtrOutput) ToSecretStoreSpecProviderFortanixApiKeyPtrOutput() SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPtrOutput) ToSecretStoreSpecProviderFortanixApiKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPtrOutput) Elem() SecretStoreSpecProviderFortanixApiKeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKey) SecretStoreSpecProviderFortanixApiKey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanixApiKey
		return ret
	}).(SecretStoreSpecProviderFortanixApiKeyOutput)
}

func (o SecretStoreSpecProviderFortanixApiKeyPtrOutput) SecretRef() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKey) *SecretStoreSpecProviderFortanixApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput)
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKeyPatch struct {
	SecretRef *SecretStoreSpecProviderFortanixApiKeySecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderFortanixApiKeyPatchInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeyPatchArgs and SecretStoreSpecProviderFortanixApiKeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeyPatchInput` via:
//
//	SecretStoreSpecProviderFortanixApiKeyPatchArgs{...}
type SecretStoreSpecProviderFortanixApiKeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeyPatchOutput() SecretStoreSpecProviderFortanixApiKeyPatchOutput
	ToSecretStoreSpecProviderFortanixApiKeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeyPatchOutput
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKeyPatchArgs struct {
	SecretRef SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderFortanixApiKeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixApiKeyPatchArgs) ToSecretStoreSpecProviderFortanixApiKeyPatchOutput() SecretStoreSpecProviderFortanixApiKeyPatchOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeyPatchArgs) ToSecretStoreSpecProviderFortanixApiKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyPatchOutput)
}

func (i SecretStoreSpecProviderFortanixApiKeyPatchArgs) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeyPatchArgs) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyPatchOutput).ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixApiKeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeyPatchArgs, SecretStoreSpecProviderFortanixApiKeyPatchPtr and SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixApiKeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixApiKeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput
	ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput
}

type secretStoreSpecProviderFortanixApiKeyPatchPtrType SecretStoreSpecProviderFortanixApiKeyPatchArgs

func SecretStoreSpecProviderFortanixApiKeyPatchPtr(v *SecretStoreSpecProviderFortanixApiKeyPatchArgs) SecretStoreSpecProviderFortanixApiKeyPatchPtrInput {
	return (*secretStoreSpecProviderFortanixApiKeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderFortanixApiKeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixApiKeyPatchPtrType) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixApiKeyPatchPtrType) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput)
}

// APIKey is the API token to access SDKMS Applications.
type SecretStoreSpecProviderFortanixApiKeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchOutput() SecretStoreSpecProviderFortanixApiKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanixApiKeyPatch) *SecretStoreSpecProviderFortanixApiKeyPatch {
		return &v
	}).(SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchOutput) SecretRef() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeyPatch) *SecretStoreSpecProviderFortanixApiKeySecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput) ToSecretStoreSpecProviderFortanixApiKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput) Elem() SecretStoreSpecProviderFortanixApiKeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeyPatch) SecretStoreSpecProviderFortanixApiKeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanixApiKeyPatch
		return ret
	}).(SecretStoreSpecProviderFortanixApiKeyPatchOutput)
}

func (o SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput) SecretRef() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeyPatch) *SecretStoreSpecProviderFortanixApiKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput)
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderFortanixApiKeySecretRefInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeySecretRefArgs and SecretStoreSpecProviderFortanixApiKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeySecretRefInput` via:
//
//	SecretStoreSpecProviderFortanixApiKeySecretRefArgs{...}
type SecretStoreSpecProviderFortanixApiKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeySecretRefOutput() SecretStoreSpecProviderFortanixApiKeySecretRefOutput
	ToSecretStoreSpecProviderFortanixApiKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefOutput
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderFortanixApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefOutput() SecretStoreSpecProviderFortanixApiKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefOutput)
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefOutput).ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeySecretRefArgs, SecretStoreSpecProviderFortanixApiKeySecretRefPtr and SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixApiKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput
	ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput
}

type secretStoreSpecProviderFortanixApiKeySecretRefPtrType SecretStoreSpecProviderFortanixApiKeySecretRefArgs

func SecretStoreSpecProviderFortanixApiKeySecretRefPtr(v *SecretStoreSpecProviderFortanixApiKeySecretRefArgs) SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput {
	return (*secretStoreSpecProviderFortanixApiKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderFortanixApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixApiKeySecretRefPtrType) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixApiKeySecretRefPtrType) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput)
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefOutput() SecretStoreSpecProviderFortanixApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanixApiKeySecretRef) *SecretStoreSpecProviderFortanixApiKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderFortanixApiKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRef) SecretStoreSpecProviderFortanixApiKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanixApiKeySecretRef
		return ret
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderFortanixApiKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs and SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderFortanixApiKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput
	ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput).ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs, SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtr and SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderFortanixApiKeySecretRefPatchPtrType SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs

func SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtr(v *SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderFortanixApiKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderFortanixApiKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixApiKeySecretRefPatchPtrType) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixApiKeySecretRefPatchPtrType) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput)
}

// SecretRef is a reference to a secret containing the SDKMS API Key.
type SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *SecretStoreSpecProviderFortanixApiKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixApiKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRefPatch) SecretStoreSpecProviderFortanixApiKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanixApiKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanixPatch struct {
	ApiKey *SecretStoreSpecProviderFortanixApiKeyPatch `pulumi:"apiKey"`
	// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
	ApiUrl *string `pulumi:"apiUrl"`
}

// SecretStoreSpecProviderFortanixPatchInput is an input type that accepts SecretStoreSpecProviderFortanixPatchArgs and SecretStoreSpecProviderFortanixPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixPatchInput` via:
//
//	SecretStoreSpecProviderFortanixPatchArgs{...}
type SecretStoreSpecProviderFortanixPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixPatchOutput() SecretStoreSpecProviderFortanixPatchOutput
	ToSecretStoreSpecProviderFortanixPatchOutputWithContext(context.Context) SecretStoreSpecProviderFortanixPatchOutput
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanixPatchArgs struct {
	ApiKey SecretStoreSpecProviderFortanixApiKeyPatchPtrInput `pulumi:"apiKey"`
	// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
}

func (SecretStoreSpecProviderFortanixPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderFortanixPatchArgs) ToSecretStoreSpecProviderFortanixPatchOutput() SecretStoreSpecProviderFortanixPatchOutput {
	return i.ToSecretStoreSpecProviderFortanixPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixPatchArgs) ToSecretStoreSpecProviderFortanixPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixPatchOutput)
}

func (i SecretStoreSpecProviderFortanixPatchArgs) ToSecretStoreSpecProviderFortanixPatchPtrOutput() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderFortanixPatchArgs) ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixPatchOutput).ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderFortanixPatchPtrInput is an input type that accepts SecretStoreSpecProviderFortanixPatchArgs, SecretStoreSpecProviderFortanixPatchPtr and SecretStoreSpecProviderFortanixPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderFortanixPatchPtrInput` via:
//
//	        SecretStoreSpecProviderFortanixPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderFortanixPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderFortanixPatchPtrOutput() SecretStoreSpecProviderFortanixPatchPtrOutput
	ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderFortanixPatchPtrOutput
}

type secretStoreSpecProviderFortanixPatchPtrType SecretStoreSpecProviderFortanixPatchArgs

func SecretStoreSpecProviderFortanixPatchPtr(v *SecretStoreSpecProviderFortanixPatchArgs) SecretStoreSpecProviderFortanixPatchPtrInput {
	return (*secretStoreSpecProviderFortanixPatchPtrType)(v)
}

func (*secretStoreSpecProviderFortanixPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderFortanixPatchPtrType) ToSecretStoreSpecProviderFortanixPatchPtrOutput() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return i.ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderFortanixPatchPtrType) ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderFortanixPatchPtrOutput)
}

// Fortanix configures this store to sync secrets using the Fortanix provider
type SecretStoreSpecProviderFortanixPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderFortanixPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixPatchOutput) ToSecretStoreSpecProviderFortanixPatchOutput() SecretStoreSpecProviderFortanixPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPatchOutput) ToSecretStoreSpecProviderFortanixPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPatchOutput) ToSecretStoreSpecProviderFortanixPatchPtrOutput() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o.ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderFortanixPatchOutput) ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderFortanixPatch) *SecretStoreSpecProviderFortanixPatch {
		return &v
	}).(SecretStoreSpecProviderFortanixPatchPtrOutput)
}

func (o SecretStoreSpecProviderFortanixPatchOutput) ApiKey() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixPatch) *SecretStoreSpecProviderFortanixApiKeyPatch {
		return v.ApiKey
	}).(SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput)
}

// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
func (o SecretStoreSpecProviderFortanixPatchOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderFortanixPatch) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderFortanixPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderFortanixPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderFortanixPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderFortanixPatchPtrOutput) ToSecretStoreSpecProviderFortanixPatchPtrOutput() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPatchPtrOutput) ToSecretStoreSpecProviderFortanixPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderFortanixPatchPtrOutput) Elem() SecretStoreSpecProviderFortanixPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixPatch) SecretStoreSpecProviderFortanixPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderFortanixPatch
		return ret
	}).(SecretStoreSpecProviderFortanixPatchOutput)
}

func (o SecretStoreSpecProviderFortanixPatchPtrOutput) ApiKey() SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixPatch) *SecretStoreSpecProviderFortanixApiKeyPatch {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput)
}

// APIURL is the URL of SDKMS API. Defaults to `sdkms.fortanix.com`.
func (o SecretStoreSpecProviderFortanixPatchPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderFortanixPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsm struct {
	Auth *SecretStoreSpecProviderGcpsmAuth `pulumi:"auth"`
	// Location optionally defines a location for a secret
	Location *string `pulumi:"location"`
	// ProjectID project where secret is located
	ProjectID *string `pulumi:"projectID"`
}

// SecretStoreSpecProviderGcpsmInput is an input type that accepts SecretStoreSpecProviderGcpsmArgs and SecretStoreSpecProviderGcpsmOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmInput` via:
//
//	SecretStoreSpecProviderGcpsmArgs{...}
type SecretStoreSpecProviderGcpsmInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput
	ToSecretStoreSpecProviderGcpsmOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmOutput
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmArgs struct {
	Auth SecretStoreSpecProviderGcpsmAuthPtrInput `pulumi:"auth"`
	// Location optionally defines a location for a secret
	Location pulumi.StringPtrInput `pulumi:"location"`
	// ProjectID project where secret is located
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (SecretStoreSpecProviderGcpsmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput {
	return i.ToSecretStoreSpecProviderGcpsmOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmOutput)
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmArgs) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmOutput).ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmArgs, SecretStoreSpecProviderGcpsmPtr and SecretStoreSpecProviderGcpsmPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput
	ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmPtrOutput
}

type secretStoreSpecProviderGcpsmPtrType SecretStoreSpecProviderGcpsmArgs

func SecretStoreSpecProviderGcpsmPtr(v *SecretStoreSpecProviderGcpsmArgs) SecretStoreSpecProviderGcpsmPtrInput {
	return (*secretStoreSpecProviderGcpsmPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmPtrType) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmPtrType) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmOutput() SecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmOutput) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsm {
		return &v
	}).(SecretStoreSpecProviderGcpsmPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmOutput) Auth() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsmAuth { return v.Auth }).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// Location optionally defines a location for a secret
func (o SecretStoreSpecProviderGcpsmOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsm) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsm) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsm)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) ToSecretStoreSpecProviderGcpsmPtrOutput() SecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) ToSecretStoreSpecProviderGcpsmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) Elem() SecretStoreSpecProviderGcpsmOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) SecretStoreSpecProviderGcpsm {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsm
		return ret
	}).(SecretStoreSpecProviderGcpsmOutput)
}

func (o SecretStoreSpecProviderGcpsmPtrOutput) Auth() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) *SecretStoreSpecProviderGcpsmAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// Location optionally defines a location for a secret
func (o SecretStoreSpecProviderGcpsmPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsm) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuth struct {
	SecretRef        *SecretStoreSpecProviderGcpsmAuthSecretRef        `pulumi:"secretRef"`
	WorkloadIdentity *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity `pulumi:"workloadIdentity"`
}

// SecretStoreSpecProviderGcpsmAuthInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthArgs and SecretStoreSpecProviderGcpsmAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthArgs{...}
type SecretStoreSpecProviderGcpsmAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput
	ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthOutput
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthArgs struct {
	SecretRef        SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput        `pulumi:"secretRef"`
	WorkloadIdentity SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput `pulumi:"workloadIdentity"`
}

func (SecretStoreSpecProviderGcpsmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthArgs) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthOutput).ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthArgs, SecretStoreSpecProviderGcpsmAuthPtr and SecretStoreSpecProviderGcpsmAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput
}

type secretStoreSpecProviderGcpsmAuthPtrType SecretStoreSpecProviderGcpsmAuthArgs

func SecretStoreSpecProviderGcpsmAuthPtr(v *SecretStoreSpecProviderGcpsmAuthArgs) SecretStoreSpecProviderGcpsmAuthPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthPtrType) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthPtrType) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthOutput() SecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuth {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutput() SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) SecretStoreSpecProviderGcpsmAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuth
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPtrOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuth) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthPatch struct {
	SecretRef        *SecretStoreSpecProviderGcpsmAuthSecretRefPatch        `pulumi:"secretRef"`
	WorkloadIdentity *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch `pulumi:"workloadIdentity"`
}

// SecretStoreSpecProviderGcpsmAuthPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthPatchArgs and SecretStoreSpecProviderGcpsmAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthPatchArgs{...}
type SecretStoreSpecProviderGcpsmAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthPatchOutput() SecretStoreSpecProviderGcpsmAuthPatchOutput
	ToSecretStoreSpecProviderGcpsmAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthPatchOutput
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthPatchArgs struct {
	SecretRef        SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput        `pulumi:"secretRef"`
	WorkloadIdentity SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput `pulumi:"workloadIdentity"`
}

func (SecretStoreSpecProviderGcpsmAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthPatchArgs) ToSecretStoreSpecProviderGcpsmAuthPatchOutput() SecretStoreSpecProviderGcpsmAuthPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthPatchArgs) ToSecretStoreSpecProviderGcpsmAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthPatchArgs) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthPatchArgs) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthPatchOutput).ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthPatchArgs, SecretStoreSpecProviderGcpsmAuthPatchPtr and SecretStoreSpecProviderGcpsmAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthPatchPtrOutput
}

type secretStoreSpecProviderGcpsmAuthPatchPtrType SecretStoreSpecProviderGcpsmAuthPatchArgs

func SecretStoreSpecProviderGcpsmAuthPatchPtr(v *SecretStoreSpecProviderGcpsmAuthPatchArgs) SecretStoreSpecProviderGcpsmAuthPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against GCP
type SecretStoreSpecProviderGcpsmAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) ToSecretStoreSpecProviderGcpsmAuthPatchOutput() SecretStoreSpecProviderGcpsmAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) ToSecretStoreSpecProviderGcpsmAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthPatch) *SecretStoreSpecProviderGcpsmAuthPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPatchOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch {
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthPatch) SecretStoreSpecProviderGcpsmAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthPatchOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthPatchPtrOutput) WorkloadIdentity() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch {
		if v == nil {
			return nil
		}
		return v.WorkloadIdentity
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRef struct {
	SecretAccessKeySecretRef *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefArgs and SecretStoreSpecProviderGcpsmAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput
}

type SecretStoreSpecProviderGcpsmAuthSecretRefArgs struct {
	SecretAccessKeySecretRef SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefArgs, SecretStoreSpecProviderGcpsmAuthSecretRefPtr and SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefPtrType SecretStoreSpecProviderGcpsmAuthSecretRefArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefArgs) SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRef) SecretStoreSpecProviderGcpsmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPatch struct {
	SecretAccessKeySecretRef *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch `pulumi:"secretAccessKeySecretRef"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs and SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs struct {
	SecretAccessKeySecretRef SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput `pulumi:"secretAccessKeySecretRef"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs, SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtr and SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefPatchPtrType SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRefPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefPatch) SecretStoreSpecProviderGcpsmAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs, SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput).ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs, SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtr and SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrType SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs

func SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtr(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentity struct {
	ClusterLocation   *string                                                            `pulumi:"clusterLocation"`
	ClusterName       *string                                                            `pulumi:"clusterName"`
	ClusterProjectID  *string                                                            `pulumi:"clusterProjectID"`
	ServiceAccountRef *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs struct {
	ClusterLocation   pulumi.StringPtrInput                                                     `pulumi:"clusterLocation"`
	ClusterName       pulumi.StringPtrInput                                                     `pulumi:"clusterName"`
	ClusterProjectID  pulumi.StringPtrInput                                                     `pulumi:"clusterProjectID"`
	ServiceAccountRef SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string { return v.ClusterLocation }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string { return v.ClusterProjectID }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentity)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) SecretStoreSpecProviderGcpsmAuthWorkloadIdentity {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentity
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClusterLocation
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *string {
		if v == nil {
			return nil
		}
		return v.ClusterProjectID
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentity) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch struct {
	ClusterLocation   *string                                                                 `pulumi:"clusterLocation"`
	ClusterName       *string                                                                 `pulumi:"clusterName"`
	ClusterProjectID  *string                                                                 `pulumi:"clusterProjectID"`
	ServiceAccountRef *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs struct {
	ClusterLocation   pulumi.StringPtrInput                                                          `pulumi:"clusterLocation"`
	ClusterName       pulumi.StringPtrInput                                                          `pulumi:"clusterName"`
	ClusterProjectID  pulumi.StringPtrInput                                                          `pulumi:"clusterProjectID"`
	ServiceAccountRef SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string { return v.ClusterLocation }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string { return v.ClusterProjectID }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ClusterLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterLocation
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterName
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ClusterProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClusterProjectID
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput).ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs, SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtr and SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrType SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs

func SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtr(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmPatch struct {
	Auth *SecretStoreSpecProviderGcpsmAuthPatch `pulumi:"auth"`
	// Location optionally defines a location for a secret
	Location *string `pulumi:"location"`
	// ProjectID project where secret is located
	ProjectID *string `pulumi:"projectID"`
}

// SecretStoreSpecProviderGcpsmPatchInput is an input type that accepts SecretStoreSpecProviderGcpsmPatchArgs and SecretStoreSpecProviderGcpsmPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmPatchInput` via:
//
//	SecretStoreSpecProviderGcpsmPatchArgs{...}
type SecretStoreSpecProviderGcpsmPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmPatchOutput() SecretStoreSpecProviderGcpsmPatchOutput
	ToSecretStoreSpecProviderGcpsmPatchOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmPatchOutput
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmPatchArgs struct {
	Auth SecretStoreSpecProviderGcpsmAuthPatchPtrInput `pulumi:"auth"`
	// Location optionally defines a location for a secret
	Location pulumi.StringPtrInput `pulumi:"location"`
	// ProjectID project where secret is located
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
}

func (SecretStoreSpecProviderGcpsmPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGcpsmPatchArgs) ToSecretStoreSpecProviderGcpsmPatchOutput() SecretStoreSpecProviderGcpsmPatchOutput {
	return i.ToSecretStoreSpecProviderGcpsmPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmPatchArgs) ToSecretStoreSpecProviderGcpsmPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmPatchOutput)
}

func (i SecretStoreSpecProviderGcpsmPatchArgs) ToSecretStoreSpecProviderGcpsmPatchPtrOutput() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGcpsmPatchArgs) ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmPatchOutput).ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGcpsmPatchPtrInput is an input type that accepts SecretStoreSpecProviderGcpsmPatchArgs, SecretStoreSpecProviderGcpsmPatchPtr and SecretStoreSpecProviderGcpsmPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGcpsmPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGcpsmPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGcpsmPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGcpsmPatchPtrOutput() SecretStoreSpecProviderGcpsmPatchPtrOutput
	ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGcpsmPatchPtrOutput
}

type secretStoreSpecProviderGcpsmPatchPtrType SecretStoreSpecProviderGcpsmPatchArgs

func SecretStoreSpecProviderGcpsmPatchPtr(v *SecretStoreSpecProviderGcpsmPatchArgs) SecretStoreSpecProviderGcpsmPatchPtrInput {
	return (*secretStoreSpecProviderGcpsmPatchPtrType)(v)
}

func (*secretStoreSpecProviderGcpsmPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGcpsmPatchPtrType) ToSecretStoreSpecProviderGcpsmPatchPtrOutput() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGcpsmPatchPtrType) ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGcpsmPatchPtrOutput)
}

// GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
type SecretStoreSpecProviderGcpsmPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGcpsmPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmPatchOutput) ToSecretStoreSpecProviderGcpsmPatchOutput() SecretStoreSpecProviderGcpsmPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPatchOutput) ToSecretStoreSpecProviderGcpsmPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPatchOutput) ToSecretStoreSpecProviderGcpsmPatchPtrOutput() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGcpsmPatchOutput) ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGcpsmPatch) *SecretStoreSpecProviderGcpsmPatch {
		return &v
	}).(SecretStoreSpecProviderGcpsmPatchPtrOutput)
}

func (o SecretStoreSpecProviderGcpsmPatchOutput) Auth() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmPatch) *SecretStoreSpecProviderGcpsmAuthPatch { return v.Auth }).(SecretStoreSpecProviderGcpsmAuthPatchPtrOutput)
}

// Location optionally defines a location for a secret
func (o SecretStoreSpecProviderGcpsmPatchOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmPatch) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmPatchOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGcpsmPatch) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGcpsmPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGcpsmPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGcpsmPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) ToSecretStoreSpecProviderGcpsmPatchPtrOutput() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) ToSecretStoreSpecProviderGcpsmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) Elem() SecretStoreSpecProviderGcpsmPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmPatch) SecretStoreSpecProviderGcpsmPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGcpsmPatch
		return ret
	}).(SecretStoreSpecProviderGcpsmPatchOutput)
}

func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) Auth() SecretStoreSpecProviderGcpsmAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmPatch) *SecretStoreSpecProviderGcpsmAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderGcpsmAuthPatchPtrOutput)
}

// Location optionally defines a location for a secret
func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmPatch) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// ProjectID project where secret is located
func (o SecretStoreSpecProviderGcpsmPatchPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGcpsmPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlab struct {
	Auth *SecretStoreSpecProviderGitlabAuth `pulumi:"auth"`
	// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
	Environment *string `pulumi:"environment"`
	// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
	GroupIDs []string `pulumi:"groupIDs"`
	// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
	InheritFromGroups *bool `pulumi:"inheritFromGroups"`
	// ProjectID specifies a project where secrets are located.
	ProjectID *string `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderGitlabInput is an input type that accepts SecretStoreSpecProviderGitlabArgs and SecretStoreSpecProviderGitlabOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabInput` via:
//
//	SecretStoreSpecProviderGitlabArgs{...}
type SecretStoreSpecProviderGitlabInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput
	ToSecretStoreSpecProviderGitlabOutputWithContext(context.Context) SecretStoreSpecProviderGitlabOutput
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabArgs struct {
	Auth SecretStoreSpecProviderGitlabAuthPtrInput `pulumi:"auth"`
	// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
	GroupIDs pulumi.StringArrayInput `pulumi:"groupIDs"`
	// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
	InheritFromGroups pulumi.BoolPtrInput `pulumi:"inheritFromGroups"`
	// ProjectID specifies a project where secrets are located.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput {
	return i.ToSecretStoreSpecProviderGitlabOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabOutput)
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabArgs) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabOutput).ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabPtrInput is an input type that accepts SecretStoreSpecProviderGitlabArgs, SecretStoreSpecProviderGitlabPtr and SecretStoreSpecProviderGitlabPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput
	ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabPtrOutput
}

type secretStoreSpecProviderGitlabPtrType SecretStoreSpecProviderGitlabArgs

func SecretStoreSpecProviderGitlabPtr(v *SecretStoreSpecProviderGitlabArgs) SecretStoreSpecProviderGitlabPtrInput {
	return (*secretStoreSpecProviderGitlabPtrType)(v)
}

func (*secretStoreSpecProviderGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabPtrType) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabPtrType) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabOutput() SecretStoreSpecProviderGitlabOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabOutput) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlab) *SecretStoreSpecProviderGitlab {
		return &v
	}).(SecretStoreSpecProviderGitlabPtrOutput)
}

func (o SecretStoreSpecProviderGitlabOutput) Auth() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *SecretStoreSpecProviderGitlabAuth { return v.Auth }).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
func (o SecretStoreSpecProviderGitlabOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
func (o SecretStoreSpecProviderGitlabOutput) GroupIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) []string { return v.GroupIDs }).(pulumi.StringArrayOutput)
}

// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
func (o SecretStoreSpecProviderGitlabOutput) InheritFromGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *bool { return v.InheritFromGroups }).(pulumi.BoolPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlab) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlab)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabPtrOutput) ToSecretStoreSpecProviderGitlabPtrOutput() SecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPtrOutput) ToSecretStoreSpecProviderGitlabPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPtrOutput) Elem() SecretStoreSpecProviderGitlabOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) SecretStoreSpecProviderGitlab {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlab
		return ret
	}).(SecretStoreSpecProviderGitlabOutput)
}

func (o SecretStoreSpecProviderGitlabPtrOutput) Auth() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *SecretStoreSpecProviderGitlabAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
func (o SecretStoreSpecProviderGitlabPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
func (o SecretStoreSpecProviderGitlabPtrOutput) GroupIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) []string {
		if v == nil {
			return nil
		}
		return v.GroupIDs
	}).(pulumi.StringArrayOutput)
}

// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
func (o SecretStoreSpecProviderGitlabPtrOutput) InheritFromGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromGroups
	}).(pulumi.BoolPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuth struct {
	SecretRef *SecretStoreSpecProviderGitlabAuthSecretRef `pulumi:"SecretRef"`
}

// SecretStoreSpecProviderGitlabAuthInput is an input type that accepts SecretStoreSpecProviderGitlabAuthArgs and SecretStoreSpecProviderGitlabAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthInput` via:
//
//	SecretStoreSpecProviderGitlabAuthArgs{...}
type SecretStoreSpecProviderGitlabAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput
	ToSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthOutput
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthArgs struct {
	SecretRef SecretStoreSpecProviderGitlabAuthSecretRefPtrInput `pulumi:"SecretRef"`
}

func (SecretStoreSpecProviderGitlabAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthOutput)
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthArgs) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthOutput).ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthArgs, SecretStoreSpecProviderGitlabAuthPtr and SecretStoreSpecProviderGitlabAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput
	ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput
}

type secretStoreSpecProviderGitlabAuthPtrType SecretStoreSpecProviderGitlabAuthArgs

func SecretStoreSpecProviderGitlabAuthPtr(v *SecretStoreSpecProviderGitlabAuthArgs) SecretStoreSpecProviderGitlabAuthPtrInput {
	return (*secretStoreSpecProviderGitlabAuthPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthPtrType) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthPtrType) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthOutput() SecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuth) *SecretStoreSpecProviderGitlabAuth {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthPtrOutput)
}

func (o SecretStoreSpecProviderGitlabAuthOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuth) *SecretStoreSpecProviderGitlabAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutput() SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) ToSecretStoreSpecProviderGitlabAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuth) SecretStoreSpecProviderGitlabAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuth
		return ret
	}).(SecretStoreSpecProviderGitlabAuthOutput)
}

func (o SecretStoreSpecProviderGitlabAuthPtrOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuth) *SecretStoreSpecProviderGitlabAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthPatch struct {
	SecretRef *SecretStoreSpecProviderGitlabAuthSecretRefPatch `pulumi:"SecretRef"`
}

// SecretStoreSpecProviderGitlabAuthPatchInput is an input type that accepts SecretStoreSpecProviderGitlabAuthPatchArgs and SecretStoreSpecProviderGitlabAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthPatchInput` via:
//
//	SecretStoreSpecProviderGitlabAuthPatchArgs{...}
type SecretStoreSpecProviderGitlabAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthPatchOutput() SecretStoreSpecProviderGitlabAuthPatchOutput
	ToSecretStoreSpecProviderGitlabAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthPatchOutput
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput `pulumi:"SecretRef"`
}

func (SecretStoreSpecProviderGitlabAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthPatchArgs) ToSecretStoreSpecProviderGitlabAuthPatchOutput() SecretStoreSpecProviderGitlabAuthPatchOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthPatchArgs) ToSecretStoreSpecProviderGitlabAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthPatchOutput)
}

func (i SecretStoreSpecProviderGitlabAuthPatchArgs) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutput() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthPatchArgs) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthPatchOutput).ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthPatchArgs, SecretStoreSpecProviderGitlabAuthPatchPtr and SecretStoreSpecProviderGitlabAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthPatchPtrOutput() SecretStoreSpecProviderGitlabAuthPatchPtrOutput
	ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthPatchPtrOutput
}

type secretStoreSpecProviderGitlabAuthPatchPtrType SecretStoreSpecProviderGitlabAuthPatchArgs

func SecretStoreSpecProviderGitlabAuthPatchPtr(v *SecretStoreSpecProviderGitlabAuthPatchArgs) SecretStoreSpecProviderGitlabAuthPatchPtrInput {
	return (*secretStoreSpecProviderGitlabAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthPatchPtrType) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutput() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthPatchPtrType) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a GitLab instance.
type SecretStoreSpecProviderGitlabAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthPatchOutput) ToSecretStoreSpecProviderGitlabAuthPatchOutput() SecretStoreSpecProviderGitlabAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPatchOutput) ToSecretStoreSpecProviderGitlabAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPatchOutput) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutput() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthPatchOutput) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthPatch) *SecretStoreSpecProviderGitlabAuthPatch {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderGitlabAuthPatchOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthPatch) *SecretStoreSpecProviderGitlabAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutput() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthPatchPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthPatch) SecretStoreSpecProviderGitlabAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthPatch
		return ret
	}).(SecretStoreSpecProviderGitlabAuthPatchOutput)
}

func (o SecretStoreSpecProviderGitlabAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthPatch) *SecretStoreSpecProviderGitlabAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRef struct {
	AccessToken *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken `pulumi:"accessToken"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefArgs and SecretStoreSpecProviderGitlabAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput
}

type SecretStoreSpecProviderGitlabAuthSecretRefArgs struct {
	AccessToken SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput `pulumi:"accessToken"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefArgs, SecretStoreSpecProviderGitlabAuthSecretRefPtr and SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefPtrType SecretStoreSpecProviderGitlabAuthSecretRefArgs

func SecretStoreSpecProviderGitlabAuthSecretRefPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefArgs) SecretStoreSpecProviderGitlabAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefOutput() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRef) SecretStoreSpecProviderGitlabAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRef) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs, SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs

func SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) SecretStoreSpecProviderGitlabAuthSecretRefAccessToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRefAccessToken
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs, SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtr and SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrType SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs

func SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput)
}

// AccessToken is used for authentication.
type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefPatch struct {
	AccessToken *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch `pulumi:"accessToken"`
}

// SecretStoreSpecProviderGitlabAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs and SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderGitlabAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput
}

type SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs struct {
	AccessToken SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput `pulumi:"accessToken"`
}

func (SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput).ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs, SecretStoreSpecProviderGitlabAuthSecretRefPatchPtr and SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderGitlabAuthSecretRefPatchPtrType SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs

func SecretStoreSpecProviderGitlabAuthSecretRefPatchPtr(v *SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderGitlabAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderGitlabAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabAuthSecretRefPatch) *SecretStoreSpecProviderGitlabAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabAuthSecretRefPatch) *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch {
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput)
}

type SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefPatch) SecretStoreSpecProviderGitlabAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput) AccessToken() SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabAuthSecretRefPatch) *SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatch {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabPatch struct {
	Auth *SecretStoreSpecProviderGitlabAuthPatch `pulumi:"auth"`
	// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
	Environment *string `pulumi:"environment"`
	// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
	GroupIDs []string `pulumi:"groupIDs"`
	// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
	InheritFromGroups *bool `pulumi:"inheritFromGroups"`
	// ProjectID specifies a project where secrets are located.
	ProjectID *string `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderGitlabPatchInput is an input type that accepts SecretStoreSpecProviderGitlabPatchArgs and SecretStoreSpecProviderGitlabPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabPatchInput` via:
//
//	SecretStoreSpecProviderGitlabPatchArgs{...}
type SecretStoreSpecProviderGitlabPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabPatchOutput() SecretStoreSpecProviderGitlabPatchOutput
	ToSecretStoreSpecProviderGitlabPatchOutputWithContext(context.Context) SecretStoreSpecProviderGitlabPatchOutput
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabPatchArgs struct {
	Auth SecretStoreSpecProviderGitlabAuthPatchPtrInput `pulumi:"auth"`
	// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
	GroupIDs pulumi.StringArrayInput `pulumi:"groupIDs"`
	// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
	InheritFromGroups pulumi.BoolPtrInput `pulumi:"inheritFromGroups"`
	// ProjectID specifies a project where secrets are located.
	ProjectID pulumi.StringPtrInput `pulumi:"projectID"`
	// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderGitlabPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderGitlabPatchArgs) ToSecretStoreSpecProviderGitlabPatchOutput() SecretStoreSpecProviderGitlabPatchOutput {
	return i.ToSecretStoreSpecProviderGitlabPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabPatchArgs) ToSecretStoreSpecProviderGitlabPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabPatchOutput)
}

func (i SecretStoreSpecProviderGitlabPatchArgs) ToSecretStoreSpecProviderGitlabPatchPtrOutput() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderGitlabPatchArgs) ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabPatchOutput).ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderGitlabPatchPtrInput is an input type that accepts SecretStoreSpecProviderGitlabPatchArgs, SecretStoreSpecProviderGitlabPatchPtr and SecretStoreSpecProviderGitlabPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderGitlabPatchPtrInput` via:
//
//	        SecretStoreSpecProviderGitlabPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderGitlabPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderGitlabPatchPtrOutput() SecretStoreSpecProviderGitlabPatchPtrOutput
	ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderGitlabPatchPtrOutput
}

type secretStoreSpecProviderGitlabPatchPtrType SecretStoreSpecProviderGitlabPatchArgs

func SecretStoreSpecProviderGitlabPatchPtr(v *SecretStoreSpecProviderGitlabPatchArgs) SecretStoreSpecProviderGitlabPatchPtrInput {
	return (*secretStoreSpecProviderGitlabPatchPtrType)(v)
}

func (*secretStoreSpecProviderGitlabPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderGitlabPatchPtrType) ToSecretStoreSpecProviderGitlabPatchPtrOutput() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return i.ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderGitlabPatchPtrType) ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderGitlabPatchPtrOutput)
}

// GitLab configures this store to sync secrets using GitLab Variables provider
type SecretStoreSpecProviderGitlabPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderGitlabPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabPatchOutput) ToSecretStoreSpecProviderGitlabPatchOutput() SecretStoreSpecProviderGitlabPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPatchOutput) ToSecretStoreSpecProviderGitlabPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPatchOutput) ToSecretStoreSpecProviderGitlabPatchPtrOutput() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o.ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderGitlabPatchOutput) ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderGitlabPatch) *SecretStoreSpecProviderGitlabPatch {
		return &v
	}).(SecretStoreSpecProviderGitlabPatchPtrOutput)
}

func (o SecretStoreSpecProviderGitlabPatchOutput) Auth() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) *SecretStoreSpecProviderGitlabAuthPatch { return v.Auth }).(SecretStoreSpecProviderGitlabAuthPatchPtrOutput)
}

// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
func (o SecretStoreSpecProviderGitlabPatchOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
func (o SecretStoreSpecProviderGitlabPatchOutput) GroupIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) []string { return v.GroupIDs }).(pulumi.StringArrayOutput)
}

// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
func (o SecretStoreSpecProviderGitlabPatchOutput) InheritFromGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) *bool { return v.InheritFromGroups }).(pulumi.BoolPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabPatchOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) *string { return v.ProjectID }).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderGitlabPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderGitlabPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderGitlabPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderGitlabPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderGitlabPatchPtrOutput) ToSecretStoreSpecProviderGitlabPatchPtrOutput() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPatchPtrOutput) ToSecretStoreSpecProviderGitlabPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderGitlabPatchPtrOutput) Elem() SecretStoreSpecProviderGitlabPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) SecretStoreSpecProviderGitlabPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderGitlabPatch
		return ret
	}).(SecretStoreSpecProviderGitlabPatchOutput)
}

func (o SecretStoreSpecProviderGitlabPatchPtrOutput) Auth() SecretStoreSpecProviderGitlabAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) *SecretStoreSpecProviderGitlabAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderGitlabAuthPatchPtrOutput)
}

// Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
func (o SecretStoreSpecProviderGitlabPatchPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
func (o SecretStoreSpecProviderGitlabPatchPtrOutput) GroupIDs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) []string {
		if v == nil {
			return nil
		}
		return v.GroupIDs
	}).(pulumi.StringArrayOutput)
}

// InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
func (o SecretStoreSpecProviderGitlabPatchPtrOutput) InheritFromGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromGroups
	}).(pulumi.BoolPtrOutput)
}

// ProjectID specifies a project where secrets are located.
func (o SecretStoreSpecProviderGitlabPatchPtrOutput) ProjectID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProjectID
	}).(pulumi.StringPtrOutput)
}

// URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
func (o SecretStoreSpecProviderGitlabPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderGitlabPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbm struct {
	Auth *SecretStoreSpecProviderIbmAuth `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// SecretStoreSpecProviderIbmInput is an input type that accepts SecretStoreSpecProviderIbmArgs and SecretStoreSpecProviderIbmOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmInput` via:
//
//	SecretStoreSpecProviderIbmArgs{...}
type SecretStoreSpecProviderIbmInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput
	ToSecretStoreSpecProviderIbmOutputWithContext(context.Context) SecretStoreSpecProviderIbmOutput
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmArgs struct {
	Auth SecretStoreSpecProviderIbmAuthPtrInput `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (SecretStoreSpecProviderIbmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput {
	return i.ToSecretStoreSpecProviderIbmOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmOutput)
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmArgs) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmOutput).ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmPtrInput is an input type that accepts SecretStoreSpecProviderIbmArgs, SecretStoreSpecProviderIbmPtr and SecretStoreSpecProviderIbmPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmPtrInput` via:
//
//	        SecretStoreSpecProviderIbmArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput
	ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmPtrOutput
}

type secretStoreSpecProviderIbmPtrType SecretStoreSpecProviderIbmArgs

func SecretStoreSpecProviderIbmPtr(v *SecretStoreSpecProviderIbmArgs) SecretStoreSpecProviderIbmPtrInput {
	return (*secretStoreSpecProviderIbmPtrType)(v)
}

func (*secretStoreSpecProviderIbmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmPtrType) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmPtrType) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmOutput() SecretStoreSpecProviderIbmOutput {
	return o
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmOutput {
	return o
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return o.ToSecretStoreSpecProviderIbmPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmOutput) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbm) *SecretStoreSpecProviderIbm {
		return &v
	}).(SecretStoreSpecProviderIbmPtrOutput)
}

func (o SecretStoreSpecProviderIbmOutput) Auth() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbm) *SecretStoreSpecProviderIbmAuth { return v.Auth }).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbm) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbm)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmPtrOutput) ToSecretStoreSpecProviderIbmPtrOutput() SecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPtrOutput) ToSecretStoreSpecProviderIbmPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPtrOutput) Elem() SecretStoreSpecProviderIbmOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) SecretStoreSpecProviderIbm {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbm
		return ret
	}).(SecretStoreSpecProviderIbmOutput)
}

func (o SecretStoreSpecProviderIbmPtrOutput) Auth() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) *SecretStoreSpecProviderIbmAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmPtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbm) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuth struct {
	ContainerAuth *SecretStoreSpecProviderIbmAuthContainerAuth `pulumi:"containerAuth"`
	SecretRef     *SecretStoreSpecProviderIbmAuthSecretRef     `pulumi:"secretRef"`
}

// SecretStoreSpecProviderIbmAuthInput is an input type that accepts SecretStoreSpecProviderIbmAuthArgs and SecretStoreSpecProviderIbmAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthInput` via:
//
//	SecretStoreSpecProviderIbmAuthArgs{...}
type SecretStoreSpecProviderIbmAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput
	ToSecretStoreSpecProviderIbmAuthOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthOutput
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthArgs struct {
	ContainerAuth SecretStoreSpecProviderIbmAuthContainerAuthPtrInput `pulumi:"containerAuth"`
	SecretRef     SecretStoreSpecProviderIbmAuthSecretRefPtrInput     `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderIbmAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput {
	return i.ToSecretStoreSpecProviderIbmAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthOutput)
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthArgs) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthOutput).ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthArgs, SecretStoreSpecProviderIbmAuthPtr and SecretStoreSpecProviderIbmAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput
	ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthPtrOutput
}

type secretStoreSpecProviderIbmAuthPtrType SecretStoreSpecProviderIbmAuthArgs

func SecretStoreSpecProviderIbmAuthPtr(v *SecretStoreSpecProviderIbmAuthArgs) SecretStoreSpecProviderIbmAuthPtrInput {
	return (*secretStoreSpecProviderIbmAuthPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthPtrType) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthPtrType) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthOutput() SecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthOutput) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuth {
		return &v
	}).(SecretStoreSpecProviderIbmAuthPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthOutput) ContainerAuth() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuthContainerAuth {
		return v.ContainerAuth
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuthSecretRef { return v.SecretRef }).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthPtrOutput() SecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) Elem() SecretStoreSpecProviderIbmAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuth) SecretStoreSpecProviderIbmAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuth
		return ret
	}).(SecretStoreSpecProviderIbmAuthOutput)
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) ContainerAuth() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuthContainerAuth {
		if v == nil {
			return nil
		}
		return v.ContainerAuth
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthPtrOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuth) *SecretStoreSpecProviderIbmAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuth struct {
	IamEndpoint *string `pulumi:"iamEndpoint"`
	// the IBM Trusted Profile
	Profile *string `pulumi:"profile"`
	// Location the token is mounted on the pod
	TokenLocation *string `pulumi:"tokenLocation"`
}

// SecretStoreSpecProviderIbmAuthContainerAuthInput is an input type that accepts SecretStoreSpecProviderIbmAuthContainerAuthArgs and SecretStoreSpecProviderIbmAuthContainerAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthContainerAuthInput` via:
//
//	SecretStoreSpecProviderIbmAuthContainerAuthArgs{...}
type SecretStoreSpecProviderIbmAuthContainerAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthContainerAuthOutput() SecretStoreSpecProviderIbmAuthContainerAuthOutput
	ToSecretStoreSpecProviderIbmAuthContainerAuthOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthContainerAuthOutput
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuthArgs struct {
	IamEndpoint pulumi.StringPtrInput `pulumi:"iamEndpoint"`
	// the IBM Trusted Profile
	Profile pulumi.StringPtrInput `pulumi:"profile"`
	// Location the token is mounted on the pod
	TokenLocation pulumi.StringPtrInput `pulumi:"tokenLocation"`
}

func (SecretStoreSpecProviderIbmAuthContainerAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthOutput() SecretStoreSpecProviderIbmAuthContainerAuthOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthOutput)
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthOutput).ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthContainerAuthPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthContainerAuthArgs, SecretStoreSpecProviderIbmAuthContainerAuthPtr and SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthContainerAuthPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthContainerAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthContainerAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput
	ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput
}

type secretStoreSpecProviderIbmAuthContainerAuthPtrType SecretStoreSpecProviderIbmAuthContainerAuthArgs

func SecretStoreSpecProviderIbmAuthContainerAuthPtr(v *SecretStoreSpecProviderIbmAuthContainerAuthArgs) SecretStoreSpecProviderIbmAuthContainerAuthPtrInput {
	return (*secretStoreSpecProviderIbmAuthContainerAuthPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthContainerAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthContainerAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthContainerAuthPtrType) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthContainerAuthPtrType) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput)
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthContainerAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthOutput() SecretStoreSpecProviderIbmAuthContainerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthContainerAuth) *SecretStoreSpecProviderIbmAuthContainerAuth {
		return &v
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) IamEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuth) *string { return v.IamEndpoint }).(pulumi.StringPtrOutput)
}

// the IBM Trusted Profile
func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuth) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

// Location the token is mounted on the pod
func (o SecretStoreSpecProviderIbmAuthContainerAuthOutput) TokenLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuth) *string { return v.TokenLocation }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthContainerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) Elem() SecretStoreSpecProviderIbmAuthContainerAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuth) SecretStoreSpecProviderIbmAuthContainerAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthContainerAuth
		return ret
	}).(SecretStoreSpecProviderIbmAuthContainerAuthOutput)
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) IamEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuth) *string {
		if v == nil {
			return nil
		}
		return v.IamEndpoint
	}).(pulumi.StringPtrOutput)
}

// the IBM Trusted Profile
func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuth) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Location the token is mounted on the pod
func (o SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput) TokenLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuth) *string {
		if v == nil {
			return nil
		}
		return v.TokenLocation
	}).(pulumi.StringPtrOutput)
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuthPatch struct {
	IamEndpoint *string `pulumi:"iamEndpoint"`
	// the IBM Trusted Profile
	Profile *string `pulumi:"profile"`
	// Location the token is mounted on the pod
	TokenLocation *string `pulumi:"tokenLocation"`
}

// SecretStoreSpecProviderIbmAuthContainerAuthPatchInput is an input type that accepts SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs and SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthContainerAuthPatchInput` via:
//
//	SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs{...}
type SecretStoreSpecProviderIbmAuthContainerAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput
	ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs struct {
	IamEndpoint pulumi.StringPtrInput `pulumi:"iamEndpoint"`
	// the IBM Trusted Profile
	Profile pulumi.StringPtrInput `pulumi:"profile"`
	// Location the token is mounted on the pod
	TokenLocation pulumi.StringPtrInput `pulumi:"tokenLocation"`
}

func (SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput)
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput).ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs, SecretStoreSpecProviderIbmAuthContainerAuthPatchPtr and SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput
	ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput
}

type secretStoreSpecProviderIbmAuthContainerAuthPatchPtrType SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs

func SecretStoreSpecProviderIbmAuthContainerAuthPatchPtr(v *SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput {
	return (*secretStoreSpecProviderIbmAuthContainerAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthContainerAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthContainerAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthContainerAuthPatchPtrType) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthContainerAuthPatchPtrType) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput)
}

// IBM Container-based auth with IAM Trusted Profile.
type SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthContainerAuthPatch) *SecretStoreSpecProviderIbmAuthContainerAuthPatch {
		return &v
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) IamEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string { return v.IamEndpoint }).(pulumi.StringPtrOutput)
}

// the IBM Trusted Profile
func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string { return v.Profile }).(pulumi.StringPtrOutput)
}

// Location the token is mounted on the pod
func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput) TokenLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string { return v.TokenLocation }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthContainerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) Elem() SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuthPatch) SecretStoreSpecProviderIbmAuthContainerAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthContainerAuthPatch
		return ret
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput)
}

func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) IamEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.IamEndpoint
	}).(pulumi.StringPtrOutput)
}

// the IBM Trusted Profile
func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Profile
	}).(pulumi.StringPtrOutput)
}

// Location the token is mounted on the pod
func (o SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput) TokenLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthContainerAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.TokenLocation
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthPatch struct {
	ContainerAuth *SecretStoreSpecProviderIbmAuthContainerAuthPatch `pulumi:"containerAuth"`
	SecretRef     *SecretStoreSpecProviderIbmAuthSecretRefPatch     `pulumi:"secretRef"`
}

// SecretStoreSpecProviderIbmAuthPatchInput is an input type that accepts SecretStoreSpecProviderIbmAuthPatchArgs and SecretStoreSpecProviderIbmAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthPatchInput` via:
//
//	SecretStoreSpecProviderIbmAuthPatchArgs{...}
type SecretStoreSpecProviderIbmAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthPatchOutput() SecretStoreSpecProviderIbmAuthPatchOutput
	ToSecretStoreSpecProviderIbmAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthPatchOutput
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthPatchArgs struct {
	ContainerAuth SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput `pulumi:"containerAuth"`
	SecretRef     SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput     `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderIbmAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthPatchOutput() SecretStoreSpecProviderIbmAuthPatchOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthPatchOutput)
}

func (i SecretStoreSpecProviderIbmAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthPatchArgs) ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthPatchOutput).ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthPatchArgs, SecretStoreSpecProviderIbmAuthPatchPtr and SecretStoreSpecProviderIbmAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthPatchPtrOutput
	ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthPatchPtrOutput
}

type secretStoreSpecProviderIbmAuthPatchPtrType SecretStoreSpecProviderIbmAuthPatchArgs

func SecretStoreSpecProviderIbmAuthPatchPtr(v *SecretStoreSpecProviderIbmAuthPatchArgs) SecretStoreSpecProviderIbmAuthPatchPtrInput {
	return (*secretStoreSpecProviderIbmAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthPatchPtrType) ToSecretStoreSpecProviderIbmAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthPatchPtrType) ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with the IBM secrets manager.
type SecretStoreSpecProviderIbmAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthPatchOutput() SecretStoreSpecProviderIbmAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthPatch) *SecretStoreSpecProviderIbmAuthPatch {
		return &v
	}).(SecretStoreSpecProviderIbmAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) ContainerAuth() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthPatch) *SecretStoreSpecProviderIbmAuthContainerAuthPatch {
		return v.ContainerAuth
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthPatchOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthPatch) *SecretStoreSpecProviderIbmAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderIbmAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthPatchPtrOutput() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthPatchPtrOutput) Elem() SecretStoreSpecProviderIbmAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthPatch) SecretStoreSpecProviderIbmAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthPatch
		return ret
	}).(SecretStoreSpecProviderIbmAuthPatchOutput)
}

func (o SecretStoreSpecProviderIbmAuthPatchPtrOutput) ContainerAuth() SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthPatch) *SecretStoreSpecProviderIbmAuthContainerAuthPatch {
		if v == nil {
			return nil
		}
		return v.ContainerAuth
	}).(SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthPatch) *SecretStoreSpecProviderIbmAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRef struct {
	SecretApiKeySecretRef *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef `pulumi:"secretApiKeySecretRef"`
}

// SecretStoreSpecProviderIbmAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefArgs and SecretStoreSpecProviderIbmAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput
}

type SecretStoreSpecProviderIbmAuthSecretRefArgs struct {
	SecretApiKeySecretRef SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput `pulumi:"secretApiKeySecretRef"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefOutput).ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefArgs, SecretStoreSpecProviderIbmAuthSecretRefPtr and SecretStoreSpecProviderIbmAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefPtrType SecretStoreSpecProviderIbmAuthSecretRefArgs

func SecretStoreSpecProviderIbmAuthSecretRefPtr(v *SecretStoreSpecProviderIbmAuthSecretRefArgs) SecretStoreSpecProviderIbmAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthSecretRefOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRef) SecretStoreSpecProviderIbmAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPtrOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefPatch struct {
	SecretApiKeySecretRef *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch `pulumi:"secretApiKeySecretRef"`
}

// SecretStoreSpecProviderIbmAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefPatchArgs and SecretStoreSpecProviderIbmAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchOutput
}

type SecretStoreSpecProviderIbmAuthSecretRefPatchArgs struct {
	SecretApiKeySecretRef SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput `pulumi:"secretApiKeySecretRef"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefPatchOutput).ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefPatchArgs, SecretStoreSpecProviderIbmAuthSecretRefPatchPtr and SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefPatchPtrType SecretStoreSpecProviderIbmAuthSecretRefPatchArgs

func SecretStoreSpecProviderIbmAuthSecretRefPatchPtr(v *SecretStoreSpecProviderIbmAuthSecretRefPatchArgs) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRefPatch) *SecretStoreSpecProviderIbmAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefPatch) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch {
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefPatch) SecretStoreSpecProviderIbmAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput) SecretApiKeySecretRef() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefPatch) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretApiKeySecretRef
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput).ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs, SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs

func SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtr(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput).ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs, SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtr and SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrType SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs

func SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtr(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrType) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmPatch struct {
	Auth *SecretStoreSpecProviderIbmAuthPatch `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl *string `pulumi:"serviceUrl"`
}

// SecretStoreSpecProviderIbmPatchInput is an input type that accepts SecretStoreSpecProviderIbmPatchArgs and SecretStoreSpecProviderIbmPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmPatchInput` via:
//
//	SecretStoreSpecProviderIbmPatchArgs{...}
type SecretStoreSpecProviderIbmPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmPatchOutput() SecretStoreSpecProviderIbmPatchOutput
	ToSecretStoreSpecProviderIbmPatchOutputWithContext(context.Context) SecretStoreSpecProviderIbmPatchOutput
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmPatchArgs struct {
	Auth SecretStoreSpecProviderIbmAuthPatchPtrInput `pulumi:"auth"`
	// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
	ServiceUrl pulumi.StringPtrInput `pulumi:"serviceUrl"`
}

func (SecretStoreSpecProviderIbmPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderIbmPatchArgs) ToSecretStoreSpecProviderIbmPatchOutput() SecretStoreSpecProviderIbmPatchOutput {
	return i.ToSecretStoreSpecProviderIbmPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmPatchArgs) ToSecretStoreSpecProviderIbmPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmPatchOutput)
}

func (i SecretStoreSpecProviderIbmPatchArgs) ToSecretStoreSpecProviderIbmPatchPtrOutput() SecretStoreSpecProviderIbmPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderIbmPatchArgs) ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmPatchOutput).ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderIbmPatchPtrInput is an input type that accepts SecretStoreSpecProviderIbmPatchArgs, SecretStoreSpecProviderIbmPatchPtr and SecretStoreSpecProviderIbmPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderIbmPatchPtrInput` via:
//
//	        SecretStoreSpecProviderIbmPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderIbmPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderIbmPatchPtrOutput() SecretStoreSpecProviderIbmPatchPtrOutput
	ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderIbmPatchPtrOutput
}

type secretStoreSpecProviderIbmPatchPtrType SecretStoreSpecProviderIbmPatchArgs

func SecretStoreSpecProviderIbmPatchPtr(v *SecretStoreSpecProviderIbmPatchArgs) SecretStoreSpecProviderIbmPatchPtrInput {
	return (*secretStoreSpecProviderIbmPatchPtrType)(v)
}

func (*secretStoreSpecProviderIbmPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderIbmPatchPtrType) ToSecretStoreSpecProviderIbmPatchPtrOutput() SecretStoreSpecProviderIbmPatchPtrOutput {
	return i.ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderIbmPatchPtrType) ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderIbmPatchPtrOutput)
}

// IBM configures this store to sync secrets using IBM Cloud provider
type SecretStoreSpecProviderIbmPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderIbmPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmPatchOutput) ToSecretStoreSpecProviderIbmPatchOutput() SecretStoreSpecProviderIbmPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPatchOutput) ToSecretStoreSpecProviderIbmPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPatchOutput) ToSecretStoreSpecProviderIbmPatchPtrOutput() SecretStoreSpecProviderIbmPatchPtrOutput {
	return o.ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderIbmPatchOutput) ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderIbmPatch) *SecretStoreSpecProviderIbmPatch {
		return &v
	}).(SecretStoreSpecProviderIbmPatchPtrOutput)
}

func (o SecretStoreSpecProviderIbmPatchOutput) Auth() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmPatch) *SecretStoreSpecProviderIbmAuthPatch { return v.Auth }).(SecretStoreSpecProviderIbmAuthPatchPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmPatchOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderIbmPatch) *string { return v.ServiceUrl }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderIbmPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderIbmPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderIbmPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderIbmPatchPtrOutput) ToSecretStoreSpecProviderIbmPatchPtrOutput() SecretStoreSpecProviderIbmPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPatchPtrOutput) ToSecretStoreSpecProviderIbmPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderIbmPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderIbmPatchPtrOutput) Elem() SecretStoreSpecProviderIbmPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmPatch) SecretStoreSpecProviderIbmPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderIbmPatch
		return ret
	}).(SecretStoreSpecProviderIbmPatchOutput)
}

func (o SecretStoreSpecProviderIbmPatchPtrOutput) Auth() SecretStoreSpecProviderIbmAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmPatch) *SecretStoreSpecProviderIbmAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderIbmAuthPatchPtrOutput)
}

// ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
func (o SecretStoreSpecProviderIbmPatchPtrOutput) ServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderIbmPatch) *string {
		if v == nil {
			return nil
		}
		return v.ServiceUrl
	}).(pulumi.StringPtrOutput)
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisical struct {
	Auth         *SecretStoreSpecProviderInfisicalAuth         `pulumi:"auth"`
	HostAPI      *string                                       `pulumi:"hostAPI"`
	SecretsScope *SecretStoreSpecProviderInfisicalSecretsScope `pulumi:"secretsScope"`
}

// SecretStoreSpecProviderInfisicalInput is an input type that accepts SecretStoreSpecProviderInfisicalArgs and SecretStoreSpecProviderInfisicalOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalInput` via:
//
//	SecretStoreSpecProviderInfisicalArgs{...}
type SecretStoreSpecProviderInfisicalInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalOutput() SecretStoreSpecProviderInfisicalOutput
	ToSecretStoreSpecProviderInfisicalOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalOutput
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisicalArgs struct {
	Auth         SecretStoreSpecProviderInfisicalAuthPtrInput         `pulumi:"auth"`
	HostAPI      pulumi.StringPtrInput                                `pulumi:"hostAPI"`
	SecretsScope SecretStoreSpecProviderInfisicalSecretsScopePtrInput `pulumi:"secretsScope"`
}

func (SecretStoreSpecProviderInfisicalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisical)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalArgs) ToSecretStoreSpecProviderInfisicalOutput() SecretStoreSpecProviderInfisicalOutput {
	return i.ToSecretStoreSpecProviderInfisicalOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalArgs) ToSecretStoreSpecProviderInfisicalOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalOutput)
}

func (i SecretStoreSpecProviderInfisicalArgs) ToSecretStoreSpecProviderInfisicalPtrOutput() SecretStoreSpecProviderInfisicalPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalArgs) ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalOutput).ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalArgs, SecretStoreSpecProviderInfisicalPtr and SecretStoreSpecProviderInfisicalPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalPtrOutput() SecretStoreSpecProviderInfisicalPtrOutput
	ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalPtrOutput
}

type secretStoreSpecProviderInfisicalPtrType SecretStoreSpecProviderInfisicalArgs

func SecretStoreSpecProviderInfisicalPtr(v *SecretStoreSpecProviderInfisicalArgs) SecretStoreSpecProviderInfisicalPtrInput {
	return (*secretStoreSpecProviderInfisicalPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisical)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalPtrType) ToSecretStoreSpecProviderInfisicalPtrOutput() SecretStoreSpecProviderInfisicalPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalPtrType) ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalPtrOutput)
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisicalOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisical)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalOutput) ToSecretStoreSpecProviderInfisicalOutput() SecretStoreSpecProviderInfisicalOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalOutput) ToSecretStoreSpecProviderInfisicalOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalOutput) ToSecretStoreSpecProviderInfisicalPtrOutput() SecretStoreSpecProviderInfisicalPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalOutput) ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisical) *SecretStoreSpecProviderInfisical {
		return &v
	}).(SecretStoreSpecProviderInfisicalPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalOutput) Auth() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisical) *SecretStoreSpecProviderInfisicalAuth { return v.Auth }).(SecretStoreSpecProviderInfisicalAuthPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalOutput) HostAPI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisical) *string { return v.HostAPI }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalOutput) SecretsScope() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisical) *SecretStoreSpecProviderInfisicalSecretsScope {
		return v.SecretsScope
	}).(SecretStoreSpecProviderInfisicalSecretsScopePtrOutput)
}

type SecretStoreSpecProviderInfisicalPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisical)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) ToSecretStoreSpecProviderInfisicalPtrOutput() SecretStoreSpecProviderInfisicalPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) ToSecretStoreSpecProviderInfisicalPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) Elem() SecretStoreSpecProviderInfisicalOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisical) SecretStoreSpecProviderInfisical {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisical
		return ret
	}).(SecretStoreSpecProviderInfisicalOutput)
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) Auth() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisical) *SecretStoreSpecProviderInfisicalAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderInfisicalAuthPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) HostAPI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisical) *string {
		if v == nil {
			return nil
		}
		return v.HostAPI
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPtrOutput) SecretsScope() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisical) *SecretStoreSpecProviderInfisicalSecretsScope {
		if v == nil {
			return nil
		}
		return v.SecretsScope
	}).(SecretStoreSpecProviderInfisicalSecretsScopePtrOutput)
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuth struct {
	UniversalAuthCredentials *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials `pulumi:"universalAuthCredentials"`
}

// SecretStoreSpecProviderInfisicalAuthInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthArgs and SecretStoreSpecProviderInfisicalAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthArgs{...}
type SecretStoreSpecProviderInfisicalAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthOutput() SecretStoreSpecProviderInfisicalAuthOutput
	ToSecretStoreSpecProviderInfisicalAuthOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthOutput
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuthArgs struct {
	UniversalAuthCredentials SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput `pulumi:"universalAuthCredentials"`
}

func (SecretStoreSpecProviderInfisicalAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthArgs) ToSecretStoreSpecProviderInfisicalAuthOutput() SecretStoreSpecProviderInfisicalAuthOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthArgs) ToSecretStoreSpecProviderInfisicalAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthArgs) ToSecretStoreSpecProviderInfisicalAuthPtrOutput() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthArgs) ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthOutput).ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthArgs, SecretStoreSpecProviderInfisicalAuthPtr and SecretStoreSpecProviderInfisicalAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthPtrOutput() SecretStoreSpecProviderInfisicalAuthPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthPtrOutput
}

type secretStoreSpecProviderInfisicalAuthPtrType SecretStoreSpecProviderInfisicalAuthArgs

func SecretStoreSpecProviderInfisicalAuthPtr(v *SecretStoreSpecProviderInfisicalAuthArgs) SecretStoreSpecProviderInfisicalAuthPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthPtrType) ToSecretStoreSpecProviderInfisicalAuthPtrOutput() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthPtrType) ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthPtrOutput)
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthOutput) ToSecretStoreSpecProviderInfisicalAuthOutput() SecretStoreSpecProviderInfisicalAuthOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthOutput) ToSecretStoreSpecProviderInfisicalAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthOutput) ToSecretStoreSpecProviderInfisicalAuthPtrOutput() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthOutput) ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuth) *SecretStoreSpecProviderInfisicalAuth {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthOutput) UniversalAuthCredentials() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuth) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials {
		return v.UniversalAuthCredentials
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthPtrOutput) ToSecretStoreSpecProviderInfisicalAuthPtrOutput() SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPtrOutput) ToSecretStoreSpecProviderInfisicalAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuth) SecretStoreSpecProviderInfisicalAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuth
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthPtrOutput) UniversalAuthCredentials() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuth) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials {
		if v == nil {
			return nil
		}
		return v.UniversalAuthCredentials
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput)
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuthPatch struct {
	UniversalAuthCredentials *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch `pulumi:"universalAuthCredentials"`
}

// SecretStoreSpecProviderInfisicalAuthPatchInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthPatchArgs and SecretStoreSpecProviderInfisicalAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthPatchInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthPatchArgs{...}
type SecretStoreSpecProviderInfisicalAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthPatchOutput() SecretStoreSpecProviderInfisicalAuthPatchOutput
	ToSecretStoreSpecProviderInfisicalAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthPatchOutput
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuthPatchArgs struct {
	UniversalAuthCredentials SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput `pulumi:"universalAuthCredentials"`
}

func (SecretStoreSpecProviderInfisicalAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthPatchArgs) ToSecretStoreSpecProviderInfisicalAuthPatchOutput() SecretStoreSpecProviderInfisicalAuthPatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthPatchArgs) ToSecretStoreSpecProviderInfisicalAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthPatchOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthPatchArgs) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthPatchArgs) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthPatchOutput).ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthPatchArgs, SecretStoreSpecProviderInfisicalAuthPatchPtr and SecretStoreSpecProviderInfisicalAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthPatchPtrOutput
}

type secretStoreSpecProviderInfisicalAuthPatchPtrType SecretStoreSpecProviderInfisicalAuthPatchArgs

func SecretStoreSpecProviderInfisicalAuthPatchPtr(v *SecretStoreSpecProviderInfisicalAuthPatchArgs) SecretStoreSpecProviderInfisicalAuthPatchPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthPatchPtrOutput)
}

// Auth configures how the Operator authenticates with the Infisical API
type SecretStoreSpecProviderInfisicalAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthPatchOutput) ToSecretStoreSpecProviderInfisicalAuthPatchOutput() SecretStoreSpecProviderInfisicalAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPatchOutput) ToSecretStoreSpecProviderInfisicalAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPatchOutput) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthPatchOutput) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthPatch) *SecretStoreSpecProviderInfisicalAuthPatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthPatchOutput) UniversalAuthCredentials() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch {
		return v.UniversalAuthCredentials
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthPatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthPatch) SecretStoreSpecProviderInfisicalAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthPatch
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthPatchOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthPatchPtrOutput) UniversalAuthCredentials() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch {
		if v == nil {
			return nil
		}
		return v.UniversalAuthCredentials
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials struct {
	ClientId     *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId     `pulumi:"clientId"`
	ClientSecret *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret `pulumi:"clientSecret"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs struct {
	ClientId     SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput     `pulumi:"clientId"`
	ClientSecret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput `pulumi:"clientSecret"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ClientId() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId {
		return v.ClientId
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput) ClientSecret() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret {
		return v.ClientSecret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) ClientId() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput) ClientSecret() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentials) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientId) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecret) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch struct {
	ClientId     *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch     `pulumi:"clientId"`
	ClientSecret *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch `pulumi:"clientSecret"`
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchInput` via:
//
//	SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs{...}
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs struct {
	ClientId     SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput     `pulumi:"clientId"`
	ClientSecret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput `pulumi:"clientSecret"`
}

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput)
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput).ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs, SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtr and SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput
	ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput
}

type secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrType SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs

func SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtr(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput {
	return (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrType) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ClientId() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch {
		return v.ClientId
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput) ClientSecret() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch {
		return v.ClientSecret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) ToSecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch
		return ret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) ClientId() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatch {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput) ClientSecret() SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatch) *SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatch {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput)
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisicalPatch struct {
	Auth         *SecretStoreSpecProviderInfisicalAuthPatch         `pulumi:"auth"`
	HostAPI      *string                                            `pulumi:"hostAPI"`
	SecretsScope *SecretStoreSpecProviderInfisicalSecretsScopePatch `pulumi:"secretsScope"`
}

// SecretStoreSpecProviderInfisicalPatchInput is an input type that accepts SecretStoreSpecProviderInfisicalPatchArgs and SecretStoreSpecProviderInfisicalPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalPatchInput` via:
//
//	SecretStoreSpecProviderInfisicalPatchArgs{...}
type SecretStoreSpecProviderInfisicalPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalPatchOutput() SecretStoreSpecProviderInfisicalPatchOutput
	ToSecretStoreSpecProviderInfisicalPatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalPatchOutput
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisicalPatchArgs struct {
	Auth         SecretStoreSpecProviderInfisicalAuthPatchPtrInput         `pulumi:"auth"`
	HostAPI      pulumi.StringPtrInput                                     `pulumi:"hostAPI"`
	SecretsScope SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput `pulumi:"secretsScope"`
}

func (SecretStoreSpecProviderInfisicalPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalPatchArgs) ToSecretStoreSpecProviderInfisicalPatchOutput() SecretStoreSpecProviderInfisicalPatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalPatchArgs) ToSecretStoreSpecProviderInfisicalPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalPatchOutput)
}

func (i SecretStoreSpecProviderInfisicalPatchArgs) ToSecretStoreSpecProviderInfisicalPatchPtrOutput() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalPatchArgs) ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalPatchOutput).ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalPatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalPatchArgs, SecretStoreSpecProviderInfisicalPatchPtr and SecretStoreSpecProviderInfisicalPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalPatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalPatchPtrOutput() SecretStoreSpecProviderInfisicalPatchPtrOutput
	ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalPatchPtrOutput
}

type secretStoreSpecProviderInfisicalPatchPtrType SecretStoreSpecProviderInfisicalPatchArgs

func SecretStoreSpecProviderInfisicalPatchPtr(v *SecretStoreSpecProviderInfisicalPatchArgs) SecretStoreSpecProviderInfisicalPatchPtrInput {
	return (*secretStoreSpecProviderInfisicalPatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalPatchPtrType) ToSecretStoreSpecProviderInfisicalPatchPtrOutput() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalPatchPtrType) ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalPatchPtrOutput)
}

// Infisical configures this store to sync secrets using the Infisical provider
type SecretStoreSpecProviderInfisicalPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) ToSecretStoreSpecProviderInfisicalPatchOutput() SecretStoreSpecProviderInfisicalPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) ToSecretStoreSpecProviderInfisicalPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) ToSecretStoreSpecProviderInfisicalPatchPtrOutput() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalPatch) *SecretStoreSpecProviderInfisicalPatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) Auth() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalPatch) *SecretStoreSpecProviderInfisicalAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderInfisicalAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) HostAPI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalPatch) *string { return v.HostAPI }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchOutput) SecretsScope() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalPatch) *SecretStoreSpecProviderInfisicalSecretsScopePatch {
		return v.SecretsScope
	}).(SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) ToSecretStoreSpecProviderInfisicalPatchPtrOutput() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) ToSecretStoreSpecProviderInfisicalPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalPatch) SecretStoreSpecProviderInfisicalPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalPatch
		return ret
	}).(SecretStoreSpecProviderInfisicalPatchOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) Auth() SecretStoreSpecProviderInfisicalAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalPatch) *SecretStoreSpecProviderInfisicalAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderInfisicalAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) HostAPI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalPatch) *string {
		if v == nil {
			return nil
		}
		return v.HostAPI
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalPatchPtrOutput) SecretsScope() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalPatch) *SecretStoreSpecProviderInfisicalSecretsScopePatch {
		if v == nil {
			return nil
		}
		return v.SecretsScope
	}).(SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScope struct {
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	ProjectSlug     *string `pulumi:"projectSlug"`
	SecretsPath     *string `pulumi:"secretsPath"`
}

// SecretStoreSpecProviderInfisicalSecretsScopeInput is an input type that accepts SecretStoreSpecProviderInfisicalSecretsScopeArgs and SecretStoreSpecProviderInfisicalSecretsScopeOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalSecretsScopeInput` via:
//
//	SecretStoreSpecProviderInfisicalSecretsScopeArgs{...}
type SecretStoreSpecProviderInfisicalSecretsScopeInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalSecretsScopeOutput() SecretStoreSpecProviderInfisicalSecretsScopeOutput
	ToSecretStoreSpecProviderInfisicalSecretsScopeOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalSecretsScopeOutput
}

type SecretStoreSpecProviderInfisicalSecretsScopeArgs struct {
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	ProjectSlug     pulumi.StringPtrInput `pulumi:"projectSlug"`
	SecretsPath     pulumi.StringPtrInput `pulumi:"secretsPath"`
}

func (SecretStoreSpecProviderInfisicalSecretsScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScope)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalSecretsScopeArgs) ToSecretStoreSpecProviderInfisicalSecretsScopeOutput() SecretStoreSpecProviderInfisicalSecretsScopeOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopeOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalSecretsScopeArgs) ToSecretStoreSpecProviderInfisicalSecretsScopeOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopeOutput)
}

func (i SecretStoreSpecProviderInfisicalSecretsScopeArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalSecretsScopeArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopeOutput).ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalSecretsScopePtrInput is an input type that accepts SecretStoreSpecProviderInfisicalSecretsScopeArgs, SecretStoreSpecProviderInfisicalSecretsScopePtr and SecretStoreSpecProviderInfisicalSecretsScopePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalSecretsScopePtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalSecretsScopeArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalSecretsScopePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput
	ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalSecretsScopePtrOutput
}

type secretStoreSpecProviderInfisicalSecretsScopePtrType SecretStoreSpecProviderInfisicalSecretsScopeArgs

func SecretStoreSpecProviderInfisicalSecretsScopePtr(v *SecretStoreSpecProviderInfisicalSecretsScopeArgs) SecretStoreSpecProviderInfisicalSecretsScopePtrInput {
	return (*secretStoreSpecProviderInfisicalSecretsScopePtrType)(v)
}

func (*secretStoreSpecProviderInfisicalSecretsScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalSecretsScope)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalSecretsScopePtrType) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalSecretsScopePtrType) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopePtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScopeOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalSecretsScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScope)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) ToSecretStoreSpecProviderInfisicalSecretsScopeOutput() SecretStoreSpecProviderInfisicalSecretsScopeOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) ToSecretStoreSpecProviderInfisicalSecretsScopeOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopeOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalSecretsScope) *SecretStoreSpecProviderInfisicalSecretsScope {
		return &v
	}).(SecretStoreSpecProviderInfisicalSecretsScopePtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScope) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) ProjectSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScope) *string { return v.ProjectSlug }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopeOutput) SecretsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScope) *string { return v.SecretsPath }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScopePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalSecretsScope)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) Elem() SecretStoreSpecProviderInfisicalSecretsScopeOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScope) SecretStoreSpecProviderInfisicalSecretsScope {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalSecretsScope
		return ret
	}).(SecretStoreSpecProviderInfisicalSecretsScopeOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScope) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentSlug
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) ProjectSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScope) *string {
		if v == nil {
			return nil
		}
		return v.ProjectSlug
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePtrOutput) SecretsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScope) *string {
		if v == nil {
			return nil
		}
		return v.SecretsPath
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScopePatch struct {
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	ProjectSlug     *string `pulumi:"projectSlug"`
	SecretsPath     *string `pulumi:"secretsPath"`
}

// SecretStoreSpecProviderInfisicalSecretsScopePatchInput is an input type that accepts SecretStoreSpecProviderInfisicalSecretsScopePatchArgs and SecretStoreSpecProviderInfisicalSecretsScopePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalSecretsScopePatchInput` via:
//
//	SecretStoreSpecProviderInfisicalSecretsScopePatchArgs{...}
type SecretStoreSpecProviderInfisicalSecretsScopePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchOutput
	ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchOutput
}

type SecretStoreSpecProviderInfisicalSecretsScopePatchArgs struct {
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	ProjectSlug     pulumi.StringPtrInput `pulumi:"projectSlug"`
	SecretsPath     pulumi.StringPtrInput `pulumi:"secretsPath"`
}

func (SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopePatchOutput)
}

func (i SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopePatchOutput).ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput is an input type that accepts SecretStoreSpecProviderInfisicalSecretsScopePatchArgs, SecretStoreSpecProviderInfisicalSecretsScopePatchPtr and SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput` via:
//
//	        SecretStoreSpecProviderInfisicalSecretsScopePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput
	ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput
}

type secretStoreSpecProviderInfisicalSecretsScopePatchPtrType SecretStoreSpecProviderInfisicalSecretsScopePatchArgs

func SecretStoreSpecProviderInfisicalSecretsScopePatchPtr(v *SecretStoreSpecProviderInfisicalSecretsScopePatchArgs) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput {
	return (*secretStoreSpecProviderInfisicalSecretsScopePatchPtrType)(v)
}

func (*secretStoreSpecProviderInfisicalSecretsScopePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalSecretsScopePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderInfisicalSecretsScopePatchPtrType) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return i.ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderInfisicalSecretsScopePatchPtrType) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScopePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o.ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderInfisicalSecretsScopePatch) *SecretStoreSpecProviderInfisicalSecretsScopePatch {
		return &v
	}).(SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScopePatch) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) ProjectSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScopePatch) *string { return v.ProjectSlug }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchOutput) SecretsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderInfisicalSecretsScopePatch) *string { return v.SecretsPath }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderInfisicalSecretsScopePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput() SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) ToSecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) Elem() SecretStoreSpecProviderInfisicalSecretsScopePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScopePatch) SecretStoreSpecProviderInfisicalSecretsScopePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderInfisicalSecretsScopePatch
		return ret
	}).(SecretStoreSpecProviderInfisicalSecretsScopePatchOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScopePatch) *string {
		if v == nil {
			return nil
		}
		return v.EnvironmentSlug
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) ProjectSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScopePatch) *string {
		if v == nil {
			return nil
		}
		return v.ProjectSlug
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput) SecretsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderInfisicalSecretsScopePatch) *string {
		if v == nil {
			return nil
		}
		return v.SecretsPath
	}).(pulumi.StringPtrOutput)
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurity struct {
	AuthRef  *SecretStoreSpecProviderKeepersecurityAuthRef `pulumi:"authRef"`
	FolderID *string                                       `pulumi:"folderID"`
}

// SecretStoreSpecProviderKeepersecurityInput is an input type that accepts SecretStoreSpecProviderKeepersecurityArgs and SecretStoreSpecProviderKeepersecurityOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityInput` via:
//
//	SecretStoreSpecProviderKeepersecurityArgs{...}
type SecretStoreSpecProviderKeepersecurityInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityOutput() SecretStoreSpecProviderKeepersecurityOutput
	ToSecretStoreSpecProviderKeepersecurityOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityOutput
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurityArgs struct {
	AuthRef  SecretStoreSpecProviderKeepersecurityAuthRefPtrInput `pulumi:"authRef"`
	FolderID pulumi.StringPtrInput                                `pulumi:"folderID"`
}

func (SecretStoreSpecProviderKeepersecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurity)(nil)).Elem()
}

func (i SecretStoreSpecProviderKeepersecurityArgs) ToSecretStoreSpecProviderKeepersecurityOutput() SecretStoreSpecProviderKeepersecurityOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityArgs) ToSecretStoreSpecProviderKeepersecurityOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityOutput)
}

func (i SecretStoreSpecProviderKeepersecurityArgs) ToSecretStoreSpecProviderKeepersecurityPtrOutput() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityArgs) ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityOutput).ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKeepersecurityPtrInput is an input type that accepts SecretStoreSpecProviderKeepersecurityArgs, SecretStoreSpecProviderKeepersecurityPtr and SecretStoreSpecProviderKeepersecurityPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityPtrInput` via:
//
//	        SecretStoreSpecProviderKeepersecurityArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKeepersecurityPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityPtrOutput() SecretStoreSpecProviderKeepersecurityPtrOutput
	ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityPtrOutput
}

type secretStoreSpecProviderKeepersecurityPtrType SecretStoreSpecProviderKeepersecurityArgs

func SecretStoreSpecProviderKeepersecurityPtr(v *SecretStoreSpecProviderKeepersecurityArgs) SecretStoreSpecProviderKeepersecurityPtrInput {
	return (*secretStoreSpecProviderKeepersecurityPtrType)(v)
}

func (*secretStoreSpecProviderKeepersecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurity)(nil)).Elem()
}

func (i *secretStoreSpecProviderKeepersecurityPtrType) ToSecretStoreSpecProviderKeepersecurityPtrOutput() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKeepersecurityPtrType) ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityPtrOutput)
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurityOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurity)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityOutput) ToSecretStoreSpecProviderKeepersecurityOutput() SecretStoreSpecProviderKeepersecurityOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityOutput) ToSecretStoreSpecProviderKeepersecurityOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityOutput) ToSecretStoreSpecProviderKeepersecurityPtrOutput() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o.ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKeepersecurityOutput) ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKeepersecurity) *SecretStoreSpecProviderKeepersecurity {
		return &v
	}).(SecretStoreSpecProviderKeepersecurityPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityOutput) AuthRef() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurity) *SecretStoreSpecProviderKeepersecurityAuthRef {
		return v.AuthRef
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityOutput) FolderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurity) *string { return v.FolderID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKeepersecurityPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurity)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityPtrOutput) ToSecretStoreSpecProviderKeepersecurityPtrOutput() SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPtrOutput) ToSecretStoreSpecProviderKeepersecurityPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPtrOutput) Elem() SecretStoreSpecProviderKeepersecurityOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurity) SecretStoreSpecProviderKeepersecurity {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKeepersecurity
		return ret
	}).(SecretStoreSpecProviderKeepersecurityOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPtrOutput) AuthRef() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurity) *SecretStoreSpecProviderKeepersecurityAuthRef {
		if v == nil {
			return nil
		}
		return v.AuthRef
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPtrOutput) FolderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurity) *string {
		if v == nil {
			return nil
		}
		return v.FolderID
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKeepersecurityAuthRefInput is an input type that accepts SecretStoreSpecProviderKeepersecurityAuthRefArgs and SecretStoreSpecProviderKeepersecurityAuthRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityAuthRefInput` via:
//
//	SecretStoreSpecProviderKeepersecurityAuthRefArgs{...}
type SecretStoreSpecProviderKeepersecurityAuthRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityAuthRefOutput() SecretStoreSpecProviderKeepersecurityAuthRefOutput
	ToSecretStoreSpecProviderKeepersecurityAuthRefOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityAuthRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKeepersecurityAuthRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefOutput() SecretStoreSpecProviderKeepersecurityAuthRefOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefOutput)
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefOutput).ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKeepersecurityAuthRefPtrInput is an input type that accepts SecretStoreSpecProviderKeepersecurityAuthRefArgs, SecretStoreSpecProviderKeepersecurityAuthRefPtr and SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityAuthRefPtrInput` via:
//
//	        SecretStoreSpecProviderKeepersecurityAuthRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKeepersecurityAuthRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput
	ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput
}

type secretStoreSpecProviderKeepersecurityAuthRefPtrType SecretStoreSpecProviderKeepersecurityAuthRefArgs

func SecretStoreSpecProviderKeepersecurityAuthRefPtr(v *SecretStoreSpecProviderKeepersecurityAuthRefArgs) SecretStoreSpecProviderKeepersecurityAuthRefPtrInput {
	return (*secretStoreSpecProviderKeepersecurityAuthRefPtrType)(v)
}

func (*secretStoreSpecProviderKeepersecurityAuthRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityAuthRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderKeepersecurityAuthRefPtrType) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKeepersecurityAuthRefPtrType) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityAuthRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefOutput() SecretStoreSpecProviderKeepersecurityAuthRefOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o.ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKeepersecurityAuthRef) *SecretStoreSpecProviderKeepersecurityAuthRef {
		return &v
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKeepersecurityAuthRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityAuthRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) Elem() SecretStoreSpecProviderKeepersecurityAuthRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRef) SecretStoreSpecProviderKeepersecurityAuthRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKeepersecurityAuthRef
		return ret
	}).(SecretStoreSpecProviderKeepersecurityAuthRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKeepersecurityAuthRefPatchInput is an input type that accepts SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs and SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityAuthRefPatchInput` via:
//
//	SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs{...}
type SecretStoreSpecProviderKeepersecurityAuthRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput
	ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput)
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput).ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs, SecretStoreSpecProviderKeepersecurityAuthRefPatchPtr and SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput
	ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput
}

type secretStoreSpecProviderKeepersecurityAuthRefPatchPtrType SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs

func SecretStoreSpecProviderKeepersecurityAuthRefPatchPtr(v *SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput {
	return (*secretStoreSpecProviderKeepersecurityAuthRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderKeepersecurityAuthRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityAuthRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKeepersecurityAuthRefPatchPtrType) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKeepersecurityAuthRefPatchPtrType) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKeepersecurityAuthRefPatch) *SecretStoreSpecProviderKeepersecurityAuthRefPatch {
		return &v
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityAuthRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) ToSecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) Elem() SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRefPatch) SecretStoreSpecProviderKeepersecurityAuthRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKeepersecurityAuthRefPatch
		return ret
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurityPatch struct {
	AuthRef  *SecretStoreSpecProviderKeepersecurityAuthRefPatch `pulumi:"authRef"`
	FolderID *string                                            `pulumi:"folderID"`
}

// SecretStoreSpecProviderKeepersecurityPatchInput is an input type that accepts SecretStoreSpecProviderKeepersecurityPatchArgs and SecretStoreSpecProviderKeepersecurityPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityPatchInput` via:
//
//	SecretStoreSpecProviderKeepersecurityPatchArgs{...}
type SecretStoreSpecProviderKeepersecurityPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityPatchOutput() SecretStoreSpecProviderKeepersecurityPatchOutput
	ToSecretStoreSpecProviderKeepersecurityPatchOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityPatchOutput
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurityPatchArgs struct {
	AuthRef  SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput `pulumi:"authRef"`
	FolderID pulumi.StringPtrInput                                     `pulumi:"folderID"`
}

func (SecretStoreSpecProviderKeepersecurityPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKeepersecurityPatchArgs) ToSecretStoreSpecProviderKeepersecurityPatchOutput() SecretStoreSpecProviderKeepersecurityPatchOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityPatchArgs) ToSecretStoreSpecProviderKeepersecurityPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityPatchOutput)
}

func (i SecretStoreSpecProviderKeepersecurityPatchArgs) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutput() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKeepersecurityPatchArgs) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityPatchOutput).ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKeepersecurityPatchPtrInput is an input type that accepts SecretStoreSpecProviderKeepersecurityPatchArgs, SecretStoreSpecProviderKeepersecurityPatchPtr and SecretStoreSpecProviderKeepersecurityPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKeepersecurityPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKeepersecurityPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKeepersecurityPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKeepersecurityPatchPtrOutput() SecretStoreSpecProviderKeepersecurityPatchPtrOutput
	ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKeepersecurityPatchPtrOutput
}

type secretStoreSpecProviderKeepersecurityPatchPtrType SecretStoreSpecProviderKeepersecurityPatchArgs

func SecretStoreSpecProviderKeepersecurityPatchPtr(v *SecretStoreSpecProviderKeepersecurityPatchArgs) SecretStoreSpecProviderKeepersecurityPatchPtrInput {
	return (*secretStoreSpecProviderKeepersecurityPatchPtrType)(v)
}

func (*secretStoreSpecProviderKeepersecurityPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKeepersecurityPatchPtrType) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutput() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKeepersecurityPatchPtrType) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKeepersecurityPatchPtrOutput)
}

// KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
type SecretStoreSpecProviderKeepersecurityPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) ToSecretStoreSpecProviderKeepersecurityPatchOutput() SecretStoreSpecProviderKeepersecurityPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) ToSecretStoreSpecProviderKeepersecurityPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutput() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKeepersecurityPatch) *SecretStoreSpecProviderKeepersecurityPatch {
		return &v
	}).(SecretStoreSpecProviderKeepersecurityPatchPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) AuthRef() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityPatch) *SecretStoreSpecProviderKeepersecurityAuthRefPatch {
		return v.AuthRef
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPatchOutput) FolderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKeepersecurityPatch) *string { return v.FolderID }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKeepersecurityPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKeepersecurityPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKeepersecurityPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKeepersecurityPatchPtrOutput) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutput() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPatchPtrOutput) ToSecretStoreSpecProviderKeepersecurityPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKeepersecurityPatchPtrOutput) Elem() SecretStoreSpecProviderKeepersecurityPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityPatch) SecretStoreSpecProviderKeepersecurityPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKeepersecurityPatch
		return ret
	}).(SecretStoreSpecProviderKeepersecurityPatchOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPatchPtrOutput) AuthRef() SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityPatch) *SecretStoreSpecProviderKeepersecurityAuthRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthRef
	}).(SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderKeepersecurityPatchPtrOutput) FolderID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKeepersecurityPatch) *string {
		if v == nil {
			return nil
		}
		return v.FolderID
	}).(pulumi.StringPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetes struct {
	Auth    *SecretStoreSpecProviderKubernetesAuth    `pulumi:"auth"`
	AuthRef *SecretStoreSpecProviderKubernetesAuthRef `pulumi:"authRef"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace *string                                  `pulumi:"remoteNamespace"`
	Server          *SecretStoreSpecProviderKubernetesServer `pulumi:"server"`
}

// SecretStoreSpecProviderKubernetesInput is an input type that accepts SecretStoreSpecProviderKubernetesArgs and SecretStoreSpecProviderKubernetesOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesInput` via:
//
//	SecretStoreSpecProviderKubernetesArgs{...}
type SecretStoreSpecProviderKubernetesInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput
	ToSecretStoreSpecProviderKubernetesOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesOutput
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesArgs struct {
	Auth    SecretStoreSpecProviderKubernetesAuthPtrInput    `pulumi:"auth"`
	AuthRef SecretStoreSpecProviderKubernetesAuthRefPtrInput `pulumi:"authRef"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace pulumi.StringPtrInput                           `pulumi:"remoteNamespace"`
	Server          SecretStoreSpecProviderKubernetesServerPtrInput `pulumi:"server"`
}

func (SecretStoreSpecProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput {
	return i.ToSecretStoreSpecProviderKubernetesOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesOutput)
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesArgs) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesOutput).ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesArgs, SecretStoreSpecProviderKubernetesPtr and SecretStoreSpecProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput
	ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesPtrOutput
}

type secretStoreSpecProviderKubernetesPtrType SecretStoreSpecProviderKubernetesArgs

func SecretStoreSpecProviderKubernetesPtr(v *SecretStoreSpecProviderKubernetesArgs) SecretStoreSpecProviderKubernetesPtrInput {
	return (*secretStoreSpecProviderKubernetesPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesPtrType) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesPtrType) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesOutput() SecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesOutput) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetes {
		return &v
	}).(SecretStoreSpecProviderKubernetesPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesOutput) Auth() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesAuth { return v.Auth }).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesOutput) AuthRef() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesAuthRef { return v.AuthRef }).(SecretStoreSpecProviderKubernetesAuthRefPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *string { return v.RemoteNamespace }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesOutput) Server() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesServer { return v.Server }).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

type SecretStoreSpecProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) ToSecretStoreSpecProviderKubernetesPtrOutput() SecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) ToSecretStoreSpecProviderKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) Elem() SecretStoreSpecProviderKubernetesOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) SecretStoreSpecProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetes
		return ret
	}).(SecretStoreSpecProviderKubernetesOutput)
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) Auth() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) AuthRef() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesAuthRef {
		if v == nil {
			return nil
		}
		return v.AuthRef
	}).(SecretStoreSpecProviderKubernetesAuthRefPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesPtrOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.RemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPtrOutput) Server() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetes) *SecretStoreSpecProviderKubernetesServer {
		if v == nil {
			return nil
		}
		return v.Server
	}).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuth struct {
	Cert           *SecretStoreSpecProviderKubernetesAuthCert           `pulumi:"cert"`
	ServiceAccount *SecretStoreSpecProviderKubernetesAuthServiceAccount `pulumi:"serviceAccount"`
	Token          *SecretStoreSpecProviderKubernetesAuthToken          `pulumi:"token"`
}

// SecretStoreSpecProviderKubernetesAuthInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthArgs and SecretStoreSpecProviderKubernetesAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthArgs{...}
type SecretStoreSpecProviderKubernetesAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput
	ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthOutput
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthArgs struct {
	Cert           SecretStoreSpecProviderKubernetesAuthCertPtrInput           `pulumi:"cert"`
	ServiceAccount SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput `pulumi:"serviceAccount"`
	Token          SecretStoreSpecProviderKubernetesAuthTokenPtrInput          `pulumi:"token"`
}

func (SecretStoreSpecProviderKubernetesAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthArgs) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthOutput).ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthArgs, SecretStoreSpecProviderKubernetesAuthPtr and SecretStoreSpecProviderKubernetesAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput
}

type secretStoreSpecProviderKubernetesAuthPtrType SecretStoreSpecProviderKubernetesAuthArgs

func SecretStoreSpecProviderKubernetesAuthPtr(v *SecretStoreSpecProviderKubernetesAuthArgs) SecretStoreSpecProviderKubernetesAuthPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthPtrType) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthPtrType) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthOutput() SecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuth {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthCert {
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthToken {
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutput() SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) SecretStoreSpecProviderKubernetesAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuth
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPtrOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuth) *SecretStoreSpecProviderKubernetesAuthToken {
		if v == nil {
			return nil
		}
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCert struct {
	ClientCert *SecretStoreSpecProviderKubernetesAuthCertClientCert `pulumi:"clientCert"`
	ClientKey  *SecretStoreSpecProviderKubernetesAuthCertClientKey  `pulumi:"clientKey"`
}

// SecretStoreSpecProviderKubernetesAuthCertInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertArgs and SecretStoreSpecProviderKubernetesAuthCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput
	ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertArgs struct {
	ClientCert SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput `pulumi:"clientCert"`
	ClientKey  SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput  `pulumi:"clientKey"`
}

func (SecretStoreSpecProviderKubernetesAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertOutput).ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertArgs, SecretStoreSpecProviderKubernetesAuthCertPtr and SecretStoreSpecProviderKubernetesAuthCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertPtrType SecretStoreSpecProviderKubernetesAuthCertArgs

func SecretStoreSpecProviderKubernetesAuthCertPtr(v *SecretStoreSpecProviderKubernetesAuthCertArgs) SecretStoreSpecProviderKubernetesAuthCertPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertOutput() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCert {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) SecretStoreSpecProviderKubernetesAuthCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCert
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPtrOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCert) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertArgs and SecretStoreSpecProviderKubernetesAuthCertClientCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertArgs, SecretStoreSpecProviderKubernetesAuthCertClientCertPtr and SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientCertPtrType SecretStoreSpecProviderKubernetesAuthCertClientCertArgs

func SecretStoreSpecProviderKubernetesAuthCertClientCertPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientCertArgs) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientCertPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientCert) *SecretStoreSpecProviderKubernetesAuthCertClientCert {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) SecretStoreSpecProviderKubernetesAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientCert
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs and SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientCertPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs, SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtr and SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrType SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs

func SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCertPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) SecretStoreSpecProviderKubernetesAuthCertClientCertPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientCertPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs and SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientKeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs, SecretStoreSpecProviderKubernetesAuthCertClientKeyPtr and SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs

func SecretStoreSpecProviderKubernetesAuthCertClientKeyPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientKey) *SecretStoreSpecProviderKubernetesAuthCertClientKey {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) SecretStoreSpecProviderKubernetesAuthCertClientKey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientKey
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs and SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput).ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs, SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtr and SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrType SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs

func SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtr(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertPatch struct {
	ClientCert *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch `pulumi:"clientCert"`
	ClientKey  *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch  `pulumi:"clientKey"`
}

// SecretStoreSpecProviderKubernetesAuthCertPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertPatchArgs and SecretStoreSpecProviderKubernetesAuthCertPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthCertPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthCertPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthCertPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchOutput
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertPatchArgs struct {
	ClientCert SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput `pulumi:"clientCert"`
	ClientKey  SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput  `pulumi:"clientKey"`
}

func (SecretStoreSpecProviderKubernetesAuthCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthCertPatchArgs) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertPatchOutput).ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthCertPatchArgs, SecretStoreSpecProviderKubernetesAuthCertPatchPtr and SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthCertPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthCertPatchPtrType SecretStoreSpecProviderKubernetesAuthCertPatchArgs

func SecretStoreSpecProviderKubernetesAuthCertPatchPtr(v *SecretStoreSpecProviderKubernetesAuthCertPatchArgs) SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthCertPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthCertPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthCertPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput)
}

// has both clientCert and clientKey as secretKeySelector
type SecretStoreSpecProviderKubernetesAuthCertPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchOutput() SecretStoreSpecProviderKubernetesAuthCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthCertPatch) *SecretStoreSpecProviderKubernetesAuthCertPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertPatch) *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch {
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthCertPatch) *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch {
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthCertPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertPatch) SecretStoreSpecProviderKubernetesAuthCertPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthCertPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthCertPatchOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) ClientCert() SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertPatch) *SecretStoreSpecProviderKubernetesAuthCertClientCertPatch {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput) ClientKey() SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthCertPatch) *SecretStoreSpecProviderKubernetesAuthCertClientKeyPatch {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthPatch struct {
	Cert           *SecretStoreSpecProviderKubernetesAuthCertPatch           `pulumi:"cert"`
	ServiceAccount *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch `pulumi:"serviceAccount"`
	Token          *SecretStoreSpecProviderKubernetesAuthTokenPatch          `pulumi:"token"`
}

// SecretStoreSpecProviderKubernetesAuthPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthPatchArgs and SecretStoreSpecProviderKubernetesAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthPatchOutput() SecretStoreSpecProviderKubernetesAuthPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthPatchOutput
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthPatchArgs struct {
	Cert           SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput           `pulumi:"cert"`
	ServiceAccount SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput `pulumi:"serviceAccount"`
	Token          SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput          `pulumi:"token"`
}

func (SecretStoreSpecProviderKubernetesAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthPatchArgs) ToSecretStoreSpecProviderKubernetesAuthPatchOutput() SecretStoreSpecProviderKubernetesAuthPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthPatchArgs) ToSecretStoreSpecProviderKubernetesAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthPatchArgs) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthPatchArgs) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthPatchOutput).ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthPatchArgs, SecretStoreSpecProviderKubernetesAuthPatchPtr and SecretStoreSpecProviderKubernetesAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthPatchPtrType SecretStoreSpecProviderKubernetesAuthPatchArgs

func SecretStoreSpecProviderKubernetesAuthPatchPtr(v *SecretStoreSpecProviderKubernetesAuthPatchArgs) SecretStoreSpecProviderKubernetesAuthPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a Kubernetes instance.
type SecretStoreSpecProviderKubernetesAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) ToSecretStoreSpecProviderKubernetesAuthPatchOutput() SecretStoreSpecProviderKubernetesAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) ToSecretStoreSpecProviderKubernetesAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthCertPatch {
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch {
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthTokenPatch {
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthPatch) SecretStoreSpecProviderKubernetesAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthPatchOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) Cert() SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthCertPatch {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) ServiceAccount() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccount
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthPatchPtrOutput) Token() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthPatch) *SecretStoreSpecProviderKubernetesAuthTokenPatch {
		if v == nil {
			return nil
		}
		return v.Token
	}).(SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput)
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthRefInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthRefArgs and SecretStoreSpecProviderKubernetesAuthRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthRefInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthRefArgs{...}
type SecretStoreSpecProviderKubernetesAuthRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthRefOutput() SecretStoreSpecProviderKubernetesAuthRefOutput
	ToSecretStoreSpecProviderKubernetesAuthRefOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthRefOutput
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthRefArgs) ToSecretStoreSpecProviderKubernetesAuthRefOutput() SecretStoreSpecProviderKubernetesAuthRefOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthRefArgs) ToSecretStoreSpecProviderKubernetesAuthRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthRefArgs) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthRefArgs) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefOutput).ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthRefPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthRefArgs, SecretStoreSpecProviderKubernetesAuthRefPtr and SecretStoreSpecProviderKubernetesAuthRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthRefPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthRefPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthRefPtrOutput
}

type secretStoreSpecProviderKubernetesAuthRefPtrType SecretStoreSpecProviderKubernetesAuthRefArgs

func SecretStoreSpecProviderKubernetesAuthRefPtr(v *SecretStoreSpecProviderKubernetesAuthRefArgs) SecretStoreSpecProviderKubernetesAuthRefPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthRefPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthRefPtrType) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthRefPtrType) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefPtrOutput)
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthRefOutput) ToSecretStoreSpecProviderKubernetesAuthRefOutput() SecretStoreSpecProviderKubernetesAuthRefOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefOutput) ToSecretStoreSpecProviderKubernetesAuthRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefOutput) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthRefOutput) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthRef) *SecretStoreSpecProviderKubernetesAuthRef {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) ToSecretStoreSpecProviderKubernetesAuthRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRef) SecretStoreSpecProviderKubernetesAuthRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthRef
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthRefPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthRefPatchArgs and SecretStoreSpecProviderKubernetesAuthRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthRefPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthRefPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthRefPatchOutput() SecretStoreSpecProviderKubernetesAuthRefPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchOutput
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthRefPatchArgs) ToSecretStoreSpecProviderKubernetesAuthRefPatchOutput() SecretStoreSpecProviderKubernetesAuthRefPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthRefPatchArgs) ToSecretStoreSpecProviderKubernetesAuthRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthRefPatchArgs) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthRefPatchArgs) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefPatchOutput).ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthRefPatchArgs, SecretStoreSpecProviderKubernetesAuthRefPatchPtr and SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthRefPatchPtrType SecretStoreSpecProviderKubernetesAuthRefPatchArgs

func SecretStoreSpecProviderKubernetesAuthRefPatchPtr(v *SecretStoreSpecProviderKubernetesAuthRefPatchArgs) SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthRefPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthRefPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput)
}

// A reference to a secret that contains the auth information.
type SecretStoreSpecProviderKubernetesAuthRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchOutput() SecretStoreSpecProviderKubernetesAuthRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthRefPatch) *SecretStoreSpecProviderKubernetesAuthRefPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRefPatch) SecretStoreSpecProviderKubernetesAuthRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthRefPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccount struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountArgs and SecretStoreSpecProviderKubernetesAuthServiceAccountOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
type SecretStoreSpecProviderKubernetesAuthServiceAccountInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput).ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountArgs, SecretStoreSpecProviderKubernetesAuthServiceAccountPtr and SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput
}

type secretStoreSpecProviderKubernetesAuthServiceAccountPtrType SecretStoreSpecProviderKubernetesAuthServiceAccountArgs

func SecretStoreSpecProviderKubernetesAuthServiceAccountPtr(v *SecretStoreSpecProviderKubernetesAuthServiceAccountArgs) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthServiceAccountPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthServiceAccount) *SecretStoreSpecProviderKubernetesAuthServiceAccount {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccount) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccount) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccount)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthServiceAccountOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) SecretStoreSpecProviderKubernetesAuthServiceAccount {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthServiceAccount
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccount) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs and SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthServiceAccountPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput).ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs, SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtr and SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrType SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs

func SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtr(v *SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccountPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput)
}

// points to a service account that should be used for authentication
type SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthServiceAccountPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) SecretStoreSpecProviderKubernetesAuthServiceAccountPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthServiceAccountPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthServiceAccountPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthToken struct {
	BearerToken *SecretStoreSpecProviderKubernetesAuthTokenBearerToken `pulumi:"bearerToken"`
}

// SecretStoreSpecProviderKubernetesAuthTokenInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenArgs and SecretStoreSpecProviderKubernetesAuthTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenArgs struct {
	BearerToken SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput `pulumi:"bearerToken"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenOutput).ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenArgs, SecretStoreSpecProviderKubernetesAuthTokenPtr and SecretStoreSpecProviderKubernetesAuthTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenPtrType SecretStoreSpecProviderKubernetesAuthTokenArgs

func SecretStoreSpecProviderKubernetesAuthTokenPtr(v *SecretStoreSpecProviderKubernetesAuthTokenArgs) SecretStoreSpecProviderKubernetesAuthTokenPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthToken {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthTokenOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthToken) SecretStoreSpecProviderKubernetesAuthToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthToken
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPtrOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerToken struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput).ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs, SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs

func SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtr(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) SecretStoreSpecProviderKubernetesAuthTokenBearerToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthTokenBearerToken
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerToken) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput).ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs, SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtr and SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrType SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs

func SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtr(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenPatch struct {
	BearerToken *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch `pulumi:"bearerToken"`
}

// SecretStoreSpecProviderKubernetesAuthTokenPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenPatchArgs and SecretStoreSpecProviderKubernetesAuthTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesAuthTokenPatchArgs{...}
type SecretStoreSpecProviderKubernetesAuthTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchOutput
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenPatchArgs struct {
	BearerToken SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput `pulumi:"bearerToken"`
}

func (SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenPatchOutput).ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesAuthTokenPatchArgs, SecretStoreSpecProviderKubernetesAuthTokenPatchPtr and SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesAuthTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput
}

type secretStoreSpecProviderKubernetesAuthTokenPatchPtrType SecretStoreSpecProviderKubernetesAuthTokenPatchArgs

func SecretStoreSpecProviderKubernetesAuthTokenPatchPtr(v *SecretStoreSpecProviderKubernetesAuthTokenPatchArgs) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesAuthTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesAuthTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesAuthTokenPatchPtrType) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput)
}

// use static token to authenticate with
type SecretStoreSpecProviderKubernetesAuthTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesAuthTokenPatch) *SecretStoreSpecProviderKubernetesAuthTokenPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesAuthTokenPatch) *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch {
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput)
}

type SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesAuthTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput() SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput) ToSecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesAuthTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenPatch) SecretStoreSpecProviderKubernetesAuthTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesAuthTokenPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesAuthTokenPatchOutput)
}

func (o SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput) BearerToken() SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesAuthTokenPatch) *SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatch {
		if v == nil {
			return nil
		}
		return v.BearerToken
	}).(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesPatch struct {
	Auth    *SecretStoreSpecProviderKubernetesAuthPatch    `pulumi:"auth"`
	AuthRef *SecretStoreSpecProviderKubernetesAuthRefPatch `pulumi:"authRef"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace *string                                       `pulumi:"remoteNamespace"`
	Server          *SecretStoreSpecProviderKubernetesServerPatch `pulumi:"server"`
}

// SecretStoreSpecProviderKubernetesPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesPatchArgs and SecretStoreSpecProviderKubernetesPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesPatchArgs{...}
type SecretStoreSpecProviderKubernetesPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesPatchOutput() SecretStoreSpecProviderKubernetesPatchOutput
	ToSecretStoreSpecProviderKubernetesPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesPatchOutput
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesPatchArgs struct {
	Auth    SecretStoreSpecProviderKubernetesAuthPatchPtrInput    `pulumi:"auth"`
	AuthRef SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput `pulumi:"authRef"`
	// Remote namespace to fetch the secrets from
	RemoteNamespace pulumi.StringPtrInput                                `pulumi:"remoteNamespace"`
	Server          SecretStoreSpecProviderKubernetesServerPatchPtrInput `pulumi:"server"`
}

func (SecretStoreSpecProviderKubernetesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesPatchArgs) ToSecretStoreSpecProviderKubernetesPatchOutput() SecretStoreSpecProviderKubernetesPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesPatchArgs) ToSecretStoreSpecProviderKubernetesPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesPatchArgs) ToSecretStoreSpecProviderKubernetesPatchPtrOutput() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesPatchArgs) ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesPatchOutput).ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesPatchArgs, SecretStoreSpecProviderKubernetesPatchPtr and SecretStoreSpecProviderKubernetesPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesPatchPtrOutput() SecretStoreSpecProviderKubernetesPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesPatchPtrOutput
}

type secretStoreSpecProviderKubernetesPatchPtrType SecretStoreSpecProviderKubernetesPatchArgs

func SecretStoreSpecProviderKubernetesPatchPtr(v *SecretStoreSpecProviderKubernetesPatchArgs) SecretStoreSpecProviderKubernetesPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesPatchPtrType) ToSecretStoreSpecProviderKubernetesPatchPtrOutput() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesPatchPtrType) ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesPatchPtrOutput)
}

// Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
type SecretStoreSpecProviderKubernetesPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) ToSecretStoreSpecProviderKubernetesPatchOutput() SecretStoreSpecProviderKubernetesPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) ToSecretStoreSpecProviderKubernetesPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) ToSecretStoreSpecProviderKubernetesPatchPtrOutput() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) Auth() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderKubernetesAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) AuthRef() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesAuthRefPatch {
		return v.AuthRef
	}).(SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesPatchOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesPatch) *string { return v.RemoteNamespace }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchOutput) Server() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesServerPatch {
		return v.Server
	}).(SecretStoreSpecProviderKubernetesServerPatchPtrOutput)
}

type SecretStoreSpecProviderKubernetesPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) ToSecretStoreSpecProviderKubernetesPatchPtrOutput() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) ToSecretStoreSpecProviderKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesPatch) SecretStoreSpecProviderKubernetesPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesPatchOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) Auth() SecretStoreSpecProviderKubernetesAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderKubernetesAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) AuthRef() SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesAuthRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthRef
	}).(SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput)
}

// Remote namespace to fetch the secrets from
func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) RemoteNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesPatch) *string {
		if v == nil {
			return nil
		}
		return v.RemoteNamespace
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesPatchPtrOutput) Server() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesPatch) *SecretStoreSpecProviderKubernetesServerPatch {
		if v == nil {
			return nil
		}
		return v.Server
	}).(SecretStoreSpecProviderKubernetesServerPatchPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServer struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle   *string                                            `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderKubernetesServerCaProvider `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderKubernetesServerInput is an input type that accepts SecretStoreSpecProviderKubernetesServerArgs and SecretStoreSpecProviderKubernetesServerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerInput` via:
//
//	SecretStoreSpecProviderKubernetesServerArgs{...}
type SecretStoreSpecProviderKubernetesServerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput
	ToSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerOutput
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerArgs struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle   pulumi.StringPtrInput                                     `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderKubernetesServerCaProviderPtrInput `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderKubernetesServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerOutput)
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerArgs) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerOutput).ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerArgs, SecretStoreSpecProviderKubernetesServerPtr and SecretStoreSpecProviderKubernetesServerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput
	ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput
}

type secretStoreSpecProviderKubernetesServerPtrType SecretStoreSpecProviderKubernetesServerArgs

func SecretStoreSpecProviderKubernetesServerPtr(v *SecretStoreSpecProviderKubernetesServerArgs) SecretStoreSpecProviderKubernetesServerPtrInput {
	return (*secretStoreSpecProviderKubernetesServerPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerPtrType) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerPtrType) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerOutput() SecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServer {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerPtrOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesServerOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServerCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServer) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesServerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServer)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutput() SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) ToSecretStoreSpecProviderKubernetesServerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) SecretStoreSpecProviderKubernetesServer {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServer
		return ret
	}).(SecretStoreSpecProviderKubernetesServerOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesServerPtrOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *SecretStoreSpecProviderKubernetesServerCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServer) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProvider struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderKubernetesServerCaProviderInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderArgs and SecretStoreSpecProviderKubernetesServerCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderInput` via:
//
//	SecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
type SecretStoreSpecProviderKubernetesServerCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderKubernetesServerCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderOutput).ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderArgs, SecretStoreSpecProviderKubernetesServerCaProviderPtr and SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput
}

type secretStoreSpecProviderKubernetesServerCaProviderPtrType SecretStoreSpecProviderKubernetesServerCaProviderArgs

func SecretStoreSpecProviderKubernetesServerCaProviderPtr(v *SecretStoreSpecProviderKubernetesServerCaProviderArgs) SecretStoreSpecProviderKubernetesServerCaProviderPtrInput {
	return (*secretStoreSpecProviderKubernetesServerCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderOutput() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServerCaProvider) *SecretStoreSpecProviderKubernetesServerCaProvider {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProvider) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) SecretStoreSpecProviderKubernetesServerCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServerCaProvider
		return ret
	}).(SecretStoreSpecProviderKubernetesServerCaProviderOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderPatch struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderKubernetesServerCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs and SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs{...}
type SecretStoreSpecProviderKubernetesServerCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput).ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs, SecretStoreSpecProviderKubernetesServerCaProviderPatchPtr and SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput
}

type secretStoreSpecProviderKubernetesServerCaProviderPatchPtrType SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs

func SecretStoreSpecProviderKubernetesServerCaProviderPatchPtr(v *SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesServerCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPatchPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerCaProviderPatchPtrType) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput)
}

// see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider
type SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServerCaProviderPatch) *SecretStoreSpecProviderKubernetesServerCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) ToSecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProviderPatch) SecretStoreSpecProviderKubernetesServerCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServerCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerPatch struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle   *string                                                 `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderKubernetesServerCaProviderPatch `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderKubernetesServerPatchInput is an input type that accepts SecretStoreSpecProviderKubernetesServerPatchArgs and SecretStoreSpecProviderKubernetesServerPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerPatchInput` via:
//
//	SecretStoreSpecProviderKubernetesServerPatchArgs{...}
type SecretStoreSpecProviderKubernetesServerPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerPatchOutput() SecretStoreSpecProviderKubernetesServerPatchOutput
	ToSecretStoreSpecProviderKubernetesServerPatchOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerPatchOutput
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerPatchArgs struct {
	// CABundle is a base64-encoded CA certificate
	CaBundle   pulumi.StringPtrInput                                          `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput `pulumi:"caProvider"`
	// configures the Kubernetes server Address.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderKubernetesServerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderKubernetesServerPatchArgs) ToSecretStoreSpecProviderKubernetesServerPatchOutput() SecretStoreSpecProviderKubernetesServerPatchOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerPatchArgs) ToSecretStoreSpecProviderKubernetesServerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerPatchOutput)
}

func (i SecretStoreSpecProviderKubernetesServerPatchArgs) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutput() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderKubernetesServerPatchArgs) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerPatchOutput).ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderKubernetesServerPatchPtrInput is an input type that accepts SecretStoreSpecProviderKubernetesServerPatchArgs, SecretStoreSpecProviderKubernetesServerPatchPtr and SecretStoreSpecProviderKubernetesServerPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderKubernetesServerPatchPtrInput` via:
//
//	        SecretStoreSpecProviderKubernetesServerPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderKubernetesServerPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderKubernetesServerPatchPtrOutput() SecretStoreSpecProviderKubernetesServerPatchPtrOutput
	ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderKubernetesServerPatchPtrOutput
}

type secretStoreSpecProviderKubernetesServerPatchPtrType SecretStoreSpecProviderKubernetesServerPatchArgs

func SecretStoreSpecProviderKubernetesServerPatchPtr(v *SecretStoreSpecProviderKubernetesServerPatchArgs) SecretStoreSpecProviderKubernetesServerPatchPtrInput {
	return (*secretStoreSpecProviderKubernetesServerPatchPtrType)(v)
}

func (*secretStoreSpecProviderKubernetesServerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderKubernetesServerPatchPtrType) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutput() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderKubernetesServerPatchPtrType) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderKubernetesServerPatchPtrOutput)
}

// configures the Kubernetes server Address.
type SecretStoreSpecProviderKubernetesServerPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerPatchOutput) ToSecretStoreSpecProviderKubernetesServerPatchOutput() SecretStoreSpecProviderKubernetesServerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPatchOutput) ToSecretStoreSpecProviderKubernetesServerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPatchOutput) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutput() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o.ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderKubernetesServerPatchOutput) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderKubernetesServerPatch) *SecretStoreSpecProviderKubernetesServerPatch {
		return &v
	}).(SecretStoreSpecProviderKubernetesServerPatchPtrOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesServerPatchOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerPatch) *SecretStoreSpecProviderKubernetesServerCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderKubernetesServerPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderKubernetesServerPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderKubernetesServerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderKubernetesServerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutput() SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) ToSecretStoreSpecProviderKubernetesServerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderKubernetesServerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) Elem() SecretStoreSpecProviderKubernetesServerPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerPatch) SecretStoreSpecProviderKubernetesServerPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderKubernetesServerPatch
		return ret
	}).(SecretStoreSpecProviderKubernetesServerPatchOutput)
}

// CABundle is a base64-encoded CA certificate
func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) CaProvider() SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerPatch) *SecretStoreSpecProviderKubernetesServerCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput)
}

// configures the Kubernetes server Address.
func (o SecretStoreSpecProviderKubernetesServerPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderKubernetesServerPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbase struct {
	// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
	ApiHost *string                                 `pulumi:"apiHost"`
	Auth    *SecretStoreSpecProviderOnboardbaseAuth `pulumi:"auth"`
	// Environment is the name of an environmnent within a project to pull the secrets from
	Environment *string `pulumi:"environment"`
	// Project is an onboardbase project that the secrets should be pulled from
	Project *string `pulumi:"project"`
}

// SecretStoreSpecProviderOnboardbaseInput is an input type that accepts SecretStoreSpecProviderOnboardbaseArgs and SecretStoreSpecProviderOnboardbaseOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseInput` via:
//
//	SecretStoreSpecProviderOnboardbaseArgs{...}
type SecretStoreSpecProviderOnboardbaseInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseOutput() SecretStoreSpecProviderOnboardbaseOutput
	ToSecretStoreSpecProviderOnboardbaseOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseOutput
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbaseArgs struct {
	// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
	ApiHost pulumi.StringPtrInput                          `pulumi:"apiHost"`
	Auth    SecretStoreSpecProviderOnboardbaseAuthPtrInput `pulumi:"auth"`
	// Environment is the name of an environmnent within a project to pull the secrets from
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Project is an onboardbase project that the secrets should be pulled from
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (SecretStoreSpecProviderOnboardbaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbase)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseArgs) ToSecretStoreSpecProviderOnboardbaseOutput() SecretStoreSpecProviderOnboardbaseOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseArgs) ToSecretStoreSpecProviderOnboardbaseOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseOutput)
}

func (i SecretStoreSpecProviderOnboardbaseArgs) ToSecretStoreSpecProviderOnboardbasePtrOutput() SecretStoreSpecProviderOnboardbasePtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseArgs) ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseOutput).ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbasePtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseArgs, SecretStoreSpecProviderOnboardbasePtr and SecretStoreSpecProviderOnboardbasePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbasePtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbasePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbasePtrOutput() SecretStoreSpecProviderOnboardbasePtrOutput
	ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbasePtrOutput
}

type secretStoreSpecProviderOnboardbasePtrType SecretStoreSpecProviderOnboardbaseArgs

func SecretStoreSpecProviderOnboardbasePtr(v *SecretStoreSpecProviderOnboardbaseArgs) SecretStoreSpecProviderOnboardbasePtrInput {
	return (*secretStoreSpecProviderOnboardbasePtrType)(v)
}

func (*secretStoreSpecProviderOnboardbasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbase)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbasePtrType) ToSecretStoreSpecProviderOnboardbasePtrOutput() SecretStoreSpecProviderOnboardbasePtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbasePtrType) ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbasePtrOutput)
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbaseOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbase)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseOutput) ToSecretStoreSpecProviderOnboardbaseOutput() SecretStoreSpecProviderOnboardbaseOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseOutput) ToSecretStoreSpecProviderOnboardbaseOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseOutput) ToSecretStoreSpecProviderOnboardbasePtrOutput() SecretStoreSpecProviderOnboardbasePtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseOutput) ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbase) *SecretStoreSpecProviderOnboardbase {
		return &v
	}).(SecretStoreSpecProviderOnboardbasePtrOutput)
}

// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
func (o SecretStoreSpecProviderOnboardbaseOutput) ApiHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbase) *string { return v.ApiHost }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseOutput) Auth() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbase) *SecretStoreSpecProviderOnboardbaseAuth { return v.Auth }).(SecretStoreSpecProviderOnboardbaseAuthPtrOutput)
}

// Environment is the name of an environmnent within a project to pull the secrets from
func (o SecretStoreSpecProviderOnboardbaseOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbase) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Project is an onboardbase project that the secrets should be pulled from
func (o SecretStoreSpecProviderOnboardbaseOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbase) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbasePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbase)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbasePtrOutput) ToSecretStoreSpecProviderOnboardbasePtrOutput() SecretStoreSpecProviderOnboardbasePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePtrOutput) ToSecretStoreSpecProviderOnboardbasePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePtrOutput) Elem() SecretStoreSpecProviderOnboardbaseOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbase) SecretStoreSpecProviderOnboardbase {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbase
		return ret
	}).(SecretStoreSpecProviderOnboardbaseOutput)
}

// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
func (o SecretStoreSpecProviderOnboardbasePtrOutput) ApiHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbase) *string {
		if v == nil {
			return nil
		}
		return v.ApiHost
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbasePtrOutput) Auth() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbase) *SecretStoreSpecProviderOnboardbaseAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOnboardbaseAuthPtrOutput)
}

// Environment is the name of an environmnent within a project to pull the secrets from
func (o SecretStoreSpecProviderOnboardbasePtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbase) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Project is an onboardbase project that the secrets should be pulled from
func (o SecretStoreSpecProviderOnboardbasePtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbase) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuth struct {
	ApiKeyRef   *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef   `pulumi:"apiKeyRef"`
	PasscodeRef *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef `pulumi:"passcodeRef"`
}

// SecretStoreSpecProviderOnboardbaseAuthInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthArgs and SecretStoreSpecProviderOnboardbaseAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthOutput() SecretStoreSpecProviderOnboardbaseAuthOutput
	ToSecretStoreSpecProviderOnboardbaseAuthOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthOutput
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuthArgs struct {
	ApiKeyRef   SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput   `pulumi:"apiKeyRef"`
	PasscodeRef SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput `pulumi:"passcodeRef"`
}

func (SecretStoreSpecProviderOnboardbaseAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthArgs) ToSecretStoreSpecProviderOnboardbaseAuthOutput() SecretStoreSpecProviderOnboardbaseAuthOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthArgs) ToSecretStoreSpecProviderOnboardbaseAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthArgs) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthArgs) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthOutput).ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthArgs, SecretStoreSpecProviderOnboardbaseAuthPtr and SecretStoreSpecProviderOnboardbaseAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthPtrType SecretStoreSpecProviderOnboardbaseAuthArgs

func SecretStoreSpecProviderOnboardbaseAuthPtr(v *SecretStoreSpecProviderOnboardbaseAuthArgs) SecretStoreSpecProviderOnboardbaseAuthPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPtrOutput)
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) ToSecretStoreSpecProviderOnboardbaseAuthOutput() SecretStoreSpecProviderOnboardbaseAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) ToSecretStoreSpecProviderOnboardbaseAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuth) *SecretStoreSpecProviderOnboardbaseAuth {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) ApiKeyRef() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuth) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef {
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthOutput) PasscodeRef() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuth) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef {
		return v.PasscodeRef
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuth) SecretStoreSpecProviderOnboardbaseAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuth
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPtrOutput) ApiKeyRef() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuth) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef {
		if v == nil {
			return nil
		}
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPtrOutput) PasscodeRef() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuth) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef {
		if v == nil {
			return nil
		}
		return v.PasscodeRef
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput)
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnboardbaseAuthApiKeyRefInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs and SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthApiKeyRefInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput
	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput).ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs, SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtr and SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrType SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs

func SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtr(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthApiKeyRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrType) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrType) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput)
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthApiKeyRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) SecretStoreSpecProviderOnboardbaseAuthApiKeyRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuthApiKeyRef
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs and SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput
	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput).ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs, SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtr and SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrType SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs

func SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtr(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput)
}

// OnboardbaseAPIKey is the APIKey generated by an admin account.
// It is used to recognize and authorize access to a project and environment within onboardbase
type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnboardbaseAuthPasscodeRefInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs and SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPasscodeRefInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput).ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs, SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtr and SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrType SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs

func SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtr(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPasscodeRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput)
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPasscodeRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) SecretStoreSpecProviderOnboardbaseAuthPasscodeRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuthPasscodeRef
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs and SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput).ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs, SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtr and SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrType SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs

func SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtr(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput)
}

// OnboardbasePasscode is the passcode attached to the API Key
type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuthPatch struct {
	ApiKeyRef   *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch   `pulumi:"apiKeyRef"`
	PasscodeRef *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch `pulumi:"passcodeRef"`
}

// SecretStoreSpecProviderOnboardbaseAuthPatchInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPatchArgs and SecretStoreSpecProviderOnboardbaseAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPatchInput` via:
//
//	SecretStoreSpecProviderOnboardbaseAuthPatchArgs{...}
type SecretStoreSpecProviderOnboardbaseAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPatchOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchOutput
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuthPatchArgs struct {
	ApiKeyRef   SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput   `pulumi:"apiKeyRef"`
	PasscodeRef SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput `pulumi:"passcodeRef"`
}

func (SecretStoreSpecProviderOnboardbaseAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbaseAuthPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPatchOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPatchOutput)
}

func (i SecretStoreSpecProviderOnboardbaseAuthPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbaseAuthPatchArgs) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPatchOutput).ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbaseAuthPatchArgs, SecretStoreSpecProviderOnboardbaseAuthPatchPtr and SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbaseAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput
	ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput
}

type secretStoreSpecProviderOnboardbaseAuthPatchPtrType SecretStoreSpecProviderOnboardbaseAuthPatchArgs

func SecretStoreSpecProviderOnboardbaseAuthPatchPtr(v *SecretStoreSpecProviderOnboardbaseAuthPatchArgs) SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput {
	return (*secretStoreSpecProviderOnboardbaseAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbaseAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbaseAuthPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbaseAuthPatchPtrType) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput)
}

// Auth configures how the Operator authenticates with the Onboardbase API
type SecretStoreSpecProviderOnboardbaseAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchOutput() SecretStoreSpecProviderOnboardbaseAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbaseAuthPatch) *SecretStoreSpecProviderOnboardbaseAuthPatch {
		return &v
	}).(SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) ApiKeyRef() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPatch) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch {
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchOutput) PasscodeRef() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbaseAuthPatch) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch {
		return v.PasscodeRef
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput)
}

type SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbaseAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) ToSecretStoreSpecProviderOnboardbaseAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) Elem() SecretStoreSpecProviderOnboardbaseAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPatch) SecretStoreSpecProviderOnboardbaseAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbaseAuthPatch
		return ret
	}).(SecretStoreSpecProviderOnboardbaseAuthPatchOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) ApiKeyRef() SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPatch) *SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatch {
		if v == nil {
			return nil
		}
		return v.ApiKeyRef
	}).(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput) PasscodeRef() SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbaseAuthPatch) *SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatch {
		if v == nil {
			return nil
		}
		return v.PasscodeRef
	}).(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput)
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbasePatch struct {
	// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
	ApiHost *string                                      `pulumi:"apiHost"`
	Auth    *SecretStoreSpecProviderOnboardbaseAuthPatch `pulumi:"auth"`
	// Environment is the name of an environmnent within a project to pull the secrets from
	Environment *string `pulumi:"environment"`
	// Project is an onboardbase project that the secrets should be pulled from
	Project *string `pulumi:"project"`
}

// SecretStoreSpecProviderOnboardbasePatchInput is an input type that accepts SecretStoreSpecProviderOnboardbasePatchArgs and SecretStoreSpecProviderOnboardbasePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbasePatchInput` via:
//
//	SecretStoreSpecProviderOnboardbasePatchArgs{...}
type SecretStoreSpecProviderOnboardbasePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbasePatchOutput() SecretStoreSpecProviderOnboardbasePatchOutput
	ToSecretStoreSpecProviderOnboardbasePatchOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbasePatchOutput
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbasePatchArgs struct {
	// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
	ApiHost pulumi.StringPtrInput                               `pulumi:"apiHost"`
	Auth    SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput `pulumi:"auth"`
	// Environment is the name of an environmnent within a project to pull the secrets from
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Project is an onboardbase project that the secrets should be pulled from
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (SecretStoreSpecProviderOnboardbasePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbasePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnboardbasePatchArgs) ToSecretStoreSpecProviderOnboardbasePatchOutput() SecretStoreSpecProviderOnboardbasePatchOutput {
	return i.ToSecretStoreSpecProviderOnboardbasePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbasePatchArgs) ToSecretStoreSpecProviderOnboardbasePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbasePatchOutput)
}

func (i SecretStoreSpecProviderOnboardbasePatchArgs) ToSecretStoreSpecProviderOnboardbasePatchPtrOutput() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnboardbasePatchArgs) ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbasePatchOutput).ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnboardbasePatchPtrInput is an input type that accepts SecretStoreSpecProviderOnboardbasePatchArgs, SecretStoreSpecProviderOnboardbasePatchPtr and SecretStoreSpecProviderOnboardbasePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnboardbasePatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnboardbasePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnboardbasePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnboardbasePatchPtrOutput() SecretStoreSpecProviderOnboardbasePatchPtrOutput
	ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnboardbasePatchPtrOutput
}

type secretStoreSpecProviderOnboardbasePatchPtrType SecretStoreSpecProviderOnboardbasePatchArgs

func SecretStoreSpecProviderOnboardbasePatchPtr(v *SecretStoreSpecProviderOnboardbasePatchArgs) SecretStoreSpecProviderOnboardbasePatchPtrInput {
	return (*secretStoreSpecProviderOnboardbasePatchPtrType)(v)
}

func (*secretStoreSpecProviderOnboardbasePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbasePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnboardbasePatchPtrType) ToSecretStoreSpecProviderOnboardbasePatchPtrOutput() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnboardbasePatchPtrType) ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnboardbasePatchPtrOutput)
}

// Onboardbase configures this store to sync secrets using the Onboardbase provider
type SecretStoreSpecProviderOnboardbasePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbasePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnboardbasePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbasePatchOutput) ToSecretStoreSpecProviderOnboardbasePatchOutput() SecretStoreSpecProviderOnboardbasePatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePatchOutput) ToSecretStoreSpecProviderOnboardbasePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePatchOutput) ToSecretStoreSpecProviderOnboardbasePatchPtrOutput() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnboardbasePatchOutput) ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnboardbasePatch) *SecretStoreSpecProviderOnboardbasePatch {
		return &v
	}).(SecretStoreSpecProviderOnboardbasePatchPtrOutput)
}

// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
func (o SecretStoreSpecProviderOnboardbasePatchOutput) ApiHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbasePatch) *string { return v.ApiHost }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbasePatchOutput) Auth() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbasePatch) *SecretStoreSpecProviderOnboardbaseAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput)
}

// Environment is the name of an environmnent within a project to pull the secrets from
func (o SecretStoreSpecProviderOnboardbasePatchOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbasePatch) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Project is an onboardbase project that the secrets should be pulled from
func (o SecretStoreSpecProviderOnboardbasePatchOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnboardbasePatch) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnboardbasePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnboardbasePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnboardbasePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) ToSecretStoreSpecProviderOnboardbasePatchPtrOutput() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) ToSecretStoreSpecProviderOnboardbasePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) Elem() SecretStoreSpecProviderOnboardbasePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbasePatch) SecretStoreSpecProviderOnboardbasePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnboardbasePatch
		return ret
	}).(SecretStoreSpecProviderOnboardbasePatchOutput)
}

// APIHost use this to configure the host url for the API for selfhosted installation, default is https://public.onboardbase.com/api/v1/
func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) ApiHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbasePatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiHost
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) Auth() SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbasePatch) *SecretStoreSpecProviderOnboardbaseAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput)
}

// Environment is the name of an environmnent within a project to pull the secrets from
func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbasePatch) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Project is an onboardbase project that the secrets should be pulled from
func (o SecretStoreSpecProviderOnboardbasePatchPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnboardbasePatch) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepassword struct {
	Auth *SecretStoreSpecProviderOnepasswordAuth `pulumi:"auth"`
	// ConnectHost defines the OnePassword Connect Server to connect to
	ConnectHost *string `pulumi:"connectHost"`
	// Vaults defines which OnePassword vaults to search in which order
	Vaults map[string]int `pulumi:"vaults"`
}

// SecretStoreSpecProviderOnepasswordInput is an input type that accepts SecretStoreSpecProviderOnepasswordArgs and SecretStoreSpecProviderOnepasswordOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordInput` via:
//
//	SecretStoreSpecProviderOnepasswordArgs{...}
type SecretStoreSpecProviderOnepasswordInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordOutput() SecretStoreSpecProviderOnepasswordOutput
	ToSecretStoreSpecProviderOnepasswordOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordOutput
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepasswordArgs struct {
	Auth SecretStoreSpecProviderOnepasswordAuthPtrInput `pulumi:"auth"`
	// ConnectHost defines the OnePassword Connect Server to connect to
	ConnectHost pulumi.StringPtrInput `pulumi:"connectHost"`
	// Vaults defines which OnePassword vaults to search in which order
	Vaults pulumi.IntMapInput `pulumi:"vaults"`
}

func (SecretStoreSpecProviderOnepasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepassword)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordArgs) ToSecretStoreSpecProviderOnepasswordOutput() SecretStoreSpecProviderOnepasswordOutput {
	return i.ToSecretStoreSpecProviderOnepasswordOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordArgs) ToSecretStoreSpecProviderOnepasswordOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordOutput)
}

func (i SecretStoreSpecProviderOnepasswordArgs) ToSecretStoreSpecProviderOnepasswordPtrOutput() SecretStoreSpecProviderOnepasswordPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordArgs) ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordOutput).ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordArgs, SecretStoreSpecProviderOnepasswordPtr and SecretStoreSpecProviderOnepasswordPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordPtrOutput() SecretStoreSpecProviderOnepasswordPtrOutput
	ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordPtrOutput
}

type secretStoreSpecProviderOnepasswordPtrType SecretStoreSpecProviderOnepasswordArgs

func SecretStoreSpecProviderOnepasswordPtr(v *SecretStoreSpecProviderOnepasswordArgs) SecretStoreSpecProviderOnepasswordPtrInput {
	return (*secretStoreSpecProviderOnepasswordPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepassword)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordPtrType) ToSecretStoreSpecProviderOnepasswordPtrOutput() SecretStoreSpecProviderOnepasswordPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordPtrType) ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordPtrOutput)
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepasswordOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepassword)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordOutput) ToSecretStoreSpecProviderOnepasswordOutput() SecretStoreSpecProviderOnepasswordOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordOutput) ToSecretStoreSpecProviderOnepasswordOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordOutput) ToSecretStoreSpecProviderOnepasswordPtrOutput() SecretStoreSpecProviderOnepasswordPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordOutput) ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepassword) *SecretStoreSpecProviderOnepassword {
		return &v
	}).(SecretStoreSpecProviderOnepasswordPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordOutput) Auth() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepassword) *SecretStoreSpecProviderOnepasswordAuth { return v.Auth }).(SecretStoreSpecProviderOnepasswordAuthPtrOutput)
}

// ConnectHost defines the OnePassword Connect Server to connect to
func (o SecretStoreSpecProviderOnepasswordOutput) ConnectHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepassword) *string { return v.ConnectHost }).(pulumi.StringPtrOutput)
}

// Vaults defines which OnePassword vaults to search in which order
func (o SecretStoreSpecProviderOnepasswordOutput) Vaults() pulumi.IntMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepassword) map[string]int { return v.Vaults }).(pulumi.IntMapOutput)
}

type SecretStoreSpecProviderOnepasswordPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepassword)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordPtrOutput) ToSecretStoreSpecProviderOnepasswordPtrOutput() SecretStoreSpecProviderOnepasswordPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPtrOutput) ToSecretStoreSpecProviderOnepasswordPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPtrOutput) Elem() SecretStoreSpecProviderOnepasswordOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepassword) SecretStoreSpecProviderOnepassword {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepassword
		return ret
	}).(SecretStoreSpecProviderOnepasswordOutput)
}

func (o SecretStoreSpecProviderOnepasswordPtrOutput) Auth() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepassword) *SecretStoreSpecProviderOnepasswordAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOnepasswordAuthPtrOutput)
}

// ConnectHost defines the OnePassword Connect Server to connect to
func (o SecretStoreSpecProviderOnepasswordPtrOutput) ConnectHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepassword) *string {
		if v == nil {
			return nil
		}
		return v.ConnectHost
	}).(pulumi.StringPtrOutput)
}

// Vaults defines which OnePassword vaults to search in which order
func (o SecretStoreSpecProviderOnepasswordPtrOutput) Vaults() pulumi.IntMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepassword) map[string]int {
		if v == nil {
			return nil
		}
		return v.Vaults
	}).(pulumi.IntMapOutput)
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuth struct {
	SecretRef *SecretStoreSpecProviderOnepasswordAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderOnepasswordAuthInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthArgs and SecretStoreSpecProviderOnepasswordAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthArgs{...}
type SecretStoreSpecProviderOnepasswordAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthOutput() SecretStoreSpecProviderOnepasswordAuthOutput
	ToSecretStoreSpecProviderOnepasswordAuthOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthOutput
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuthArgs struct {
	SecretRef SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderOnepasswordAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthArgs) ToSecretStoreSpecProviderOnepasswordAuthOutput() SecretStoreSpecProviderOnepasswordAuthOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthArgs) ToSecretStoreSpecProviderOnepasswordAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthArgs) ToSecretStoreSpecProviderOnepasswordAuthPtrOutput() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthArgs) ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthOutput).ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthArgs, SecretStoreSpecProviderOnepasswordAuthPtr and SecretStoreSpecProviderOnepasswordAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthPtrOutput() SecretStoreSpecProviderOnepasswordAuthPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthPtrType SecretStoreSpecProviderOnepasswordAuthArgs

func SecretStoreSpecProviderOnepasswordAuthPtr(v *SecretStoreSpecProviderOnepasswordAuthArgs) SecretStoreSpecProviderOnepasswordAuthPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthPtrType) ToSecretStoreSpecProviderOnepasswordAuthPtrOutput() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthPtrType) ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthOutput) ToSecretStoreSpecProviderOnepasswordAuthOutput() SecretStoreSpecProviderOnepasswordAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthOutput) ToSecretStoreSpecProviderOnepasswordAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthOutput) ToSecretStoreSpecProviderOnepasswordAuthPtrOutput() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthOutput) ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuth) *SecretStoreSpecProviderOnepasswordAuth {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthOutput) SecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuth) *SecretStoreSpecProviderOnepasswordAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthPtrOutput() SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuth) SecretStoreSpecProviderOnepasswordAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuth
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthPtrOutput) SecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuth) *SecretStoreSpecProviderOnepasswordAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput)
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuthPatch struct {
	SecretRef *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderOnepasswordAuthPatchInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthPatchArgs and SecretStoreSpecProviderOnepasswordAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthPatchInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthPatchArgs{...}
type SecretStoreSpecProviderOnepasswordAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthPatchOutput() SecretStoreSpecProviderOnepasswordAuthPatchOutput
	ToSecretStoreSpecProviderOnepasswordAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthPatchOutput
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderOnepasswordAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthPatchOutput() SecretStoreSpecProviderOnepasswordAuthPatchOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthPatchOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthPatchOutput).ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthPatchArgs, SecretStoreSpecProviderOnepasswordAuthPatchPtr and SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthPatchPtrType SecretStoreSpecProviderOnepasswordAuthPatchArgs

func SecretStoreSpecProviderOnepasswordAuthPatchPtr(v *SecretStoreSpecProviderOnepasswordAuthPatchArgs) SecretStoreSpecProviderOnepasswordAuthPatchPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against OnePassword Connect Server
type SecretStoreSpecProviderOnepasswordAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchOutput() SecretStoreSpecProviderOnepasswordAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuthPatch) *SecretStoreSpecProviderOnepasswordAuthPatch {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchOutput) SecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthPatch) SecretStoreSpecProviderOnepasswordAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuthPatch
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthPatchOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput)
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRef struct {
	ConnectTokenSecretRef *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef `pulumi:"connectTokenSecretRef"`
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefArgs and SecretStoreSpecProviderOnepasswordAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthSecretRefArgs{...}
type SecretStoreSpecProviderOnepasswordAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefOutput
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRefArgs struct {
	ConnectTokenSecretRef SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput `pulumi:"connectTokenSecretRef"`
}

func (SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefOutput).ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefArgs, SecretStoreSpecProviderOnepasswordAuthSecretRefPtr and SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthSecretRefPtrType SecretStoreSpecProviderOnepasswordAuthSecretRefArgs

func SecretStoreSpecProviderOnepasswordAuthSecretRefPtr(v *SecretStoreSpecProviderOnepasswordAuthSecretRefArgs) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput)
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuthSecretRef) *SecretStoreSpecProviderOnepasswordAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefOutput) ConnectTokenSecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRef) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef {
		return v.ConnectTokenSecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRef) SecretStoreSpecProviderOnepasswordAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput) ConnectTokenSecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRef) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.ConnectTokenSecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput)
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs and SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs{...}
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput).ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs, SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtr and SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrType SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs

func SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtr(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput)
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs and SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs{...}
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput).ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs, SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtr and SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrType SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs

func SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtr(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput)
}

// The ConnectToken is used for authentication to a 1Password Connect Server.
type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRefPatch struct {
	ConnectTokenSecretRef *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch `pulumi:"connectTokenSecretRef"`
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs and SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderOnepasswordAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs struct {
	ConnectTokenSecretRef SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput `pulumi:"connectTokenSecretRef"`
}

func (SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput).ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs, SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtr and SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrType SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs

func SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtr(v *SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput)
}

// OnePasswordAuthSecretRef holds secret references for 1Password credentials.
type SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordAuthSecretRefPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput) ConnectTokenSecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordAuthSecretRefPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch {
		return v.ConnectTokenSecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch) SecretStoreSpecProviderOnepasswordAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput) ConnectTokenSecretRef() SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordAuthSecretRefPatch) *SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.ConnectTokenSecretRef
	}).(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput)
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepasswordPatch struct {
	Auth *SecretStoreSpecProviderOnepasswordAuthPatch `pulumi:"auth"`
	// ConnectHost defines the OnePassword Connect Server to connect to
	ConnectHost *string `pulumi:"connectHost"`
	// Vaults defines which OnePassword vaults to search in which order
	Vaults map[string]int `pulumi:"vaults"`
}

// SecretStoreSpecProviderOnepasswordPatchInput is an input type that accepts SecretStoreSpecProviderOnepasswordPatchArgs and SecretStoreSpecProviderOnepasswordPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordPatchInput` via:
//
//	SecretStoreSpecProviderOnepasswordPatchArgs{...}
type SecretStoreSpecProviderOnepasswordPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordPatchOutput() SecretStoreSpecProviderOnepasswordPatchOutput
	ToSecretStoreSpecProviderOnepasswordPatchOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordPatchOutput
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepasswordPatchArgs struct {
	Auth SecretStoreSpecProviderOnepasswordAuthPatchPtrInput `pulumi:"auth"`
	// ConnectHost defines the OnePassword Connect Server to connect to
	ConnectHost pulumi.StringPtrInput `pulumi:"connectHost"`
	// Vaults defines which OnePassword vaults to search in which order
	Vaults pulumi.IntMapInput `pulumi:"vaults"`
}

func (SecretStoreSpecProviderOnepasswordPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOnepasswordPatchArgs) ToSecretStoreSpecProviderOnepasswordPatchOutput() SecretStoreSpecProviderOnepasswordPatchOutput {
	return i.ToSecretStoreSpecProviderOnepasswordPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordPatchArgs) ToSecretStoreSpecProviderOnepasswordPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordPatchOutput)
}

func (i SecretStoreSpecProviderOnepasswordPatchArgs) ToSecretStoreSpecProviderOnepasswordPatchPtrOutput() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOnepasswordPatchArgs) ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordPatchOutput).ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOnepasswordPatchPtrInput is an input type that accepts SecretStoreSpecProviderOnepasswordPatchArgs, SecretStoreSpecProviderOnepasswordPatchPtr and SecretStoreSpecProviderOnepasswordPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOnepasswordPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOnepasswordPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOnepasswordPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOnepasswordPatchPtrOutput() SecretStoreSpecProviderOnepasswordPatchPtrOutput
	ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOnepasswordPatchPtrOutput
}

type secretStoreSpecProviderOnepasswordPatchPtrType SecretStoreSpecProviderOnepasswordPatchArgs

func SecretStoreSpecProviderOnepasswordPatchPtr(v *SecretStoreSpecProviderOnepasswordPatchArgs) SecretStoreSpecProviderOnepasswordPatchPtrInput {
	return (*secretStoreSpecProviderOnepasswordPatchPtrType)(v)
}

func (*secretStoreSpecProviderOnepasswordPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOnepasswordPatchPtrType) ToSecretStoreSpecProviderOnepasswordPatchPtrOutput() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOnepasswordPatchPtrType) ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOnepasswordPatchPtrOutput)
}

// OnePassword configures this store to sync secrets using the 1Password Cloud provider
type SecretStoreSpecProviderOnepasswordPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOnepasswordPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordPatchOutput) ToSecretStoreSpecProviderOnepasswordPatchOutput() SecretStoreSpecProviderOnepasswordPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPatchOutput) ToSecretStoreSpecProviderOnepasswordPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPatchOutput) ToSecretStoreSpecProviderOnepasswordPatchPtrOutput() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOnepasswordPatchOutput) ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOnepasswordPatch) *SecretStoreSpecProviderOnepasswordPatch {
		return &v
	}).(SecretStoreSpecProviderOnepasswordPatchPtrOutput)
}

func (o SecretStoreSpecProviderOnepasswordPatchOutput) Auth() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordPatch) *SecretStoreSpecProviderOnepasswordAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput)
}

// ConnectHost defines the OnePassword Connect Server to connect to
func (o SecretStoreSpecProviderOnepasswordPatchOutput) ConnectHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordPatch) *string { return v.ConnectHost }).(pulumi.StringPtrOutput)
}

// Vaults defines which OnePassword vaults to search in which order
func (o SecretStoreSpecProviderOnepasswordPatchOutput) Vaults() pulumi.IntMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOnepasswordPatch) map[string]int { return v.Vaults }).(pulumi.IntMapOutput)
}

type SecretStoreSpecProviderOnepasswordPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOnepasswordPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOnepasswordPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordPatchPtrOutput() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) ToSecretStoreSpecProviderOnepasswordPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) Elem() SecretStoreSpecProviderOnepasswordPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordPatch) SecretStoreSpecProviderOnepasswordPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOnepasswordPatch
		return ret
	}).(SecretStoreSpecProviderOnepasswordPatchOutput)
}

func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) Auth() SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordPatch) *SecretStoreSpecProviderOnepasswordAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput)
}

// ConnectHost defines the OnePassword Connect Server to connect to
func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) ConnectHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordPatch) *string {
		if v == nil {
			return nil
		}
		return v.ConnectHost
	}).(pulumi.StringPtrOutput)
}

// Vaults defines which OnePassword vaults to search in which order
func (o SecretStoreSpecProviderOnepasswordPatchPtrOutput) Vaults() pulumi.IntMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOnepasswordPatch) map[string]int {
		if v == nil {
			return nil
		}
		return v.Vaults
	}).(pulumi.IntMapOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracle struct {
	Auth *SecretStoreSpecProviderOracleAuth `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment *string `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType *string `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region            *string                                         `pulumi:"region"`
	ServiceAccountRef *SecretStoreSpecProviderOracleServiceAccountRef `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault *string `pulumi:"vault"`
}

// SecretStoreSpecProviderOracleInput is an input type that accepts SecretStoreSpecProviderOracleArgs and SecretStoreSpecProviderOracleOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleInput` via:
//
//	SecretStoreSpecProviderOracleArgs{...}
type SecretStoreSpecProviderOracleInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput
	ToSecretStoreSpecProviderOracleOutputWithContext(context.Context) SecretStoreSpecProviderOracleOutput
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracleArgs struct {
	Auth SecretStoreSpecProviderOracleAuthPtrInput `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment pulumi.StringPtrInput `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region            pulumi.StringPtrInput                                  `pulumi:"region"`
	ServiceAccountRef SecretStoreSpecProviderOracleServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault pulumi.StringPtrInput `pulumi:"vault"`
}

func (SecretStoreSpecProviderOracleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput {
	return i.ToSecretStoreSpecProviderOracleOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleOutput)
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return i.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleArgs) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleOutput).ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOraclePtrInput is an input type that accepts SecretStoreSpecProviderOracleArgs, SecretStoreSpecProviderOraclePtr and SecretStoreSpecProviderOraclePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOraclePtrInput` via:
//
//	        SecretStoreSpecProviderOracleArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOraclePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput
	ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Context) SecretStoreSpecProviderOraclePtrOutput
}

type secretStoreSpecProviderOraclePtrType SecretStoreSpecProviderOracleArgs

func SecretStoreSpecProviderOraclePtr(v *SecretStoreSpecProviderOracleArgs) SecretStoreSpecProviderOraclePtrInput {
	return (*secretStoreSpecProviderOraclePtrType)(v)
}

func (*secretStoreSpecProviderOraclePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (i *secretStoreSpecProviderOraclePtrType) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return i.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOraclePtrType) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOraclePtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOracleOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOracleOutput() SecretStoreSpecProviderOracleOutput {
	return o
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOracleOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleOutput {
	return o
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return o.ToSecretStoreSpecProviderOraclePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleOutput) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracle {
		return &v
	}).(SecretStoreSpecProviderOraclePtrOutput)
}

func (o SecretStoreSpecProviderOracleOutput) Auth() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleAuth { return v.Auth }).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOracleOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.Compartment }).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOracleOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOracleOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOracleOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOracleOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOracleOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracle) *string { return v.Vault }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOraclePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOraclePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracle)(nil)).Elem()
}

func (o SecretStoreSpecProviderOraclePtrOutput) ToSecretStoreSpecProviderOraclePtrOutput() SecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePtrOutput) ToSecretStoreSpecProviderOraclePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePtrOutput) Elem() SecretStoreSpecProviderOracleOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) SecretStoreSpecProviderOracle {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracle
		return ret
	}).(SecretStoreSpecProviderOracleOutput)
}

func (o SecretStoreSpecProviderOraclePtrOutput) Auth() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePtrOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.Compartment
	}).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOraclePtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOraclePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOraclePtrOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *SecretStoreSpecProviderOracleServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOraclePtrOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracle) *string {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuth struct {
	SecretRef *SecretStoreSpecProviderOracleAuthSecretRef `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy *string `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User *string `pulumi:"user"`
}

// SecretStoreSpecProviderOracleAuthInput is an input type that accepts SecretStoreSpecProviderOracleAuthArgs and SecretStoreSpecProviderOracleAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthInput` via:
//
//	SecretStoreSpecProviderOracleAuthArgs{...}
type SecretStoreSpecProviderOracleAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput
	ToSecretStoreSpecProviderOracleAuthOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthOutput
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuthArgs struct {
	SecretRef SecretStoreSpecProviderOracleAuthSecretRefPtrInput `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (SecretStoreSpecProviderOracleAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput {
	return i.ToSecretStoreSpecProviderOracleAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthOutput)
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthArgs) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthOutput).ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthArgs, SecretStoreSpecProviderOracleAuthPtr and SecretStoreSpecProviderOracleAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput
	ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthPtrOutput
}

type secretStoreSpecProviderOracleAuthPtrType SecretStoreSpecProviderOracleAuthArgs

func SecretStoreSpecProviderOracleAuthPtr(v *SecretStoreSpecProviderOracleAuthArgs) SecretStoreSpecProviderOracleAuthPtrInput {
	return (*secretStoreSpecProviderOracleAuthPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthPtrType) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthPtrType) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthOutput() SecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthOutput) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuth) *SecretStoreSpecProviderOracleAuth {
		return &v
	}).(SecretStoreSpecProviderOracleAuthPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) *SecretStoreSpecProviderOracleAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuth) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) ToSecretStoreSpecProviderOracleAuthPtrOutput() SecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) ToSecretStoreSpecProviderOracleAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) Elem() SecretStoreSpecProviderOracleAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) SecretStoreSpecProviderOracleAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuth
		return ret
	}).(SecretStoreSpecProviderOracleAuthOutput)
}

func (o SecretStoreSpecProviderOracleAuthPtrOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *SecretStoreSpecProviderOracleAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuth) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuthPatch struct {
	SecretRef *SecretStoreSpecProviderOracleAuthSecretRefPatch `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy *string `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User *string `pulumi:"user"`
}

// SecretStoreSpecProviderOracleAuthPatchInput is an input type that accepts SecretStoreSpecProviderOracleAuthPatchArgs and SecretStoreSpecProviderOracleAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthPatchInput` via:
//
//	SecretStoreSpecProviderOracleAuthPatchArgs{...}
type SecretStoreSpecProviderOracleAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthPatchOutput() SecretStoreSpecProviderOracleAuthPatchOutput
	ToSecretStoreSpecProviderOracleAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthPatchOutput
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
	// Tenancy is the tenancy OCID where user is located.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
	// User is an access OCID specific to the account.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (SecretStoreSpecProviderOracleAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthPatchArgs) ToSecretStoreSpecProviderOracleAuthPatchOutput() SecretStoreSpecProviderOracleAuthPatchOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthPatchArgs) ToSecretStoreSpecProviderOracleAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthPatchOutput)
}

func (i SecretStoreSpecProviderOracleAuthPatchArgs) ToSecretStoreSpecProviderOracleAuthPatchPtrOutput() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthPatchArgs) ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthPatchOutput).ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthPatchArgs, SecretStoreSpecProviderOracleAuthPatchPtr and SecretStoreSpecProviderOracleAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthPatchPtrOutput() SecretStoreSpecProviderOracleAuthPatchPtrOutput
	ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthPatchPtrOutput
}

type secretStoreSpecProviderOracleAuthPatchPtrType SecretStoreSpecProviderOracleAuthPatchArgs

func SecretStoreSpecProviderOracleAuthPatchPtr(v *SecretStoreSpecProviderOracleAuthPatchArgs) SecretStoreSpecProviderOracleAuthPatchPtrInput {
	return (*secretStoreSpecProviderOracleAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthPatchPtrType) ToSecretStoreSpecProviderOracleAuthPatchPtrOutput() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthPatchPtrType) ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with the Oracle Vault.
// If empty, use the instance principal, otherwise the user credentials specified in Auth.
type SecretStoreSpecProviderOracleAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthPatchOutput) ToSecretStoreSpecProviderOracleAuthPatchOutput() SecretStoreSpecProviderOracleAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPatchOutput) ToSecretStoreSpecProviderOracleAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPatchOutput) ToSecretStoreSpecProviderOracleAuthPatchPtrOutput() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthPatchOutput) ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthPatch) *SecretStoreSpecProviderOracleAuthPatch {
		return &v
	}).(SecretStoreSpecProviderOracleAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthPatchOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthPatch) *SecretStoreSpecProviderOracleAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthPatchOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthPatch) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthPatchOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthPatch) *string { return v.User }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthPatchPtrOutput() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) Elem() SecretStoreSpecProviderOracleAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthPatch) SecretStoreSpecProviderOracleAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthPatch
		return ret
	}).(SecretStoreSpecProviderOracleAuthPatchOutput)
}

func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthPatch) *SecretStoreSpecProviderOracleAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput)
}

// Tenancy is the tenancy OCID where user is located.
func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Tenancy
	}).(pulumi.StringPtrOutput)
}

// User is an access OCID specific to the account.
func (o SecretStoreSpecProviderOracleAuthPatchPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRef struct {
	Fingerprint *SecretStoreSpecProviderOracleAuthSecretRefFingerprint `pulumi:"fingerprint"`
	Privatekey  *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey  `pulumi:"privatekey"`
}

// SecretStoreSpecProviderOracleAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefArgs and SecretStoreSpecProviderOracleAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefArgs struct {
	Fingerprint SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput `pulumi:"fingerprint"`
	Privatekey  SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput  `pulumi:"privatekey"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefArgs, SecretStoreSpecProviderOracleAuthSecretRefPtr and SecretStoreSpecProviderOracleAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPtrType SecretStoreSpecProviderOracleAuthSecretRefArgs

func SecretStoreSpecProviderOracleAuthSecretRefPtr(v *SecretStoreSpecProviderOracleAuthSecretRefArgs) SecretStoreSpecProviderOracleAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefOutput() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) SecretStoreSpecProviderOracleAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v == nil {
			return nil
		}
		return v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPtrOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRef) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v == nil {
			return nil
		}
		return v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprint struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs and SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput).ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs, SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr and SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs

func SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtr(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprint)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) SecretStoreSpecProviderOracleAuthSecretRefFingerprint {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefFingerprint
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprint) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs and SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput).ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs, SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtr and SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrType SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs

func SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtr(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput)
}

// Fingerprint is the fingerprint of the API private key.
type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefPatch struct {
	Fingerprint *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch `pulumi:"fingerprint"`
	Privatekey  *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch  `pulumi:"privatekey"`
}

// SecretStoreSpecProviderOracleAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPatchArgs and SecretStoreSpecProviderOracleAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchOutput
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefPatchArgs struct {
	Fingerprint SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput `pulumi:"fingerprint"`
	Privatekey  SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput  `pulumi:"privatekey"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPatchOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPatchArgs, SecretStoreSpecProviderOracleAuthSecretRefPatchPtr and SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPatchPtrType SecretStoreSpecProviderOracleAuthSecretRefPatchArgs

func SecretStoreSpecProviderOracleAuthSecretRefPatchPtr(v *SecretStoreSpecProviderOracleAuthSecretRefPatchArgs) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput)
}

// SecretRef to pass through sensitive information.
type SecretStoreSpecProviderOracleAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefPatch) *SecretStoreSpecProviderOracleAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPatch) *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch {
		return v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPatch) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch {
		return v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPatch) SecretStoreSpecProviderOracleAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) Fingerprint() SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPatch) *SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatch {
		if v == nil {
			return nil
		}
		return v.Fingerprint
	}).(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput)
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput) Privatekey() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPatch) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch {
		if v == nil {
			return nil
		}
		return v.Privatekey
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekey struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs, SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs

func SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtr(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekey)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) SecretStoreSpecProviderOracleAuthSecretRefPrivatekey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefPrivatekey
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekey) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchInput` via:
//
//	SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs{...}
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput)
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput).ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs, SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtr and SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput
	ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput
}

type secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrType SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs

func SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtr(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput {
	return (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrType) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput)
}

// PrivateKey is the user's API Signing Key in PEM format, used for authentication.
type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch {
		return &v
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) ToSecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) Elem() SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch
		return ret
	}).(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOraclePatch struct {
	Auth *SecretStoreSpecProviderOracleAuthPatch `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment *string `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey *string `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType *string `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region            *string                                              `pulumi:"region"`
	ServiceAccountRef *SecretStoreSpecProviderOracleServiceAccountRefPatch `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault *string `pulumi:"vault"`
}

// SecretStoreSpecProviderOraclePatchInput is an input type that accepts SecretStoreSpecProviderOraclePatchArgs and SecretStoreSpecProviderOraclePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOraclePatchInput` via:
//
//	SecretStoreSpecProviderOraclePatchArgs{...}
type SecretStoreSpecProviderOraclePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOraclePatchOutput() SecretStoreSpecProviderOraclePatchOutput
	ToSecretStoreSpecProviderOraclePatchOutputWithContext(context.Context) SecretStoreSpecProviderOraclePatchOutput
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOraclePatchArgs struct {
	Auth SecretStoreSpecProviderOracleAuthPatchPtrInput `pulumi:"auth"`
	// Compartment is the vault compartment OCID.
	// Required for PushSecret
	Compartment pulumi.StringPtrInput `pulumi:"compartment"`
	// EncryptionKey is the OCID of the encryption key within the vault.
	// Required for PushSecret
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// The type of principal to use for authentication. If left blank, the Auth struct will
	// determine the principal type. This optional field must be specified if using
	// workload identity.
	PrincipalType pulumi.StringPtrInput `pulumi:"principalType"`
	// Region is the region where vault is located.
	Region            pulumi.StringPtrInput                                       `pulumi:"region"`
	ServiceAccountRef SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
	// Vault is the vault's OCID of the specific vault where secret is located.
	Vault pulumi.StringPtrInput `pulumi:"vault"`
}

func (SecretStoreSpecProviderOraclePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOraclePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOraclePatchArgs) ToSecretStoreSpecProviderOraclePatchOutput() SecretStoreSpecProviderOraclePatchOutput {
	return i.ToSecretStoreSpecProviderOraclePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOraclePatchArgs) ToSecretStoreSpecProviderOraclePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOraclePatchOutput)
}

func (i SecretStoreSpecProviderOraclePatchArgs) ToSecretStoreSpecProviderOraclePatchPtrOutput() SecretStoreSpecProviderOraclePatchPtrOutput {
	return i.ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOraclePatchArgs) ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOraclePatchOutput).ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOraclePatchPtrInput is an input type that accepts SecretStoreSpecProviderOraclePatchArgs, SecretStoreSpecProviderOraclePatchPtr and SecretStoreSpecProviderOraclePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOraclePatchPtrInput` via:
//
//	        SecretStoreSpecProviderOraclePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOraclePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOraclePatchPtrOutput() SecretStoreSpecProviderOraclePatchPtrOutput
	ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOraclePatchPtrOutput
}

type secretStoreSpecProviderOraclePatchPtrType SecretStoreSpecProviderOraclePatchArgs

func SecretStoreSpecProviderOraclePatchPtr(v *SecretStoreSpecProviderOraclePatchArgs) SecretStoreSpecProviderOraclePatchPtrInput {
	return (*secretStoreSpecProviderOraclePatchPtrType)(v)
}

func (*secretStoreSpecProviderOraclePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOraclePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOraclePatchPtrType) ToSecretStoreSpecProviderOraclePatchPtrOutput() SecretStoreSpecProviderOraclePatchPtrOutput {
	return i.ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOraclePatchPtrType) ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOraclePatchPtrOutput)
}

// Oracle configures this store to sync secrets using Oracle Vault provider
type SecretStoreSpecProviderOraclePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOraclePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOraclePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOraclePatchOutput) ToSecretStoreSpecProviderOraclePatchOutput() SecretStoreSpecProviderOraclePatchOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePatchOutput) ToSecretStoreSpecProviderOraclePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePatchOutput) ToSecretStoreSpecProviderOraclePatchPtrOutput() SecretStoreSpecProviderOraclePatchPtrOutput {
	return o.ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOraclePatchOutput) ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOraclePatch) *SecretStoreSpecProviderOraclePatch {
		return &v
	}).(SecretStoreSpecProviderOraclePatchPtrOutput)
}

func (o SecretStoreSpecProviderOraclePatchOutput) Auth() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *SecretStoreSpecProviderOracleAuthPatch { return v.Auth }).(SecretStoreSpecProviderOracleAuthPatchPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePatchOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *string { return v.Compartment }).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePatchOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOraclePatchOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *string { return v.PrincipalType }).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOraclePatchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOraclePatchOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *SecretStoreSpecProviderOracleServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOraclePatchOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOraclePatch) *string { return v.Vault }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOraclePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOraclePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOraclePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOraclePatchPtrOutput) ToSecretStoreSpecProviderOraclePatchPtrOutput() SecretStoreSpecProviderOraclePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePatchPtrOutput) ToSecretStoreSpecProviderOraclePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOraclePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOraclePatchPtrOutput) Elem() SecretStoreSpecProviderOraclePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) SecretStoreSpecProviderOraclePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOraclePatch
		return ret
	}).(SecretStoreSpecProviderOraclePatchOutput)
}

func (o SecretStoreSpecProviderOraclePatchPtrOutput) Auth() SecretStoreSpecProviderOracleAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *SecretStoreSpecProviderOracleAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderOracleAuthPatchPtrOutput)
}

// Compartment is the vault compartment OCID.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePatchPtrOutput) Compartment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *string {
		if v == nil {
			return nil
		}
		return v.Compartment
	}).(pulumi.StringPtrOutput)
}

// EncryptionKey is the OCID of the encryption key within the vault.
// Required for PushSecret
func (o SecretStoreSpecProviderOraclePatchPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// The type of principal to use for authentication. If left blank, the Auth struct will
// determine the principal type. This optional field must be specified if using
// workload identity.
func (o SecretStoreSpecProviderOraclePatchPtrOutput) PrincipalType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalType
	}).(pulumi.StringPtrOutput)
}

// Region is the region where vault is located.
func (o SecretStoreSpecProviderOraclePatchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderOraclePatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *SecretStoreSpecProviderOracleServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput)
}

// Vault is the vault's OCID of the specific vault where secret is located.
func (o SecretStoreSpecProviderOraclePatchPtrOutput) Vault() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOraclePatch) *string {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefArgs and SecretStoreSpecProviderOracleServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderOracleServiceAccountRefArgs{...}
type SecretStoreSpecProviderOracleServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefOutput).ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefArgs, SecretStoreSpecProviderOracleServiceAccountRefPtr and SecretStoreSpecProviderOracleServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderOracleServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput
}

type secretStoreSpecProviderOracleServiceAccountRefPtrType SecretStoreSpecProviderOracleServiceAccountRefArgs

func SecretStoreSpecProviderOracleServiceAccountRefPtr(v *SecretStoreSpecProviderOracleServiceAccountRefArgs) SecretStoreSpecProviderOracleServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderOracleServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderOracleServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefOutput() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleServiceAccountRef) *SecretStoreSpecProviderOracleServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderOracleServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) SecretStoreSpecProviderOracleServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderOracleServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderOracleServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefPatchArgs and SecretStoreSpecProviderOracleServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderOracleServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderOracleServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchOutput
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefPatchOutput).ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderOracleServiceAccountRefPatchArgs, SecretStoreSpecProviderOracleServiceAccountRefPatchPtr and SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderOracleServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderOracleServiceAccountRefPatchPtrType SecretStoreSpecProviderOracleServiceAccountRefPatchArgs

func SecretStoreSpecProviderOracleServiceAccountRefPatchPtr(v *SecretStoreSpecProviderOracleServiceAccountRefPatchArgs) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderOracleServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderOracleServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderOracleServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput)
}

// ServiceAccountRef specified the service account
// that should be used when authenticating with WorkloadIdentity.
type SecretStoreSpecProviderOracleServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderOracleServiceAccountRefPatch) *SecretStoreSpecProviderOracleServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderOracleServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderOracleServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderOracleServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRefPatch) SecretStoreSpecProviderOracleServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderOracleServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderOracleServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderOracleServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassbolt struct {
	Auth *SecretStoreSpecProviderPassboltAuth `pulumi:"auth"`
	// Host defines the Passbolt Server to connect to
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderPassboltInput is an input type that accepts SecretStoreSpecProviderPassboltArgs and SecretStoreSpecProviderPassboltOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltInput` via:
//
//	SecretStoreSpecProviderPassboltArgs{...}
type SecretStoreSpecProviderPassboltInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltOutput() SecretStoreSpecProviderPassboltOutput
	ToSecretStoreSpecProviderPassboltOutputWithContext(context.Context) SecretStoreSpecProviderPassboltOutput
}

type SecretStoreSpecProviderPassboltArgs struct {
	Auth SecretStoreSpecProviderPassboltAuthPtrInput `pulumi:"auth"`
	// Host defines the Passbolt Server to connect to
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderPassboltArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassbolt)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltArgs) ToSecretStoreSpecProviderPassboltOutput() SecretStoreSpecProviderPassboltOutput {
	return i.ToSecretStoreSpecProviderPassboltOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltArgs) ToSecretStoreSpecProviderPassboltOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltOutput)
}

func (i SecretStoreSpecProviderPassboltArgs) ToSecretStoreSpecProviderPassboltPtrOutput() SecretStoreSpecProviderPassboltPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltArgs) ToSecretStoreSpecProviderPassboltPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltOutput).ToSecretStoreSpecProviderPassboltPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltPtrInput is an input type that accepts SecretStoreSpecProviderPassboltArgs, SecretStoreSpecProviderPassboltPtr and SecretStoreSpecProviderPassboltPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltPtrOutput() SecretStoreSpecProviderPassboltPtrOutput
	ToSecretStoreSpecProviderPassboltPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltPtrOutput
}

type secretStoreSpecProviderPassboltPtrType SecretStoreSpecProviderPassboltArgs

func SecretStoreSpecProviderPassboltPtr(v *SecretStoreSpecProviderPassboltArgs) SecretStoreSpecProviderPassboltPtrInput {
	return (*secretStoreSpecProviderPassboltPtrType)(v)
}

func (*secretStoreSpecProviderPassboltPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassbolt)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltPtrType) ToSecretStoreSpecProviderPassboltPtrOutput() SecretStoreSpecProviderPassboltPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltPtrType) ToSecretStoreSpecProviderPassboltPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltPtrOutput)
}

type SecretStoreSpecProviderPassboltOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassbolt)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltOutput) ToSecretStoreSpecProviderPassboltOutput() SecretStoreSpecProviderPassboltOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltOutput) ToSecretStoreSpecProviderPassboltOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltOutput) ToSecretStoreSpecProviderPassboltPtrOutput() SecretStoreSpecProviderPassboltPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltOutput) ToSecretStoreSpecProviderPassboltPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassbolt) *SecretStoreSpecProviderPassbolt {
		return &v
	}).(SecretStoreSpecProviderPassboltPtrOutput)
}

func (o SecretStoreSpecProviderPassboltOutput) Auth() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassbolt) *SecretStoreSpecProviderPassboltAuth { return v.Auth }).(SecretStoreSpecProviderPassboltAuthPtrOutput)
}

// Host defines the Passbolt Server to connect to
func (o SecretStoreSpecProviderPassboltOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassbolt) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassbolt)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltPtrOutput) ToSecretStoreSpecProviderPassboltPtrOutput() SecretStoreSpecProviderPassboltPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPtrOutput) ToSecretStoreSpecProviderPassboltPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPtrOutput) Elem() SecretStoreSpecProviderPassboltOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassbolt) SecretStoreSpecProviderPassbolt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassbolt
		return ret
	}).(SecretStoreSpecProviderPassboltOutput)
}

func (o SecretStoreSpecProviderPassboltPtrOutput) Auth() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassbolt) *SecretStoreSpecProviderPassboltAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderPassboltAuthPtrOutput)
}

// Host defines the Passbolt Server to connect to
func (o SecretStoreSpecProviderPassboltPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassbolt) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuth struct {
	PasswordSecretRef   *SecretStoreSpecProviderPassboltAuthPasswordSecretRef   `pulumi:"passwordSecretRef"`
	PrivateKeySecretRef *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef `pulumi:"privateKeySecretRef"`
}

// SecretStoreSpecProviderPassboltAuthInput is an input type that accepts SecretStoreSpecProviderPassboltAuthArgs and SecretStoreSpecProviderPassboltAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthInput` via:
//
//	SecretStoreSpecProviderPassboltAuthArgs{...}
type SecretStoreSpecProviderPassboltAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthOutput() SecretStoreSpecProviderPassboltAuthOutput
	ToSecretStoreSpecProviderPassboltAuthOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthOutput
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuthArgs struct {
	PasswordSecretRef   SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput   `pulumi:"passwordSecretRef"`
	PrivateKeySecretRef SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput `pulumi:"privateKeySecretRef"`
}

func (SecretStoreSpecProviderPassboltAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthArgs) ToSecretStoreSpecProviderPassboltAuthOutput() SecretStoreSpecProviderPassboltAuthOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthArgs) ToSecretStoreSpecProviderPassboltAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthOutput)
}

func (i SecretStoreSpecProviderPassboltAuthArgs) ToSecretStoreSpecProviderPassboltAuthPtrOutput() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthArgs) ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthOutput).ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthArgs, SecretStoreSpecProviderPassboltAuthPtr and SecretStoreSpecProviderPassboltAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPtrOutput() SecretStoreSpecProviderPassboltAuthPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPtrOutput
}

type secretStoreSpecProviderPassboltAuthPtrType SecretStoreSpecProviderPassboltAuthArgs

func SecretStoreSpecProviderPassboltAuthPtr(v *SecretStoreSpecProviderPassboltAuthArgs) SecretStoreSpecProviderPassboltAuthPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPtrType) ToSecretStoreSpecProviderPassboltAuthPtrOutput() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPtrType) ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthOutput) ToSecretStoreSpecProviderPassboltAuthOutput() SecretStoreSpecProviderPassboltAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthOutput) ToSecretStoreSpecProviderPassboltAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthOutput) ToSecretStoreSpecProviderPassboltAuthPtrOutput() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthOutput) ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuth) *SecretStoreSpecProviderPassboltAuth {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthOutput) PasswordSecretRef() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuth) *SecretStoreSpecProviderPassboltAuthPasswordSecretRef {
		return v.PasswordSecretRef
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthOutput) PrivateKeySecretRef() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuth) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef {
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPtrOutput) ToSecretStoreSpecProviderPassboltAuthPtrOutput() SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPtrOutput) ToSecretStoreSpecProviderPassboltAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuth) SecretStoreSpecProviderPassboltAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuth
		return ret
	}).(SecretStoreSpecProviderPassboltAuthOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPtrOutput) PasswordSecretRef() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuth) *SecretStoreSpecProviderPassboltAuthPasswordSecretRef {
		if v == nil {
			return nil
		}
		return v.PasswordSecretRef
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPtrOutput) PrivateKeySecretRef() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuth) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef {
		if v == nil {
			return nil
		}
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassboltAuthPasswordSecretRefInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs and SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPasswordSecretRefInput` via:
//
//	SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs{...}
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput
	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput)
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput).ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs, SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtr and SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput
}

type secretStoreSpecProviderPassboltAuthPasswordSecretRefPtrType SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs

func SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtr(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPasswordSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPasswordSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPasswordSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPasswordSecretRefPtrType) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPasswordSecretRefPtrType) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *SecretStoreSpecProviderPassboltAuthPasswordSecretRef {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPasswordSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRef) SecretStoreSpecProviderPassboltAuthPasswordSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuthPasswordSecretRef
		return ret
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs and SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs{...}
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput
	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput).ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs, SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtr and SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput
}

type secretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrType SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs

func SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtr(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuthPatch struct {
	PasswordSecretRef   *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch   `pulumi:"passwordSecretRef"`
	PrivateKeySecretRef *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch `pulumi:"privateKeySecretRef"`
}

// SecretStoreSpecProviderPassboltAuthPatchInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPatchArgs and SecretStoreSpecProviderPassboltAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPatchInput` via:
//
//	SecretStoreSpecProviderPassboltAuthPatchArgs{...}
type SecretStoreSpecProviderPassboltAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPatchOutput() SecretStoreSpecProviderPassboltAuthPatchOutput
	ToSecretStoreSpecProviderPassboltAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPatchOutput
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuthPatchArgs struct {
	PasswordSecretRef   SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput   `pulumi:"passwordSecretRef"`
	PrivateKeySecretRef SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput `pulumi:"privateKeySecretRef"`
}

func (SecretStoreSpecProviderPassboltAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthPatchArgs) ToSecretStoreSpecProviderPassboltAuthPatchOutput() SecretStoreSpecProviderPassboltAuthPatchOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPatchArgs) ToSecretStoreSpecProviderPassboltAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPatchOutput)
}

func (i SecretStoreSpecProviderPassboltAuthPatchArgs) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPatchArgs) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPatchOutput).ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPatchArgs, SecretStoreSpecProviderPassboltAuthPatchPtr and SecretStoreSpecProviderPassboltAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPatchPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPatchPtrOutput
}

type secretStoreSpecProviderPassboltAuthPatchPtrType SecretStoreSpecProviderPassboltAuthPatchArgs

func SecretStoreSpecProviderPassboltAuthPatchPtr(v *SecretStoreSpecProviderPassboltAuthPatchArgs) SecretStoreSpecProviderPassboltAuthPatchPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against Passbolt Server
type SecretStoreSpecProviderPassboltAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) ToSecretStoreSpecProviderPassboltAuthPatchOutput() SecretStoreSpecProviderPassboltAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) ToSecretStoreSpecProviderPassboltAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuthPatch) *SecretStoreSpecProviderPassboltAuthPatch {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) PasswordSecretRef() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPatch) *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch {
		return v.PasswordSecretRef
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPatchOutput) PrivateKeySecretRef() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPatch) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch {
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPatchPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPatch) SecretStoreSpecProviderPassboltAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuthPatch
		return ret
	}).(SecretStoreSpecProviderPassboltAuthPatchOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPatchPtrOutput) PasswordSecretRef() SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPatch) *SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.PasswordSecretRef
	}).(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassboltAuthPatchPtrOutput) PrivateKeySecretRef() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPatch) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.PrivateKeySecretRef
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs and SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefInput` via:
//
//	SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs{...}
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput
	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput)
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput).ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs, SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtr and SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput
}

type secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrType SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs

func SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtr(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrType) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrType) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef
		return ret
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs and SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput
	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput).ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs, SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtr and SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrType SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs

func SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtr(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrType) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltPatch struct {
	Auth *SecretStoreSpecProviderPassboltAuthPatch `pulumi:"auth"`
	// Host defines the Passbolt Server to connect to
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderPassboltPatchInput is an input type that accepts SecretStoreSpecProviderPassboltPatchArgs and SecretStoreSpecProviderPassboltPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltPatchInput` via:
//
//	SecretStoreSpecProviderPassboltPatchArgs{...}
type SecretStoreSpecProviderPassboltPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltPatchOutput() SecretStoreSpecProviderPassboltPatchOutput
	ToSecretStoreSpecProviderPassboltPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassboltPatchOutput
}

type SecretStoreSpecProviderPassboltPatchArgs struct {
	Auth SecretStoreSpecProviderPassboltAuthPatchPtrInput `pulumi:"auth"`
	// Host defines the Passbolt Server to connect to
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderPassboltPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassboltPatchArgs) ToSecretStoreSpecProviderPassboltPatchOutput() SecretStoreSpecProviderPassboltPatchOutput {
	return i.ToSecretStoreSpecProviderPassboltPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltPatchArgs) ToSecretStoreSpecProviderPassboltPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltPatchOutput)
}

func (i SecretStoreSpecProviderPassboltPatchArgs) ToSecretStoreSpecProviderPassboltPatchPtrOutput() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassboltPatchArgs) ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltPatchOutput).ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassboltPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassboltPatchArgs, SecretStoreSpecProviderPassboltPatchPtr and SecretStoreSpecProviderPassboltPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassboltPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassboltPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassboltPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassboltPatchPtrOutput() SecretStoreSpecProviderPassboltPatchPtrOutput
	ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassboltPatchPtrOutput
}

type secretStoreSpecProviderPassboltPatchPtrType SecretStoreSpecProviderPassboltPatchArgs

func SecretStoreSpecProviderPassboltPatchPtr(v *SecretStoreSpecProviderPassboltPatchArgs) SecretStoreSpecProviderPassboltPatchPtrInput {
	return (*secretStoreSpecProviderPassboltPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassboltPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassboltPatchPtrType) ToSecretStoreSpecProviderPassboltPatchPtrOutput() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassboltPatchPtrType) ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassboltPatchPtrOutput)
}

type SecretStoreSpecProviderPassboltPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassboltPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltPatchOutput) ToSecretStoreSpecProviderPassboltPatchOutput() SecretStoreSpecProviderPassboltPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPatchOutput) ToSecretStoreSpecProviderPassboltPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPatchOutput) ToSecretStoreSpecProviderPassboltPatchPtrOutput() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassboltPatchOutput) ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassboltPatch) *SecretStoreSpecProviderPassboltPatch {
		return &v
	}).(SecretStoreSpecProviderPassboltPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassboltPatchOutput) Auth() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltPatch) *SecretStoreSpecProviderPassboltAuthPatch { return v.Auth }).(SecretStoreSpecProviderPassboltAuthPatchPtrOutput)
}

// Host defines the Passbolt Server to connect to
func (o SecretStoreSpecProviderPassboltPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassboltPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassboltPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassboltPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassboltPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassboltPatchPtrOutput) ToSecretStoreSpecProviderPassboltPatchPtrOutput() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPatchPtrOutput) ToSecretStoreSpecProviderPassboltPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassboltPatchPtrOutput) Elem() SecretStoreSpecProviderPassboltPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltPatch) SecretStoreSpecProviderPassboltPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassboltPatch
		return ret
	}).(SecretStoreSpecProviderPassboltPatchOutput)
}

func (o SecretStoreSpecProviderPassboltPatchPtrOutput) Auth() SecretStoreSpecProviderPassboltAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltPatch) *SecretStoreSpecProviderPassboltAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderPassboltAuthPatchPtrOutput)
}

// Host defines the Passbolt Server to connect to
func (o SecretStoreSpecProviderPassboltPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassboltPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepot struct {
	Auth *SecretStoreSpecProviderPassworddepotAuth `pulumi:"auth"`
	// Database to use as source
	Database *string `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderPassworddepotInput is an input type that accepts SecretStoreSpecProviderPassworddepotArgs and SecretStoreSpecProviderPassworddepotOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotInput` via:
//
//	SecretStoreSpecProviderPassworddepotArgs{...}
type SecretStoreSpecProviderPassworddepotInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput
	ToSecretStoreSpecProviderPassworddepotOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotOutput
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotArgs struct {
	Auth SecretStoreSpecProviderPassworddepotAuthPtrInput `pulumi:"auth"`
	// Database to use as source
	Database pulumi.StringPtrInput `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderPassworddepotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput {
	return i.ToSecretStoreSpecProviderPassworddepotOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotOutput)
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotArgs) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotOutput).ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotArgs, SecretStoreSpecProviderPassworddepotPtr and SecretStoreSpecProviderPassworddepotPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput
	ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotPtrOutput
}

type secretStoreSpecProviderPassworddepotPtrType SecretStoreSpecProviderPassworddepotArgs

func SecretStoreSpecProviderPassworddepotPtr(v *SecretStoreSpecProviderPassworddepotArgs) SecretStoreSpecProviderPassworddepotPtrInput {
	return (*secretStoreSpecProviderPassworddepotPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotPtrType) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotPtrType) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotOutput() SecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotOutput) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepot) *SecretStoreSpecProviderPassworddepot {
		return &v
	}).(SecretStoreSpecProviderPassworddepotPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotOutput) Auth() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) *SecretStoreSpecProviderPassworddepotAuth { return v.Auth }).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepot) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepot)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) ToSecretStoreSpecProviderPassworddepotPtrOutput() SecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) ToSecretStoreSpecProviderPassworddepotPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) Elem() SecretStoreSpecProviderPassworddepotOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) SecretStoreSpecProviderPassworddepot {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepot
		return ret
	}).(SecretStoreSpecProviderPassworddepotOutput)
}

func (o SecretStoreSpecProviderPassworddepotPtrOutput) Auth() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *SecretStoreSpecProviderPassworddepotAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepot) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuth struct {
	SecretRef *SecretStoreSpecProviderPassworddepotAuthSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderPassworddepotAuthInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthArgs and SecretStoreSpecProviderPassworddepotAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthArgs{...}
type SecretStoreSpecProviderPassworddepotAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput
	ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthOutput
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthArgs struct {
	SecretRef SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderPassworddepotAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthArgs) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthOutput).ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthArgs, SecretStoreSpecProviderPassworddepotAuthPtr and SecretStoreSpecProviderPassworddepotAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthPtrType SecretStoreSpecProviderPassworddepotAuthArgs

func SecretStoreSpecProviderPassworddepotAuthPtr(v *SecretStoreSpecProviderPassworddepotAuthArgs) SecretStoreSpecProviderPassworddepotAuthPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthPtrType) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthPtrType) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthOutput() SecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuth) *SecretStoreSpecProviderPassworddepotAuth {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuth) *SecretStoreSpecProviderPassworddepotAuthSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutput() SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuth) SecretStoreSpecProviderPassworddepotAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuth
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthPtrOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuth) *SecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthPatch struct {
	SecretRef *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderPassworddepotAuthPatchInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthPatchArgs and SecretStoreSpecProviderPassworddepotAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthPatchInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthPatchArgs{...}
type SecretStoreSpecProviderPassworddepotAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthPatchOutput() SecretStoreSpecProviderPassworddepotAuthPatchOutput
	ToSecretStoreSpecProviderPassworddepotAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthPatchOutput
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthPatchArgs struct {
	SecretRef SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderPassworddepotAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthPatchOutput() SecretStoreSpecProviderPassworddepotAuthPatchOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthPatchOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthPatchOutput).ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthPatchArgs, SecretStoreSpecProviderPassworddepotAuthPatchPtr and SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthPatchPtrType SecretStoreSpecProviderPassworddepotAuthPatchArgs

func SecretStoreSpecProviderPassworddepotAuthPatchPtr(v *SecretStoreSpecProviderPassworddepotAuthPatchArgs) SecretStoreSpecProviderPassworddepotAuthPatchPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchOutput() SecretStoreSpecProviderPassworddepotAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthPatch) *SecretStoreSpecProviderPassworddepotAuthPatch {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthPatch) SecretStoreSpecProviderPassworddepotAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthPatch
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthPatchOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput) SecretRef() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRef struct {
	Credentials *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials `pulumi:"credentials"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefArgs struct {
	Credentials SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRef {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRef) SecretStoreSpecProviderPassworddepotAuthSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRef
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRef) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput)
}

// Username / Password is used for authentication.
type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPatch struct {
	Credentials *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch `pulumi:"credentials"`
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs and SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs{...}
type SecretStoreSpecProviderPassworddepotAuthSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs struct {
	Credentials SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput `pulumi:"credentials"`
}

func (SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput).ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs, SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtr and SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput
}

type secretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrType SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs

func SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtr(v *SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrType) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotAuthSecretRefPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotAuthSecretRefPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch {
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput)
}

type SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotAuthSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch) SecretStoreSpecProviderPassworddepotAuthSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotAuthSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput) Credentials() SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotAuthSecretRefPatch) *SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatch {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotPatch struct {
	Auth *SecretStoreSpecProviderPassworddepotAuthPatch `pulumi:"auth"`
	// Database to use as source
	Database *string `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host *string `pulumi:"host"`
}

// SecretStoreSpecProviderPassworddepotPatchInput is an input type that accepts SecretStoreSpecProviderPassworddepotPatchArgs and SecretStoreSpecProviderPassworddepotPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotPatchInput` via:
//
//	SecretStoreSpecProviderPassworddepotPatchArgs{...}
type SecretStoreSpecProviderPassworddepotPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotPatchOutput() SecretStoreSpecProviderPassworddepotPatchOutput
	ToSecretStoreSpecProviderPassworddepotPatchOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotPatchOutput
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotPatchArgs struct {
	Auth SecretStoreSpecProviderPassworddepotAuthPatchPtrInput `pulumi:"auth"`
	// Database to use as source
	Database pulumi.StringPtrInput `pulumi:"database"`
	// URL configures the Password Depot instance URL.
	Host pulumi.StringPtrInput `pulumi:"host"`
}

func (SecretStoreSpecProviderPassworddepotPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPassworddepotPatchArgs) ToSecretStoreSpecProviderPassworddepotPatchOutput() SecretStoreSpecProviderPassworddepotPatchOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotPatchArgs) ToSecretStoreSpecProviderPassworddepotPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotPatchOutput)
}

func (i SecretStoreSpecProviderPassworddepotPatchArgs) ToSecretStoreSpecProviderPassworddepotPatchPtrOutput() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPassworddepotPatchArgs) ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotPatchOutput).ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPassworddepotPatchPtrInput is an input type that accepts SecretStoreSpecProviderPassworddepotPatchArgs, SecretStoreSpecProviderPassworddepotPatchPtr and SecretStoreSpecProviderPassworddepotPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPassworddepotPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPassworddepotPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPassworddepotPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPassworddepotPatchPtrOutput() SecretStoreSpecProviderPassworddepotPatchPtrOutput
	ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPassworddepotPatchPtrOutput
}

type secretStoreSpecProviderPassworddepotPatchPtrType SecretStoreSpecProviderPassworddepotPatchArgs

func SecretStoreSpecProviderPassworddepotPatchPtr(v *SecretStoreSpecProviderPassworddepotPatchArgs) SecretStoreSpecProviderPassworddepotPatchPtrInput {
	return (*secretStoreSpecProviderPassworddepotPatchPtrType)(v)
}

func (*secretStoreSpecProviderPassworddepotPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPassworddepotPatchPtrType) ToSecretStoreSpecProviderPassworddepotPatchPtrOutput() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPassworddepotPatchPtrType) ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPassworddepotPatchPtrOutput)
}

// Configures a store to sync secrets with a Password Depot instance.
type SecretStoreSpecProviderPassworddepotPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotPatchOutput) ToSecretStoreSpecProviderPassworddepotPatchOutput() SecretStoreSpecProviderPassworddepotPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPatchOutput) ToSecretStoreSpecProviderPassworddepotPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPatchOutput) ToSecretStoreSpecProviderPassworddepotPatchPtrOutput() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPassworddepotPatchOutput) ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPassworddepotPatch) *SecretStoreSpecProviderPassworddepotPatch {
		return &v
	}).(SecretStoreSpecProviderPassworddepotPatchPtrOutput)
}

func (o SecretStoreSpecProviderPassworddepotPatchOutput) Auth() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotPatch) *SecretStoreSpecProviderPassworddepotAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotPatchOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotPatch) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotPatchOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPassworddepotPatch) *string { return v.Host }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPassworddepotPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPassworddepotPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPassworddepotPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotPatchPtrOutput() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) ToSecretStoreSpecProviderPassworddepotPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) Elem() SecretStoreSpecProviderPassworddepotPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotPatch) SecretStoreSpecProviderPassworddepotPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPassworddepotPatch
		return ret
	}).(SecretStoreSpecProviderPassworddepotPatchOutput)
}

func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) Auth() SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotPatch) *SecretStoreSpecProviderPassworddepotAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput)
}

// Database to use as source
func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotPatch) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

// URL configures the Password Depot instance URL.
func (o SecretStoreSpecProviderPassworddepotPatchPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPassworddepotPatch) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderPatch struct {
	Akeyless                 *SecretStoreSpecProviderAkeylessPatch                 `pulumi:"akeyless"`
	Alibaba                  *SecretStoreSpecProviderAlibabaPatch                  `pulumi:"alibaba"`
	Aws                      *SecretStoreSpecProviderAwsPatch                      `pulumi:"aws"`
	Azurekv                  *SecretStoreSpecProviderAzurekvPatch                  `pulumi:"azurekv"`
	Bitwardensecretsmanager  *SecretStoreSpecProviderBitwardensecretsmanagerPatch  `pulumi:"bitwardensecretsmanager"`
	Chef                     *SecretStoreSpecProviderChefPatch                     `pulumi:"chef"`
	Conjur                   *SecretStoreSpecProviderConjurPatch                   `pulumi:"conjur"`
	Delinea                  *SecretStoreSpecProviderDelineaPatch                  `pulumi:"delinea"`
	Device42                 *SecretStoreSpecProviderDevice42Patch                 `pulumi:"device42"`
	Doppler                  *SecretStoreSpecProviderDopplerPatch                  `pulumi:"doppler"`
	Fake                     *SecretStoreSpecProviderFakePatch                     `pulumi:"fake"`
	Fortanix                 *SecretStoreSpecProviderFortanixPatch                 `pulumi:"fortanix"`
	Gcpsm                    *SecretStoreSpecProviderGcpsmPatch                    `pulumi:"gcpsm"`
	Gitlab                   *SecretStoreSpecProviderGitlabPatch                   `pulumi:"gitlab"`
	Ibm                      *SecretStoreSpecProviderIbmPatch                      `pulumi:"ibm"`
	Infisical                *SecretStoreSpecProviderInfisicalPatch                `pulumi:"infisical"`
	Keepersecurity           *SecretStoreSpecProviderKeepersecurityPatch           `pulumi:"keepersecurity"`
	Kubernetes               *SecretStoreSpecProviderKubernetesPatch               `pulumi:"kubernetes"`
	Onboardbase              *SecretStoreSpecProviderOnboardbasePatch              `pulumi:"onboardbase"`
	Onepassword              *SecretStoreSpecProviderOnepasswordPatch              `pulumi:"onepassword"`
	Oracle                   *SecretStoreSpecProviderOraclePatch                   `pulumi:"oracle"`
	Passbolt                 *SecretStoreSpecProviderPassboltPatch                 `pulumi:"passbolt"`
	Passworddepot            *SecretStoreSpecProviderPassworddepotPatch            `pulumi:"passworddepot"`
	Pulumi                   *SecretStoreSpecProviderPulumiPatch                   `pulumi:"pulumi"`
	Scaleway                 *SecretStoreSpecProviderScalewayPatch                 `pulumi:"scaleway"`
	Senhasegura              *SecretStoreSpecProviderSenhaseguraPatch              `pulumi:"senhasegura"`
	Vault                    *SecretStoreSpecProviderVaultPatch                    `pulumi:"vault"`
	Webhook                  *SecretStoreSpecProviderWebhookPatch                  `pulumi:"webhook"`
	Yandexcertificatemanager *SecretStoreSpecProviderYandexcertificatemanagerPatch `pulumi:"yandexcertificatemanager"`
	Yandexlockbox            *SecretStoreSpecProviderYandexlockboxPatch            `pulumi:"yandexlockbox"`
}

// SecretStoreSpecProviderPatchInput is an input type that accepts SecretStoreSpecProviderPatchArgs and SecretStoreSpecProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPatchInput` via:
//
//	SecretStoreSpecProviderPatchArgs{...}
type SecretStoreSpecProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPatchOutput() SecretStoreSpecProviderPatchOutput
	ToSecretStoreSpecProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderPatchOutput
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderPatchArgs struct {
	Akeyless                 SecretStoreSpecProviderAkeylessPatchPtrInput                 `pulumi:"akeyless"`
	Alibaba                  SecretStoreSpecProviderAlibabaPatchPtrInput                  `pulumi:"alibaba"`
	Aws                      SecretStoreSpecProviderAwsPatchPtrInput                      `pulumi:"aws"`
	Azurekv                  SecretStoreSpecProviderAzurekvPatchPtrInput                  `pulumi:"azurekv"`
	Bitwardensecretsmanager  SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput  `pulumi:"bitwardensecretsmanager"`
	Chef                     SecretStoreSpecProviderChefPatchPtrInput                     `pulumi:"chef"`
	Conjur                   SecretStoreSpecProviderConjurPatchPtrInput                   `pulumi:"conjur"`
	Delinea                  SecretStoreSpecProviderDelineaPatchPtrInput                  `pulumi:"delinea"`
	Device42                 SecretStoreSpecProviderDevice42PatchPtrInput                 `pulumi:"device42"`
	Doppler                  SecretStoreSpecProviderDopplerPatchPtrInput                  `pulumi:"doppler"`
	Fake                     SecretStoreSpecProviderFakePatchPtrInput                     `pulumi:"fake"`
	Fortanix                 SecretStoreSpecProviderFortanixPatchPtrInput                 `pulumi:"fortanix"`
	Gcpsm                    SecretStoreSpecProviderGcpsmPatchPtrInput                    `pulumi:"gcpsm"`
	Gitlab                   SecretStoreSpecProviderGitlabPatchPtrInput                   `pulumi:"gitlab"`
	Ibm                      SecretStoreSpecProviderIbmPatchPtrInput                      `pulumi:"ibm"`
	Infisical                SecretStoreSpecProviderInfisicalPatchPtrInput                `pulumi:"infisical"`
	Keepersecurity           SecretStoreSpecProviderKeepersecurityPatchPtrInput           `pulumi:"keepersecurity"`
	Kubernetes               SecretStoreSpecProviderKubernetesPatchPtrInput               `pulumi:"kubernetes"`
	Onboardbase              SecretStoreSpecProviderOnboardbasePatchPtrInput              `pulumi:"onboardbase"`
	Onepassword              SecretStoreSpecProviderOnepasswordPatchPtrInput              `pulumi:"onepassword"`
	Oracle                   SecretStoreSpecProviderOraclePatchPtrInput                   `pulumi:"oracle"`
	Passbolt                 SecretStoreSpecProviderPassboltPatchPtrInput                 `pulumi:"passbolt"`
	Passworddepot            SecretStoreSpecProviderPassworddepotPatchPtrInput            `pulumi:"passworddepot"`
	Pulumi                   SecretStoreSpecProviderPulumiPatchPtrInput                   `pulumi:"pulumi"`
	Scaleway                 SecretStoreSpecProviderScalewayPatchPtrInput                 `pulumi:"scaleway"`
	Senhasegura              SecretStoreSpecProviderSenhaseguraPatchPtrInput              `pulumi:"senhasegura"`
	Vault                    SecretStoreSpecProviderVaultPatchPtrInput                    `pulumi:"vault"`
	Webhook                  SecretStoreSpecProviderWebhookPatchPtrInput                  `pulumi:"webhook"`
	Yandexcertificatemanager SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput `pulumi:"yandexcertificatemanager"`
	Yandexlockbox            SecretStoreSpecProviderYandexlockboxPatchPtrInput            `pulumi:"yandexlockbox"`
}

func (SecretStoreSpecProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPatchArgs) ToSecretStoreSpecProviderPatchOutput() SecretStoreSpecProviderPatchOutput {
	return i.ToSecretStoreSpecProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPatchArgs) ToSecretStoreSpecProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPatchOutput)
}

func (i SecretStoreSpecProviderPatchArgs) ToSecretStoreSpecProviderPatchPtrOutput() SecretStoreSpecProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPatchArgs) ToSecretStoreSpecProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPatchOutput).ToSecretStoreSpecProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderPatchArgs, SecretStoreSpecProviderPatchPtr and SecretStoreSpecProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPatchPtrOutput() SecretStoreSpecProviderPatchPtrOutput
	ToSecretStoreSpecProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPatchPtrOutput
}

type secretStoreSpecProviderPatchPtrType SecretStoreSpecProviderPatchArgs

func SecretStoreSpecProviderPatchPtr(v *SecretStoreSpecProviderPatchArgs) SecretStoreSpecProviderPatchPtrInput {
	return (*secretStoreSpecProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPatchPtrType) ToSecretStoreSpecProviderPatchPtrOutput() SecretStoreSpecProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPatchPtrType) ToSecretStoreSpecProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPatchPtrOutput)
}

// Used to configure the provider. Only one provider may be set
type SecretStoreSpecProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPatchOutput) ToSecretStoreSpecProviderPatchOutput() SecretStoreSpecProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPatchOutput) ToSecretStoreSpecProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPatchOutput) ToSecretStoreSpecProviderPatchPtrOutput() SecretStoreSpecProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPatchOutput) ToSecretStoreSpecProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPatch {
		return &v
	}).(SecretStoreSpecProviderPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Akeyless() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAkeylessPatch { return v.Akeyless }).(SecretStoreSpecProviderAkeylessPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Alibaba() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAlibabaPatch { return v.Alibaba }).(SecretStoreSpecProviderAlibabaPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Aws() SecretStoreSpecProviderAwsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAwsPatch { return v.Aws }).(SecretStoreSpecProviderAwsPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Azurekv() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAzurekvPatch { return v.Azurekv }).(SecretStoreSpecProviderAzurekvPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Bitwardensecretsmanager() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderBitwardensecretsmanagerPatch {
		return v.Bitwardensecretsmanager
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Chef() SecretStoreSpecProviderChefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderChefPatch { return v.Chef }).(SecretStoreSpecProviderChefPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Conjur() SecretStoreSpecProviderConjurPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderConjurPatch { return v.Conjur }).(SecretStoreSpecProviderConjurPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Delinea() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDelineaPatch { return v.Delinea }).(SecretStoreSpecProviderDelineaPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Device42() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDevice42Patch { return v.Device42 }).(SecretStoreSpecProviderDevice42PatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Doppler() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDopplerPatch { return v.Doppler }).(SecretStoreSpecProviderDopplerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Fake() SecretStoreSpecProviderFakePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderFakePatch { return v.Fake }).(SecretStoreSpecProviderFakePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Fortanix() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderFortanixPatch { return v.Fortanix }).(SecretStoreSpecProviderFortanixPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Gcpsm() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderGcpsmPatch { return v.Gcpsm }).(SecretStoreSpecProviderGcpsmPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Gitlab() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderGitlabPatch { return v.Gitlab }).(SecretStoreSpecProviderGitlabPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Ibm() SecretStoreSpecProviderIbmPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderIbmPatch { return v.Ibm }).(SecretStoreSpecProviderIbmPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Infisical() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderInfisicalPatch { return v.Infisical }).(SecretStoreSpecProviderInfisicalPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Keepersecurity() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderKeepersecurityPatch {
		return v.Keepersecurity
	}).(SecretStoreSpecProviderKeepersecurityPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Kubernetes() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderKubernetesPatch { return v.Kubernetes }).(SecretStoreSpecProviderKubernetesPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Onboardbase() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOnboardbasePatch { return v.Onboardbase }).(SecretStoreSpecProviderOnboardbasePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Onepassword() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOnepasswordPatch { return v.Onepassword }).(SecretStoreSpecProviderOnepasswordPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Oracle() SecretStoreSpecProviderOraclePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOraclePatch { return v.Oracle }).(SecretStoreSpecProviderOraclePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Passbolt() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPassboltPatch { return v.Passbolt }).(SecretStoreSpecProviderPassboltPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPassworddepotPatch {
		return v.Passworddepot
	}).(SecretStoreSpecProviderPassworddepotPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Pulumi() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPulumiPatch { return v.Pulumi }).(SecretStoreSpecProviderPulumiPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Scaleway() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderScalewayPatch { return v.Scaleway }).(SecretStoreSpecProviderScalewayPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Senhasegura() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderSenhaseguraPatch { return v.Senhasegura }).(SecretStoreSpecProviderSenhaseguraPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Vault() SecretStoreSpecProviderVaultPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderVaultPatch { return v.Vault }).(SecretStoreSpecProviderVaultPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Webhook() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderWebhookPatch { return v.Webhook }).(SecretStoreSpecProviderWebhookPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Yandexcertificatemanager() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderYandexcertificatemanagerPatch {
		return v.Yandexcertificatemanager
	}).(SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPatch) *SecretStoreSpecProviderYandexlockboxPatch {
		return v.Yandexlockbox
	}).(SecretStoreSpecProviderYandexlockboxPatchPtrOutput)
}

type SecretStoreSpecProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPatchPtrOutput) ToSecretStoreSpecProviderPatchPtrOutput() SecretStoreSpecProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPatchPtrOutput) ToSecretStoreSpecProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPatchPtrOutput) Elem() SecretStoreSpecProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) SecretStoreSpecProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPatch
		return ret
	}).(SecretStoreSpecProviderPatchOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Akeyless() SecretStoreSpecProviderAkeylessPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAkeylessPatch {
		if v == nil {
			return nil
		}
		return v.Akeyless
	}).(SecretStoreSpecProviderAkeylessPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Alibaba() SecretStoreSpecProviderAlibabaPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAlibabaPatch {
		if v == nil {
			return nil
		}
		return v.Alibaba
	}).(SecretStoreSpecProviderAlibabaPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Aws() SecretStoreSpecProviderAwsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAwsPatch {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(SecretStoreSpecProviderAwsPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Azurekv() SecretStoreSpecProviderAzurekvPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderAzurekvPatch {
		if v == nil {
			return nil
		}
		return v.Azurekv
	}).(SecretStoreSpecProviderAzurekvPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Bitwardensecretsmanager() SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderBitwardensecretsmanagerPatch {
		if v == nil {
			return nil
		}
		return v.Bitwardensecretsmanager
	}).(SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Chef() SecretStoreSpecProviderChefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderChefPatch {
		if v == nil {
			return nil
		}
		return v.Chef
	}).(SecretStoreSpecProviderChefPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Conjur() SecretStoreSpecProviderConjurPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderConjurPatch {
		if v == nil {
			return nil
		}
		return v.Conjur
	}).(SecretStoreSpecProviderConjurPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Delinea() SecretStoreSpecProviderDelineaPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDelineaPatch {
		if v == nil {
			return nil
		}
		return v.Delinea
	}).(SecretStoreSpecProviderDelineaPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Device42() SecretStoreSpecProviderDevice42PatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDevice42Patch {
		if v == nil {
			return nil
		}
		return v.Device42
	}).(SecretStoreSpecProviderDevice42PatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Doppler() SecretStoreSpecProviderDopplerPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderDopplerPatch {
		if v == nil {
			return nil
		}
		return v.Doppler
	}).(SecretStoreSpecProviderDopplerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Fake() SecretStoreSpecProviderFakePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderFakePatch {
		if v == nil {
			return nil
		}
		return v.Fake
	}).(SecretStoreSpecProviderFakePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Fortanix() SecretStoreSpecProviderFortanixPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderFortanixPatch {
		if v == nil {
			return nil
		}
		return v.Fortanix
	}).(SecretStoreSpecProviderFortanixPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Gcpsm() SecretStoreSpecProviderGcpsmPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderGcpsmPatch {
		if v == nil {
			return nil
		}
		return v.Gcpsm
	}).(SecretStoreSpecProviderGcpsmPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Gitlab() SecretStoreSpecProviderGitlabPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderGitlabPatch {
		if v == nil {
			return nil
		}
		return v.Gitlab
	}).(SecretStoreSpecProviderGitlabPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Ibm() SecretStoreSpecProviderIbmPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderIbmPatch {
		if v == nil {
			return nil
		}
		return v.Ibm
	}).(SecretStoreSpecProviderIbmPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Infisical() SecretStoreSpecProviderInfisicalPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderInfisicalPatch {
		if v == nil {
			return nil
		}
		return v.Infisical
	}).(SecretStoreSpecProviderInfisicalPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Keepersecurity() SecretStoreSpecProviderKeepersecurityPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderKeepersecurityPatch {
		if v == nil {
			return nil
		}
		return v.Keepersecurity
	}).(SecretStoreSpecProviderKeepersecurityPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Kubernetes() SecretStoreSpecProviderKubernetesPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderKubernetesPatch {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderKubernetesPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Onboardbase() SecretStoreSpecProviderOnboardbasePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOnboardbasePatch {
		if v == nil {
			return nil
		}
		return v.Onboardbase
	}).(SecretStoreSpecProviderOnboardbasePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Onepassword() SecretStoreSpecProviderOnepasswordPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOnepasswordPatch {
		if v == nil {
			return nil
		}
		return v.Onepassword
	}).(SecretStoreSpecProviderOnepasswordPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Oracle() SecretStoreSpecProviderOraclePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderOraclePatch {
		if v == nil {
			return nil
		}
		return v.Oracle
	}).(SecretStoreSpecProviderOraclePatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Passbolt() SecretStoreSpecProviderPassboltPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPassboltPatch {
		if v == nil {
			return nil
		}
		return v.Passbolt
	}).(SecretStoreSpecProviderPassboltPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Passworddepot() SecretStoreSpecProviderPassworddepotPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPassworddepotPatch {
		if v == nil {
			return nil
		}
		return v.Passworddepot
	}).(SecretStoreSpecProviderPassworddepotPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Pulumi() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderPulumiPatch {
		if v == nil {
			return nil
		}
		return v.Pulumi
	}).(SecretStoreSpecProviderPulumiPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Scaleway() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderScalewayPatch {
		if v == nil {
			return nil
		}
		return v.Scaleway
	}).(SecretStoreSpecProviderScalewayPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Senhasegura() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderSenhaseguraPatch {
		if v == nil {
			return nil
		}
		return v.Senhasegura
	}).(SecretStoreSpecProviderSenhaseguraPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Vault() SecretStoreSpecProviderVaultPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderVaultPatch {
		if v == nil {
			return nil
		}
		return v.Vault
	}).(SecretStoreSpecProviderVaultPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Webhook() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderWebhookPatch {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(SecretStoreSpecProviderWebhookPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Yandexcertificatemanager() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderYandexcertificatemanagerPatch {
		if v == nil {
			return nil
		}
		return v.Yandexcertificatemanager
	}).(SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput)
}

func (o SecretStoreSpecProviderPatchPtrOutput) Yandexlockbox() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPatch) *SecretStoreSpecProviderYandexlockboxPatch {
		if v == nil {
			return nil
		}
		return v.Yandexlockbox
	}).(SecretStoreSpecProviderYandexlockboxPatchPtrOutput)
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumi struct {
	AccessToken *SecretStoreSpecProviderPulumiAccessToken `pulumi:"accessToken"`
	// APIURL is the URL of the Pulumi API.
	ApiUrl *string `pulumi:"apiUrl"`
	// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
	// dynamically retrieved values from supported providers including all major clouds,
	// and other Pulumi ESC environments.
	// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
	Environment *string `pulumi:"environment"`
	// Organization are a space to collaborate on shared projects and stacks.
	// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
	Organization *string `pulumi:"organization"`
}

// SecretStoreSpecProviderPulumiInput is an input type that accepts SecretStoreSpecProviderPulumiArgs and SecretStoreSpecProviderPulumiOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiInput` via:
//
//	SecretStoreSpecProviderPulumiArgs{...}
type SecretStoreSpecProviderPulumiInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiOutput() SecretStoreSpecProviderPulumiOutput
	ToSecretStoreSpecProviderPulumiOutputWithContext(context.Context) SecretStoreSpecProviderPulumiOutput
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumiArgs struct {
	AccessToken SecretStoreSpecProviderPulumiAccessTokenPtrInput `pulumi:"accessToken"`
	// APIURL is the URL of the Pulumi API.
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
	// dynamically retrieved values from supported providers including all major clouds,
	// and other Pulumi ESC environments.
	// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Organization are a space to collaborate on shared projects and stacks.
	// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
	Organization pulumi.StringPtrInput `pulumi:"organization"`
}

func (SecretStoreSpecProviderPulumiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumi)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiArgs) ToSecretStoreSpecProviderPulumiOutput() SecretStoreSpecProviderPulumiOutput {
	return i.ToSecretStoreSpecProviderPulumiOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiArgs) ToSecretStoreSpecProviderPulumiOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiOutput)
}

func (i SecretStoreSpecProviderPulumiArgs) ToSecretStoreSpecProviderPulumiPtrOutput() SecretStoreSpecProviderPulumiPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiArgs) ToSecretStoreSpecProviderPulumiPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiOutput).ToSecretStoreSpecProviderPulumiPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiPtrInput is an input type that accepts SecretStoreSpecProviderPulumiArgs, SecretStoreSpecProviderPulumiPtr and SecretStoreSpecProviderPulumiPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiPtrOutput() SecretStoreSpecProviderPulumiPtrOutput
	ToSecretStoreSpecProviderPulumiPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiPtrOutput
}

type secretStoreSpecProviderPulumiPtrType SecretStoreSpecProviderPulumiArgs

func SecretStoreSpecProviderPulumiPtr(v *SecretStoreSpecProviderPulumiArgs) SecretStoreSpecProviderPulumiPtrInput {
	return (*secretStoreSpecProviderPulumiPtrType)(v)
}

func (*secretStoreSpecProviderPulumiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumi)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiPtrType) ToSecretStoreSpecProviderPulumiPtrOutput() SecretStoreSpecProviderPulumiPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiPtrType) ToSecretStoreSpecProviderPulumiPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiPtrOutput)
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumiOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumi)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiOutput) ToSecretStoreSpecProviderPulumiOutput() SecretStoreSpecProviderPulumiOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiOutput) ToSecretStoreSpecProviderPulumiOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiOutput) ToSecretStoreSpecProviderPulumiPtrOutput() SecretStoreSpecProviderPulumiPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiOutput) ToSecretStoreSpecProviderPulumiPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumi) *SecretStoreSpecProviderPulumi {
		return &v
	}).(SecretStoreSpecProviderPulumiPtrOutput)
}

func (o SecretStoreSpecProviderPulumiOutput) AccessToken() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumi) *SecretStoreSpecProviderPulumiAccessToken { return v.AccessToken }).(SecretStoreSpecProviderPulumiAccessTokenPtrOutput)
}

// APIURL is the URL of the Pulumi API.
func (o SecretStoreSpecProviderPulumiOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumi) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
// dynamically retrieved values from supported providers including all major clouds,
// and other Pulumi ESC environments.
// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
func (o SecretStoreSpecProviderPulumiOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumi) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Organization are a space to collaborate on shared projects and stacks.
// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
func (o SecretStoreSpecProviderPulumiOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumi) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPulumiPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumi)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiPtrOutput) ToSecretStoreSpecProviderPulumiPtrOutput() SecretStoreSpecProviderPulumiPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPtrOutput) ToSecretStoreSpecProviderPulumiPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPtrOutput) Elem() SecretStoreSpecProviderPulumiOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumi) SecretStoreSpecProviderPulumi {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumi
		return ret
	}).(SecretStoreSpecProviderPulumiOutput)
}

func (o SecretStoreSpecProviderPulumiPtrOutput) AccessToken() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumi) *SecretStoreSpecProviderPulumiAccessToken {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(SecretStoreSpecProviderPulumiAccessTokenPtrOutput)
}

// APIURL is the URL of the Pulumi API.
func (o SecretStoreSpecProviderPulumiPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumi) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
// dynamically retrieved values from supported providers including all major clouds,
// and other Pulumi ESC environments.
// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
func (o SecretStoreSpecProviderPulumiPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumi) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Organization are a space to collaborate on shared projects and stacks.
// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
func (o SecretStoreSpecProviderPulumiPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumi) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessToken struct {
	SecretRef *SecretStoreSpecProviderPulumiAccessTokenSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderPulumiAccessTokenInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenArgs and SecretStoreSpecProviderPulumiAccessTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenInput` via:
//
//	SecretStoreSpecProviderPulumiAccessTokenArgs{...}
type SecretStoreSpecProviderPulumiAccessTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenOutput() SecretStoreSpecProviderPulumiAccessTokenOutput
	ToSecretStoreSpecProviderPulumiAccessTokenOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenOutput
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessTokenArgs struct {
	SecretRef SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderPulumiAccessTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiAccessTokenArgs) ToSecretStoreSpecProviderPulumiAccessTokenOutput() SecretStoreSpecProviderPulumiAccessTokenOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenArgs) ToSecretStoreSpecProviderPulumiAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenOutput)
}

func (i SecretStoreSpecProviderPulumiAccessTokenArgs) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenArgs) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenOutput).ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiAccessTokenPtrInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenArgs, SecretStoreSpecProviderPulumiAccessTokenPtr and SecretStoreSpecProviderPulumiAccessTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiAccessTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiAccessTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPtrOutput
	ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenPtrOutput
}

type secretStoreSpecProviderPulumiAccessTokenPtrType SecretStoreSpecProviderPulumiAccessTokenArgs

func SecretStoreSpecProviderPulumiAccessTokenPtr(v *SecretStoreSpecProviderPulumiAccessTokenArgs) SecretStoreSpecProviderPulumiAccessTokenPtrInput {
	return (*secretStoreSpecProviderPulumiAccessTokenPtrType)(v)
}

func (*secretStoreSpecProviderPulumiAccessTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiAccessTokenPtrType) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiAccessTokenPtrType) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenPtrOutput)
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenOutput) ToSecretStoreSpecProviderPulumiAccessTokenOutput() SecretStoreSpecProviderPulumiAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenOutput) ToSecretStoreSpecProviderPulumiAccessTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenOutput) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiAccessTokenOutput) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumiAccessToken) *SecretStoreSpecProviderPulumiAccessToken {
		return &v
	}).(SecretStoreSpecProviderPulumiAccessTokenPtrOutput)
}

func (o SecretStoreSpecProviderPulumiAccessTokenOutput) SecretRef() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessToken) *SecretStoreSpecProviderPulumiAccessTokenSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput)
}

type SecretStoreSpecProviderPulumiAccessTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPtrOutput) Elem() SecretStoreSpecProviderPulumiAccessTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessToken) SecretStoreSpecProviderPulumiAccessToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumiAccessToken
		return ret
	}).(SecretStoreSpecProviderPulumiAccessTokenOutput)
}

func (o SecretStoreSpecProviderPulumiAccessTokenPtrOutput) SecretRef() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessToken) *SecretStoreSpecProviderPulumiAccessTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput)
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessTokenPatch struct {
	SecretRef *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderPulumiAccessTokenPatchInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenPatchArgs and SecretStoreSpecProviderPulumiAccessTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenPatchInput` via:
//
//	SecretStoreSpecProviderPulumiAccessTokenPatchArgs{...}
type SecretStoreSpecProviderPulumiAccessTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenPatchOutput() SecretStoreSpecProviderPulumiAccessTokenPatchOutput
	ToSecretStoreSpecProviderPulumiAccessTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchOutput
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessTokenPatchArgs struct {
	SecretRef SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderPulumiAccessTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiAccessTokenPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenPatchOutput() SecretStoreSpecProviderPulumiAccessTokenPatchOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenPatchOutput)
}

func (i SecretStoreSpecProviderPulumiAccessTokenPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenPatchOutput).ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenPatchArgs, SecretStoreSpecProviderPulumiAccessTokenPatchPtr and SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiAccessTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput
	ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput
}

type secretStoreSpecProviderPulumiAccessTokenPatchPtrType SecretStoreSpecProviderPulumiAccessTokenPatchArgs

func SecretStoreSpecProviderPulumiAccessTokenPatchPtr(v *SecretStoreSpecProviderPulumiAccessTokenPatchArgs) SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput {
	return (*secretStoreSpecProviderPulumiAccessTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderPulumiAccessTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiAccessTokenPatchPtrType) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiAccessTokenPatchPtrType) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput)
}

// AccessToken is the access tokens to sign in to the Pulumi Cloud Console.
type SecretStoreSpecProviderPulumiAccessTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchOutput() SecretStoreSpecProviderPulumiAccessTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumiAccessTokenPatch) *SecretStoreSpecProviderPulumiAccessTokenPatch {
		return &v
	}).(SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput)
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchOutput) SecretRef() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenPatch) *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput) Elem() SecretStoreSpecProviderPulumiAccessTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenPatch) SecretStoreSpecProviderPulumiAccessTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumiAccessTokenPatch
		return ret
	}).(SecretStoreSpecProviderPulumiAccessTokenPatchOutput)
}

func (o SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput) SecretRef() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenPatch) *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput)
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPulumiAccessTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs and SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs{...}
type SecretStoreSpecProviderPulumiAccessTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput
	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput).ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs, SecretStoreSpecProviderPulumiAccessTokenSecretRefPtr and SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput
}

type secretStoreSpecProviderPulumiAccessTokenSecretRefPtrType SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs

func SecretStoreSpecProviderPulumiAccessTokenSecretRefPtr(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderPulumiAccessTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderPulumiAccessTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiAccessTokenSecretRefPtrType) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiAccessTokenSecretRefPtrType) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput)
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumiAccessTokenSecretRef) *SecretStoreSpecProviderPulumiAccessTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRef) SecretStoreSpecProviderPulumiAccessTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumiAccessTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs and SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs{...}
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput
	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput).ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs, SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtr and SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput
}

type secretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrType SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs

func SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtr(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput)
}

// SecretRef is a reference to a secret containing the Pulumi API token.
type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiAccessTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumiPatch struct {
	AccessToken *SecretStoreSpecProviderPulumiAccessTokenPatch `pulumi:"accessToken"`
	// APIURL is the URL of the Pulumi API.
	ApiUrl *string `pulumi:"apiUrl"`
	// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
	// dynamically retrieved values from supported providers including all major clouds,
	// and other Pulumi ESC environments.
	// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
	Environment *string `pulumi:"environment"`
	// Organization are a space to collaborate on shared projects and stacks.
	// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
	Organization *string `pulumi:"organization"`
}

// SecretStoreSpecProviderPulumiPatchInput is an input type that accepts SecretStoreSpecProviderPulumiPatchArgs and SecretStoreSpecProviderPulumiPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiPatchInput` via:
//
//	SecretStoreSpecProviderPulumiPatchArgs{...}
type SecretStoreSpecProviderPulumiPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiPatchOutput() SecretStoreSpecProviderPulumiPatchOutput
	ToSecretStoreSpecProviderPulumiPatchOutputWithContext(context.Context) SecretStoreSpecProviderPulumiPatchOutput
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumiPatchArgs struct {
	AccessToken SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput `pulumi:"accessToken"`
	// APIURL is the URL of the Pulumi API.
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
	// dynamically retrieved values from supported providers including all major clouds,
	// and other Pulumi ESC environments.
	// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// Organization are a space to collaborate on shared projects and stacks.
	// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
	Organization pulumi.StringPtrInput `pulumi:"organization"`
}

func (SecretStoreSpecProviderPulumiPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderPulumiPatchArgs) ToSecretStoreSpecProviderPulumiPatchOutput() SecretStoreSpecProviderPulumiPatchOutput {
	return i.ToSecretStoreSpecProviderPulumiPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiPatchArgs) ToSecretStoreSpecProviderPulumiPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiPatchOutput)
}

func (i SecretStoreSpecProviderPulumiPatchArgs) ToSecretStoreSpecProviderPulumiPatchPtrOutput() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderPulumiPatchArgs) ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiPatchOutput).ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderPulumiPatchPtrInput is an input type that accepts SecretStoreSpecProviderPulumiPatchArgs, SecretStoreSpecProviderPulumiPatchPtr and SecretStoreSpecProviderPulumiPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderPulumiPatchPtrInput` via:
//
//	        SecretStoreSpecProviderPulumiPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderPulumiPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderPulumiPatchPtrOutput() SecretStoreSpecProviderPulumiPatchPtrOutput
	ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderPulumiPatchPtrOutput
}

type secretStoreSpecProviderPulumiPatchPtrType SecretStoreSpecProviderPulumiPatchArgs

func SecretStoreSpecProviderPulumiPatchPtr(v *SecretStoreSpecProviderPulumiPatchArgs) SecretStoreSpecProviderPulumiPatchPtrInput {
	return (*secretStoreSpecProviderPulumiPatchPtrType)(v)
}

func (*secretStoreSpecProviderPulumiPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderPulumiPatchPtrType) ToSecretStoreSpecProviderPulumiPatchPtrOutput() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return i.ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderPulumiPatchPtrType) ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderPulumiPatchPtrOutput)
}

// Pulumi configures this store to sync secrets using the Pulumi provider
type SecretStoreSpecProviderPulumiPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderPulumiPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiPatchOutput) ToSecretStoreSpecProviderPulumiPatchOutput() SecretStoreSpecProviderPulumiPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPatchOutput) ToSecretStoreSpecProviderPulumiPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPatchOutput) ToSecretStoreSpecProviderPulumiPatchPtrOutput() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o.ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderPulumiPatchOutput) ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderPulumiPatch) *SecretStoreSpecProviderPulumiPatch {
		return &v
	}).(SecretStoreSpecProviderPulumiPatchPtrOutput)
}

func (o SecretStoreSpecProviderPulumiPatchOutput) AccessToken() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiPatch) *SecretStoreSpecProviderPulumiAccessTokenPatch {
		return v.AccessToken
	}).(SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput)
}

// APIURL is the URL of the Pulumi API.
func (o SecretStoreSpecProviderPulumiPatchOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiPatch) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
// dynamically retrieved values from supported providers including all major clouds,
// and other Pulumi ESC environments.
// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
func (o SecretStoreSpecProviderPulumiPatchOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiPatch) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// Organization are a space to collaborate on shared projects and stacks.
// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
func (o SecretStoreSpecProviderPulumiPatchOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderPulumiPatch) *string { return v.Organization }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderPulumiPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderPulumiPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderPulumiPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderPulumiPatchPtrOutput) ToSecretStoreSpecProviderPulumiPatchPtrOutput() SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPatchPtrOutput) ToSecretStoreSpecProviderPulumiPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderPulumiPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderPulumiPatchPtrOutput) Elem() SecretStoreSpecProviderPulumiPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiPatch) SecretStoreSpecProviderPulumiPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderPulumiPatch
		return ret
	}).(SecretStoreSpecProviderPulumiPatchOutput)
}

func (o SecretStoreSpecProviderPulumiPatchPtrOutput) AccessToken() SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiPatch) *SecretStoreSpecProviderPulumiAccessTokenPatch {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput)
}

// APIURL is the URL of the Pulumi API.
func (o SecretStoreSpecProviderPulumiPatchPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// Environment are YAML documents composed of static key-value pairs, programmatic expressions,
// dynamically retrieved values from supported providers including all major clouds,
// and other Pulumi ESC environments.
// To create a new environment, visit https://www.pulumi.com/docs/esc/environments/ for more information.
func (o SecretStoreSpecProviderPulumiPatchPtrOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Environment
	}).(pulumi.StringPtrOutput)
}

// Organization are a space to collaborate on shared projects and stacks.
// To create a new organization, visit https://app.pulumi.com/ and click "New Organization".
func (o SecretStoreSpecProviderPulumiPatchPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderPulumiPatch) *string {
		if v == nil {
			return nil
		}
		return v.Organization
	}).(pulumi.StringPtrOutput)
}

// Scaleway
type SecretStoreSpecProviderScaleway struct {
	AccessKey *SecretStoreSpecProviderScalewayAccessKey `pulumi:"accessKey"`
	// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
	ApiUrl *string `pulumi:"apiUrl"`
	// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
	ProjectId *string `pulumi:"projectId"`
	// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
	Region    *string                                   `pulumi:"region"`
	SecretKey *SecretStoreSpecProviderScalewaySecretKey `pulumi:"secretKey"`
}

// SecretStoreSpecProviderScalewayInput is an input type that accepts SecretStoreSpecProviderScalewayArgs and SecretStoreSpecProviderScalewayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayInput` via:
//
//	SecretStoreSpecProviderScalewayArgs{...}
type SecretStoreSpecProviderScalewayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayOutput() SecretStoreSpecProviderScalewayOutput
	ToSecretStoreSpecProviderScalewayOutputWithContext(context.Context) SecretStoreSpecProviderScalewayOutput
}

// Scaleway
type SecretStoreSpecProviderScalewayArgs struct {
	AccessKey SecretStoreSpecProviderScalewayAccessKeyPtrInput `pulumi:"accessKey"`
	// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
	Region    pulumi.StringPtrInput                            `pulumi:"region"`
	SecretKey SecretStoreSpecProviderScalewaySecretKeyPtrInput `pulumi:"secretKey"`
}

func (SecretStoreSpecProviderScalewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScaleway)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayArgs) ToSecretStoreSpecProviderScalewayOutput() SecretStoreSpecProviderScalewayOutput {
	return i.ToSecretStoreSpecProviderScalewayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayArgs) ToSecretStoreSpecProviderScalewayOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayOutput)
}

func (i SecretStoreSpecProviderScalewayArgs) ToSecretStoreSpecProviderScalewayPtrOutput() SecretStoreSpecProviderScalewayPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayArgs) ToSecretStoreSpecProviderScalewayPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayOutput).ToSecretStoreSpecProviderScalewayPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayPtrInput is an input type that accepts SecretStoreSpecProviderScalewayArgs, SecretStoreSpecProviderScalewayPtr and SecretStoreSpecProviderScalewayPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayPtrOutput() SecretStoreSpecProviderScalewayPtrOutput
	ToSecretStoreSpecProviderScalewayPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayPtrOutput
}

type secretStoreSpecProviderScalewayPtrType SecretStoreSpecProviderScalewayArgs

func SecretStoreSpecProviderScalewayPtr(v *SecretStoreSpecProviderScalewayArgs) SecretStoreSpecProviderScalewayPtrInput {
	return (*secretStoreSpecProviderScalewayPtrType)(v)
}

func (*secretStoreSpecProviderScalewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScaleway)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayPtrType) ToSecretStoreSpecProviderScalewayPtrOutput() SecretStoreSpecProviderScalewayPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayPtrType) ToSecretStoreSpecProviderScalewayPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayPtrOutput)
}

// Scaleway
type SecretStoreSpecProviderScalewayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScaleway)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayOutput) ToSecretStoreSpecProviderScalewayOutput() SecretStoreSpecProviderScalewayOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayOutput) ToSecretStoreSpecProviderScalewayOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayOutput) ToSecretStoreSpecProviderScalewayPtrOutput() SecretStoreSpecProviderScalewayPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayOutput) ToSecretStoreSpecProviderScalewayPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScaleway) *SecretStoreSpecProviderScaleway {
		return &v
	}).(SecretStoreSpecProviderScalewayPtrOutput)
}

func (o SecretStoreSpecProviderScalewayOutput) AccessKey() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScaleway) *SecretStoreSpecProviderScalewayAccessKey { return v.AccessKey }).(SecretStoreSpecProviderScalewayAccessKeyPtrOutput)
}

// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
func (o SecretStoreSpecProviderScalewayOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScaleway) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
func (o SecretStoreSpecProviderScalewayOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScaleway) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
func (o SecretStoreSpecProviderScalewayOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScaleway) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderScalewayOutput) SecretKey() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScaleway) *SecretStoreSpecProviderScalewaySecretKey { return v.SecretKey }).(SecretStoreSpecProviderScalewaySecretKeyPtrOutput)
}

type SecretStoreSpecProviderScalewayPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScaleway)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayPtrOutput) ToSecretStoreSpecProviderScalewayPtrOutput() SecretStoreSpecProviderScalewayPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPtrOutput) ToSecretStoreSpecProviderScalewayPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPtrOutput) Elem() SecretStoreSpecProviderScalewayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) SecretStoreSpecProviderScaleway {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScaleway
		return ret
	}).(SecretStoreSpecProviderScalewayOutput)
}

func (o SecretStoreSpecProviderScalewayPtrOutput) AccessKey() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) *SecretStoreSpecProviderScalewayAccessKey {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(SecretStoreSpecProviderScalewayAccessKeyPtrOutput)
}

// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
func (o SecretStoreSpecProviderScalewayPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
func (o SecretStoreSpecProviderScalewayPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
func (o SecretStoreSpecProviderScalewayPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderScalewayPtrOutput) SecretKey() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScaleway) *SecretStoreSpecProviderScalewaySecretKey {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(SecretStoreSpecProviderScalewaySecretKeyPtrOutput)
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKey struct {
	SecretRef *SecretStoreSpecProviderScalewayAccessKeySecretRef `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderScalewayAccessKeyInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeyArgs and SecretStoreSpecProviderScalewayAccessKeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeyInput` via:
//
//	SecretStoreSpecProviderScalewayAccessKeyArgs{...}
type SecretStoreSpecProviderScalewayAccessKeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeyOutput() SecretStoreSpecProviderScalewayAccessKeyOutput
	ToSecretStoreSpecProviderScalewayAccessKeyOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeyOutput
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKeyArgs struct {
	SecretRef SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderScalewayAccessKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKey)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayAccessKeyArgs) ToSecretStoreSpecProviderScalewayAccessKeyOutput() SecretStoreSpecProviderScalewayAccessKeyOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeyArgs) ToSecretStoreSpecProviderScalewayAccessKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyOutput)
}

func (i SecretStoreSpecProviderScalewayAccessKeyArgs) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeyArgs) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyOutput).ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayAccessKeyPtrInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeyArgs, SecretStoreSpecProviderScalewayAccessKeyPtr and SecretStoreSpecProviderScalewayAccessKeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeyPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayAccessKeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayAccessKeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeyPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPtrOutput
	ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeyPtrOutput
}

type secretStoreSpecProviderScalewayAccessKeyPtrType SecretStoreSpecProviderScalewayAccessKeyArgs

func SecretStoreSpecProviderScalewayAccessKeyPtr(v *SecretStoreSpecProviderScalewayAccessKeyArgs) SecretStoreSpecProviderScalewayAccessKeyPtrInput {
	return (*secretStoreSpecProviderScalewayAccessKeyPtrType)(v)
}

func (*secretStoreSpecProviderScalewayAccessKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKey)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayAccessKeyPtrType) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayAccessKeyPtrType) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyPtrOutput)
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeyOutput) ToSecretStoreSpecProviderScalewayAccessKeyOutput() SecretStoreSpecProviderScalewayAccessKeyOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyOutput) ToSecretStoreSpecProviderScalewayAccessKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyOutput) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayAccessKeyOutput) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewayAccessKey) *SecretStoreSpecProviderScalewayAccessKey {
		return &v
	}).(SecretStoreSpecProviderScalewayAccessKeyPtrOutput)
}

func (o SecretStoreSpecProviderScalewayAccessKeyOutput) SecretRef() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKey) *SecretStoreSpecProviderScalewayAccessKeySecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewayAccessKeyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKey) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewayAccessKeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeyPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPtrOutput) Elem() SecretStoreSpecProviderScalewayAccessKeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKey) SecretStoreSpecProviderScalewayAccessKey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewayAccessKey
		return ret
	}).(SecretStoreSpecProviderScalewayAccessKeyOutput)
}

func (o SecretStoreSpecProviderScalewayAccessKeyPtrOutput) SecretRef() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKey) *SecretStoreSpecProviderScalewayAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewayAccessKeyPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKey) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKeyPatch struct {
	SecretRef *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderScalewayAccessKeyPatchInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeyPatchArgs and SecretStoreSpecProviderScalewayAccessKeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeyPatchInput` via:
//
//	SecretStoreSpecProviderScalewayAccessKeyPatchArgs{...}
type SecretStoreSpecProviderScalewayAccessKeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeyPatchOutput() SecretStoreSpecProviderScalewayAccessKeyPatchOutput
	ToSecretStoreSpecProviderScalewayAccessKeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchOutput
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKeyPatchArgs struct {
	SecretRef SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderScalewayAccessKeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayAccessKeyPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeyPatchOutput() SecretStoreSpecProviderScalewayAccessKeyPatchOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeyPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyPatchOutput)
}

func (i SecretStoreSpecProviderScalewayAccessKeyPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeyPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyPatchOutput).ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeyPatchArgs, SecretStoreSpecProviderScalewayAccessKeyPatchPtr and SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayAccessKeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput
	ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput
}

type secretStoreSpecProviderScalewayAccessKeyPatchPtrType SecretStoreSpecProviderScalewayAccessKeyPatchArgs

func SecretStoreSpecProviderScalewayAccessKeyPatchPtr(v *SecretStoreSpecProviderScalewayAccessKeyPatchArgs) SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput {
	return (*secretStoreSpecProviderScalewayAccessKeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderScalewayAccessKeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayAccessKeyPatchPtrType) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayAccessKeyPatchPtrType) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput)
}

// AccessKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewayAccessKeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchOutput() SecretStoreSpecProviderScalewayAccessKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewayAccessKeyPatch) *SecretStoreSpecProviderScalewayAccessKeyPatch {
		return &v
	}).(SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) SecretRef() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeyPatch) *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewayAccessKeyPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeyPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) Elem() SecretStoreSpecProviderScalewayAccessKeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeyPatch) SecretStoreSpecProviderScalewayAccessKeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewayAccessKeyPatch
		return ret
	}).(SecretStoreSpecProviderScalewayAccessKeyPatchOutput)
}

func (o SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) SecretRef() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeyPatch) *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderScalewayAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeySecretRefArgs and SecretStoreSpecProviderScalewayAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderScalewayAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderScalewayAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefOutput
	ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefOutput).ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeySecretRefArgs, SecretStoreSpecProviderScalewayAccessKeySecretRefPtr and SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderScalewayAccessKeySecretRefPtrType SecretStoreSpecProviderScalewayAccessKeySecretRefArgs

func SecretStoreSpecProviderScalewayAccessKeySecretRefPtr(v *SecretStoreSpecProviderScalewayAccessKeySecretRefArgs) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderScalewayAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderScalewayAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayAccessKeySecretRefPtrType) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayAccessKeySecretRefPtrType) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewayAccessKeySecretRef) *SecretStoreSpecProviderScalewayAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderScalewayAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRef) SecretStoreSpecProviderScalewayAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewayAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderScalewayAccessKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs and SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderScalewayAccessKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput
	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput).ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs, SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtr and SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrType SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs

func SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtr(v *SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) SecretStoreSpecProviderScalewayAccessKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewayAccessKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Scaleway
type SecretStoreSpecProviderScalewayPatch struct {
	AccessKey *SecretStoreSpecProviderScalewayAccessKeyPatch `pulumi:"accessKey"`
	// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
	ApiUrl *string `pulumi:"apiUrl"`
	// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
	ProjectId *string `pulumi:"projectId"`
	// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
	Region    *string                                        `pulumi:"region"`
	SecretKey *SecretStoreSpecProviderScalewaySecretKeyPatch `pulumi:"secretKey"`
}

// SecretStoreSpecProviderScalewayPatchInput is an input type that accepts SecretStoreSpecProviderScalewayPatchArgs and SecretStoreSpecProviderScalewayPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayPatchInput` via:
//
//	SecretStoreSpecProviderScalewayPatchArgs{...}
type SecretStoreSpecProviderScalewayPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayPatchOutput() SecretStoreSpecProviderScalewayPatchOutput
	ToSecretStoreSpecProviderScalewayPatchOutputWithContext(context.Context) SecretStoreSpecProviderScalewayPatchOutput
}

// Scaleway
type SecretStoreSpecProviderScalewayPatchArgs struct {
	AccessKey SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput `pulumi:"accessKey"`
	// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
	ApiUrl pulumi.StringPtrInput `pulumi:"apiUrl"`
	// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
	Region    pulumi.StringPtrInput                                 `pulumi:"region"`
	SecretKey SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput `pulumi:"secretKey"`
}

func (SecretStoreSpecProviderScalewayPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewayPatchArgs) ToSecretStoreSpecProviderScalewayPatchOutput() SecretStoreSpecProviderScalewayPatchOutput {
	return i.ToSecretStoreSpecProviderScalewayPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayPatchArgs) ToSecretStoreSpecProviderScalewayPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayPatchOutput)
}

func (i SecretStoreSpecProviderScalewayPatchArgs) ToSecretStoreSpecProviderScalewayPatchPtrOutput() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewayPatchArgs) ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayPatchOutput).ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewayPatchPtrInput is an input type that accepts SecretStoreSpecProviderScalewayPatchArgs, SecretStoreSpecProviderScalewayPatchPtr and SecretStoreSpecProviderScalewayPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewayPatchPtrInput` via:
//
//	        SecretStoreSpecProviderScalewayPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewayPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewayPatchPtrOutput() SecretStoreSpecProviderScalewayPatchPtrOutput
	ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewayPatchPtrOutput
}

type secretStoreSpecProviderScalewayPatchPtrType SecretStoreSpecProviderScalewayPatchArgs

func SecretStoreSpecProviderScalewayPatchPtr(v *SecretStoreSpecProviderScalewayPatchArgs) SecretStoreSpecProviderScalewayPatchPtrInput {
	return (*secretStoreSpecProviderScalewayPatchPtrType)(v)
}

func (*secretStoreSpecProviderScalewayPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewayPatchPtrType) ToSecretStoreSpecProviderScalewayPatchPtrOutput() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewayPatchPtrType) ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewayPatchPtrOutput)
}

// Scaleway
type SecretStoreSpecProviderScalewayPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewayPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayPatchOutput) ToSecretStoreSpecProviderScalewayPatchOutput() SecretStoreSpecProviderScalewayPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPatchOutput) ToSecretStoreSpecProviderScalewayPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPatchOutput) ToSecretStoreSpecProviderScalewayPatchPtrOutput() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o.ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewayPatchOutput) ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewayPatch) *SecretStoreSpecProviderScalewayPatch {
		return &v
	}).(SecretStoreSpecProviderScalewayPatchPtrOutput)
}

func (o SecretStoreSpecProviderScalewayPatchOutput) AccessKey() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayPatch) *SecretStoreSpecProviderScalewayAccessKeyPatch {
		return v.AccessKey
	}).(SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput)
}

// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
func (o SecretStoreSpecProviderScalewayPatchOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayPatch) *string { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
func (o SecretStoreSpecProviderScalewayPatchOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayPatch) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
func (o SecretStoreSpecProviderScalewayPatchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayPatch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderScalewayPatchOutput) SecretKey() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewayPatch) *SecretStoreSpecProviderScalewaySecretKeyPatch {
		return v.SecretKey
	}).(SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput)
}

type SecretStoreSpecProviderScalewayPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewayPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewayPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewayPatchPtrOutput) ToSecretStoreSpecProviderScalewayPatchPtrOutput() SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPatchPtrOutput) ToSecretStoreSpecProviderScalewayPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewayPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewayPatchPtrOutput) Elem() SecretStoreSpecProviderScalewayPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) SecretStoreSpecProviderScalewayPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewayPatch
		return ret
	}).(SecretStoreSpecProviderScalewayPatchOutput)
}

func (o SecretStoreSpecProviderScalewayPatchPtrOutput) AccessKey() SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) *SecretStoreSpecProviderScalewayAccessKeyPatch {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput)
}

// APIURL is the url of the api to use. Defaults to https://api.scaleway.com
func (o SecretStoreSpecProviderScalewayPatchPtrOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiUrl
	}).(pulumi.StringPtrOutput)
}

// ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings
func (o SecretStoreSpecProviderScalewayPatchPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone
func (o SecretStoreSpecProviderScalewayPatchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderScalewayPatchPtrOutput) SecretKey() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewayPatch) *SecretStoreSpecProviderScalewaySecretKeyPatch {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput)
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKey struct {
	SecretRef *SecretStoreSpecProviderScalewaySecretKeySecretRef `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderScalewaySecretKeyInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeyArgs and SecretStoreSpecProviderScalewaySecretKeyOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeyInput` via:
//
//	SecretStoreSpecProviderScalewaySecretKeyArgs{...}
type SecretStoreSpecProviderScalewaySecretKeyInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeyOutput() SecretStoreSpecProviderScalewaySecretKeyOutput
	ToSecretStoreSpecProviderScalewaySecretKeyOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeyOutput
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKeyArgs struct {
	SecretRef SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderScalewaySecretKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKey)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewaySecretKeyArgs) ToSecretStoreSpecProviderScalewaySecretKeyOutput() SecretStoreSpecProviderScalewaySecretKeyOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeyArgs) ToSecretStoreSpecProviderScalewaySecretKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyOutput)
}

func (i SecretStoreSpecProviderScalewaySecretKeyArgs) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeyArgs) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyOutput).ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewaySecretKeyPtrInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeyArgs, SecretStoreSpecProviderScalewaySecretKeyPtr and SecretStoreSpecProviderScalewaySecretKeyPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeyPtrInput` via:
//
//	        SecretStoreSpecProviderScalewaySecretKeyArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewaySecretKeyPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeyPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPtrOutput
	ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeyPtrOutput
}

type secretStoreSpecProviderScalewaySecretKeyPtrType SecretStoreSpecProviderScalewaySecretKeyArgs

func SecretStoreSpecProviderScalewaySecretKeyPtr(v *SecretStoreSpecProviderScalewaySecretKeyArgs) SecretStoreSpecProviderScalewaySecretKeyPtrInput {
	return (*secretStoreSpecProviderScalewaySecretKeyPtrType)(v)
}

func (*secretStoreSpecProviderScalewaySecretKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKey)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewaySecretKeyPtrType) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewaySecretKeyPtrType) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyPtrOutput)
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKeyOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeyOutput) ToSecretStoreSpecProviderScalewaySecretKeyOutput() SecretStoreSpecProviderScalewaySecretKeyOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyOutput) ToSecretStoreSpecProviderScalewaySecretKeyOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyOutput) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o.ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewaySecretKeyOutput) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewaySecretKey) *SecretStoreSpecProviderScalewaySecretKey {
		return &v
	}).(SecretStoreSpecProviderScalewaySecretKeyPtrOutput)
}

func (o SecretStoreSpecProviderScalewaySecretKeyOutput) SecretRef() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKey) *SecretStoreSpecProviderScalewaySecretKeySecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewaySecretKeyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKey) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewaySecretKeyPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKey)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeyPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeyPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPtrOutput) Elem() SecretStoreSpecProviderScalewaySecretKeyOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKey) SecretStoreSpecProviderScalewaySecretKey {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewaySecretKey
		return ret
	}).(SecretStoreSpecProviderScalewaySecretKeyOutput)
}

func (o SecretStoreSpecProviderScalewaySecretKeyPtrOutput) SecretRef() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKey) *SecretStoreSpecProviderScalewaySecretKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewaySecretKeyPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKey) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKeyPatch struct {
	SecretRef *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value *string `pulumi:"value"`
}

// SecretStoreSpecProviderScalewaySecretKeyPatchInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeyPatchArgs and SecretStoreSpecProviderScalewaySecretKeyPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeyPatchInput` via:
//
//	SecretStoreSpecProviderScalewaySecretKeyPatchArgs{...}
type SecretStoreSpecProviderScalewaySecretKeyPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeyPatchOutput() SecretStoreSpecProviderScalewaySecretKeyPatchOutput
	ToSecretStoreSpecProviderScalewaySecretKeyPatchOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchOutput
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKeyPatchArgs struct {
	SecretRef SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput `pulumi:"secretRef"`
	// Value can be specified directly to set a value without using a secret.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SecretStoreSpecProviderScalewaySecretKeyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewaySecretKeyPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeyPatchOutput() SecretStoreSpecProviderScalewaySecretKeyPatchOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeyPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyPatchOutput)
}

func (i SecretStoreSpecProviderScalewaySecretKeyPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeyPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyPatchOutput).ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeyPatchArgs, SecretStoreSpecProviderScalewaySecretKeyPatchPtr and SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput` via:
//
//	        SecretStoreSpecProviderScalewaySecretKeyPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput
	ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput
}

type secretStoreSpecProviderScalewaySecretKeyPatchPtrType SecretStoreSpecProviderScalewaySecretKeyPatchArgs

func SecretStoreSpecProviderScalewaySecretKeyPatchPtr(v *SecretStoreSpecProviderScalewaySecretKeyPatchArgs) SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput {
	return (*secretStoreSpecProviderScalewaySecretKeyPatchPtrType)(v)
}

func (*secretStoreSpecProviderScalewaySecretKeyPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeyPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewaySecretKeyPatchPtrType) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewaySecretKeyPatchPtrType) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput)
}

// SecretKey is the non-secret part of the api key.
type SecretStoreSpecProviderScalewaySecretKeyPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchOutput() SecretStoreSpecProviderScalewaySecretKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o.ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewaySecretKeyPatch) *SecretStoreSpecProviderScalewaySecretKeyPatch {
		return &v
	}).(SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput)
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) SecretRef() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeyPatch) *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewaySecretKeyPatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeyPatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeyPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeyPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) Elem() SecretStoreSpecProviderScalewaySecretKeyPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeyPatch) SecretStoreSpecProviderScalewaySecretKeyPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewaySecretKeyPatch
		return ret
	}).(SecretStoreSpecProviderScalewaySecretKeyPatchOutput)
}

func (o SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) SecretRef() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeyPatch) *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput)
}

// Value can be specified directly to set a value without using a secret.
func (o SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeyPatch) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderScalewaySecretKeySecretRefInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeySecretRefArgs and SecretStoreSpecProviderScalewaySecretKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeySecretRefInput` via:
//
//	SecretStoreSpecProviderScalewaySecretKeySecretRefArgs{...}
type SecretStoreSpecProviderScalewaySecretKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefOutput
	ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefOutput)
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefOutput).ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeySecretRefArgs, SecretStoreSpecProviderScalewaySecretKeySecretRefPtr and SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderScalewaySecretKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput
	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput
}

type secretStoreSpecProviderScalewaySecretKeySecretRefPtrType SecretStoreSpecProviderScalewaySecretKeySecretRefArgs

func SecretStoreSpecProviderScalewaySecretKeySecretRefPtr(v *SecretStoreSpecProviderScalewaySecretKeySecretRefArgs) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput {
	return (*secretStoreSpecProviderScalewaySecretKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderScalewaySecretKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewaySecretKeySecretRefPtrType) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewaySecretKeySecretRefPtrType) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewaySecretKeySecretRef) *SecretStoreSpecProviderScalewaySecretKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderScalewaySecretKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRef) SecretStoreSpecProviderScalewaySecretKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewaySecretKeySecretRef
		return ret
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderScalewaySecretKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs and SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderScalewaySecretKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput
	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput).ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs, SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtr and SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrType SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs

func SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtr(v *SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrType) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrType) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput)
}

// SecretRef references a key in a secret that will be used as value.
type SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderScalewaySecretKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) SecretStoreSpecProviderScalewaySecretKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderScalewaySecretKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderScalewaySecretKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhasegura struct {
	Auth *SecretStoreSpecProviderSenhaseguraAuth `pulumi:"auth"`
	// IgnoreSslCertificate defines if SSL certificate must be ignored
	IgnoreSslCertificate *bool `pulumi:"ignoreSslCertificate"`
	// Module defines which senhasegura module should be used to get secrets
	Module *string `pulumi:"module"`
	// URL of senhasegura
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderSenhaseguraInput is an input type that accepts SecretStoreSpecProviderSenhaseguraArgs and SecretStoreSpecProviderSenhaseguraOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraInput` via:
//
//	SecretStoreSpecProviderSenhaseguraArgs{...}
type SecretStoreSpecProviderSenhaseguraInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraOutput() SecretStoreSpecProviderSenhaseguraOutput
	ToSecretStoreSpecProviderSenhaseguraOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraOutput
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhaseguraArgs struct {
	Auth SecretStoreSpecProviderSenhaseguraAuthPtrInput `pulumi:"auth"`
	// IgnoreSslCertificate defines if SSL certificate must be ignored
	IgnoreSslCertificate pulumi.BoolPtrInput `pulumi:"ignoreSslCertificate"`
	// Module defines which senhasegura module should be used to get secrets
	Module pulumi.StringPtrInput `pulumi:"module"`
	// URL of senhasegura
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderSenhaseguraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhasegura)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraArgs) ToSecretStoreSpecProviderSenhaseguraOutput() SecretStoreSpecProviderSenhaseguraOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraArgs) ToSecretStoreSpecProviderSenhaseguraOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraOutput)
}

func (i SecretStoreSpecProviderSenhaseguraArgs) ToSecretStoreSpecProviderSenhaseguraPtrOutput() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraArgs) ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraOutput).ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraArgs, SecretStoreSpecProviderSenhaseguraPtr and SecretStoreSpecProviderSenhaseguraPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraPtrOutput() SecretStoreSpecProviderSenhaseguraPtrOutput
	ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraPtrOutput
}

type secretStoreSpecProviderSenhaseguraPtrType SecretStoreSpecProviderSenhaseguraArgs

func SecretStoreSpecProviderSenhaseguraPtr(v *SecretStoreSpecProviderSenhaseguraArgs) SecretStoreSpecProviderSenhaseguraPtrInput {
	return (*secretStoreSpecProviderSenhaseguraPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhasegura)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraPtrType) ToSecretStoreSpecProviderSenhaseguraPtrOutput() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraPtrType) ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraPtrOutput)
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhaseguraOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhasegura)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraOutput) ToSecretStoreSpecProviderSenhaseguraOutput() SecretStoreSpecProviderSenhaseguraOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraOutput) ToSecretStoreSpecProviderSenhaseguraOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraOutput) ToSecretStoreSpecProviderSenhaseguraPtrOutput() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraOutput) ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhasegura) *SecretStoreSpecProviderSenhasegura {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraOutput) Auth() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhasegura) *SecretStoreSpecProviderSenhaseguraAuth { return v.Auth }).(SecretStoreSpecProviderSenhaseguraAuthPtrOutput)
}

// IgnoreSslCertificate defines if SSL certificate must be ignored
func (o SecretStoreSpecProviderSenhaseguraOutput) IgnoreSslCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhasegura) *bool { return v.IgnoreSslCertificate }).(pulumi.BoolPtrOutput)
}

// Module defines which senhasegura module should be used to get secrets
func (o SecretStoreSpecProviderSenhaseguraOutput) Module() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhasegura) *string { return v.Module }).(pulumi.StringPtrOutput)
}

// URL of senhasegura
func (o SecretStoreSpecProviderSenhaseguraOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhasegura) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhasegura)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraPtrOutput) ToSecretStoreSpecProviderSenhaseguraPtrOutput() SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPtrOutput) ToSecretStoreSpecProviderSenhaseguraPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhasegura) SecretStoreSpecProviderSenhasegura {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhasegura
		return ret
	}).(SecretStoreSpecProviderSenhaseguraOutput)
}

func (o SecretStoreSpecProviderSenhaseguraPtrOutput) Auth() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhasegura) *SecretStoreSpecProviderSenhaseguraAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderSenhaseguraAuthPtrOutput)
}

// IgnoreSslCertificate defines if SSL certificate must be ignored
func (o SecretStoreSpecProviderSenhaseguraPtrOutput) IgnoreSslCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhasegura) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreSslCertificate
	}).(pulumi.BoolPtrOutput)
}

// Module defines which senhasegura module should be used to get secrets
func (o SecretStoreSpecProviderSenhaseguraPtrOutput) Module() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhasegura) *string {
		if v == nil {
			return nil
		}
		return v.Module
	}).(pulumi.StringPtrOutput)
}

// URL of senhasegura
func (o SecretStoreSpecProviderSenhaseguraPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhasegura) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuth struct {
	ClientId              *string                                                      `pulumi:"clientId"`
	ClientSecretSecretRef *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef `pulumi:"clientSecretSecretRef"`
}

// SecretStoreSpecProviderSenhaseguraAuthInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthArgs and SecretStoreSpecProviderSenhaseguraAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthInput` via:
//
//	SecretStoreSpecProviderSenhaseguraAuthArgs{...}
type SecretStoreSpecProviderSenhaseguraAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthOutput() SecretStoreSpecProviderSenhaseguraAuthOutput
	ToSecretStoreSpecProviderSenhaseguraAuthOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthOutput
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuthArgs struct {
	ClientId              pulumi.StringPtrInput                                               `pulumi:"clientId"`
	ClientSecretSecretRef SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput `pulumi:"clientSecretSecretRef"`
}

func (SecretStoreSpecProviderSenhaseguraAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraAuthArgs) ToSecretStoreSpecProviderSenhaseguraAuthOutput() SecretStoreSpecProviderSenhaseguraAuthOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthArgs) ToSecretStoreSpecProviderSenhaseguraAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthOutput)
}

func (i SecretStoreSpecProviderSenhaseguraAuthArgs) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthArgs) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthOutput).ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraAuthPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthArgs, SecretStoreSpecProviderSenhaseguraAuthPtr and SecretStoreSpecProviderSenhaseguraAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPtrOutput
	ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthPtrOutput
}

type secretStoreSpecProviderSenhaseguraAuthPtrType SecretStoreSpecProviderSenhaseguraAuthArgs

func SecretStoreSpecProviderSenhaseguraAuthPtr(v *SecretStoreSpecProviderSenhaseguraAuthArgs) SecretStoreSpecProviderSenhaseguraAuthPtrInput {
	return (*secretStoreSpecProviderSenhaseguraAuthPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraAuthPtrType) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraAuthPtrType) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthPtrOutput)
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ToSecretStoreSpecProviderSenhaseguraAuthOutput() SecretStoreSpecProviderSenhaseguraAuthOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ToSecretStoreSpecProviderSenhaseguraAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhaseguraAuth) *SecretStoreSpecProviderSenhaseguraAuth {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraAuthPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthOutput) ClientSecretSecretRef() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuth) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef {
		return v.ClientSecretSecretRef
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuth) SecretStoreSpecProviderSenhaseguraAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhaseguraAuth
		return ret
	}).(SecretStoreSpecProviderSenhaseguraAuthOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPtrOutput) ClientSecretSecretRef() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuth) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs and SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefInput` via:
//
//	SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs{...}
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput
	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput)
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput).ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs, SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtr and SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput
	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput
}

type secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrType SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs

func SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtr(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput {
	return (*secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrType) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrType) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef
		return ret
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs and SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs{...}
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput
	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput).ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs, SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtr and SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput
}

type secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrType SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs

func SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtr(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrType) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrType) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuthPatch struct {
	ClientId              *string                                                           `pulumi:"clientId"`
	ClientSecretSecretRef *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch `pulumi:"clientSecretSecretRef"`
}

// SecretStoreSpecProviderSenhaseguraAuthPatchInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthPatchArgs and SecretStoreSpecProviderSenhaseguraAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthPatchInput` via:
//
//	SecretStoreSpecProviderSenhaseguraAuthPatchArgs{...}
type SecretStoreSpecProviderSenhaseguraAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthPatchOutput() SecretStoreSpecProviderSenhaseguraAuthPatchOutput
	ToSecretStoreSpecProviderSenhaseguraAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchOutput
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuthPatchArgs struct {
	ClientId              pulumi.StringPtrInput                                                    `pulumi:"clientId"`
	ClientSecretSecretRef SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput `pulumi:"clientSecretSecretRef"`
}

func (SecretStoreSpecProviderSenhaseguraAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraAuthPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthPatchOutput() SecretStoreSpecProviderSenhaseguraAuthPatchOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthPatchOutput)
}

func (i SecretStoreSpecProviderSenhaseguraAuthPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraAuthPatchArgs) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthPatchOutput).ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraAuthPatchArgs, SecretStoreSpecProviderSenhaseguraAuthPatchPtr and SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput
	ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput
}

type secretStoreSpecProviderSenhaseguraAuthPatchPtrType SecretStoreSpecProviderSenhaseguraAuthPatchArgs

func SecretStoreSpecProviderSenhaseguraAuthPatchPtr(v *SecretStoreSpecProviderSenhaseguraAuthPatchArgs) SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput {
	return (*secretStoreSpecProviderSenhaseguraAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraAuthPatchPtrType) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraAuthPatchPtrType) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput)
}

// Auth defines parameters to authenticate in senhasegura
type SecretStoreSpecProviderSenhaseguraAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchOutput() SecretStoreSpecProviderSenhaseguraAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhaseguraAuthPatch) *SecretStoreSpecProviderSenhaseguraAuthPatch {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthPatch) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchOutput) ClientSecretSecretRef() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraAuthPatch) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch {
		return v.ClientSecretSecretRef
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthPatch) SecretStoreSpecProviderSenhaseguraAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhaseguraAuthPatch
		return ret
	}).(SecretStoreSpecProviderSenhaseguraAuthPatchOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput) ClientSecretSecretRef() SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraAuthPatch) *SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.ClientSecretSecretRef
	}).(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput)
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhaseguraPatch struct {
	Auth *SecretStoreSpecProviderSenhaseguraAuthPatch `pulumi:"auth"`
	// IgnoreSslCertificate defines if SSL certificate must be ignored
	IgnoreSslCertificate *bool `pulumi:"ignoreSslCertificate"`
	// Module defines which senhasegura module should be used to get secrets
	Module *string `pulumi:"module"`
	// URL of senhasegura
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderSenhaseguraPatchInput is an input type that accepts SecretStoreSpecProviderSenhaseguraPatchArgs and SecretStoreSpecProviderSenhaseguraPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraPatchInput` via:
//
//	SecretStoreSpecProviderSenhaseguraPatchArgs{...}
type SecretStoreSpecProviderSenhaseguraPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraPatchOutput() SecretStoreSpecProviderSenhaseguraPatchOutput
	ToSecretStoreSpecProviderSenhaseguraPatchOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraPatchOutput
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhaseguraPatchArgs struct {
	Auth SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput `pulumi:"auth"`
	// IgnoreSslCertificate defines if SSL certificate must be ignored
	IgnoreSslCertificate pulumi.BoolPtrInput `pulumi:"ignoreSslCertificate"`
	// Module defines which senhasegura module should be used to get secrets
	Module pulumi.StringPtrInput `pulumi:"module"`
	// URL of senhasegura
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderSenhaseguraPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderSenhaseguraPatchArgs) ToSecretStoreSpecProviderSenhaseguraPatchOutput() SecretStoreSpecProviderSenhaseguraPatchOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraPatchArgs) ToSecretStoreSpecProviderSenhaseguraPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraPatchOutput)
}

func (i SecretStoreSpecProviderSenhaseguraPatchArgs) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutput() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderSenhaseguraPatchArgs) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraPatchOutput).ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderSenhaseguraPatchPtrInput is an input type that accepts SecretStoreSpecProviderSenhaseguraPatchArgs, SecretStoreSpecProviderSenhaseguraPatchPtr and SecretStoreSpecProviderSenhaseguraPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderSenhaseguraPatchPtrInput` via:
//
//	        SecretStoreSpecProviderSenhaseguraPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderSenhaseguraPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderSenhaseguraPatchPtrOutput() SecretStoreSpecProviderSenhaseguraPatchPtrOutput
	ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderSenhaseguraPatchPtrOutput
}

type secretStoreSpecProviderSenhaseguraPatchPtrType SecretStoreSpecProviderSenhaseguraPatchArgs

func SecretStoreSpecProviderSenhaseguraPatchPtr(v *SecretStoreSpecProviderSenhaseguraPatchArgs) SecretStoreSpecProviderSenhaseguraPatchPtrInput {
	return (*secretStoreSpecProviderSenhaseguraPatchPtrType)(v)
}

func (*secretStoreSpecProviderSenhaseguraPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderSenhaseguraPatchPtrType) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutput() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return i.ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderSenhaseguraPatchPtrType) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderSenhaseguraPatchPtrOutput)
}

// Senhasegura configures this store to sync secrets using senhasegura provider
type SecretStoreSpecProviderSenhaseguraPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraPatchOutput) ToSecretStoreSpecProviderSenhaseguraPatchOutput() SecretStoreSpecProviderSenhaseguraPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPatchOutput) ToSecretStoreSpecProviderSenhaseguraPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPatchOutput) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutput() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o.ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderSenhaseguraPatchOutput) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderSenhaseguraPatch) *SecretStoreSpecProviderSenhaseguraPatch {
		return &v
	}).(SecretStoreSpecProviderSenhaseguraPatchPtrOutput)
}

func (o SecretStoreSpecProviderSenhaseguraPatchOutput) Auth() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraPatch) *SecretStoreSpecProviderSenhaseguraAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput)
}

// IgnoreSslCertificate defines if SSL certificate must be ignored
func (o SecretStoreSpecProviderSenhaseguraPatchOutput) IgnoreSslCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraPatch) *bool { return v.IgnoreSslCertificate }).(pulumi.BoolPtrOutput)
}

// Module defines which senhasegura module should be used to get secrets
func (o SecretStoreSpecProviderSenhaseguraPatchOutput) Module() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraPatch) *string { return v.Module }).(pulumi.StringPtrOutput)
}

// URL of senhasegura
func (o SecretStoreSpecProviderSenhaseguraPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderSenhaseguraPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderSenhaseguraPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderSenhaseguraPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderSenhaseguraPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutput() SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) ToSecretStoreSpecProviderSenhaseguraPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderSenhaseguraPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) Elem() SecretStoreSpecProviderSenhaseguraPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraPatch) SecretStoreSpecProviderSenhaseguraPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderSenhaseguraPatch
		return ret
	}).(SecretStoreSpecProviderSenhaseguraPatchOutput)
}

func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) Auth() SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraPatch) *SecretStoreSpecProviderSenhaseguraAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput)
}

// IgnoreSslCertificate defines if SSL certificate must be ignored
func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) IgnoreSslCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraPatch) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreSslCertificate
	}).(pulumi.BoolPtrOutput)
}

// Module defines which senhasegura module should be used to get secrets
func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) Module() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraPatch) *string {
		if v == nil {
			return nil
		}
		return v.Module
	}).(pulumi.StringPtrOutput)
}

// URL of senhasegura
func (o SecretStoreSpecProviderSenhaseguraPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderSenhaseguraPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVault struct {
	Auth *SecretStoreSpecProviderVaultAuth `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                 `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderVaultCaProvider `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent *bool `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path *string `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites *bool `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server *string                          `pulumi:"server"`
	Tls    *SecretStoreSpecProviderVaultTls `pulumi:"tls"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version *string `pulumi:"version"`
}

// SecretStoreSpecProviderVaultInput is an input type that accepts SecretStoreSpecProviderVaultArgs and SecretStoreSpecProviderVaultOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultInput` via:
//
//	SecretStoreSpecProviderVaultArgs{...}
type SecretStoreSpecProviderVaultInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput
	ToSecretStoreSpecProviderVaultOutputWithContext(context.Context) SecretStoreSpecProviderVaultOutput
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultArgs struct {
	Auth SecretStoreSpecProviderVaultAuthPtrInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                          `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderVaultCaProviderPtrInput `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent pulumi.BoolPtrInput `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites pulumi.BoolPtrInput `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringPtrInput                   `pulumi:"server"`
	Tls    SecretStoreSpecProviderVaultTlsPtrInput `pulumi:"tls"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretStoreSpecProviderVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVault)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput {
	return i.ToSecretStoreSpecProviderVaultOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultOutput)
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultArgs) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultOutput).ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultPtrInput is an input type that accepts SecretStoreSpecProviderVaultArgs, SecretStoreSpecProviderVaultPtr and SecretStoreSpecProviderVaultPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultPtrInput` via:
//
//	        SecretStoreSpecProviderVaultArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput
	ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultPtrOutput
}

type secretStoreSpecProviderVaultPtrType SecretStoreSpecProviderVaultArgs

func SecretStoreSpecProviderVaultPtr(v *SecretStoreSpecProviderVaultArgs) SecretStoreSpecProviderVaultPtrInput {
	return (*secretStoreSpecProviderVaultPtrType)(v)
}

func (*secretStoreSpecProviderVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVault)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultPtrType) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultPtrType) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVault)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultOutput() SecretStoreSpecProviderVaultOutput {
	return o
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultOutput {
	return o
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return o.ToSecretStoreSpecProviderVaultPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultOutput) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVault {
		return &v
	}).(SecretStoreSpecProviderVaultPtrOutput)
}

func (o SecretStoreSpecProviderVaultOutput) Auth() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultAuth { return v.Auth }).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultCaProvider { return v.CaProvider }).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *bool { return v.ForwardInconsistent }).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *bool { return v.ReadYourWrites }).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultOutput) Tls() SecretStoreSpecProviderVaultTlsPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultTls { return v.Tls }).(SecretStoreSpecProviderVaultTlsPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVault) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVault)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultPtrOutput) ToSecretStoreSpecProviderVaultPtrOutput() SecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPtrOutput) ToSecretStoreSpecProviderVaultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPtrOutput) Elem() SecretStoreSpecProviderVaultOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) SecretStoreSpecProviderVault {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVault
		return ret
	}).(SecretStoreSpecProviderVaultOutput)
}

func (o SecretStoreSpecProviderVaultPtrOutput) Auth() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPtrOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultPtrOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultPtrOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *bool {
		if v == nil {
			return nil
		}
		return v.ReadYourWrites
	}).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPtrOutput) Tls() SecretStoreSpecProviderVaultTlsPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *SecretStoreSpecProviderVaultTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(SecretStoreSpecProviderVaultTlsPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVault) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuth struct {
	AppRole    *SecretStoreSpecProviderVaultAuthAppRole    `pulumi:"appRole"`
	Cert       *SecretStoreSpecProviderVaultAuthCert       `pulumi:"cert"`
	Iam        *SecretStoreSpecProviderVaultAuthIam        `pulumi:"iam"`
	Jwt        *SecretStoreSpecProviderVaultAuthJwt        `pulumi:"jwt"`
	Kubernetes *SecretStoreSpecProviderVaultAuthKubernetes `pulumi:"kubernetes"`
	Ldap       *SecretStoreSpecProviderVaultAuthLdap       `pulumi:"ldap"`
	// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
	// Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	// This will default to Vault.Namespace field if set, or empty otherwise
	Namespace      *string                                         `pulumi:"namespace"`
	TokenSecretRef *SecretStoreSpecProviderVaultAuthTokenSecretRef `pulumi:"tokenSecretRef"`
	UserPass       *SecretStoreSpecProviderVaultAuthUserPass       `pulumi:"userPass"`
}

// SecretStoreSpecProviderVaultAuthInput is an input type that accepts SecretStoreSpecProviderVaultAuthArgs and SecretStoreSpecProviderVaultAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthInput` via:
//
//	SecretStoreSpecProviderVaultAuthArgs{...}
type SecretStoreSpecProviderVaultAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput
	ToSecretStoreSpecProviderVaultAuthOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthOutput
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthArgs struct {
	AppRole    SecretStoreSpecProviderVaultAuthAppRolePtrInput    `pulumi:"appRole"`
	Cert       SecretStoreSpecProviderVaultAuthCertPtrInput       `pulumi:"cert"`
	Iam        SecretStoreSpecProviderVaultAuthIamPtrInput        `pulumi:"iam"`
	Jwt        SecretStoreSpecProviderVaultAuthJwtPtrInput        `pulumi:"jwt"`
	Kubernetes SecretStoreSpecProviderVaultAuthKubernetesPtrInput `pulumi:"kubernetes"`
	Ldap       SecretStoreSpecProviderVaultAuthLdapPtrInput       `pulumi:"ldap"`
	// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
	// Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	// This will default to Vault.Namespace field if set, or empty otherwise
	Namespace      pulumi.StringPtrInput                                  `pulumi:"namespace"`
	TokenSecretRef SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput `pulumi:"tokenSecretRef"`
	UserPass       SecretStoreSpecProviderVaultAuthUserPassPtrInput       `pulumi:"userPass"`
}

func (SecretStoreSpecProviderVaultAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput {
	return i.ToSecretStoreSpecProviderVaultAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthOutput)
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthArgs) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthOutput).ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthArgs, SecretStoreSpecProviderVaultAuthPtr and SecretStoreSpecProviderVaultAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput
	ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthPtrOutput
}

type secretStoreSpecProviderVaultAuthPtrType SecretStoreSpecProviderVaultAuthArgs

func SecretStoreSpecProviderVaultAuthPtr(v *SecretStoreSpecProviderVaultAuthArgs) SecretStoreSpecProviderVaultAuthPtrInput {
	return (*secretStoreSpecProviderVaultAuthPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthPtrType) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthPtrType) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthOutput() SecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthOutput) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuth {
		return &v
	}).(SecretStoreSpecProviderVaultAuthPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthAppRole { return v.AppRole }).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) Cert() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthCert { return v.Cert }).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) Iam() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthIam { return v.Iam }).(SecretStoreSpecProviderVaultAuthIamPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthJwt { return v.Jwt }).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthKubernetes {
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthLdap { return v.Ldap }).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
// Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
// This will default to Vault.Namespace field if set, or empty otherwise
func (o SecretStoreSpecProviderVaultAuthOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthOutput) UserPass() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthUserPass { return v.UserPass }).(SecretStoreSpecProviderVaultAuthUserPassPtrOutput)
}

type SecretStoreSpecProviderVaultAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) ToSecretStoreSpecProviderVaultAuthPtrOutput() SecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) ToSecretStoreSpecProviderVaultAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Elem() SecretStoreSpecProviderVaultAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) SecretStoreSpecProviderVaultAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuth
		return ret
	}).(SecretStoreSpecProviderVaultAuthOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthAppRole {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Cert() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthCert {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Iam() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthIam {
		if v == nil {
			return nil
		}
		return v.Iam
	}).(SecretStoreSpecProviderVaultAuthIamPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthKubernetes {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthLdap {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
// Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
// This will default to Vault.Namespace field if set, or empty otherwise
func (o SecretStoreSpecProviderVaultAuthPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPtrOutput) UserPass() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuth) *SecretStoreSpecProviderVaultAuthUserPass {
		if v == nil {
			return nil
		}
		return v.UserPass
	}).(SecretStoreSpecProviderVaultAuthUserPassPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRole struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path *string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    *string                                           `pulumi:"roleId"`
	RoleRef   *SecretStoreSpecProviderVaultAuthAppRoleRoleRef   `pulumi:"roleRef"`
	SecretRef *SecretStoreSpecProviderVaultAuthAppRoleSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthAppRoleInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleArgs and SecretStoreSpecProviderVaultAuthAppRoleOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRoleArgs struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    pulumi.StringPtrInput                                    `pulumi:"roleId"`
	RoleRef   SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput   `pulumi:"roleRef"`
	SecretRef SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleArgs) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleOutput).ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRolePtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleArgs, SecretStoreSpecProviderVaultAuthAppRolePtr and SecretStoreSpecProviderVaultAuthAppRolePtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRolePtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRolePtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput
}

type secretStoreSpecProviderVaultAuthAppRolePtrType SecretStoreSpecProviderVaultAuthAppRoleArgs

func SecretStoreSpecProviderVaultAuthAppRolePtr(v *SecretStoreSpecProviderVaultAuthAppRoleArgs) SecretStoreSpecProviderVaultAuthAppRolePtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRolePtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRolePtrType) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRolePtrType) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRoleOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRoleOutput() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRoleOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRole {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRolePtrOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) RoleRef() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRoleRoleRef {
		return v.RoleRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRoleOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRolePtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRole)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutput() SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) SecretStoreSpecProviderVaultAuthAppRole {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRole
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) RoleRef() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRoleRoleRef {
		if v == nil {
			return nil
		}
		return v.RoleRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRole) *SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRolePatch struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path *string `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    *string                                                `pulumi:"roleId"`
	RoleRef   *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch   `pulumi:"roleRef"`
	SecretRef *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthAppRolePatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRolePatchArgs and SecretStoreSpecProviderVaultAuthAppRolePatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRolePatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRolePatchArgs{...}
type SecretStoreSpecProviderVaultAuthAppRolePatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRolePatchOutput() SecretStoreSpecProviderVaultAuthAppRolePatchOutput
	ToSecretStoreSpecProviderVaultAuthAppRolePatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchOutput
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRolePatchArgs struct {
	// Path where the App Role authentication backend is mounted
	// in Vault, e.g: "approle"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// RoleID configured in the App Role authentication backend when setting
	// up the authentication backend in Vault.
	RoleId    pulumi.StringPtrInput                                         `pulumi:"roleId"`
	RoleRef   SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput   `pulumi:"roleRef"`
	SecretRef SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthAppRolePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRolePatchArgs) ToSecretStoreSpecProviderVaultAuthAppRolePatchOutput() SecretStoreSpecProviderVaultAuthAppRolePatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRolePatchArgs) ToSecretStoreSpecProviderVaultAuthAppRolePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRolePatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRolePatchArgs) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRolePatchArgs) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRolePatchOutput).ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRolePatchArgs, SecretStoreSpecProviderVaultAuthAppRolePatchPtr and SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRolePatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRolePatchPtrType SecretStoreSpecProviderVaultAuthAppRolePatchArgs

func SecretStoreSpecProviderVaultAuthAppRolePatchPtr(v *SecretStoreSpecProviderVaultAuthAppRolePatchArgs) SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRolePatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRolePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRolePatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRolePatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRolePatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput)
}

// AppRole authenticates with Vault using the App Role auth mechanism,
// with the role and secret stored in a Kubernetes Secret resource.
type SecretStoreSpecProviderVaultAuthAppRolePatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRolePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchOutput() SecretStoreSpecProviderVaultAuthAppRolePatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRolePatch) *SecretStoreSpecProviderVaultAuthAppRolePatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRolePatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRolePatch) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) RoleRef() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRolePatch) *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch {
		return v.RoleRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRolePatch) *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRolePatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRolePatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRolePatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRolePatch) SecretStoreSpecProviderVaultAuthAppRolePatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRolePatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRolePatchOutput)
}

// Path where the App Role authentication backend is mounted
// in Vault, e.g: "approle"
func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRolePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// RoleID configured in the App Role authentication backend when setting
// up the authentication backend in Vault.
func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRolePatch) *string {
		if v == nil {
			return nil
		}
		return v.RoleId
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) RoleRef() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRolePatch) *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch {
		if v == nil {
			return nil
		}
		return v.RoleRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRolePatch) *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthAppRoleRoleRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs and SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleRoleRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput).ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs, SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtr and SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRoleRoleRefPtrType SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs

func SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtr(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRoleRoleRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRoleRoleRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleRoleRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRoleRoleRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRoleRoleRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *SecretStoreSpecProviderVaultAuthAppRoleRoleRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleRoleRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRef) SecretStoreSpecProviderVaultAuthAppRoleRoleRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRoleRoleRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs and SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput).ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs, SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtr and SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrType SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs

func SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtr(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput)
}

// Reference to a key in a Secret that contains the App Role ID used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role id.
type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs and SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput).ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs, SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr and SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs

func SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtr(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) SecretStoreSpecProviderVaultAuthAppRoleSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRoleSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// Reference to a key in a Secret that contains the App Role secret used
// to authenticate with Vault.
// The `key` field must be specified and denotes which entry within the Secret
// resource is used as the app role secret.
type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCert struct {
	ClientCert *SecretStoreSpecProviderVaultAuthCertClientCert `pulumi:"clientCert"`
	SecretRef  *SecretStoreSpecProviderVaultAuthCertSecretRef  `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthCertInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertArgs and SecretStoreSpecProviderVaultAuthCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertArgs{...}
type SecretStoreSpecProviderVaultAuthCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput
	ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertOutput
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertArgs struct {
	ClientCert SecretStoreSpecProviderVaultAuthCertClientCertPtrInput `pulumi:"clientCert"`
	SecretRef  SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput  `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertArgs) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertOutput).ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertArgs, SecretStoreSpecProviderVaultAuthCertPtr and SecretStoreSpecProviderVaultAuthCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput
}

type secretStoreSpecProviderVaultAuthCertPtrType SecretStoreSpecProviderVaultAuthCertArgs

func SecretStoreSpecProviderVaultAuthCertPtr(v *SecretStoreSpecProviderVaultAuthCertArgs) SecretStoreSpecProviderVaultAuthCertPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertPtrType) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertPtrType) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertOutput() SecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCert {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutput() SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) SecretStoreSpecProviderVaultAuthCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCert
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCert) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCert struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertClientCertInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertArgs and SecretStoreSpecProviderVaultAuthCertClientCertOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
type SecretStoreSpecProviderVaultAuthCertClientCertInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertOutput).ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertClientCertPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertArgs, SecretStoreSpecProviderVaultAuthCertClientCertPtr and SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertClientCertArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertClientCertPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput
}

type secretStoreSpecProviderVaultAuthCertClientCertPtrType SecretStoreSpecProviderVaultAuthCertClientCertArgs

func SecretStoreSpecProviderVaultAuthCertClientCertPtr(v *SecretStoreSpecProviderVaultAuthCertClientCertArgs) SecretStoreSpecProviderVaultAuthCertClientCertPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertClientCertPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertClientCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertOutput() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertClientCert) *SecretStoreSpecProviderVaultAuthCertClientCert {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCert) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCert)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertClientCertOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) SecretStoreSpecProviderVaultAuthCertClientCert {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertClientCert
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertClientCertOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCert) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertClientCertPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs and SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs{...}
type SecretStoreSpecProviderVaultAuthCertClientCertPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput).ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs, SecretStoreSpecProviderVaultAuthCertClientCertPatchPtr and SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthCertClientCertPatchPtrType SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs

func SecretStoreSpecProviderVaultAuthCertClientCertPatchPtr(v *SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertClientCertPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertClientCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCertPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertClientCertPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput)
}

// ClientCert is a certificate to authenticate using the Cert Vault
// authentication method
type SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertClientCertPatch) *SecretStoreSpecProviderVaultAuthCertClientCertPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertClientCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCertPatch) SecretStoreSpecProviderVaultAuthCertClientCertPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertClientCertPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertClientCertPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertPatch struct {
	ClientCert *SecretStoreSpecProviderVaultAuthCertClientCertPatch `pulumi:"clientCert"`
	SecretRef  *SecretStoreSpecProviderVaultAuthCertSecretRefPatch  `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthCertPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertPatchArgs and SecretStoreSpecProviderVaultAuthCertPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertPatchArgs{...}
type SecretStoreSpecProviderVaultAuthCertPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertPatchOutput() SecretStoreSpecProviderVaultAuthCertPatchOutput
	ToSecretStoreSpecProviderVaultAuthCertPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertPatchOutput
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertPatchArgs struct {
	ClientCert SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput `pulumi:"clientCert"`
	SecretRef  SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput  `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthCertPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertPatchOutput() SecretStoreSpecProviderVaultAuthCertPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertPatchArgs) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertPatchOutput).ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertPatchArgs, SecretStoreSpecProviderVaultAuthCertPatchPtr and SecretStoreSpecProviderVaultAuthCertPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthCertPatchPtrType SecretStoreSpecProviderVaultAuthCertPatchArgs

func SecretStoreSpecProviderVaultAuthCertPatchPtr(v *SecretStoreSpecProviderVaultAuthCertPatchArgs) SecretStoreSpecProviderVaultAuthCertPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertPatchPtrOutput)
}

// Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate
// Cert authentication method
type SecretStoreSpecProviderVaultAuthCertPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertPatchOutput() SecretStoreSpecProviderVaultAuthCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertPatch) *SecretStoreSpecProviderVaultAuthCertPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertPatch) *SecretStoreSpecProviderVaultAuthCertClientCertPatch {
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertPatch) *SecretStoreSpecProviderVaultAuthCertSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertPatch) SecretStoreSpecProviderVaultAuthCertPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertPatchOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) ClientCert() SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertPatch) *SecretStoreSpecProviderVaultAuthCertClientCertPatch {
		if v == nil {
			return nil
		}
		return v.ClientCert
	}).(SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthCertPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertPatch) *SecretStoreSpecProviderVaultAuthCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefArgs and SecretStoreSpecProviderVaultAuthCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput).ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefArgs, SecretStoreSpecProviderVaultAuthCertSecretRefPtr and SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthCertSecretRefPtrType SecretStoreSpecProviderVaultAuthCertSecretRefArgs

func SecretStoreSpecProviderVaultAuthCertSecretRefPtr(v *SecretStoreSpecProviderVaultAuthCertSecretRefArgs) SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutput() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertSecretRef) *SecretStoreSpecProviderVaultAuthCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) SecretStoreSpecProviderVaultAuthCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthCertSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthCertSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthCertSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthCertSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthCertSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput)
}

// SecretRef to a key in a Secret resource containing client private key to
// authenticate with Vault using the Cert authentication method
type SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *SecretStoreSpecProviderVaultAuthCertSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRefPatch) SecretStoreSpecProviderVaultAuthCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthCertSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIam struct {
	// AWS External ID set on assumed IAM roles
	ExternalID *string                                 `pulumi:"externalID"`
	Jwt        *SecretStoreSpecProviderVaultAuthIamJwt `pulumi:"jwt"`
	// Path where the AWS auth method is enabled in Vault, e.g: "aws"
	Path *string `pulumi:"path"`
	// AWS region
	Region *string `pulumi:"region"`
	// This is the AWS role to be assumed before talking to vault
	Role      *string                                       `pulumi:"role"`
	SecretRef *SecretStoreSpecProviderVaultAuthIamSecretRef `pulumi:"secretRef"`
	// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
	VaultAwsIamServerID *string `pulumi:"vaultAwsIamServerID"`
	// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
	VaultRole *string `pulumi:"vaultRole"`
}

// SecretStoreSpecProviderVaultAuthIamInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamArgs and SecretStoreSpecProviderVaultAuthIamOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamArgs{...}
type SecretStoreSpecProviderVaultAuthIamInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamOutput() SecretStoreSpecProviderVaultAuthIamOutput
	ToSecretStoreSpecProviderVaultAuthIamOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamOutput
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIamArgs struct {
	// AWS External ID set on assumed IAM roles
	ExternalID pulumi.StringPtrInput                          `pulumi:"externalID"`
	Jwt        SecretStoreSpecProviderVaultAuthIamJwtPtrInput `pulumi:"jwt"`
	// Path where the AWS auth method is enabled in Vault, e.g: "aws"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// AWS region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// This is the AWS role to be assumed before talking to vault
	Role      pulumi.StringPtrInput                                `pulumi:"role"`
	SecretRef SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput `pulumi:"secretRef"`
	// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
	VaultAwsIamServerID pulumi.StringPtrInput `pulumi:"vaultAwsIamServerID"`
	// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
	VaultRole pulumi.StringPtrInput `pulumi:"vaultRole"`
}

func (SecretStoreSpecProviderVaultAuthIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIam)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamArgs) ToSecretStoreSpecProviderVaultAuthIamOutput() SecretStoreSpecProviderVaultAuthIamOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamArgs) ToSecretStoreSpecProviderVaultAuthIamOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamArgs) ToSecretStoreSpecProviderVaultAuthIamPtrOutput() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamArgs) ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamOutput).ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamArgs, SecretStoreSpecProviderVaultAuthIamPtr and SecretStoreSpecProviderVaultAuthIamPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamPtrOutput() SecretStoreSpecProviderVaultAuthIamPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamPtrOutput
}

type secretStoreSpecProviderVaultAuthIamPtrType SecretStoreSpecProviderVaultAuthIamArgs

func SecretStoreSpecProviderVaultAuthIamPtr(v *SecretStoreSpecProviderVaultAuthIamArgs) SecretStoreSpecProviderVaultAuthIamPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIam)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamPtrType) ToSecretStoreSpecProviderVaultAuthIamPtrOutput() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamPtrType) ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamPtrOutput)
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIamOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIam)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) ToSecretStoreSpecProviderVaultAuthIamOutput() SecretStoreSpecProviderVaultAuthIamOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) ToSecretStoreSpecProviderVaultAuthIamOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) ToSecretStoreSpecProviderVaultAuthIamPtrOutput() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIam) *SecretStoreSpecProviderVaultAuthIam {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderVaultAuthIamOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.ExternalID }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) Jwt() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *SecretStoreSpecProviderVaultAuthIamJwt { return v.Jwt }).(SecretStoreSpecProviderVaultAuthIamJwtPtrOutput)
}

// Path where the AWS auth method is enabled in Vault, e.g: "aws"
func (o SecretStoreSpecProviderVaultAuthIamOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// AWS region
func (o SecretStoreSpecProviderVaultAuthIamOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// This is the AWS role to be assumed before talking to vault
func (o SecretStoreSpecProviderVaultAuthIamOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamOutput) SecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *SecretStoreSpecProviderVaultAuthIamSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput)
}

// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
func (o SecretStoreSpecProviderVaultAuthIamOutput) VaultAwsIamServerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.VaultAwsIamServerID }).(pulumi.StringPtrOutput)
}

// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
func (o SecretStoreSpecProviderVaultAuthIamOutput) VaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIam) *string { return v.VaultRole }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIam)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) ToSecretStoreSpecProviderVaultAuthIamPtrOutput() SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) ToSecretStoreSpecProviderVaultAuthIamPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) SecretStoreSpecProviderVaultAuthIam {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIam
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.ExternalID
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) Jwt() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *SecretStoreSpecProviderVaultAuthIamJwt {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthIamJwtPtrOutput)
}

// Path where the AWS auth method is enabled in Vault, e.g: "aws"
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// AWS region
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// This is the AWS role to be assumed before talking to vault
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *SecretStoreSpecProviderVaultAuthIamSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput)
}

// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) VaultAwsIamServerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.VaultAwsIamServerID
	}).(pulumi.StringPtrOutput)
}

// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
func (o SecretStoreSpecProviderVaultAuthIamPtrOutput) VaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIam) *string {
		if v == nil {
			return nil
		}
		return v.VaultRole
	}).(pulumi.StringPtrOutput)
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwt struct {
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthIamJwtInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtArgs and SecretStoreSpecProviderVaultAuthIamJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamJwtArgs{...}
type SecretStoreSpecProviderVaultAuthIamJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtOutput() SecretStoreSpecProviderVaultAuthIamJwtOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtOutput
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwtArgs struct {
	ServiceAccountRef SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthIamJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamJwtArgs) ToSecretStoreSpecProviderVaultAuthIamJwtOutput() SecretStoreSpecProviderVaultAuthIamJwtOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtArgs) ToSecretStoreSpecProviderVaultAuthIamJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamJwtArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtOutput).ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamJwtPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtArgs, SecretStoreSpecProviderVaultAuthIamJwtPtr and SecretStoreSpecProviderVaultAuthIamJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtPtrOutput
}

type secretStoreSpecProviderVaultAuthIamJwtPtrType SecretStoreSpecProviderVaultAuthIamJwtArgs

func SecretStoreSpecProviderVaultAuthIamJwtPtr(v *SecretStoreSpecProviderVaultAuthIamJwtArgs) SecretStoreSpecProviderVaultAuthIamJwtPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamJwtPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamJwtPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamJwtPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtPtrOutput)
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtOutput) ToSecretStoreSpecProviderVaultAuthIamJwtOutput() SecretStoreSpecProviderVaultAuthIamJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtOutput) ToSecretStoreSpecProviderVaultAuthIamJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamJwtOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamJwt) *SecretStoreSpecProviderVaultAuthIamJwt {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamJwtPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamJwtOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwt) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwt) SecretStoreSpecProviderVaultAuthIamJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamJwt
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamJwtOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwt) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput)
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwtPatch struct {
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthIamJwtPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtPatchArgs and SecretStoreSpecProviderVaultAuthIamJwtPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamJwtPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamJwtPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchOutput
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwtPatchArgs struct {
	ServiceAccountRef SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtPatchOutput).ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtPatchArgs, SecretStoreSpecProviderVaultAuthIamJwtPatchPtr and SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamJwtPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamJwtPatchPtrType SecretStoreSpecProviderVaultAuthIamJwtPatchArgs

func SecretStoreSpecProviderVaultAuthIamJwtPatchPtr(v *SecretStoreSpecProviderVaultAuthIamJwtPatchArgs) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamJwtPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamJwtPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamJwtPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamJwtPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput)
}

// Specify a service account with IRSA enabled
type SecretStoreSpecProviderVaultAuthIamJwtPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamJwtPatch) *SecretStoreSpecProviderVaultAuthIamJwtPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtPatch) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamJwtPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtPatch) SecretStoreSpecProviderVaultAuthIamJwtPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamJwtPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamJwtPatchOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtPatch) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs and SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs{...}
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput).ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs, SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtr and SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput
}

type secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrType SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs

func SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtr(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs and SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput).ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs, SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtr and SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrType SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs

func SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtr(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput)
}

// A reference to a ServiceAccount resource.
type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIamPatch struct {
	// AWS External ID set on assumed IAM roles
	ExternalID *string                                      `pulumi:"externalID"`
	Jwt        *SecretStoreSpecProviderVaultAuthIamJwtPatch `pulumi:"jwt"`
	// Path where the AWS auth method is enabled in Vault, e.g: "aws"
	Path *string `pulumi:"path"`
	// AWS region
	Region *string `pulumi:"region"`
	// This is the AWS role to be assumed before talking to vault
	Role      *string                                            `pulumi:"role"`
	SecretRef *SecretStoreSpecProviderVaultAuthIamSecretRefPatch `pulumi:"secretRef"`
	// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
	VaultAwsIamServerID *string `pulumi:"vaultAwsIamServerID"`
	// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
	VaultRole *string `pulumi:"vaultRole"`
}

// SecretStoreSpecProviderVaultAuthIamPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamPatchArgs and SecretStoreSpecProviderVaultAuthIamPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamPatchOutput() SecretStoreSpecProviderVaultAuthIamPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamPatchOutput
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIamPatchArgs struct {
	// AWS External ID set on assumed IAM roles
	ExternalID pulumi.StringPtrInput                               `pulumi:"externalID"`
	Jwt        SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput `pulumi:"jwt"`
	// Path where the AWS auth method is enabled in Vault, e.g: "aws"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// AWS region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// This is the AWS role to be assumed before talking to vault
	Role      pulumi.StringPtrInput                                     `pulumi:"role"`
	SecretRef SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput `pulumi:"secretRef"`
	// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
	VaultAwsIamServerID pulumi.StringPtrInput `pulumi:"vaultAwsIamServerID"`
	// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
	VaultRole pulumi.StringPtrInput `pulumi:"vaultRole"`
}

func (SecretStoreSpecProviderVaultAuthIamPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamPatchArgs) ToSecretStoreSpecProviderVaultAuthIamPatchOutput() SecretStoreSpecProviderVaultAuthIamPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamPatchArgs) ToSecretStoreSpecProviderVaultAuthIamPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamPatchArgs) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamPatchArgs) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamPatchOutput).ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamPatchArgs, SecretStoreSpecProviderVaultAuthIamPatchPtr and SecretStoreSpecProviderVaultAuthIamPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamPatchPtrType SecretStoreSpecProviderVaultAuthIamPatchArgs

func SecretStoreSpecProviderVaultAuthIamPatchPtr(v *SecretStoreSpecProviderVaultAuthIamPatchArgs) SecretStoreSpecProviderVaultAuthIamPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamPatchPtrOutput)
}

// Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials
// AWS IAM authentication method
type SecretStoreSpecProviderVaultAuthIamPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) ToSecretStoreSpecProviderVaultAuthIamPatchOutput() SecretStoreSpecProviderVaultAuthIamPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) ToSecretStoreSpecProviderVaultAuthIamPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamPatch) *SecretStoreSpecProviderVaultAuthIamPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamPatchPtrOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.ExternalID }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) Jwt() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *SecretStoreSpecProviderVaultAuthIamJwtPatch {
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput)
}

// Path where the AWS auth method is enabled in Vault, e.g: "aws"
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// AWS region
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// This is the AWS role to be assumed before talking to vault
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput)
}

// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) VaultAwsIamServerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.VaultAwsIamServerID }).(pulumi.StringPtrOutput)
}

// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
func (o SecretStoreSpecProviderVaultAuthIamPatchOutput) VaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamPatch) *string { return v.VaultRole }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) SecretStoreSpecProviderVaultAuthIamPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamPatchOutput)
}

// AWS External ID set on assumed IAM roles
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) ExternalID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.ExternalID
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) Jwt() SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *SecretStoreSpecProviderVaultAuthIamJwtPatch {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput)
}

// Path where the AWS auth method is enabled in Vault, e.g: "aws"
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// AWS region
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// This is the AWS role to be assumed before talking to vault
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput)
}

// X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) VaultAwsIamServerID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.VaultAwsIamServerID
	}).(pulumi.StringPtrOutput)
}

// Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
func (o SecretStoreSpecProviderVaultAuthIamPatchPtrOutput) VaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamPatch) *string {
		if v == nil {
			return nil
		}
		return v.VaultRole
	}).(pulumi.StringPtrOutput)
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRef struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef    `pulumi:"sessionTokenSecretRef"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefArgs and SecretStoreSpecProviderVaultAuthIamSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefOutput
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRefArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput    `pulumi:"sessionTokenSecretRef"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefArgs, SecretStoreSpecProviderVaultAuthIamSecretRefPtr and SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefPtrType SecretStoreSpecProviderVaultAuthIamSecretRefArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefArgs) SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput)
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefOutput) SessionTokenSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef {
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRef) SecretStoreSpecProviderVaultAuthIamSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput) SessionTokenSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef {
		if v == nil {
			return nil
		}
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs and SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs, SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtr and SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrType SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The AccessKeyID is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRefPatch struct {
	AccessKeyIDSecretRef     *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch    `pulumi:"sessionTokenSecretRef"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs struct {
	AccessKeyIDSecretRef     SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput     `pulumi:"accessKeyIDSecretRef"`
	SecretAccessKeySecretRef SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput `pulumi:"secretAccessKeySecretRef"`
	SessionTokenSecretRef    SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput    `pulumi:"sessionTokenSecretRef"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput)
}

// Specify credentials in a Secret object
type SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch {
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch {
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput) SessionTokenSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch {
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefPatch) SecretStoreSpecProviderVaultAuthIamSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) AccessKeyIDSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AccessKeyIDSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) SecretAccessKeySecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretAccessKeySecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput) SessionTokenSecretRef() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SessionTokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs and SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs, SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtr and SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrType SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs and SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs, SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtr and SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrType SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The SecretAccessKey is used for authentication
type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs and SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs, SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtr and SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrType SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The SessionToken used for authentication
// This must be defined if AccessKeyID and SecretAccessKey are temporary credentials
// see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html
type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwt struct {
	KubernetesServiceAccountToken *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path *string `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role      *string                                       `pulumi:"role"`
	SecretRef *SecretStoreSpecProviderVaultAuthJwtSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthJwtInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtArgs and SecretStoreSpecProviderVaultAuthJwtOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtArgs{...}
type SecretStoreSpecProviderVaultAuthJwtInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput
	ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtOutput
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtArgs struct {
	KubernetesServiceAccountToken SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role      pulumi.StringPtrInput                                `pulumi:"role"`
	SecretRef SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtArgs) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtOutput).ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtArgs, SecretStoreSpecProviderVaultAuthJwtPtr and SecretStoreSpecProviderVaultAuthJwtPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtPtrType SecretStoreSpecProviderVaultAuthJwtArgs

func SecretStoreSpecProviderVaultAuthJwtPtr(v *SecretStoreSpecProviderVaultAuthJwtArgs) SecretStoreSpecProviderVaultAuthJwtPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtPtrType) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtPtrType) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtOutput() SecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwt {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwt)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutput() SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) SecretStoreSpecProviderVaultAuthJwt {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwt
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v == nil {
			return nil
		}
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwt) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	// Deprecated: use serviceAccountRef.Audiences instead
	Audiences []string `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Deprecated: this will be removed in the future.
	// Defaults to 10 minutes.
	ExpirationSeconds *int                                                                               `pulumi:"expirationSeconds"`
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	// Deprecated: use serviceAccountRef.Audiences instead
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Deprecated: this will be removed in the future.
	// Defaults to 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput                                                                        `pulumi:"expirationSeconds"`
	ServiceAccountRef SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
// Deprecated: use serviceAccountRef.Audiences instead
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Deprecated: this will be removed in the future.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
// Deprecated: use serviceAccountRef.Audiences instead
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Deprecated: this will be removed in the future.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountToken) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	// Deprecated: use serviceAccountRef.Audiences instead
	Audiences []string `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Deprecated: this will be removed in the future.
	// Defaults to 10 minutes.
	ExpirationSeconds *int                                                                                    `pulumi:"expirationSeconds"`
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs struct {
	// Optional audiences field that will be used to request a temporary Kubernetes service
	// account token for the service account referenced by `serviceAccountRef`.
	// Defaults to a single audience `vault` it not specified.
	// Deprecated: use serviceAccountRef.Audiences instead
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// Optional expiration time in seconds that will be used to request a temporary
	// Kubernetes service account token for the service account referenced by
	// `serviceAccountRef`.
	// Deprecated: this will be removed in the future.
	// Defaults to 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput                                                                             `pulumi:"expirationSeconds"`
	ServiceAccountRef SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput)
}

// Optional ServiceAccountToken specifies the Kubernetes service account for which to request
// a token for with the `TokenRequest` API.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
// Deprecated: use serviceAccountRef.Audiences instead
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Deprecated: this will be removed in the future.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput)
}

// Optional audiences field that will be used to request a temporary Kubernetes service
// account token for the service account referenced by `serviceAccountRef`.
// Defaults to a single audience `vault` it not specified.
// Deprecated: use serviceAccountRef.Audiences instead
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// Optional expiration time in seconds that will be used to request a temporary
// Kubernetes service account token for the service account referenced by
// `serviceAccountRef`.
// Deprecated: this will be removed in the future.
// Defaults to 10 minutes.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput).ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs, SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtr and SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrType SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs

func SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtr(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput)
}

// Service account field containing the name of a kubernetes ServiceAccount.
type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) []string {
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtPatch struct {
	KubernetesServiceAccountToken *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path *string `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role      *string                                            `pulumi:"role"`
	SecretRef *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderVaultAuthJwtPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtPatchArgs and SecretStoreSpecProviderVaultAuthJwtPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtPatchArgs{...}
type SecretStoreSpecProviderVaultAuthJwtPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtPatchOutput() SecretStoreSpecProviderVaultAuthJwtPatchOutput
	ToSecretStoreSpecProviderVaultAuthJwtPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtPatchOutput
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtPatchArgs struct {
	KubernetesServiceAccountToken SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput `pulumi:"kubernetesServiceAccountToken"`
	// Path where the JWT authentication backend is mounted
	// in Vault, e.g: "jwt"
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Role is a JWT role to authenticate using the JWT/OIDC Vault
	// authentication method
	Role      pulumi.StringPtrInput                                     `pulumi:"role"`
	SecretRef SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderVaultAuthJwtPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtPatchOutput() SecretStoreSpecProviderVaultAuthJwtPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtPatchOutput).ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtPatchArgs, SecretStoreSpecProviderVaultAuthJwtPatchPtr and SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtPatchPtrType SecretStoreSpecProviderVaultAuthJwtPatchArgs

func SecretStoreSpecProviderVaultAuthJwtPatchPtr(v *SecretStoreSpecProviderVaultAuthJwtPatchArgs) SecretStoreSpecProviderVaultAuthJwtPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput)
}

// Jwt authenticates with Vault by passing role and JWT token using the
// JWT/OIDC authentication method
type SecretStoreSpecProviderVaultAuthJwtPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchOutput() SecretStoreSpecProviderVaultAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtPatch) *SecretStoreSpecProviderVaultAuthJwtPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch {
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtPatch) *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtPatch) SecretStoreSpecProviderVaultAuthJwtPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtPatchOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) KubernetesServiceAccountToken() SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtPatch) *SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatch {
		if v == nil {
			return nil
		}
		return v.KubernetesServiceAccountToken
	}).(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput)
}

// Path where the JWT authentication backend is mounted
// in Vault, e.g: "jwt"
func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Role is a JWT role to authenticate using the JWT/OIDC Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtPatch) *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefArgs and SecretStoreSpecProviderVaultAuthJwtSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthJwtSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput).ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefArgs, SecretStoreSpecProviderVaultAuthJwtSecretRefPtr and SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtSecretRefPtrType SecretStoreSpecProviderVaultAuthJwtSecretRefArgs

func SecretStoreSpecProviderVaultAuthJwtSecretRefPtr(v *SecretStoreSpecProviderVaultAuthJwtSecretRefArgs) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtSecretRef) *SecretStoreSpecProviderVaultAuthJwtSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) SecretStoreSpecProviderVaultAuthJwtSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthJwtSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput)
}

// Optional SecretRef that refers to a key in a Secret resource containing JWT token to
// authenticate with Vault using the JWT/OIDC authentication method.
type SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthJwtSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) SecretStoreSpecProviderVaultAuthJwtSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthJwtSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthJwtSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetes struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              *string                                                      `pulumi:"role"`
	SecretRef         *SecretStoreSpecProviderVaultAuthKubernetesSecretRef         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthKubernetesInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesArgs and SecretStoreSpecProviderVaultAuthKubernetesOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesArgs struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              pulumi.StringPtrInput                                               `pulumi:"role"`
	SecretRef         SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesOutput).ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesArgs, SecretStoreSpecProviderVaultAuthKubernetesPtr and SecretStoreSpecProviderVaultAuthKubernetesPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesPtrType SecretStoreSpecProviderVaultAuthKubernetesArgs

func SecretStoreSpecProviderVaultAuthKubernetesPtr(v *SecretStoreSpecProviderVaultAuthKubernetesArgs) SecretStoreSpecProviderVaultAuthKubernetesPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesOutput() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetes {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetes)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) SecretStoreSpecProviderVaultAuthKubernetes {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetes
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetes) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesPatch struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath *string `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              *string                                                           `pulumi:"role"`
	SecretRef         *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch         `pulumi:"secretRef"`
	ServiceAccountRef *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch `pulumi:"serviceAccountRef"`
}

// SecretStoreSpecProviderVaultAuthKubernetesPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesPatchArgs and SecretStoreSpecProviderVaultAuthKubernetesPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesPatchArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchOutput
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesPatchArgs struct {
	// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
	// "kubernetes"
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
	// A required field containing the Vault Role to assume. A Role binds a
	// Kubernetes ServiceAccount with a set of Vault policies.
	Role              pulumi.StringPtrInput                                                    `pulumi:"role"`
	SecretRef         SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput         `pulumi:"secretRef"`
	ServiceAccountRef SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput `pulumi:"serviceAccountRef"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesPatchOutput).ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesPatchArgs, SecretStoreSpecProviderVaultAuthKubernetesPatchPtr and SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesPatchPtrType SecretStoreSpecProviderVaultAuthKubernetesPatchArgs

func SecretStoreSpecProviderVaultAuthKubernetesPatchPtr(v *SecretStoreSpecProviderVaultAuthKubernetesPatchArgs) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput)
}

// Kubernetes authenticates with Vault by passing the ServiceAccount
// token stored in the named Secret resource to the Vault server.
type SecretStoreSpecProviderVaultAuthKubernetesPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesPatch) *SecretStoreSpecProviderVaultAuthKubernetesPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesPatch) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesPatch) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesPatch) *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesPatch) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch {
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesPatch) SecretStoreSpecProviderVaultAuthKubernetesPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesPatchOutput)
}

// Path where the Kubernetes authentication backend is mounted in Vault, e.g:
// "kubernetes"
func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesPatch) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

// A required field containing the Vault Role to assume. A Role binds a
// Kubernetes ServiceAccount with a set of Vault policies.
func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesPatch) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesPatch) *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput) ServiceAccountRef() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesPatch) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch {
		if v == nil {
			return nil
		}
		return v.ServiceAccountRef
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs and SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput).ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs, SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr and SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs

func SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtr(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) SecretStoreSpecProviderVaultAuthKubernetesSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput)
}

// Optional secret field containing a Kubernetes ServiceAccount JWT used
// for authenticating with Vault. If a name is specified without a key,
// `token` is the default. If one is not specified, the one bound to
// the controller will be used.
type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput).ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs, SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs

func SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtr(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences []string `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs struct {
	// Audience specifies the `aud` claim for the service account token
	// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
	// then this audiences will be appended to the list
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The name of the ServiceAccount resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput).ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs, SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtr and SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrType SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs

func SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtr(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// Optional service account field containing the name of a kubernetes ServiceAccount.
// If the service account is specified, the service account secret token JWT will be used
// for authenticating with Vault. If the service account selector is not supplied,
// the secretRef will be used instead.
type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput)
}

// Audience specifies the `aud` claim for the service account token
// If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
// then this audiences will be appended to the list
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The name of the ServiceAccount resource being referred to.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdap struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path      *string                                        `pulumi:"path"`
	SecretRef *SecretStoreSpecProviderVaultAuthLdapSecretRef `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderVaultAuthLdapInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapArgs and SecretStoreSpecProviderVaultAuthLdapOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapArgs{...}
type SecretStoreSpecProviderVaultAuthLdapInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput
	ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapOutput
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapArgs struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path      pulumi.StringPtrInput                                 `pulumi:"path"`
	SecretRef SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderVaultAuthLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapArgs) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapOutput).ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapArgs, SecretStoreSpecProviderVaultAuthLdapPtr and SecretStoreSpecProviderVaultAuthLdapPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapPtrType SecretStoreSpecProviderVaultAuthLdapArgs

func SecretStoreSpecProviderVaultAuthLdapPtr(v *SecretStoreSpecProviderVaultAuthLdapArgs) SecretStoreSpecProviderVaultAuthLdapPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapPtrType) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapPtrType) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapOutput() SecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdap {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapPtrOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthLdapOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdap) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthLdapPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdap)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutput() SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) SecretStoreSpecProviderVaultAuthLdap {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdap
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdap) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapPatch struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path      *string                                             `pulumi:"path"`
	SecretRef *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderVaultAuthLdapPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapPatchArgs and SecretStoreSpecProviderVaultAuthLdapPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapPatchArgs{...}
type SecretStoreSpecProviderVaultAuthLdapPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapPatchOutput() SecretStoreSpecProviderVaultAuthLdapPatchOutput
	ToSecretStoreSpecProviderVaultAuthLdapPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapPatchOutput
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapPatchArgs struct {
	// Path where the LDAP authentication backend is mounted
	// in Vault, e.g: "ldap"
	Path      pulumi.StringPtrInput                                      `pulumi:"path"`
	SecretRef SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput `pulumi:"secretRef"`
	// Username is a LDAP user name used to authenticate using the LDAP Vault
	// authentication method
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderVaultAuthLdapPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapPatchOutput() SecretStoreSpecProviderVaultAuthLdapPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapPatchOutput).ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapPatchArgs, SecretStoreSpecProviderVaultAuthLdapPatchPtr and SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapPatchPtrType SecretStoreSpecProviderVaultAuthLdapPatchArgs

func SecretStoreSpecProviderVaultAuthLdapPatchPtr(v *SecretStoreSpecProviderVaultAuthLdapPatchArgs) SecretStoreSpecProviderVaultAuthLdapPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapPatchPtrType) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapPatchPtrType) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput)
}

// Ldap authenticates with Vault by passing username/password pair using
// the LDAP authentication method
type SecretStoreSpecProviderVaultAuthLdapPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchOutput() SecretStoreSpecProviderVaultAuthLdapPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdapPatch) *SecretStoreSpecProviderVaultAuthLdapPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapPatch) *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapPatch) SecretStoreSpecProviderVaultAuthLdapPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdapPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapPatchOutput)
}

// Path where the LDAP authentication backend is mounted
// in Vault, e.g: "ldap"
func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapPatch) *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput)
}

// Username is a LDAP user name used to authenticate using the LDAP Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefArgs and SecretStoreSpecProviderVaultAuthLdapSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthLdapSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput).ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefArgs, SecretStoreSpecProviderVaultAuthLdapSecretRefPtr and SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapSecretRefPtrType SecretStoreSpecProviderVaultAuthLdapSecretRefArgs

func SecretStoreSpecProviderVaultAuthLdapSecretRefPtr(v *SecretStoreSpecProviderVaultAuthLdapSecretRefArgs) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdapSecretRef) *SecretStoreSpecProviderVaultAuthLdapSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) SecretStoreSpecProviderVaultAuthLdapSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdapSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthLdapSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the LDAP
// user used to authenticate with Vault using the LDAP authentication
// method
type SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthLdapSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) SecretStoreSpecProviderVaultAuthLdapSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthLdapSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthLdapSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthPatch struct {
	AppRole    *SecretStoreSpecProviderVaultAuthAppRolePatch    `pulumi:"appRole"`
	Cert       *SecretStoreSpecProviderVaultAuthCertPatch       `pulumi:"cert"`
	Iam        *SecretStoreSpecProviderVaultAuthIamPatch        `pulumi:"iam"`
	Jwt        *SecretStoreSpecProviderVaultAuthJwtPatch        `pulumi:"jwt"`
	Kubernetes *SecretStoreSpecProviderVaultAuthKubernetesPatch `pulumi:"kubernetes"`
	Ldap       *SecretStoreSpecProviderVaultAuthLdapPatch       `pulumi:"ldap"`
	// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
	// Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	// This will default to Vault.Namespace field if set, or empty otherwise
	Namespace      *string                                              `pulumi:"namespace"`
	TokenSecretRef *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch `pulumi:"tokenSecretRef"`
	UserPass       *SecretStoreSpecProviderVaultAuthUserPassPatch       `pulumi:"userPass"`
}

// SecretStoreSpecProviderVaultAuthPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthPatchArgs and SecretStoreSpecProviderVaultAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthPatchArgs{...}
type SecretStoreSpecProviderVaultAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthPatchOutput() SecretStoreSpecProviderVaultAuthPatchOutput
	ToSecretStoreSpecProviderVaultAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthPatchOutput
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthPatchArgs struct {
	AppRole    SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput    `pulumi:"appRole"`
	Cert       SecretStoreSpecProviderVaultAuthCertPatchPtrInput       `pulumi:"cert"`
	Iam        SecretStoreSpecProviderVaultAuthIamPatchPtrInput        `pulumi:"iam"`
	Jwt        SecretStoreSpecProviderVaultAuthJwtPatchPtrInput        `pulumi:"jwt"`
	Kubernetes SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput `pulumi:"kubernetes"`
	Ldap       SecretStoreSpecProviderVaultAuthLdapPatchPtrInput       `pulumi:"ldap"`
	// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
	// Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	// This will default to Vault.Namespace field if set, or empty otherwise
	Namespace      pulumi.StringPtrInput                                       `pulumi:"namespace"`
	TokenSecretRef SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput `pulumi:"tokenSecretRef"`
	UserPass       SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput       `pulumi:"userPass"`
}

func (SecretStoreSpecProviderVaultAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthPatchArgs) ToSecretStoreSpecProviderVaultAuthPatchOutput() SecretStoreSpecProviderVaultAuthPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthPatchArgs) ToSecretStoreSpecProviderVaultAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthPatchArgs) ToSecretStoreSpecProviderVaultAuthPatchPtrOutput() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthPatchArgs) ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthPatchOutput).ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthPatchArgs, SecretStoreSpecProviderVaultAuthPatchPtr and SecretStoreSpecProviderVaultAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthPatchPtrOutput() SecretStoreSpecProviderVaultAuthPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthPatchPtrType SecretStoreSpecProviderVaultAuthPatchArgs

func SecretStoreSpecProviderVaultAuthPatchPtr(v *SecretStoreSpecProviderVaultAuthPatchArgs) SecretStoreSpecProviderVaultAuthPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthPatchPtrType) ToSecretStoreSpecProviderVaultAuthPatchPtrOutput() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthPatchPtrType) ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthPatchPtrOutput)
}

// Auth configures how secret-manager authenticates with the Vault server.
type SecretStoreSpecProviderVaultAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) ToSecretStoreSpecProviderVaultAuthPatchOutput() SecretStoreSpecProviderVaultAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) ToSecretStoreSpecProviderVaultAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) ToSecretStoreSpecProviderVaultAuthPatchPtrOutput() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthAppRolePatch {
		return v.AppRole
	}).(SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) Cert() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthCertPatch {
		return v.Cert
	}).(SecretStoreSpecProviderVaultAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) Iam() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthIamPatch { return v.Iam }).(SecretStoreSpecProviderVaultAuthIamPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthJwtPatch { return v.Jwt }).(SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthKubernetesPatch {
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthLdapPatch {
		return v.Ldap
	}).(SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput)
}

// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
// Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
// This will default to Vault.Namespace field if set, or empty otherwise
func (o SecretStoreSpecProviderVaultAuthPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch {
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchOutput) UserPass() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthUserPassPatch {
		return v.UserPass
	}).(SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput)
}

type SecretStoreSpecProviderVaultAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthPatchPtrOutput() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) SecretStoreSpecProviderVaultAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthPatchOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) AppRole() SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthAppRolePatch {
		if v == nil {
			return nil
		}
		return v.AppRole
	}).(SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Cert() SecretStoreSpecProviderVaultAuthCertPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthCertPatch {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(SecretStoreSpecProviderVaultAuthCertPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Iam() SecretStoreSpecProviderVaultAuthIamPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthIamPatch {
		if v == nil {
			return nil
		}
		return v.Iam
	}).(SecretStoreSpecProviderVaultAuthIamPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Jwt() SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthJwtPatch {
		if v == nil {
			return nil
		}
		return v.Jwt
	}).(SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Kubernetes() SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthKubernetesPatch {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Ldap() SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthLdapPatch {
		if v == nil {
			return nil
		}
		return v.Ldap
	}).(SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput)
}

// Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.
// Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
// This will default to Vault.Namespace field if set, or empty otherwise
func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) TokenSecretRef() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.TokenSecretRef
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthPatchPtrOutput) UserPass() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthPatch) *SecretStoreSpecProviderVaultAuthUserPassPatch {
		if v == nil {
			return nil
		}
		return v.UserPass
	}).(SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefArgs and SecretStoreSpecProviderVaultAuthTokenSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthTokenSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput).ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefArgs, SecretStoreSpecProviderVaultAuthTokenSecretRefPtr and SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthTokenSecretRefPtrType SecretStoreSpecProviderVaultAuthTokenSecretRefArgs

func SecretStoreSpecProviderVaultAuthTokenSecretRefPtr(v *SecretStoreSpecProviderVaultAuthTokenSecretRefArgs) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthTokenSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthTokenSecretRef) *SecretStoreSpecProviderVaultAuthTokenSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthTokenSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) SecretStoreSpecProviderVaultAuthTokenSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthTokenSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthTokenSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput)
}

// TokenSecretRef authenticates with Vault by presenting a token.
type SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthTokenSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) SecretStoreSpecProviderVaultAuthTokenSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthTokenSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthTokenSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPass struct {
	// Path where the UserPassword authentication backend is mounted
	// in Vault, e.g: "user"
	Path      *string                                            `pulumi:"path"`
	SecretRef *SecretStoreSpecProviderVaultAuthUserPassSecretRef `pulumi:"secretRef"`
	// Username is a user name used to authenticate using the UserPass Vault
	// authentication method
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderVaultAuthUserPassInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassArgs and SecretStoreSpecProviderVaultAuthUserPassOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassInput` via:
//
//	SecretStoreSpecProviderVaultAuthUserPassArgs{...}
type SecretStoreSpecProviderVaultAuthUserPassInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassOutput() SecretStoreSpecProviderVaultAuthUserPassOutput
	ToSecretStoreSpecProviderVaultAuthUserPassOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassOutput
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPassArgs struct {
	// Path where the UserPassword authentication backend is mounted
	// in Vault, e.g: "user"
	Path      pulumi.StringPtrInput                                     `pulumi:"path"`
	SecretRef SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput `pulumi:"secretRef"`
	// Username is a user name used to authenticate using the UserPass Vault
	// authentication method
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderVaultAuthUserPassArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPass)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthUserPassArgs) ToSecretStoreSpecProviderVaultAuthUserPassOutput() SecretStoreSpecProviderVaultAuthUserPassOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassArgs) ToSecretStoreSpecProviderVaultAuthUserPassOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassOutput)
}

func (i SecretStoreSpecProviderVaultAuthUserPassArgs) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassArgs) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassOutput).ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthUserPassPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassArgs, SecretStoreSpecProviderVaultAuthUserPassPtr and SecretStoreSpecProviderVaultAuthUserPassPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthUserPassArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthUserPassPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPtrOutput
	ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassPtrOutput
}

type secretStoreSpecProviderVaultAuthUserPassPtrType SecretStoreSpecProviderVaultAuthUserPassArgs

func SecretStoreSpecProviderVaultAuthUserPassPtr(v *SecretStoreSpecProviderVaultAuthUserPassArgs) SecretStoreSpecProviderVaultAuthUserPassPtrInput {
	return (*secretStoreSpecProviderVaultAuthUserPassPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthUserPassPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPass)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthUserPassPtrType) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthUserPassPtrType) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassPtrOutput)
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPassOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPass)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassOutput) ToSecretStoreSpecProviderVaultAuthUserPassOutput() SecretStoreSpecProviderVaultAuthUserPassOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassOutput) ToSecretStoreSpecProviderVaultAuthUserPassOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassOutput) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthUserPassOutput) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthUserPass) *SecretStoreSpecProviderVaultAuthUserPass {
		return &v
	}).(SecretStoreSpecProviderVaultAuthUserPassPtrOutput)
}

// Path where the UserPassword authentication backend is mounted
// in Vault, e.g: "user"
func (o SecretStoreSpecProviderVaultAuthUserPassOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPass) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthUserPassOutput) SecretRef() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPass) *SecretStoreSpecProviderVaultAuthUserPassSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput)
}

// Username is a user name used to authenticate using the UserPass Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthUserPassOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPass) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthUserPassPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPass)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) Elem() SecretStoreSpecProviderVaultAuthUserPassOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPass) SecretStoreSpecProviderVaultAuthUserPass {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthUserPass
		return ret
	}).(SecretStoreSpecProviderVaultAuthUserPassOutput)
}

// Path where the UserPassword authentication backend is mounted
// in Vault, e.g: "user"
func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPass) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPass) *SecretStoreSpecProviderVaultAuthUserPassSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput)
}

// Username is a user name used to authenticate using the UserPass Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthUserPassPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPass) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPassPatch struct {
	// Path where the UserPassword authentication backend is mounted
	// in Vault, e.g: "user"
	Path      *string                                                 `pulumi:"path"`
	SecretRef *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch `pulumi:"secretRef"`
	// Username is a user name used to authenticate using the UserPass Vault
	// authentication method
	Username *string `pulumi:"username"`
}

// SecretStoreSpecProviderVaultAuthUserPassPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassPatchArgs and SecretStoreSpecProviderVaultAuthUserPassPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthUserPassPatchArgs{...}
type SecretStoreSpecProviderVaultAuthUserPassPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassPatchOutput() SecretStoreSpecProviderVaultAuthUserPassPatchOutput
	ToSecretStoreSpecProviderVaultAuthUserPassPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchOutput
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPassPatchArgs struct {
	// Path where the UserPassword authentication backend is mounted
	// in Vault, e.g: "user"
	Path      pulumi.StringPtrInput                                          `pulumi:"path"`
	SecretRef SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput `pulumi:"secretRef"`
	// Username is a user name used to authenticate using the UserPass Vault
	// authentication method
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SecretStoreSpecProviderVaultAuthUserPassPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthUserPassPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassPatchOutput() SecretStoreSpecProviderVaultAuthUserPassPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthUserPassPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassPatchOutput).ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassPatchArgs, SecretStoreSpecProviderVaultAuthUserPassPatchPtr and SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthUserPassPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthUserPassPatchPtrType SecretStoreSpecProviderVaultAuthUserPassPatchArgs

func SecretStoreSpecProviderVaultAuthUserPassPatchPtr(v *SecretStoreSpecProviderVaultAuthUserPassPatchArgs) SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthUserPassPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthUserPassPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthUserPassPatchPtrType) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthUserPassPatchPtrType) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput)
}

// UserPass authenticates with Vault by passing username/password pair
type SecretStoreSpecProviderVaultAuthUserPassPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchOutput() SecretStoreSpecProviderVaultAuthUserPassPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthUserPassPatch) *SecretStoreSpecProviderVaultAuthUserPassPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput)
}

// Path where the UserPassword authentication backend is mounted
// in Vault, e.g: "user"
func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) SecretRef() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassPatch) *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput)
}

// Username is a user name used to authenticate using the UserPass Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthUserPassPatchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassPatch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthUserPassPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassPatch) SecretStoreSpecProviderVaultAuthUserPassPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthUserPassPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthUserPassPatchOutput)
}

// Path where the UserPassword authentication backend is mounted
// in Vault, e.g: "user"
func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) SecretRef() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassPatch) *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput)
}

// Username is a user name used to authenticate using the UserPass Vault
// authentication method
func (o SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassPatch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthUserPassSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs and SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs{...}
type SecretStoreSpecProviderVaultAuthUserPassSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput
	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput).ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs, SecretStoreSpecProviderVaultAuthUserPassSecretRefPtr and SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput
}

type secretStoreSpecProviderVaultAuthUserPassSecretRefPtrType SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs

func SecretStoreSpecProviderVaultAuthUserPassSecretRefPtr(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultAuthUserPassSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthUserPassSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthUserPassSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthUserPassSecretRefPtrType) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthUserPassSecretRef) *SecretStoreSpecProviderVaultAuthUserPassSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRef) SecretStoreSpecProviderVaultAuthUserPassSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthUserPassSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs and SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput).ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs, SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtr and SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrType SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs

func SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtr(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput)
}

// SecretRef to a key in a Secret resource containing password for the
// user used to authenticate with Vault using the UserPass authentication
// method
type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultAuthUserPassSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProvider struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderVaultCaProviderInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderArgs and SecretStoreSpecProviderVaultCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderInput` via:
//
//	SecretStoreSpecProviderVaultCaProviderArgs{...}
type SecretStoreSpecProviderVaultCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput
	ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderOutput
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderVaultCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderOutput)
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderArgs) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderOutput).ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderArgs, SecretStoreSpecProviderVaultCaProviderPtr and SecretStoreSpecProviderVaultCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderVaultCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput
	ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput
}

type secretStoreSpecProviderVaultCaProviderPtrType SecretStoreSpecProviderVaultCaProviderArgs

func SecretStoreSpecProviderVaultCaProviderPtr(v *SecretStoreSpecProviderVaultCaProviderArgs) SecretStoreSpecProviderVaultCaProviderPtrInput {
	return (*secretStoreSpecProviderVaultCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderVaultCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultCaProviderPtrType) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultCaProviderPtrType) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderOutput() SecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultCaProviderOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultCaProvider) *SecretStoreSpecProviderVaultCaProvider {
		return &v
	}).(SecretStoreSpecProviderVaultCaProviderPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderVaultCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderVaultCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProvider) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutput() SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Elem() SecretStoreSpecProviderVaultCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) SecretStoreSpecProviderVaultCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultCaProvider
		return ret
	}).(SecretStoreSpecProviderVaultCaProviderOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderPatch struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderVaultCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderPatchArgs and SecretStoreSpecProviderVaultCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderVaultCaProviderPatchArgs{...}
type SecretStoreSpecProviderVaultCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderPatchOutput() SecretStoreSpecProviderVaultCaProviderPatchOutput
	ToSecretStoreSpecProviderVaultCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderPatchOutput
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderPatchArgs struct {
	// The key where the CA certificate can be found in the Secret or ConfigMap.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	// Can only be defined when used in a ClusterSecretStore.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderVaultCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultCaProviderPatchArgs) ToSecretStoreSpecProviderVaultCaProviderPatchOutput() SecretStoreSpecProviderVaultCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderPatchArgs) ToSecretStoreSpecProviderVaultCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderVaultCaProviderPatchArgs) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutput() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultCaProviderPatchArgs) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderPatchOutput).ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultCaProviderPatchArgs, SecretStoreSpecProviderVaultCaProviderPatchPtr and SecretStoreSpecProviderVaultCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutput() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultCaProviderPatchPtrOutput
}

type secretStoreSpecProviderVaultCaProviderPatchPtrType SecretStoreSpecProviderVaultCaProviderPatchArgs

func SecretStoreSpecProviderVaultCaProviderPatchPtr(v *SecretStoreSpecProviderVaultCaProviderPatchArgs) SecretStoreSpecProviderVaultCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderVaultCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultCaProviderPatchPtrType) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutput() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultCaProviderPatchPtrType) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultCaProviderPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Vault server certificate.
type SecretStoreSpecProviderVaultCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) ToSecretStoreSpecProviderVaultCaProviderPatchOutput() SecretStoreSpecProviderVaultCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) ToSecretStoreSpecProviderVaultCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutput() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultCaProviderPatch) *SecretStoreSpecProviderVaultCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderVaultCaProviderPatchPtrOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProviderPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProviderPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultCaProviderPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutput() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) ToSecretStoreSpecProviderVaultCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderVaultCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProviderPatch) SecretStoreSpecProviderVaultCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderVaultCaProviderPatchOutput)
}

// The key where the CA certificate can be found in the Secret or ConfigMap.
func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
// Can only be defined when used in a ClusterSecretStore.
func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderVaultCaProviderPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultPatch struct {
	Auth *SecretStoreSpecProviderVaultAuthPatch `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                      `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderVaultCaProviderPatch `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent *bool `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace *string `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path *string `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites *bool `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server *string                               `pulumi:"server"`
	Tls    *SecretStoreSpecProviderVaultTlsPatch `pulumi:"tls"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version *string `pulumi:"version"`
}

// SecretStoreSpecProviderVaultPatchInput is an input type that accepts SecretStoreSpecProviderVaultPatchArgs and SecretStoreSpecProviderVaultPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultPatchInput` via:
//
//	SecretStoreSpecProviderVaultPatchArgs{...}
type SecretStoreSpecProviderVaultPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultPatchOutput() SecretStoreSpecProviderVaultPatchOutput
	ToSecretStoreSpecProviderVaultPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultPatchOutput
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultPatchArgs struct {
	Auth SecretStoreSpecProviderVaultAuthPatchPtrInput `pulumi:"auth"`
	// PEM encoded CA bundle used to validate Vault server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                               `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderVaultCaProviderPatchPtrInput `pulumi:"caProvider"`
	// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
	// leader instead of simply retrying within a loop. This can increase performance if
	// the option is enabled serverside.
	// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
	ForwardInconsistent pulumi.BoolPtrInput `pulumi:"forwardInconsistent"`
	// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
	// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
	// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Path is the mount path of the Vault KV backend endpoint, e.g:
	// "secret". The v2 KV secret engine version specific "/data" path suffix
	// for fetching secrets from Vault is optional and will be appended
	// if not present in specified path.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// ReadYourWrites ensures isolated read-after-write semantics by
	// providing discovered cluster replication states in each request.
	// More information about eventual consistency in Vault can be found here
	// https://www.vaultproject.io/docs/enterprise/consistency
	ReadYourWrites pulumi.BoolPtrInput `pulumi:"readYourWrites"`
	// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
	Server pulumi.StringPtrInput                        `pulumi:"server"`
	Tls    SecretStoreSpecProviderVaultTlsPatchPtrInput `pulumi:"tls"`
	// Version is the Vault KV secret engine version. This can be either "v1" or
	// "v2". Version defaults to "v2".
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (SecretStoreSpecProviderVaultPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultPatchArgs) ToSecretStoreSpecProviderVaultPatchOutput() SecretStoreSpecProviderVaultPatchOutput {
	return i.ToSecretStoreSpecProviderVaultPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultPatchArgs) ToSecretStoreSpecProviderVaultPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultPatchOutput)
}

func (i SecretStoreSpecProviderVaultPatchArgs) ToSecretStoreSpecProviderVaultPatchPtrOutput() SecretStoreSpecProviderVaultPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultPatchArgs) ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultPatchOutput).ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultPatchArgs, SecretStoreSpecProviderVaultPatchPtr and SecretStoreSpecProviderVaultPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultPatchPtrOutput() SecretStoreSpecProviderVaultPatchPtrOutput
	ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultPatchPtrOutput
}

type secretStoreSpecProviderVaultPatchPtrType SecretStoreSpecProviderVaultPatchArgs

func SecretStoreSpecProviderVaultPatchPtr(v *SecretStoreSpecProviderVaultPatchArgs) SecretStoreSpecProviderVaultPatchPtrInput {
	return (*secretStoreSpecProviderVaultPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultPatchPtrType) ToSecretStoreSpecProviderVaultPatchPtrOutput() SecretStoreSpecProviderVaultPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultPatchPtrType) ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultPatchPtrOutput)
}

// Vault configures this store to sync secrets using Hashi provider
type SecretStoreSpecProviderVaultPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultPatchOutput) ToSecretStoreSpecProviderVaultPatchOutput() SecretStoreSpecProviderVaultPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPatchOutput) ToSecretStoreSpecProviderVaultPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPatchOutput) ToSecretStoreSpecProviderVaultPatchPtrOutput() SecretStoreSpecProviderVaultPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultPatchOutput) ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultPatch {
		return &v
	}).(SecretStoreSpecProviderVaultPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultPatchOutput) Auth() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultAuthPatch { return v.Auth }).(SecretStoreSpecProviderVaultAuthPatchPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPatchOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderVaultCaProviderPatchPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultPatchOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *bool { return v.ForwardInconsistent }).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultPatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultPatchOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *bool { return v.ReadYourWrites }).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultPatchOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPatchOutput) Tls() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultTlsPatch { return v.Tls }).(SecretStoreSpecProviderVaultTlsPatchPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) ToSecretStoreSpecProviderVaultPatchPtrOutput() SecretStoreSpecProviderVaultPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) ToSecretStoreSpecProviderVaultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) Elem() SecretStoreSpecProviderVaultPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) SecretStoreSpecProviderVaultPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultPatch
		return ret
	}).(SecretStoreSpecProviderVaultPatchOutput)
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) Auth() SecretStoreSpecProviderVaultAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderVaultAuthPatchPtrOutput)
}

// PEM encoded CA bundle used to validate Vault server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderVaultPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) CaProvider() SecretStoreSpecProviderVaultCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderVaultCaProviderPatchPtrOutput)
}

// ForwardInconsistent tells Vault to forward read-after-write requests to the Vault
// leader instead of simply retrying within a loop. This can increase performance if
// the option is enabled serverside.
// https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
func (o SecretStoreSpecProviderVaultPatchPtrOutput) ForwardInconsistent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardInconsistent
	}).(pulumi.BoolPtrOutput)
}

// Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows
// Vault environments to support Secure Multi-tenancy. e.g: "ns1".
// More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
func (o SecretStoreSpecProviderVaultPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Path is the mount path of the Vault KV backend endpoint, e.g:
// "secret". The v2 KV secret engine version specific "/data" path suffix
// for fetching secrets from Vault is optional and will be appended
// if not present in specified path.
func (o SecretStoreSpecProviderVaultPatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// ReadYourWrites ensures isolated read-after-write semantics by
// providing discovered cluster replication states in each request.
// More information about eventual consistency in Vault can be found here
// https://www.vaultproject.io/docs/enterprise/consistency
func (o SecretStoreSpecProviderVaultPatchPtrOutput) ReadYourWrites() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ReadYourWrites
	}).(pulumi.BoolPtrOutput)
}

// Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".
func (o SecretStoreSpecProviderVaultPatchPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Server
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderVaultPatchPtrOutput) Tls() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *SecretStoreSpecProviderVaultTlsPatch {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(SecretStoreSpecProviderVaultTlsPatchPtrOutput)
}

// Version is the Vault KV secret engine version. This can be either "v1" or
// "v2". Version defaults to "v2".
func (o SecretStoreSpecProviderVaultPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTls struct {
	CertSecretRef *SecretStoreSpecProviderVaultTlsCertSecretRef `pulumi:"certSecretRef"`
	KeySecretRef  *SecretStoreSpecProviderVaultTlsKeySecretRef  `pulumi:"keySecretRef"`
}

// SecretStoreSpecProviderVaultTlsInput is an input type that accepts SecretStoreSpecProviderVaultTlsArgs and SecretStoreSpecProviderVaultTlsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsInput` via:
//
//	SecretStoreSpecProviderVaultTlsArgs{...}
type SecretStoreSpecProviderVaultTlsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsOutput() SecretStoreSpecProviderVaultTlsOutput
	ToSecretStoreSpecProviderVaultTlsOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsOutput
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTlsArgs struct {
	CertSecretRef SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput `pulumi:"certSecretRef"`
	KeySecretRef  SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput  `pulumi:"keySecretRef"`
}

func (SecretStoreSpecProviderVaultTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTls)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsArgs) ToSecretStoreSpecProviderVaultTlsOutput() SecretStoreSpecProviderVaultTlsOutput {
	return i.ToSecretStoreSpecProviderVaultTlsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsArgs) ToSecretStoreSpecProviderVaultTlsOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsOutput)
}

func (i SecretStoreSpecProviderVaultTlsArgs) ToSecretStoreSpecProviderVaultTlsPtrOutput() SecretStoreSpecProviderVaultTlsPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsArgs) ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsOutput).ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsArgs, SecretStoreSpecProviderVaultTlsPtr and SecretStoreSpecProviderVaultTlsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsPtrOutput() SecretStoreSpecProviderVaultTlsPtrOutput
	ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsPtrOutput
}

type secretStoreSpecProviderVaultTlsPtrType SecretStoreSpecProviderVaultTlsArgs

func SecretStoreSpecProviderVaultTlsPtr(v *SecretStoreSpecProviderVaultTlsArgs) SecretStoreSpecProviderVaultTlsPtrInput {
	return (*secretStoreSpecProviderVaultTlsPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTls)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsPtrType) ToSecretStoreSpecProviderVaultTlsPtrOutput() SecretStoreSpecProviderVaultTlsPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsPtrType) ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsPtrOutput)
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTlsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTls)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsOutput) ToSecretStoreSpecProviderVaultTlsOutput() SecretStoreSpecProviderVaultTlsOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsOutput) ToSecretStoreSpecProviderVaultTlsOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsOutput) ToSecretStoreSpecProviderVaultTlsPtrOutput() SecretStoreSpecProviderVaultTlsPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsOutput) ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTls) *SecretStoreSpecProviderVaultTls {
		return &v
	}).(SecretStoreSpecProviderVaultTlsPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsOutput) CertSecretRef() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTls) *SecretStoreSpecProviderVaultTlsCertSecretRef {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsOutput) KeySecretRef() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTls) *SecretStoreSpecProviderVaultTlsKeySecretRef {
		return v.KeySecretRef
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderVaultTlsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTls)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsPtrOutput) ToSecretStoreSpecProviderVaultTlsPtrOutput() SecretStoreSpecProviderVaultTlsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPtrOutput) ToSecretStoreSpecProviderVaultTlsPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPtrOutput) Elem() SecretStoreSpecProviderVaultTlsOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTls) SecretStoreSpecProviderVaultTls {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTls
		return ret
	}).(SecretStoreSpecProviderVaultTlsOutput)
}

func (o SecretStoreSpecProviderVaultTlsPtrOutput) CertSecretRef() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTls) *SecretStoreSpecProviderVaultTlsCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsPtrOutput) KeySecretRef() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTls) *SecretStoreSpecProviderVaultTlsKeySecretRef {
		if v == nil {
			return nil
		}
		return v.KeySecretRef
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput)
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultTlsCertSecretRefInput is an input type that accepts SecretStoreSpecProviderVaultTlsCertSecretRefArgs and SecretStoreSpecProviderVaultTlsCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsCertSecretRefInput` via:
//
//	SecretStoreSpecProviderVaultTlsCertSecretRefArgs{...}
type SecretStoreSpecProviderVaultTlsCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsCertSecretRefOutput() SecretStoreSpecProviderVaultTlsCertSecretRefOutput
	ToSecretStoreSpecProviderVaultTlsCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefOutput
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultTlsCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefOutput() SecretStoreSpecProviderVaultTlsCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefOutput)
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefOutput).ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsCertSecretRefArgs, SecretStoreSpecProviderVaultTlsCertSecretRefPtr and SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput
	ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput
}

type secretStoreSpecProviderVaultTlsCertSecretRefPtrType SecretStoreSpecProviderVaultTlsCertSecretRefArgs

func SecretStoreSpecProviderVaultTlsCertSecretRefPtr(v *SecretStoreSpecProviderVaultTlsCertSecretRefArgs) SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput {
	return (*secretStoreSpecProviderVaultTlsCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsCertSecretRefPtrType) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsCertSecretRefPtrType) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput)
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefOutput() SecretStoreSpecProviderVaultTlsCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTlsCertSecretRef) *SecretStoreSpecProviderVaultTlsCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultTlsCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRef) SecretStoreSpecProviderVaultTlsCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTlsCertSecretRef
		return ret
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultTlsCertSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs and SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsCertSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultTlsCertSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput
	ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput).ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs, SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtr and SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultTlsCertSecretRefPatchPtrType SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs

func SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtr(v *SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultTlsCertSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsCertSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsCertSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsCertSecretRefPatchPtrType) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput)
}

// CertSecretRef is a certificate added to the transport layer
// when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.crt'.
type SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *SecretStoreSpecProviderVaultTlsCertSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRefPatch) SecretStoreSpecProviderVaultTlsCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTlsCertSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultTlsKeySecretRefInput is an input type that accepts SecretStoreSpecProviderVaultTlsKeySecretRefArgs and SecretStoreSpecProviderVaultTlsKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsKeySecretRefInput` via:
//
//	SecretStoreSpecProviderVaultTlsKeySecretRefArgs{...}
type SecretStoreSpecProviderVaultTlsKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsKeySecretRefOutput() SecretStoreSpecProviderVaultTlsKeySecretRefOutput
	ToSecretStoreSpecProviderVaultTlsKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefOutput
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultTlsKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefOutput() SecretStoreSpecProviderVaultTlsKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefOutput)
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefOutput).ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsKeySecretRefArgs, SecretStoreSpecProviderVaultTlsKeySecretRefPtr and SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput
	ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput
}

type secretStoreSpecProviderVaultTlsKeySecretRefPtrType SecretStoreSpecProviderVaultTlsKeySecretRefArgs

func SecretStoreSpecProviderVaultTlsKeySecretRefPtr(v *SecretStoreSpecProviderVaultTlsKeySecretRefArgs) SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput {
	return (*secretStoreSpecProviderVaultTlsKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsKeySecretRefPtrType) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsKeySecretRefPtrType) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput)
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefOutput() SecretStoreSpecProviderVaultTlsKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTlsKeySecretRef) *SecretStoreSpecProviderVaultTlsKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderVaultTlsKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRef) SecretStoreSpecProviderVaultTlsKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTlsKeySecretRef
		return ret
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderVaultTlsKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs and SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderVaultTlsKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput
	ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput).ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs, SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtr and SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderVaultTlsKeySecretRefPatchPtrType SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs

func SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtr(v *SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderVaultTlsKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsKeySecretRefPatchPtrType) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsKeySecretRefPatchPtrType) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput)
}

// KeySecretRef to a key in a Secret resource containing client private key
// added to the transport layer when communicating with the Vault server.
// If no key for the Secret is specified, external-secret will default to 'tls.key'.
type SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *SecretStoreSpecProviderVaultTlsKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRefPatch) SecretStoreSpecProviderVaultTlsKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTlsKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTlsPatch struct {
	CertSecretRef *SecretStoreSpecProviderVaultTlsCertSecretRefPatch `pulumi:"certSecretRef"`
	KeySecretRef  *SecretStoreSpecProviderVaultTlsKeySecretRefPatch  `pulumi:"keySecretRef"`
}

// SecretStoreSpecProviderVaultTlsPatchInput is an input type that accepts SecretStoreSpecProviderVaultTlsPatchArgs and SecretStoreSpecProviderVaultTlsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsPatchInput` via:
//
//	SecretStoreSpecProviderVaultTlsPatchArgs{...}
type SecretStoreSpecProviderVaultTlsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsPatchOutput() SecretStoreSpecProviderVaultTlsPatchOutput
	ToSecretStoreSpecProviderVaultTlsPatchOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsPatchOutput
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTlsPatchArgs struct {
	CertSecretRef SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput `pulumi:"certSecretRef"`
	KeySecretRef  SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput  `pulumi:"keySecretRef"`
}

func (SecretStoreSpecProviderVaultTlsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderVaultTlsPatchArgs) ToSecretStoreSpecProviderVaultTlsPatchOutput() SecretStoreSpecProviderVaultTlsPatchOutput {
	return i.ToSecretStoreSpecProviderVaultTlsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsPatchArgs) ToSecretStoreSpecProviderVaultTlsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsPatchOutput)
}

func (i SecretStoreSpecProviderVaultTlsPatchArgs) ToSecretStoreSpecProviderVaultTlsPatchPtrOutput() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderVaultTlsPatchArgs) ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsPatchOutput).ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderVaultTlsPatchPtrInput is an input type that accepts SecretStoreSpecProviderVaultTlsPatchArgs, SecretStoreSpecProviderVaultTlsPatchPtr and SecretStoreSpecProviderVaultTlsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderVaultTlsPatchPtrInput` via:
//
//	        SecretStoreSpecProviderVaultTlsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderVaultTlsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderVaultTlsPatchPtrOutput() SecretStoreSpecProviderVaultTlsPatchPtrOutput
	ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderVaultTlsPatchPtrOutput
}

type secretStoreSpecProviderVaultTlsPatchPtrType SecretStoreSpecProviderVaultTlsPatchArgs

func SecretStoreSpecProviderVaultTlsPatchPtr(v *SecretStoreSpecProviderVaultTlsPatchArgs) SecretStoreSpecProviderVaultTlsPatchPtrInput {
	return (*secretStoreSpecProviderVaultTlsPatchPtrType)(v)
}

func (*secretStoreSpecProviderVaultTlsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderVaultTlsPatchPtrType) ToSecretStoreSpecProviderVaultTlsPatchPtrOutput() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return i.ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderVaultTlsPatchPtrType) ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderVaultTlsPatchPtrOutput)
}

// The configuration used for client side related TLS communication, when the Vault server
// requires mutual authentication. Only used if the Server URL is using HTTPS protocol.
// This parameter is ignored for plain HTTP protocol connection.
// It's worth noting this configuration is different from the "TLS certificates auth method",
// which is available under the `auth.cert` section.
type SecretStoreSpecProviderVaultTlsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderVaultTlsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) ToSecretStoreSpecProviderVaultTlsPatchOutput() SecretStoreSpecProviderVaultTlsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) ToSecretStoreSpecProviderVaultTlsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) ToSecretStoreSpecProviderVaultTlsPatchPtrOutput() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o.ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderVaultTlsPatch) *SecretStoreSpecProviderVaultTlsPatch {
		return &v
	}).(SecretStoreSpecProviderVaultTlsPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) CertSecretRef() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsPatch) *SecretStoreSpecProviderVaultTlsCertSecretRefPatch {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsPatchOutput) KeySecretRef() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderVaultTlsPatch) *SecretStoreSpecProviderVaultTlsKeySecretRefPatch {
		return v.KeySecretRef
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderVaultTlsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderVaultTlsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderVaultTlsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderVaultTlsPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsPatchPtrOutput() SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPatchPtrOutput) ToSecretStoreSpecProviderVaultTlsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderVaultTlsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderVaultTlsPatchPtrOutput) Elem() SecretStoreSpecProviderVaultTlsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsPatch) SecretStoreSpecProviderVaultTlsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderVaultTlsPatch
		return ret
	}).(SecretStoreSpecProviderVaultTlsPatchOutput)
}

func (o SecretStoreSpecProviderVaultTlsPatchPtrOutput) CertSecretRef() SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsPatch) *SecretStoreSpecProviderVaultTlsCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput)
}

func (o SecretStoreSpecProviderVaultTlsPatchPtrOutput) KeySecretRef() SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderVaultTlsPatch) *SecretStoreSpecProviderVaultTlsKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.KeySecretRef
	}).(SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhook struct {
	// Body
	Body *string `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                   `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderWebhookCaProvider `pulumi:"caProvider"`
	// Headers
	Headers map[string]string `pulumi:"headers"`
	// Webhook Method
	Method *string                               `pulumi:"method"`
	Result *SecretStoreSpecProviderWebhookResult `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets []SecretStoreSpecProviderWebhookSecrets `pulumi:"secrets"`
	// Timeout
	Timeout *string `pulumi:"timeout"`
	// Webhook url to call
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderWebhookInput is an input type that accepts SecretStoreSpecProviderWebhookArgs and SecretStoreSpecProviderWebhookOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookInput` via:
//
//	SecretStoreSpecProviderWebhookArgs{...}
type SecretStoreSpecProviderWebhookInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput
	ToSecretStoreSpecProviderWebhookOutputWithContext(context.Context) SecretStoreSpecProviderWebhookOutput
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookArgs struct {
	// Body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                            `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderWebhookCaProviderPtrInput `pulumi:"caProvider"`
	// Headers
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Webhook Method
	Method pulumi.StringPtrInput                        `pulumi:"method"`
	Result SecretStoreSpecProviderWebhookResultPtrInput `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets SecretStoreSpecProviderWebhookSecretsArrayInput `pulumi:"secrets"`
	// Timeout
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Webhook url to call
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput {
	return i.ToSecretStoreSpecProviderWebhookOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookOutput)
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookArgs) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookOutput).ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookPtrInput is an input type that accepts SecretStoreSpecProviderWebhookArgs, SecretStoreSpecProviderWebhookPtr and SecretStoreSpecProviderWebhookPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput
	ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookPtrOutput
}

type secretStoreSpecProviderWebhookPtrType SecretStoreSpecProviderWebhookArgs

func SecretStoreSpecProviderWebhookPtr(v *SecretStoreSpecProviderWebhookArgs) SecretStoreSpecProviderWebhookPtrInput {
	return (*secretStoreSpecProviderWebhookPtrType)(v)
}

func (*secretStoreSpecProviderWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookPtrType) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookPtrType) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookOutput() SecretStoreSpecProviderWebhookOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookOutput) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhook {
		return &v
	}).(SecretStoreSpecProviderWebhookPtrOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookCaProvider { return v.CaProvider }).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookOutput) Result() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookResult { return v.Result }).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookOutput) Secrets() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) []SecretStoreSpecProviderWebhookSecrets { return v.Secrets }).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhook) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhook)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookPtrOutput) ToSecretStoreSpecProviderWebhookPtrOutput() SecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPtrOutput) ToSecretStoreSpecProviderWebhookPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPtrOutput) Elem() SecretStoreSpecProviderWebhookOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) SecretStoreSpecProviderWebhook {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhook
		return ret
	}).(SecretStoreSpecProviderWebhookOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPtrOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPtrOutput) Result() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *SecretStoreSpecProviderWebhookResult {
		if v == nil {
			return nil
		}
		return v.Result
	}).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookPtrOutput) Secrets() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) []SecretStoreSpecProviderWebhookSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhook) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProvider struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderWebhookCaProviderInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderArgs and SecretStoreSpecProviderWebhookCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderInput` via:
//
//	SecretStoreSpecProviderWebhookCaProviderArgs{...}
type SecretStoreSpecProviderWebhookCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput
	ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderOutput
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderWebhookCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderOutput)
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderArgs) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderOutput).ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderArgs, SecretStoreSpecProviderWebhookCaProviderPtr and SecretStoreSpecProviderWebhookCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput
	ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput
}

type secretStoreSpecProviderWebhookCaProviderPtrType SecretStoreSpecProviderWebhookCaProviderArgs

func SecretStoreSpecProviderWebhookCaProviderPtr(v *SecretStoreSpecProviderWebhookCaProviderArgs) SecretStoreSpecProviderWebhookCaProviderPtrInput {
	return (*secretStoreSpecProviderWebhookCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderWebhookCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookCaProviderPtrType) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookCaProviderPtrType) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderOutput() SecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookCaProviderOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookCaProvider) *SecretStoreSpecProviderWebhookCaProvider {
		return &v
	}).(SecretStoreSpecProviderWebhookCaProviderPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProvider) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutput() SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Elem() SecretStoreSpecProviderWebhookCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) SecretStoreSpecProviderWebhookCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookCaProvider
		return ret
	}).(SecretStoreSpecProviderWebhookCaProviderOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProvider) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderPatch struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key *string `pulumi:"key"`
	// The name of the object located at the provider type.
	Name *string `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace *string `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type *string `pulumi:"type"`
}

// SecretStoreSpecProviderWebhookCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderPatchArgs and SecretStoreSpecProviderWebhookCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderWebhookCaProviderPatchArgs{...}
type SecretStoreSpecProviderWebhookCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderPatchOutput() SecretStoreSpecProviderWebhookCaProviderPatchOutput
	ToSecretStoreSpecProviderWebhookCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderPatchOutput
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderPatchArgs struct {
	// The key the value inside of the provider type to use, only used with "Secret" type
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the object located at the provider type.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The namespace the Provider type is in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// The type of provider to use such as "Secret", or "ConfigMap".
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreSpecProviderWebhookCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookCaProviderPatchArgs) ToSecretStoreSpecProviderWebhookCaProviderPatchOutput() SecretStoreSpecProviderWebhookCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderPatchArgs) ToSecretStoreSpecProviderWebhookCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderWebhookCaProviderPatchArgs) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutput() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookCaProviderPatchArgs) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderPatchOutput).ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderWebhookCaProviderPatchArgs, SecretStoreSpecProviderWebhookCaProviderPatchPtr and SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutput() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput
}

type secretStoreSpecProviderWebhookCaProviderPatchPtrType SecretStoreSpecProviderWebhookCaProviderPatchArgs

func SecretStoreSpecProviderWebhookCaProviderPatchPtr(v *SecretStoreSpecProviderWebhookCaProviderPatchArgs) SecretStoreSpecProviderWebhookCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderWebhookCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderWebhookCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookCaProviderPatchPtrType) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutput() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookCaProviderPatchPtrType) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput)
}

// The provider for the CA bundle to use to validate webhook server certificate.
type SecretStoreSpecProviderWebhookCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchOutput() SecretStoreSpecProviderWebhookCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutput() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookCaProviderPatch) *SecretStoreSpecProviderWebhookCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProviderPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProviderPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProviderPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookCaProviderPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutput() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) ToSecretStoreSpecProviderWebhookCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderWebhookCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProviderPatch) SecretStoreSpecProviderWebhookCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderWebhookCaProviderPatchOutput)
}

// The key the value inside of the provider type to use, only used with "Secret" type
func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the object located at the provider type.
func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the Provider type is in.
func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The type of provider to use such as "Secret", or "ConfigMap".
func (o SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookCaProviderPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookPatch struct {
	// Body
	Body *string `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   *string                                        `pulumi:"caBundle"`
	CaProvider *SecretStoreSpecProviderWebhookCaProviderPatch `pulumi:"caProvider"`
	// Headers
	Headers map[string]string `pulumi:"headers"`
	// Webhook Method
	Method *string                                    `pulumi:"method"`
	Result *SecretStoreSpecProviderWebhookResultPatch `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets []SecretStoreSpecProviderWebhookSecretsPatch `pulumi:"secrets"`
	// Timeout
	Timeout *string `pulumi:"timeout"`
	// Webhook url to call
	Url *string `pulumi:"url"`
}

// SecretStoreSpecProviderWebhookPatchInput is an input type that accepts SecretStoreSpecProviderWebhookPatchArgs and SecretStoreSpecProviderWebhookPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookPatchInput` via:
//
//	SecretStoreSpecProviderWebhookPatchArgs{...}
type SecretStoreSpecProviderWebhookPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookPatchOutput() SecretStoreSpecProviderWebhookPatchOutput
	ToSecretStoreSpecProviderWebhookPatchOutputWithContext(context.Context) SecretStoreSpecProviderWebhookPatchOutput
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookPatchArgs struct {
	// Body
	Body pulumi.StringPtrInput `pulumi:"body"`
	// PEM encoded CA bundle used to validate webhook server certificate. Only used
	// if the Server URL is using HTTPS protocol. This parameter is ignored for
	// plain HTTP protocol connection. If not set the system root certificates
	// are used to validate the TLS connection.
	CaBundle   pulumi.StringPtrInput                                 `pulumi:"caBundle"`
	CaProvider SecretStoreSpecProviderWebhookCaProviderPatchPtrInput `pulumi:"caProvider"`
	// Headers
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Webhook Method
	Method pulumi.StringPtrInput                             `pulumi:"method"`
	Result SecretStoreSpecProviderWebhookResultPatchPtrInput `pulumi:"result"`
	// Secrets to fill in templates
	// These secrets will be passed to the templating function as key value pairs under the given name
	Secrets SecretStoreSpecProviderWebhookSecretsPatchArrayInput `pulumi:"secrets"`
	// Timeout
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
	// Webhook url to call
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SecretStoreSpecProviderWebhookPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookPatchArgs) ToSecretStoreSpecProviderWebhookPatchOutput() SecretStoreSpecProviderWebhookPatchOutput {
	return i.ToSecretStoreSpecProviderWebhookPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookPatchArgs) ToSecretStoreSpecProviderWebhookPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookPatchOutput)
}

func (i SecretStoreSpecProviderWebhookPatchArgs) ToSecretStoreSpecProviderWebhookPatchPtrOutput() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookPatchArgs) ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookPatchOutput).ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookPatchPtrInput is an input type that accepts SecretStoreSpecProviderWebhookPatchArgs, SecretStoreSpecProviderWebhookPatchPtr and SecretStoreSpecProviderWebhookPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookPatchPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookPatchPtrOutput() SecretStoreSpecProviderWebhookPatchPtrOutput
	ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookPatchPtrOutput
}

type secretStoreSpecProviderWebhookPatchPtrType SecretStoreSpecProviderWebhookPatchArgs

func SecretStoreSpecProviderWebhookPatchPtr(v *SecretStoreSpecProviderWebhookPatchArgs) SecretStoreSpecProviderWebhookPatchPtrInput {
	return (*secretStoreSpecProviderWebhookPatchPtrType)(v)
}

func (*secretStoreSpecProviderWebhookPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookPatchPtrType) ToSecretStoreSpecProviderWebhookPatchPtrOutput() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookPatchPtrType) ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookPatchPtrOutput)
}

// Webhook configures this store to sync secrets using a generic templated webhook
type SecretStoreSpecProviderWebhookPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookPatchOutput) ToSecretStoreSpecProviderWebhookPatchOutput() SecretStoreSpecProviderWebhookPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPatchOutput) ToSecretStoreSpecProviderWebhookPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPatchOutput) ToSecretStoreSpecProviderWebhookPatchPtrOutput() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookPatchOutput) ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookPatch) *SecretStoreSpecProviderWebhookPatch {
		return &v
	}).(SecretStoreSpecProviderWebhookPatchPtrOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookPatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPatchOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *SecretStoreSpecProviderWebhookCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookPatchOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookPatchOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPatchOutput) Result() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *SecretStoreSpecProviderWebhookResultPatch {
		return v.Result
	}).(SecretStoreSpecProviderWebhookResultPatchPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookPatchOutput) Secrets() SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) []SecretStoreSpecProviderWebhookSecretsPatch {
		return v.Secrets
	}).(SecretStoreSpecProviderWebhookSecretsPatchArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookPatchOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookPatchPtrOutput) ToSecretStoreSpecProviderWebhookPatchPtrOutput() SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPatchPtrOutput) ToSecretStoreSpecProviderWebhookPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Elem() SecretStoreSpecProviderWebhookPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) SecretStoreSpecProviderWebhookPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookPatch
		return ret
	}).(SecretStoreSpecProviderWebhookPatchOutput)
}

// Body
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// PEM encoded CA bundle used to validate webhook server certificate. Only used
// if the Server URL is using HTTPS protocol. This parameter is ignored for
// plain HTTP protocol connection. If not set the system root certificates
// are used to validate the TLS connection.
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPatchPtrOutput) CaProvider() SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *SecretStoreSpecProviderWebhookCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput)
}

// Headers
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Webhook Method
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Result() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *SecretStoreSpecProviderWebhookResultPatch {
		if v == nil {
			return nil
		}
		return v.Result
	}).(SecretStoreSpecProviderWebhookResultPatchPtrOutput)
}

// Secrets to fill in templates
// These secrets will be passed to the templating function as key value pairs under the given name
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Secrets() SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) []SecretStoreSpecProviderWebhookSecretsPatch {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(SecretStoreSpecProviderWebhookSecretsPatchArrayOutput)
}

// Timeout
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Webhook url to call
func (o SecretStoreSpecProviderWebhookPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Result formatting
type SecretStoreSpecProviderWebhookResult struct {
	// Json path of return value
	JsonPath *string `pulumi:"jsonPath"`
}

// SecretStoreSpecProviderWebhookResultInput is an input type that accepts SecretStoreSpecProviderWebhookResultArgs and SecretStoreSpecProviderWebhookResultOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultInput` via:
//
//	SecretStoreSpecProviderWebhookResultArgs{...}
type SecretStoreSpecProviderWebhookResultInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput
	ToSecretStoreSpecProviderWebhookResultOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultOutput
}

// Result formatting
type SecretStoreSpecProviderWebhookResultArgs struct {
	// Json path of return value
	JsonPath pulumi.StringPtrInput `pulumi:"jsonPath"`
}

func (SecretStoreSpecProviderWebhookResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput {
	return i.ToSecretStoreSpecProviderWebhookResultOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultOutput)
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultArgs) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultOutput).ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookResultPtrInput is an input type that accepts SecretStoreSpecProviderWebhookResultArgs, SecretStoreSpecProviderWebhookResultPtr and SecretStoreSpecProviderWebhookResultPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookResultArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookResultPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput
	ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultPtrOutput
}

type secretStoreSpecProviderWebhookResultPtrType SecretStoreSpecProviderWebhookResultArgs

func SecretStoreSpecProviderWebhookResultPtr(v *SecretStoreSpecProviderWebhookResultArgs) SecretStoreSpecProviderWebhookResultPtrInput {
	return (*secretStoreSpecProviderWebhookResultPtrType)(v)
}

func (*secretStoreSpecProviderWebhookResultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookResultPtrType) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookResultPtrType) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Result formatting
type SecretStoreSpecProviderWebhookResultOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultOutput() SecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookResultOutput) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookResult) *SecretStoreSpecProviderWebhookResult {
		return &v
	}).(SecretStoreSpecProviderWebhookResultPtrOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookResult) *string { return v.JsonPath }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookResultPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResult)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) ToSecretStoreSpecProviderWebhookResultPtrOutput() SecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) ToSecretStoreSpecProviderWebhookResultPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPtrOutput) Elem() SecretStoreSpecProviderWebhookResultOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResult) SecretStoreSpecProviderWebhookResult {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookResult
		return ret
	}).(SecretStoreSpecProviderWebhookResultOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultPtrOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResult) *string {
		if v == nil {
			return nil
		}
		return v.JsonPath
	}).(pulumi.StringPtrOutput)
}

// Result formatting
type SecretStoreSpecProviderWebhookResultPatch struct {
	// Json path of return value
	JsonPath *string `pulumi:"jsonPath"`
}

// SecretStoreSpecProviderWebhookResultPatchInput is an input type that accepts SecretStoreSpecProviderWebhookResultPatchArgs and SecretStoreSpecProviderWebhookResultPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultPatchInput` via:
//
//	SecretStoreSpecProviderWebhookResultPatchArgs{...}
type SecretStoreSpecProviderWebhookResultPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultPatchOutput() SecretStoreSpecProviderWebhookResultPatchOutput
	ToSecretStoreSpecProviderWebhookResultPatchOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultPatchOutput
}

// Result formatting
type SecretStoreSpecProviderWebhookResultPatchArgs struct {
	// Json path of return value
	JsonPath pulumi.StringPtrInput `pulumi:"jsonPath"`
}

func (SecretStoreSpecProviderWebhookResultPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookResultPatchArgs) ToSecretStoreSpecProviderWebhookResultPatchOutput() SecretStoreSpecProviderWebhookResultPatchOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultPatchArgs) ToSecretStoreSpecProviderWebhookResultPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultPatchOutput)
}

func (i SecretStoreSpecProviderWebhookResultPatchArgs) ToSecretStoreSpecProviderWebhookResultPatchPtrOutput() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookResultPatchArgs) ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultPatchOutput).ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookResultPatchPtrInput is an input type that accepts SecretStoreSpecProviderWebhookResultPatchArgs, SecretStoreSpecProviderWebhookResultPatchPtr and SecretStoreSpecProviderWebhookResultPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookResultPatchPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookResultPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookResultPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookResultPatchPtrOutput() SecretStoreSpecProviderWebhookResultPatchPtrOutput
	ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookResultPatchPtrOutput
}

type secretStoreSpecProviderWebhookResultPatchPtrType SecretStoreSpecProviderWebhookResultPatchArgs

func SecretStoreSpecProviderWebhookResultPatchPtr(v *SecretStoreSpecProviderWebhookResultPatchArgs) SecretStoreSpecProviderWebhookResultPatchPtrInput {
	return (*secretStoreSpecProviderWebhookResultPatchPtrType)(v)
}

func (*secretStoreSpecProviderWebhookResultPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResultPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookResultPatchPtrType) ToSecretStoreSpecProviderWebhookResultPatchPtrOutput() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookResultPatchPtrType) ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookResultPatchPtrOutput)
}

// Result formatting
type SecretStoreSpecProviderWebhookResultPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultPatchOutput) ToSecretStoreSpecProviderWebhookResultPatchOutput() SecretStoreSpecProviderWebhookResultPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPatchOutput) ToSecretStoreSpecProviderWebhookResultPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPatchOutput) ToSecretStoreSpecProviderWebhookResultPatchPtrOutput() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookResultPatchOutput) ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookResultPatch) *SecretStoreSpecProviderWebhookResultPatch {
		return &v
	}).(SecretStoreSpecProviderWebhookResultPatchPtrOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultPatchOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookResultPatch) *string { return v.JsonPath }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookResultPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookResultPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookResultPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookResultPatchPtrOutput) ToSecretStoreSpecProviderWebhookResultPatchPtrOutput() SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPatchPtrOutput) ToSecretStoreSpecProviderWebhookResultPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookResultPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookResultPatchPtrOutput) Elem() SecretStoreSpecProviderWebhookResultPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResultPatch) SecretStoreSpecProviderWebhookResultPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookResultPatch
		return ret
	}).(SecretStoreSpecProviderWebhookResultPatchOutput)
}

// Json path of return value
func (o SecretStoreSpecProviderWebhookResultPatchPtrOutput) JsonPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookResultPatch) *string {
		if v == nil {
			return nil
		}
		return v.JsonPath
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookSecrets struct {
	// Name of this secret in templates
	Name      *string                                         `pulumi:"name"`
	SecretRef *SecretStoreSpecProviderWebhookSecretsSecretRef `pulumi:"secretRef"`
}

// SecretStoreSpecProviderWebhookSecretsInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsArgs and SecretStoreSpecProviderWebhookSecretsOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsArgs{...}
type SecretStoreSpecProviderWebhookSecretsInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput
	ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsOutput
}

type SecretStoreSpecProviderWebhookSecretsArgs struct {
	// Name of this secret in templates
	Name      pulumi.StringPtrInput                                  `pulumi:"name"`
	SecretRef SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderWebhookSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsArgs) ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsArgs) ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsOutput)
}

// SecretStoreSpecProviderWebhookSecretsArrayInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsArray and SecretStoreSpecProviderWebhookSecretsArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsArrayInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsArray{ SecretStoreSpecProviderWebhookSecretsArgs{...} }
type SecretStoreSpecProviderWebhookSecretsArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput
	ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput
}

type SecretStoreSpecProviderWebhookSecretsArray []SecretStoreSpecProviderWebhookSecretsInput

func (SecretStoreSpecProviderWebhookSecretsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsArray) ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsArray) ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsArrayOutput)
}

type SecretStoreSpecProviderWebhookSecretsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsOutput) ToSecretStoreSpecProviderWebhookSecretsOutput() SecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsOutput) ToSecretStoreSpecProviderWebhookSecretsOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsOutput {
	return o
}

// Name of this secret in templates
func (o SecretStoreSpecProviderWebhookSecretsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecrets) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookSecretsOutput) SecretRef() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecrets) *SecretStoreSpecProviderWebhookSecretsSecretRef {
		return v.SecretRef
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput)
}

type SecretStoreSpecProviderWebhookSecretsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecrets)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) ToSecretStoreSpecProviderWebhookSecretsArrayOutput() SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) ToSecretStoreSpecProviderWebhookSecretsArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderWebhookSecretsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderWebhookSecrets {
		return vs[0].([]SecretStoreSpecProviderWebhookSecrets)[vs[1].(int)]
	}).(SecretStoreSpecProviderWebhookSecretsOutput)
}

type SecretStoreSpecProviderWebhookSecretsPatch struct {
	// Name of this secret in templates
	Name      *string                                              `pulumi:"name"`
	SecretRef *SecretStoreSpecProviderWebhookSecretsSecretRefPatch `pulumi:"secretRef"`
}

// SecretStoreSpecProviderWebhookSecretsPatchInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsPatchArgs and SecretStoreSpecProviderWebhookSecretsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsPatchInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsPatchArgs{...}
type SecretStoreSpecProviderWebhookSecretsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsPatchOutput() SecretStoreSpecProviderWebhookSecretsPatchOutput
	ToSecretStoreSpecProviderWebhookSecretsPatchOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsPatchOutput
}

type SecretStoreSpecProviderWebhookSecretsPatchArgs struct {
	// Name of this secret in templates
	Name      pulumi.StringPtrInput                                       `pulumi:"name"`
	SecretRef SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput `pulumi:"secretRef"`
}

func (SecretStoreSpecProviderWebhookSecretsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsPatchArgs) ToSecretStoreSpecProviderWebhookSecretsPatchOutput() SecretStoreSpecProviderWebhookSecretsPatchOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsPatchArgs) ToSecretStoreSpecProviderWebhookSecretsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsPatchOutput)
}

// SecretStoreSpecProviderWebhookSecretsPatchArrayInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsPatchArray and SecretStoreSpecProviderWebhookSecretsPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsPatchArrayInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsPatchArray{ SecretStoreSpecProviderWebhookSecretsPatchArgs{...} }
type SecretStoreSpecProviderWebhookSecretsPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutput() SecretStoreSpecProviderWebhookSecretsPatchArrayOutput
	ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsPatchArrayOutput
}

type SecretStoreSpecProviderWebhookSecretsPatchArray []SecretStoreSpecProviderWebhookSecretsPatchInput

func (SecretStoreSpecProviderWebhookSecretsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecretsPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsPatchArray) ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutput() SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsPatchArray) ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsPatchArrayOutput)
}

type SecretStoreSpecProviderWebhookSecretsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsPatchOutput) ToSecretStoreSpecProviderWebhookSecretsPatchOutput() SecretStoreSpecProviderWebhookSecretsPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsPatchOutput) ToSecretStoreSpecProviderWebhookSecretsPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsPatchOutput {
	return o
}

// Name of this secret in templates
func (o SecretStoreSpecProviderWebhookSecretsPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderWebhookSecretsPatchOutput) SecretRef() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsPatch) *SecretStoreSpecProviderWebhookSecretsSecretRefPatch {
		return v.SecretRef
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderWebhookSecretsPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreSpecProviderWebhookSecretsPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsPatchArrayOutput) ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutput() SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsPatchArrayOutput) ToSecretStoreSpecProviderWebhookSecretsPatchArrayOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsPatchArrayOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreSpecProviderWebhookSecretsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreSpecProviderWebhookSecretsPatch {
		return vs[0].([]SecretStoreSpecProviderWebhookSecretsPatch)[vs[1].(int)]
	}).(SecretStoreSpecProviderWebhookSecretsPatchOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderWebhookSecretsSecretRefInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsSecretRefArgs and SecretStoreSpecProviderWebhookSecretsSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsSecretRefInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsSecretRefArgs{...}
type SecretStoreSpecProviderWebhookSecretsSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput
	ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefOutput).ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsSecretRefArgs, SecretStoreSpecProviderWebhookSecretsSecretRefPtr and SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookSecretsSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput
	ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput
}

type secretStoreSpecProviderWebhookSecretsSecretRefPtrType SecretStoreSpecProviderWebhookSecretsSecretRefArgs

func SecretStoreSpecProviderWebhookSecretsSecretRefPtr(v *SecretStoreSpecProviderWebhookSecretsSecretRefArgs) SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput {
	return (*secretStoreSpecProviderWebhookSecretsSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderWebhookSecretsSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookSecretsSecretRefPtrType) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookSecretsSecretRefPtrType) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutput() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookSecretsSecretRef) *SecretStoreSpecProviderWebhookSecretsSecretRef {
		return &v
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookSecretsSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) Elem() SecretStoreSpecProviderWebhookSecretsSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRef) SecretStoreSpecProviderWebhookSecretsSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookSecretsSecretRef
		return ret
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderWebhookSecretsSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs and SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs{...}
type SecretStoreSpecProviderWebhookSecretsSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput
	ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput).ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs, SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtr and SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput
}

type secretStoreSpecProviderWebhookSecretsSecretRefPatchPtrType SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs

func SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtr(v *SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderWebhookSecretsSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderWebhookSecretsSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookSecretsSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderWebhookSecretsSecretRefPatchPtrType) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderWebhookSecretsSecretRefPatchPtrType) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput)
}

// Secret ref to fill in credentials
type SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *SecretStoreSpecProviderWebhookSecretsSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderWebhookSecretsSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput() SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) ToSecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRefPatch) SecretStoreSpecProviderWebhookSecretsSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderWebhookSecretsSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderWebhookSecretsSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanager struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string                                                    `pulumi:"apiEndpoint"`
	Auth        *SecretStoreSpecProviderYandexcertificatemanagerAuth       `pulumi:"auth"`
	CaProvider  *SecretStoreSpecProviderYandexcertificatemanagerCaProvider `pulumi:"caProvider"`
}

// SecretStoreSpecProviderYandexcertificatemanagerInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerArgs and SecretStoreSpecProviderYandexcertificatemanagerOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerOutput() SecretStoreSpecProviderYandexcertificatemanagerOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerOutput
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanagerArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput                                             `pulumi:"apiEndpoint"`
	Auth        SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput       `pulumi:"auth"`
	CaProvider  SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanager)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerArgs) ToSecretStoreSpecProviderYandexcertificatemanagerOutput() SecretStoreSpecProviderYandexcertificatemanagerOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerArgs) ToSecretStoreSpecProviderYandexcertificatemanagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerOutput).ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerArgs, SecretStoreSpecProviderYandexcertificatemanagerPtr and SecretStoreSpecProviderYandexcertificatemanagerPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerPtrType SecretStoreSpecProviderYandexcertificatemanagerArgs

func SecretStoreSpecProviderYandexcertificatemanagerPtr(v *SecretStoreSpecProviderYandexcertificatemanagerArgs) SecretStoreSpecProviderYandexcertificatemanagerPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanager)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerPtrOutput)
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanagerOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanager)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) ToSecretStoreSpecProviderYandexcertificatemanagerOutput() SecretStoreSpecProviderYandexcertificatemanagerOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) ToSecretStoreSpecProviderYandexcertificatemanagerOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanager) *SecretStoreSpecProviderYandexcertificatemanager {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanager) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) Auth() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanager) *SecretStoreSpecProviderYandexcertificatemanagerAuth {
		return v.Auth
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerOutput) CaProvider() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanager) *SecretStoreSpecProviderYandexcertificatemanagerCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanager)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanager) SecretStoreSpecProviderYandexcertificatemanager {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanager
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanager) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) Auth() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanager) *SecretStoreSpecProviderYandexcertificatemanagerAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPtrOutput) CaProvider() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanager) *SecretStoreSpecProviderYandexcertificatemanagerCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuth struct {
	AuthorizedKeySecretRef *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef `pulumi:"authorizedKeySecretRef"`
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthArgs and SecretStoreSpecProviderYandexcertificatemanagerAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerAuthArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthOutput
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuthArgs struct {
	AuthorizedKeySecretRef SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthOutput).ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthArgs, SecretStoreSpecProviderYandexcertificatemanagerAuthPtr and SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerAuthPtrType SecretStoreSpecProviderYandexcertificatemanagerAuthArgs

func SecretStoreSpecProviderYandexcertificatemanagerAuthPtr(v *SecretStoreSpecProviderYandexcertificatemanagerAuthArgs) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerAuthPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerAuth) *SecretStoreSpecProviderYandexcertificatemanagerAuth {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuth) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef {
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuth) SecretStoreSpecProviderYandexcertificatemanagerAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerAuth
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuth) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs and SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput).ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs, SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtr and SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrType SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs

func SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtr(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs and SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput).ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs, SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtr and SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrType SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs

func SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtr(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuthPatch struct {
	AuthorizedKeySecretRef *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch `pulumi:"authorizedKeySecretRef"`
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthPatchInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs and SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthPatchInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs struct {
	AuthorizedKeySecretRef SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput).ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs, SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtr and SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrType SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs

func SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtr(v *SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Certificate Manager
type SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerAuthPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerAuthPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch {
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch) SecretStoreSpecProviderYandexcertificatemanagerAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerAuthPatch
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProvider struct {
	CertSecretRef *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef `pulumi:"certSecretRef"`
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs and SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs struct {
	CertSecretRef SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput `pulumi:"certSecretRef"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput).ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs, SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtr and SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerCaProviderPtrType SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs

func SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtr(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerCaProvider) *SecretStoreSpecProviderYandexcertificatemanagerCaProvider {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput) CertSecretRef() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProvider) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProvider) SecretStoreSpecProviderYandexcertificatemanagerCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerCaProvider
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput) CertSecretRef() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProvider) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs and SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput).ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs, SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtr and SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrType SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs

func SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtr(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs and SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput).ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs, SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtr and SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrType SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs

func SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtr(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch struct {
	CertSecretRef *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch `pulumi:"certSecretRef"`
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs and SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs struct {
	CertSecretRef SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput `pulumi:"certSecretRef"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput).ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs, SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtr and SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrType SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs

func SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtr(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput) CertSecretRef() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch) SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput) CertSecretRef() SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput)
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanagerPatch struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string                                                         `pulumi:"apiEndpoint"`
	Auth        *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch       `pulumi:"auth"`
	CaProvider  *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch `pulumi:"caProvider"`
}

// SecretStoreSpecProviderYandexcertificatemanagerPatchInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerPatchArgs and SecretStoreSpecProviderYandexcertificatemanagerPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerPatchInput` via:
//
//	SecretStoreSpecProviderYandexcertificatemanagerPatchArgs{...}
type SecretStoreSpecProviderYandexcertificatemanagerPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchOutput
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanagerPatchArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput                                                  `pulumi:"apiEndpoint"`
	Auth        SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput       `pulumi:"auth"`
	CaProvider  SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerPatchOutput)
}

func (i SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerPatchOutput).ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexcertificatemanagerPatchArgs, SecretStoreSpecProviderYandexcertificatemanagerPatchPtr and SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexcertificatemanagerPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput
	ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput
}

type secretStoreSpecProviderYandexcertificatemanagerPatchPtrType SecretStoreSpecProviderYandexcertificatemanagerPatchArgs

func SecretStoreSpecProviderYandexcertificatemanagerPatchPtr(v *SecretStoreSpecProviderYandexcertificatemanagerPatchArgs) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput {
	return (*secretStoreSpecProviderYandexcertificatemanagerPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexcertificatemanagerPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexcertificatemanagerPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexcertificatemanagerPatchPtrType) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput)
}

// YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
type SecretStoreSpecProviderYandexcertificatemanagerPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexcertificatemanagerPatch) *SecretStoreSpecProviderYandexcertificatemanagerPatch {
		return &v
	}).(SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerPatch) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) Auth() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchOutput) CaProvider() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexcertificatemanagerPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput)
}

type SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexcertificatemanagerPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput() SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) ToSecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) Elem() SecretStoreSpecProviderYandexcertificatemanagerPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerPatch) SecretStoreSpecProviderYandexcertificatemanagerPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexcertificatemanagerPatch
		return ret
	}).(SecretStoreSpecProviderYandexcertificatemanagerPatchOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) Auth() SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerPatch) *SecretStoreSpecProviderYandexcertificatemanagerAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput) CaProvider() SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexcertificatemanagerPatch) *SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockbox struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string                                         `pulumi:"apiEndpoint"`
	Auth        *SecretStoreSpecProviderYandexlockboxAuth       `pulumi:"auth"`
	CaProvider  *SecretStoreSpecProviderYandexlockboxCaProvider `pulumi:"caProvider"`
}

// SecretStoreSpecProviderYandexlockboxInput is an input type that accepts SecretStoreSpecProviderYandexlockboxArgs and SecretStoreSpecProviderYandexlockboxOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxInput` via:
//
//	SecretStoreSpecProviderYandexlockboxArgs{...}
type SecretStoreSpecProviderYandexlockboxInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput
	ToSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxOutput
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput                                  `pulumi:"apiEndpoint"`
	Auth        SecretStoreSpecProviderYandexlockboxAuthPtrInput       `pulumi:"auth"`
	CaProvider  SecretStoreSpecProviderYandexlockboxCaProviderPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderYandexlockboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxOutput)
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxArgs) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxOutput).ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxArgs, SecretStoreSpecProviderYandexlockboxPtr and SecretStoreSpecProviderYandexlockboxPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput
	ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput
}

type secretStoreSpecProviderYandexlockboxPtrType SecretStoreSpecProviderYandexlockboxArgs

func SecretStoreSpecProviderYandexlockboxPtr(v *SecretStoreSpecProviderYandexlockboxArgs) SecretStoreSpecProviderYandexlockboxPtrInput {
	return (*secretStoreSpecProviderYandexlockboxPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxPtrType) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxPtrType) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxOutput() SecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockbox {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxAuth { return v.Auth }).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxCaProvider {
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockbox)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutput() SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ToSecretStoreSpecProviderYandexlockboxPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) SecretStoreSpecProviderYandexlockbox {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockbox
		return ret
	}).(SecretStoreSpecProviderYandexlockboxOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPtrOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockbox) *SecretStoreSpecProviderYandexlockboxCaProvider {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuth struct {
	AuthorizedKeySecretRef *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef `pulumi:"authorizedKeySecretRef"`
}

// SecretStoreSpecProviderYandexlockboxAuthInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthArgs and SecretStoreSpecProviderYandexlockboxAuthOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput
	ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthArgs struct {
	AuthorizedKeySecretRef SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthArgs) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthOutput).ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthArgs, SecretStoreSpecProviderYandexlockboxAuthPtr and SecretStoreSpecProviderYandexlockboxAuthPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthPtrType SecretStoreSpecProviderYandexlockboxAuthArgs

func SecretStoreSpecProviderYandexlockboxAuthPtr(v *SecretStoreSpecProviderYandexlockboxAuthArgs) SecretStoreSpecProviderYandexlockboxAuthPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthOutput() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuth {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxAuthOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuth)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuth) SecretStoreSpecProviderYandexlockboxAuth {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuth
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthOutput)
}

func (o SecretStoreSpecProviderYandexlockboxAuthPtrOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuth) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput).ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs, SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs

func SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtr(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput).ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs, SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtr and SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrType SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs

func SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtr(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrType) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The authorized key used for authentication
type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthPatch struct {
	AuthorizedKeySecretRef *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch `pulumi:"authorizedKeySecretRef"`
}

// SecretStoreSpecProviderYandexlockboxAuthPatchInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthPatchArgs and SecretStoreSpecProviderYandexlockboxAuthPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthPatchInput` via:
//
//	SecretStoreSpecProviderYandexlockboxAuthPatchArgs{...}
type SecretStoreSpecProviderYandexlockboxAuthPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthPatchOutput() SecretStoreSpecProviderYandexlockboxAuthPatchOutput
	ToSecretStoreSpecProviderYandexlockboxAuthPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchOutput
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthPatchArgs struct {
	AuthorizedKeySecretRef SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput `pulumi:"authorizedKeySecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxAuthPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxAuthPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthPatchOutput() SecretStoreSpecProviderYandexlockboxAuthPatchOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthPatchOutput)
}

func (i SecretStoreSpecProviderYandexlockboxAuthPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxAuthPatchArgs) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthPatchOutput).ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxAuthPatchArgs, SecretStoreSpecProviderYandexlockboxAuthPatchPtr and SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxAuthPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput
	ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput
}

type secretStoreSpecProviderYandexlockboxAuthPatchPtrType SecretStoreSpecProviderYandexlockboxAuthPatchArgs

func SecretStoreSpecProviderYandexlockboxAuthPatchPtr(v *SecretStoreSpecProviderYandexlockboxAuthPatchArgs) SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput {
	return (*secretStoreSpecProviderYandexlockboxAuthPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxAuthPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxAuthPatchPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxAuthPatchPtrType) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput)
}

// Auth defines the information necessary to authenticate against Yandex Lockbox
type SecretStoreSpecProviderYandexlockboxAuthPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchOutput() SecretStoreSpecProviderYandexlockboxAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxAuthPatch) *SecretStoreSpecProviderYandexlockboxAuthPatch {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxAuthPatch) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch {
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxAuthPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxAuthPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxAuthPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthPatch) SecretStoreSpecProviderYandexlockboxAuthPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxAuthPatch
		return ret
	}).(SecretStoreSpecProviderYandexlockboxAuthPatchOutput)
}

func (o SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput) AuthorizedKeySecretRef() SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxAuthPatch) *SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatch {
		if v == nil {
			return nil
		}
		return v.AuthorizedKeySecretRef
	}).(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProvider struct {
	CertSecretRef *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef `pulumi:"certSecretRef"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderArgs and SecretStoreSpecProviderYandexlockboxCaProviderOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderArgs struct {
	CertSecretRef SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput `pulumi:"certSecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderArgs, SecretStoreSpecProviderYandexlockboxCaProviderPtr and SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderPtrType SecretStoreSpecProviderYandexlockboxCaProviderArgs

func SecretStoreSpecProviderYandexlockboxCaProviderPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderArgs) SecretStoreSpecProviderYandexlockboxCaProviderPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderOutput() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProvider {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProvider)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProvider) SecretStoreSpecProviderYandexlockboxCaProvider {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProvider
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderOutput)
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProvider) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs, SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs

func SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key *string `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name *string `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace *string `pulumi:"namespace"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs struct {
	// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
	// defaulted, in others it may be required.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The name of the Secret resource being referred to.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
	// to the namespace of the referent.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs, SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtr and SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrType SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs

func SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput)
}

// A reference to a specific 'key' within a Secret resource,
// In some instances, `key` is a required field.
type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput)
}

// The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be
// defaulted, in others it may be required.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// The name of the Secret resource being referred to.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults
// to the namespace of the referent.
func (o SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderPatch struct {
	CertSecretRef *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch `pulumi:"certSecretRef"`
}

// SecretStoreSpecProviderYandexlockboxCaProviderPatchInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs and SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderPatchInput` via:
//
//	SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs{...}
type SecretStoreSpecProviderYandexlockboxCaProviderPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs struct {
	CertSecretRef SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput `pulumi:"certSecretRef"`
}

func (SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput)
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput).ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs, SecretStoreSpecProviderYandexlockboxCaProviderPatchPtr and SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput
	ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput
}

type secretStoreSpecProviderYandexlockboxCaProviderPatchPtrType SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs

func SecretStoreSpecProviderYandexlockboxCaProviderPatchPtr(v *SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput {
	return (*secretStoreSpecProviderYandexlockboxCaProviderPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxCaProviderPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPatchPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxCaProviderPatchPtrType) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput)
}

// The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
type SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxCaProviderPatch) *SecretStoreSpecProviderYandexlockboxCaProviderPatch {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxCaProviderPatch) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch {
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxCaProviderPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderPatch) SecretStoreSpecProviderYandexlockboxCaProviderPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxCaProviderPatch
		return ret
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput)
}

func (o SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput) CertSecretRef() SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxCaProviderPatch) *SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatch {
		if v == nil {
			return nil
		}
		return v.CertSecretRef
	}).(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxPatch struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint *string                                              `pulumi:"apiEndpoint"`
	Auth        *SecretStoreSpecProviderYandexlockboxAuthPatch       `pulumi:"auth"`
	CaProvider  *SecretStoreSpecProviderYandexlockboxCaProviderPatch `pulumi:"caProvider"`
}

// SecretStoreSpecProviderYandexlockboxPatchInput is an input type that accepts SecretStoreSpecProviderYandexlockboxPatchArgs and SecretStoreSpecProviderYandexlockboxPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxPatchInput` via:
//
//	SecretStoreSpecProviderYandexlockboxPatchArgs{...}
type SecretStoreSpecProviderYandexlockboxPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxPatchOutput() SecretStoreSpecProviderYandexlockboxPatchOutput
	ToSecretStoreSpecProviderYandexlockboxPatchOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxPatchOutput
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxPatchArgs struct {
	// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
	ApiEndpoint pulumi.StringPtrInput                                       `pulumi:"apiEndpoint"`
	Auth        SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput       `pulumi:"auth"`
	CaProvider  SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput `pulumi:"caProvider"`
}

func (SecretStoreSpecProviderYandexlockboxPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPatch)(nil)).Elem()
}

func (i SecretStoreSpecProviderYandexlockboxPatchArgs) ToSecretStoreSpecProviderYandexlockboxPatchOutput() SecretStoreSpecProviderYandexlockboxPatchOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxPatchArgs) ToSecretStoreSpecProviderYandexlockboxPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxPatchOutput)
}

func (i SecretStoreSpecProviderYandexlockboxPatchArgs) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutput() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecProviderYandexlockboxPatchArgs) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxPatchOutput).ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecProviderYandexlockboxPatchPtrInput is an input type that accepts SecretStoreSpecProviderYandexlockboxPatchArgs, SecretStoreSpecProviderYandexlockboxPatchPtr and SecretStoreSpecProviderYandexlockboxPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecProviderYandexlockboxPatchPtrInput` via:
//
//	        SecretStoreSpecProviderYandexlockboxPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecProviderYandexlockboxPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecProviderYandexlockboxPatchPtrOutput() SecretStoreSpecProviderYandexlockboxPatchPtrOutput
	ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(context.Context) SecretStoreSpecProviderYandexlockboxPatchPtrOutput
}

type secretStoreSpecProviderYandexlockboxPatchPtrType SecretStoreSpecProviderYandexlockboxPatchArgs

func SecretStoreSpecProviderYandexlockboxPatchPtr(v *SecretStoreSpecProviderYandexlockboxPatchArgs) SecretStoreSpecProviderYandexlockboxPatchPtrInput {
	return (*secretStoreSpecProviderYandexlockboxPatchPtrType)(v)
}

func (*secretStoreSpecProviderYandexlockboxPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxPatch)(nil)).Elem()
}

func (i *secretStoreSpecProviderYandexlockboxPatchPtrType) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutput() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return i.ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecProviderYandexlockboxPatchPtrType) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecProviderYandexlockboxPatchPtrOutput)
}

// YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
type SecretStoreSpecProviderYandexlockboxPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) ToSecretStoreSpecProviderYandexlockboxPatchOutput() SecretStoreSpecProviderYandexlockboxPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) ToSecretStoreSpecProviderYandexlockboxPatchOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutput() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o.ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecProviderYandexlockboxPatch) *SecretStoreSpecProviderYandexlockboxPatch {
		return &v
	}).(SecretStoreSpecProviderYandexlockboxPatchPtrOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxPatchOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxPatch) *string { return v.ApiEndpoint }).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxPatch) *SecretStoreSpecProviderYandexlockboxAuthPatch {
		return v.Auth
	}).(SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPatchOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecProviderYandexlockboxPatch) *SecretStoreSpecProviderYandexlockboxCaProviderPatch {
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput)
}

type SecretStoreSpecProviderYandexlockboxPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecProviderYandexlockboxPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecProviderYandexlockboxPatch)(nil)).Elem()
}

func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutput() SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) ToSecretStoreSpecProviderYandexlockboxPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecProviderYandexlockboxPatchPtrOutput {
	return o
}

func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) Elem() SecretStoreSpecProviderYandexlockboxPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxPatch) SecretStoreSpecProviderYandexlockboxPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecProviderYandexlockboxPatch
		return ret
	}).(SecretStoreSpecProviderYandexlockboxPatchOutput)
}

// Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) ApiEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxPatch) *string {
		if v == nil {
			return nil
		}
		return v.ApiEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) Auth() SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxPatch) *SecretStoreSpecProviderYandexlockboxAuthPatch {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput)
}

func (o SecretStoreSpecProviderYandexlockboxPatchPtrOutput) CaProvider() SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecProviderYandexlockboxPatch) *SecretStoreSpecProviderYandexlockboxCaProviderPatch {
		if v == nil {
			return nil
		}
		return v.CaProvider
	}).(SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettings struct {
	MaxRetries    *int    `pulumi:"maxRetries"`
	RetryInterval *string `pulumi:"retryInterval"`
}

// SecretStoreSpecRetrySettingsInput is an input type that accepts SecretStoreSpecRetrySettingsArgs and SecretStoreSpecRetrySettingsOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsInput` via:
//
//	SecretStoreSpecRetrySettingsArgs{...}
type SecretStoreSpecRetrySettingsInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput
	ToSecretStoreSpecRetrySettingsOutputWithContext(context.Context) SecretStoreSpecRetrySettingsOutput
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsArgs struct {
	MaxRetries    pulumi.IntPtrInput    `pulumi:"maxRetries"`
	RetryInterval pulumi.StringPtrInput `pulumi:"retryInterval"`
}

func (SecretStoreSpecRetrySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput {
	return i.ToSecretStoreSpecRetrySettingsOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsOutput)
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsArgs) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsOutput).ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx)
}

// SecretStoreSpecRetrySettingsPtrInput is an input type that accepts SecretStoreSpecRetrySettingsArgs, SecretStoreSpecRetrySettingsPtr and SecretStoreSpecRetrySettingsPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsPtrInput` via:
//
//	        SecretStoreSpecRetrySettingsArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecRetrySettingsPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput
	ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Context) SecretStoreSpecRetrySettingsPtrOutput
}

type secretStoreSpecRetrySettingsPtrType SecretStoreSpecRetrySettingsArgs

func SecretStoreSpecRetrySettingsPtr(v *SecretStoreSpecRetrySettingsArgs) SecretStoreSpecRetrySettingsPtrInput {
	return (*secretStoreSpecRetrySettingsPtrType)(v)
}

func (*secretStoreSpecRetrySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (i *secretStoreSpecRetrySettingsPtrType) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecRetrySettingsPtrType) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsOutput() SecretStoreSpecRetrySettingsOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return o.ToSecretStoreSpecRetrySettingsPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecRetrySettingsOutput) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecRetrySettings) *SecretStoreSpecRetrySettings {
		return &v
	}).(SecretStoreSpecRetrySettingsPtrOutput)
}

func (o SecretStoreSpecRetrySettingsOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettings) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettings) *string { return v.RetryInterval }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecRetrySettingsPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettings)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsPtrOutput) ToSecretStoreSpecRetrySettingsPtrOutput() SecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPtrOutput) ToSecretStoreSpecRetrySettingsPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPtrOutput) Elem() SecretStoreSpecRetrySettingsOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) SecretStoreSpecRetrySettings {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecRetrySettings
		return ret
	}).(SecretStoreSpecRetrySettingsOutput)
}

func (o SecretStoreSpecRetrySettingsPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsPtrOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettings) *string {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.StringPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsPatch struct {
	MaxRetries    *int    `pulumi:"maxRetries"`
	RetryInterval *string `pulumi:"retryInterval"`
}

// SecretStoreSpecRetrySettingsPatchInput is an input type that accepts SecretStoreSpecRetrySettingsPatchArgs and SecretStoreSpecRetrySettingsPatchOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsPatchInput` via:
//
//	SecretStoreSpecRetrySettingsPatchArgs{...}
type SecretStoreSpecRetrySettingsPatchInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsPatchOutput() SecretStoreSpecRetrySettingsPatchOutput
	ToSecretStoreSpecRetrySettingsPatchOutputWithContext(context.Context) SecretStoreSpecRetrySettingsPatchOutput
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsPatchArgs struct {
	MaxRetries    pulumi.IntPtrInput    `pulumi:"maxRetries"`
	RetryInterval pulumi.StringPtrInput `pulumi:"retryInterval"`
}

func (SecretStoreSpecRetrySettingsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettingsPatch)(nil)).Elem()
}

func (i SecretStoreSpecRetrySettingsPatchArgs) ToSecretStoreSpecRetrySettingsPatchOutput() SecretStoreSpecRetrySettingsPatchOutput {
	return i.ToSecretStoreSpecRetrySettingsPatchOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsPatchArgs) ToSecretStoreSpecRetrySettingsPatchOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsPatchOutput)
}

func (i SecretStoreSpecRetrySettingsPatchArgs) ToSecretStoreSpecRetrySettingsPatchPtrOutput() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreSpecRetrySettingsPatchArgs) ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsPatchOutput).ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(ctx)
}

// SecretStoreSpecRetrySettingsPatchPtrInput is an input type that accepts SecretStoreSpecRetrySettingsPatchArgs, SecretStoreSpecRetrySettingsPatchPtr and SecretStoreSpecRetrySettingsPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreSpecRetrySettingsPatchPtrInput` via:
//
//	        SecretStoreSpecRetrySettingsPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreSpecRetrySettingsPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreSpecRetrySettingsPatchPtrOutput() SecretStoreSpecRetrySettingsPatchPtrOutput
	ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(context.Context) SecretStoreSpecRetrySettingsPatchPtrOutput
}

type secretStoreSpecRetrySettingsPatchPtrType SecretStoreSpecRetrySettingsPatchArgs

func SecretStoreSpecRetrySettingsPatchPtr(v *SecretStoreSpecRetrySettingsPatchArgs) SecretStoreSpecRetrySettingsPatchPtrInput {
	return (*secretStoreSpecRetrySettingsPatchPtrType)(v)
}

func (*secretStoreSpecRetrySettingsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettingsPatch)(nil)).Elem()
}

func (i *secretStoreSpecRetrySettingsPatchPtrType) ToSecretStoreSpecRetrySettingsPatchPtrOutput() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return i.ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreSpecRetrySettingsPatchPtrType) ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreSpecRetrySettingsPatchPtrOutput)
}

// Used to configure http retries if failed
type SecretStoreSpecRetrySettingsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreSpecRetrySettingsPatch)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsPatchOutput) ToSecretStoreSpecRetrySettingsPatchOutput() SecretStoreSpecRetrySettingsPatchOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPatchOutput) ToSecretStoreSpecRetrySettingsPatchOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPatchOutput) ToSecretStoreSpecRetrySettingsPatchPtrOutput() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o.ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreSpecRetrySettingsPatchOutput) ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreSpecRetrySettingsPatch) *SecretStoreSpecRetrySettingsPatch {
		return &v
	}).(SecretStoreSpecRetrySettingsPatchPtrOutput)
}

func (o SecretStoreSpecRetrySettingsPatchOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettingsPatch) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsPatchOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreSpecRetrySettingsPatch) *string { return v.RetryInterval }).(pulumi.StringPtrOutput)
}

type SecretStoreSpecRetrySettingsPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreSpecRetrySettingsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreSpecRetrySettingsPatch)(nil)).Elem()
}

func (o SecretStoreSpecRetrySettingsPatchPtrOutput) ToSecretStoreSpecRetrySettingsPatchPtrOutput() SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPatchPtrOutput) ToSecretStoreSpecRetrySettingsPatchPtrOutputWithContext(ctx context.Context) SecretStoreSpecRetrySettingsPatchPtrOutput {
	return o
}

func (o SecretStoreSpecRetrySettingsPatchPtrOutput) Elem() SecretStoreSpecRetrySettingsPatchOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettingsPatch) SecretStoreSpecRetrySettingsPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreSpecRetrySettingsPatch
		return ret
	}).(SecretStoreSpecRetrySettingsPatchOutput)
}

func (o SecretStoreSpecRetrySettingsPatchPtrOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettingsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxRetries
	}).(pulumi.IntPtrOutput)
}

func (o SecretStoreSpecRetrySettingsPatchPtrOutput) RetryInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreSpecRetrySettingsPatch) *string {
		if v == nil {
			return nil
		}
		return v.RetryInterval
	}).(pulumi.StringPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatus struct {
	// SecretStoreCapabilities defines the possible operations a SecretStore can do.
	Capabilities *string                       `pulumi:"capabilities"`
	Conditions   []SecretStoreStatusConditions `pulumi:"conditions"`
}

// SecretStoreStatusInput is an input type that accepts SecretStoreStatusArgs and SecretStoreStatusOutput values.
// You can construct a concrete instance of `SecretStoreStatusInput` via:
//
//	SecretStoreStatusArgs{...}
type SecretStoreStatusInput interface {
	pulumi.Input

	ToSecretStoreStatusOutput() SecretStoreStatusOutput
	ToSecretStoreStatusOutputWithContext(context.Context) SecretStoreStatusOutput
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusArgs struct {
	// SecretStoreCapabilities defines the possible operations a SecretStore can do.
	Capabilities pulumi.StringPtrInput                 `pulumi:"capabilities"`
	Conditions   SecretStoreStatusConditionsArrayInput `pulumi:"conditions"`
}

func (SecretStoreStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatus)(nil)).Elem()
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusOutput() SecretStoreStatusOutput {
	return i.ToSecretStoreStatusOutputWithContext(context.Background())
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusOutputWithContext(ctx context.Context) SecretStoreStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusOutput)
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return i.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i SecretStoreStatusArgs) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusOutput).ToSecretStoreStatusPtrOutputWithContext(ctx)
}

// SecretStoreStatusPtrInput is an input type that accepts SecretStoreStatusArgs, SecretStoreStatusPtr and SecretStoreStatusPtrOutput values.
// You can construct a concrete instance of `SecretStoreStatusPtrInput` via:
//
//	        SecretStoreStatusArgs{...}
//
//	or:
//
//	        nil
type SecretStoreStatusPtrInput interface {
	pulumi.Input

	ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput
	ToSecretStoreStatusPtrOutputWithContext(context.Context) SecretStoreStatusPtrOutput
}

type secretStoreStatusPtrType SecretStoreStatusArgs

func SecretStoreStatusPtr(v *SecretStoreStatusArgs) SecretStoreStatusPtrInput {
	return (*secretStoreStatusPtrType)(v)
}

func (*secretStoreStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatus)(nil)).Elem()
}

func (i *secretStoreStatusPtrType) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return i.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (i *secretStoreStatusPtrType) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatus)(nil)).Elem()
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusOutput() SecretStoreStatusOutput {
	return o
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusOutputWithContext(ctx context.Context) SecretStoreStatusOutput {
	return o
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return o.ToSecretStoreStatusPtrOutputWithContext(context.Background())
}

func (o SecretStoreStatusOutput) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreStatus) *SecretStoreStatus {
		return &v
	}).(SecretStoreStatusPtrOutput)
}

// SecretStoreCapabilities defines the possible operations a SecretStore can do.
func (o SecretStoreStatusOutput) Capabilities() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatus) *string { return v.Capabilities }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusOutput) Conditions() SecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v SecretStoreStatus) []SecretStoreStatusConditions { return v.Conditions }).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatus)(nil)).Elem()
}

func (o SecretStoreStatusPtrOutput) ToSecretStoreStatusPtrOutput() SecretStoreStatusPtrOutput {
	return o
}

func (o SecretStoreStatusPtrOutput) ToSecretStoreStatusPtrOutputWithContext(ctx context.Context) SecretStoreStatusPtrOutput {
	return o
}

func (o SecretStoreStatusPtrOutput) Elem() SecretStoreStatusOutput {
	return o.ApplyT(func(v *SecretStoreStatus) SecretStoreStatus {
		if v != nil {
			return *v
		}
		var ret SecretStoreStatus
		return ret
	}).(SecretStoreStatusOutput)
}

// SecretStoreCapabilities defines the possible operations a SecretStore can do.
func (o SecretStoreStatusPtrOutput) Capabilities() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreStatus) *string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusPtrOutput) Conditions() SecretStoreStatusConditionsArrayOutput {
	return o.ApplyT(func(v *SecretStoreStatus) []SecretStoreStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusConditions struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             *string `pulumi:"status"`
	Type               *string `pulumi:"type"`
}

// SecretStoreStatusConditionsInput is an input type that accepts SecretStoreStatusConditionsArgs and SecretStoreStatusConditionsOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsInput` via:
//
//	SecretStoreStatusConditionsArgs{...}
type SecretStoreStatusConditionsInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput
	ToSecretStoreStatusConditionsOutputWithContext(context.Context) SecretStoreStatusConditionsOutput
}

type SecretStoreStatusConditionsArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditions)(nil)).Elem()
}

func (i SecretStoreStatusConditionsArgs) ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput {
	return i.ToSecretStoreStatusConditionsOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsArgs) ToSecretStoreStatusConditionsOutputWithContext(ctx context.Context) SecretStoreStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsOutput)
}

// SecretStoreStatusConditionsArrayInput is an input type that accepts SecretStoreStatusConditionsArray and SecretStoreStatusConditionsArrayOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsArrayInput` via:
//
//	SecretStoreStatusConditionsArray{ SecretStoreStatusConditionsArgs{...} }
type SecretStoreStatusConditionsArrayInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput
	ToSecretStoreStatusConditionsArrayOutputWithContext(context.Context) SecretStoreStatusConditionsArrayOutput
}

type SecretStoreStatusConditionsArray []SecretStoreStatusConditionsInput

func (SecretStoreStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditions)(nil)).Elem()
}

func (i SecretStoreStatusConditionsArray) ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput {
	return i.ToSecretStoreStatusConditionsArrayOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsArray) ToSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsArrayOutput)
}

type SecretStoreStatusConditionsOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditions)(nil)).Elem()
}

func (o SecretStoreStatusConditionsOutput) ToSecretStoreStatusConditionsOutput() SecretStoreStatusConditionsOutput {
	return o
}

func (o SecretStoreStatusConditionsOutput) ToSecretStoreStatusConditionsOutputWithContext(ctx context.Context) SecretStoreStatusConditionsOutput {
	return o
}

func (o SecretStoreStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditions)(nil)).Elem()
}

func (o SecretStoreStatusConditionsArrayOutput) ToSecretStoreStatusConditionsArrayOutput() SecretStoreStatusConditionsArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsArrayOutput) ToSecretStoreStatusConditionsArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsArrayOutput) Index(i pulumi.IntInput) SecretStoreStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreStatusConditions {
		return vs[0].([]SecretStoreStatusConditions)[vs[1].(int)]
	}).(SecretStoreStatusConditionsOutput)
}

type SecretStoreStatusConditionsPatch struct {
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	Message            *string `pulumi:"message"`
	Reason             *string `pulumi:"reason"`
	Status             *string `pulumi:"status"`
	Type               *string `pulumi:"type"`
}

// SecretStoreStatusConditionsPatchInput is an input type that accepts SecretStoreStatusConditionsPatchArgs and SecretStoreStatusConditionsPatchOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsPatchInput` via:
//
//	SecretStoreStatusConditionsPatchArgs{...}
type SecretStoreStatusConditionsPatchInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsPatchOutput() SecretStoreStatusConditionsPatchOutput
	ToSecretStoreStatusConditionsPatchOutputWithContext(context.Context) SecretStoreStatusConditionsPatchOutput
}

type SecretStoreStatusConditionsPatchArgs struct {
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	Message            pulumi.StringPtrInput `pulumi:"message"`
	Reason             pulumi.StringPtrInput `pulumi:"reason"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
}

func (SecretStoreStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditionsPatch)(nil)).Elem()
}

func (i SecretStoreStatusConditionsPatchArgs) ToSecretStoreStatusConditionsPatchOutput() SecretStoreStatusConditionsPatchOutput {
	return i.ToSecretStoreStatusConditionsPatchOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsPatchArgs) ToSecretStoreStatusConditionsPatchOutputWithContext(ctx context.Context) SecretStoreStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsPatchOutput)
}

// SecretStoreStatusConditionsPatchArrayInput is an input type that accepts SecretStoreStatusConditionsPatchArray and SecretStoreStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `SecretStoreStatusConditionsPatchArrayInput` via:
//
//	SecretStoreStatusConditionsPatchArray{ SecretStoreStatusConditionsPatchArgs{...} }
type SecretStoreStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToSecretStoreStatusConditionsPatchArrayOutput() SecretStoreStatusConditionsPatchArrayOutput
	ToSecretStoreStatusConditionsPatchArrayOutputWithContext(context.Context) SecretStoreStatusConditionsPatchArrayOutput
}

type SecretStoreStatusConditionsPatchArray []SecretStoreStatusConditionsPatchInput

func (SecretStoreStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditionsPatch)(nil)).Elem()
}

func (i SecretStoreStatusConditionsPatchArray) ToSecretStoreStatusConditionsPatchArrayOutput() SecretStoreStatusConditionsPatchArrayOutput {
	return i.ToSecretStoreStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i SecretStoreStatusConditionsPatchArray) ToSecretStoreStatusConditionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusConditionsPatchArrayOutput)
}

type SecretStoreStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusConditionsPatch)(nil)).Elem()
}

func (o SecretStoreStatusConditionsPatchOutput) ToSecretStoreStatusConditionsPatchOutput() SecretStoreStatusConditionsPatchOutput {
	return o
}

func (o SecretStoreStatusConditionsPatchOutput) ToSecretStoreStatusConditionsPatchOutputWithContext(ctx context.Context) SecretStoreStatusConditionsPatchOutput {
	return o
}

func (o SecretStoreStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SecretStoreStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecretStoreStatusConditionsPatch)(nil)).Elem()
}

func (o SecretStoreStatusConditionsPatchArrayOutput) ToSecretStoreStatusConditionsPatchArrayOutput() SecretStoreStatusConditionsPatchArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsPatchArrayOutput) ToSecretStoreStatusConditionsPatchArrayOutputWithContext(ctx context.Context) SecretStoreStatusConditionsPatchArrayOutput {
	return o
}

func (o SecretStoreStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) SecretStoreStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecretStoreStatusConditionsPatch {
		return vs[0].([]SecretStoreStatusConditionsPatch)[vs[1].(int)]
	}).(SecretStoreStatusConditionsPatchOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusPatch struct {
	// SecretStoreCapabilities defines the possible operations a SecretStore can do.
	Capabilities *string                            `pulumi:"capabilities"`
	Conditions   []SecretStoreStatusConditionsPatch `pulumi:"conditions"`
}

// SecretStoreStatusPatchInput is an input type that accepts SecretStoreStatusPatchArgs and SecretStoreStatusPatchOutput values.
// You can construct a concrete instance of `SecretStoreStatusPatchInput` via:
//
//	SecretStoreStatusPatchArgs{...}
type SecretStoreStatusPatchInput interface {
	pulumi.Input

	ToSecretStoreStatusPatchOutput() SecretStoreStatusPatchOutput
	ToSecretStoreStatusPatchOutputWithContext(context.Context) SecretStoreStatusPatchOutput
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusPatchArgs struct {
	// SecretStoreCapabilities defines the possible operations a SecretStore can do.
	Capabilities pulumi.StringPtrInput                      `pulumi:"capabilities"`
	Conditions   SecretStoreStatusConditionsPatchArrayInput `pulumi:"conditions"`
}

func (SecretStoreStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusPatch)(nil)).Elem()
}

func (i SecretStoreStatusPatchArgs) ToSecretStoreStatusPatchOutput() SecretStoreStatusPatchOutput {
	return i.ToSecretStoreStatusPatchOutputWithContext(context.Background())
}

func (i SecretStoreStatusPatchArgs) ToSecretStoreStatusPatchOutputWithContext(ctx context.Context) SecretStoreStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusPatchOutput)
}

func (i SecretStoreStatusPatchArgs) ToSecretStoreStatusPatchPtrOutput() SecretStoreStatusPatchPtrOutput {
	return i.ToSecretStoreStatusPatchPtrOutputWithContext(context.Background())
}

func (i SecretStoreStatusPatchArgs) ToSecretStoreStatusPatchPtrOutputWithContext(ctx context.Context) SecretStoreStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusPatchOutput).ToSecretStoreStatusPatchPtrOutputWithContext(ctx)
}

// SecretStoreStatusPatchPtrInput is an input type that accepts SecretStoreStatusPatchArgs, SecretStoreStatusPatchPtr and SecretStoreStatusPatchPtrOutput values.
// You can construct a concrete instance of `SecretStoreStatusPatchPtrInput` via:
//
//	        SecretStoreStatusPatchArgs{...}
//
//	or:
//
//	        nil
type SecretStoreStatusPatchPtrInput interface {
	pulumi.Input

	ToSecretStoreStatusPatchPtrOutput() SecretStoreStatusPatchPtrOutput
	ToSecretStoreStatusPatchPtrOutputWithContext(context.Context) SecretStoreStatusPatchPtrOutput
}

type secretStoreStatusPatchPtrType SecretStoreStatusPatchArgs

func SecretStoreStatusPatchPtr(v *SecretStoreStatusPatchArgs) SecretStoreStatusPatchPtrInput {
	return (*secretStoreStatusPatchPtrType)(v)
}

func (*secretStoreStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatusPatch)(nil)).Elem()
}

func (i *secretStoreStatusPatchPtrType) ToSecretStoreStatusPatchPtrOutput() SecretStoreStatusPatchPtrOutput {
	return i.ToSecretStoreStatusPatchPtrOutputWithContext(context.Background())
}

func (i *secretStoreStatusPatchPtrType) ToSecretStoreStatusPatchPtrOutputWithContext(ctx context.Context) SecretStoreStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretStoreStatusPatchPtrOutput)
}

// SecretStoreStatus defines the observed state of the SecretStore.
type SecretStoreStatusPatchOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretStoreStatusPatch)(nil)).Elem()
}

func (o SecretStoreStatusPatchOutput) ToSecretStoreStatusPatchOutput() SecretStoreStatusPatchOutput {
	return o
}

func (o SecretStoreStatusPatchOutput) ToSecretStoreStatusPatchOutputWithContext(ctx context.Context) SecretStoreStatusPatchOutput {
	return o
}

func (o SecretStoreStatusPatchOutput) ToSecretStoreStatusPatchPtrOutput() SecretStoreStatusPatchPtrOutput {
	return o.ToSecretStoreStatusPatchPtrOutputWithContext(context.Background())
}

func (o SecretStoreStatusPatchOutput) ToSecretStoreStatusPatchPtrOutputWithContext(ctx context.Context) SecretStoreStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretStoreStatusPatch) *SecretStoreStatusPatch {
		return &v
	}).(SecretStoreStatusPatchPtrOutput)
}

// SecretStoreCapabilities defines the possible operations a SecretStore can do.
func (o SecretStoreStatusPatchOutput) Capabilities() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretStoreStatusPatch) *string { return v.Capabilities }).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusPatchOutput) Conditions() SecretStoreStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v SecretStoreStatusPatch) []SecretStoreStatusConditionsPatch { return v.Conditions }).(SecretStoreStatusConditionsPatchArrayOutput)
}

type SecretStoreStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (SecretStoreStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretStoreStatusPatch)(nil)).Elem()
}

func (o SecretStoreStatusPatchPtrOutput) ToSecretStoreStatusPatchPtrOutput() SecretStoreStatusPatchPtrOutput {
	return o
}

func (o SecretStoreStatusPatchPtrOutput) ToSecretStoreStatusPatchPtrOutputWithContext(ctx context.Context) SecretStoreStatusPatchPtrOutput {
	return o
}

func (o SecretStoreStatusPatchPtrOutput) Elem() SecretStoreStatusPatchOutput {
	return o.ApplyT(func(v *SecretStoreStatusPatch) SecretStoreStatusPatch {
		if v != nil {
			return *v
		}
		var ret SecretStoreStatusPatch
		return ret
	}).(SecretStoreStatusPatchOutput)
}

// SecretStoreCapabilities defines the possible operations a SecretStore can do.
func (o SecretStoreStatusPatchPtrOutput) Capabilities() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretStoreStatusPatch) *string {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(pulumi.StringPtrOutput)
}

func (o SecretStoreStatusPatchPtrOutput) Conditions() SecretStoreStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *SecretStoreStatusPatch) []SecretStoreStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(SecretStoreStatusConditionsPatchArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromPatchInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromPatchArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPatchInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrInput)(nil)).Elem(), ExternalSecretSpecTargetTemplateTemplateFromSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusInput)(nil)).Elem(), ExternalSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusPtrInput)(nil)).Elem(), ExternalSecretStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingInput)(nil)).Elem(), ExternalSecretStatusBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingPtrInput)(nil)).Elem(), ExternalSecretStatusBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingPatchInput)(nil)).Elem(), ExternalSecretStatusBindingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusBindingPatchPtrInput)(nil)).Elem(), ExternalSecretStatusBindingPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsInput)(nil)).Elem(), ExternalSecretStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsArrayInput)(nil)).Elem(), ExternalSecretStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsPatchInput)(nil)).Elem(), ExternalSecretStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusConditionsPatchArrayInput)(nil)).Elem(), ExternalSecretStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusPatchInput)(nil)).Elem(), ExternalSecretStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalSecretStatusPatchPtrInput)(nil)).Elem(), ExternalSecretStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreTypeInput)(nil)).Elem(), SecretStoreTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreTypeArrayInput)(nil)).Elem(), SecretStoreTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreListTypeInput)(nil)).Elem(), SecretStoreListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStorePatchTypeInput)(nil)).Elem(), SecretStorePatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecInput)(nil)).Elem(), SecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecPtrInput)(nil)).Elem(), SecretStoreSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsInput)(nil)).Elem(), SecretStoreSpecConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsArrayInput)(nil)).Elem(), SecretStoreSpecConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorPtrInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorPatchInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsNamespaceSelectorPatchPtrInput)(nil)).Elem(), SecretStoreSpecConditionsNamespaceSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsPatchInput)(nil)).Elem(), SecretStoreSpecConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecConditionsPatchArrayInput)(nil)).Elem(), SecretStoreSpecConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecPatchInput)(nil)).Elem(), SecretStoreSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecPatchPtrInput)(nil)).Elem(), SecretStoreSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInput)(nil)).Elem(), SecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessPatchInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAkeylessPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAkeylessPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthRrsaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaPatchInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAlibabaPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAlibabaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsInput)(nil)).Elem(), SecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerInput)(nil)).Elem(), SecretStoreSpecProviderAwsSecretsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsSecretsManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsSecretsManagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSecretsManagerPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAwsSecretsManagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsInput)(nil)).Elem(), SecretStoreSpecProviderAwsSessionTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsArrayInput)(nil)).Elem(), SecretStoreSpecProviderAwsSessionTagsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsPatchInput)(nil)).Elem(), SecretStoreSpecProviderAwsSessionTagsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAwsSessionTagsPatchArrayInput)(nil)).Elem(), SecretStoreSpecProviderAwsSessionTagsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderAzurekvServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerPatchInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderBitwardensecretsmanagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefInput)(nil)).Elem(), SecretStoreSpecProviderChefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefPatchInput)(nil)).Elem(), SecretStoreSpecProviderChefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderChefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderChefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurInput)(nil)).Elem(), SecretStoreSpecProviderConjurArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyApiKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyUserRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyUserRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthApikeyUserRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderConjurCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurPatchInput)(nil)).Elem(), SecretStoreSpecProviderConjurPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderConjurPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderConjurPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaInput)(nil)).Elem(), SecretStoreSpecProviderDelineaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdPatchInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientIdSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretPatchInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaClientSecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaPatchInput)(nil)).Elem(), SecretStoreSpecProviderDelineaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDelineaPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDelineaPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42Input)(nil)).Elem(), SecretStoreSpecProviderDevice42Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42PtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42AuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42PatchInput)(nil)).Elem(), SecretStoreSpecProviderDevice42PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDevice42PatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDevice42PatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerInput)(nil)).Elem(), SecretStoreSpecProviderDopplerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerPatchInput)(nil)).Elem(), SecretStoreSpecProviderDopplerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderDopplerPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderDopplerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeInput)(nil)).Elem(), SecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakePtrInput)(nil)).Elem(), SecretStoreSpecProviderFakeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataArrayInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataPatchInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakeDataPatchArrayInput)(nil)).Elem(), SecretStoreSpecProviderFakeDataPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakePatchInput)(nil)).Elem(), SecretStoreSpecProviderFakePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFakePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderFakePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixInput)(nil)).Elem(), SecretStoreSpecProviderFortanixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixApiKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixPatchInput)(nil)).Elem(), SecretStoreSpecProviderFortanixPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderFortanixPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderFortanixPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmPatchInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGcpsmPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGcpsmPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabInput)(nil)).Elem(), SecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabPatchInput)(nil)).Elem(), SecretStoreSpecProviderGitlabPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderGitlabPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderGitlabPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmInput)(nil)).Elem(), SecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthContainerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthContainerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthContainerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmPatchInput)(nil)).Elem(), SecretStoreSpecProviderIbmPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderIbmPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderIbmPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalPatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopeInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalSecretsScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopePtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalSecretsScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopePatchInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalSecretsScopePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderInfisicalSecretsScopePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderInfisicalSecretsScopePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityPtrInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityAuthRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityAuthRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityAuthRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityPatchInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKeepersecurityPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKeepersecurityPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthCertPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthServiceAccountPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesAuthTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesAuthTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPatchInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderKubernetesServerPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderKubernetesServerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbasePtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthApiKeyRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPasscodeRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbaseAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbaseAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbasePatchInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbasePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnboardbasePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnboardbasePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordPatchInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOnepasswordPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOnepasswordPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleInput)(nil)).Elem(), SecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOraclePtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOraclePatchInput)(nil)).Elem(), SecretStoreSpecProviderOraclePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOraclePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOraclePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderOracleServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderOracleServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltInput)(nil)).Elem(), SecretStoreSpecProviderPassboltArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPasswordSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassboltPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassboltPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassboltPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotAuthSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPatchInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPassworddepotPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPassworddepotPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiInput)(nil)).Elem(), SecretStoreSpecProviderPulumiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiPatchInput)(nil)).Elem(), SecretStoreSpecProviderPulumiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderPulumiPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderPulumiPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayInput)(nil)).Elem(), SecretStoreSpecProviderScalewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayPatchInput)(nil)).Elem(), SecretStoreSpecProviderScalewayPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewayPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewayPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyPatchInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeyPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeyPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderScalewaySecretKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraPatchInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderSenhaseguraPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderSenhaseguraPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultInput)(nil)).Elem(), SecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRolePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRolePatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRolePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleRoleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertClientCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthJwtSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthLdapSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthTokenSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsPatchInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderVaultTlsPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderVaultTlsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookInput)(nil)).Elem(), SecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookPatchInput)(nil)).Elem(), SecretStoreSpecProviderWebhookPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPatchInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookResultPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookResultPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsArrayInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsPatchInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsPatchArrayInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderWebhookSecretsSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexcertificatemanagerPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexcertificatemanagerPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxAuthPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxAuthPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxCaProviderPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPatchInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecProviderYandexlockboxPatchPtrInput)(nil)).Elem(), SecretStoreSpecProviderYandexlockboxPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsInput)(nil)).Elem(), SecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsPtrInput)(nil)).Elem(), SecretStoreSpecRetrySettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsPatchInput)(nil)).Elem(), SecretStoreSpecRetrySettingsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreSpecRetrySettingsPatchPtrInput)(nil)).Elem(), SecretStoreSpecRetrySettingsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusInput)(nil)).Elem(), SecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusPtrInput)(nil)).Elem(), SecretStoreStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsInput)(nil)).Elem(), SecretStoreStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsArrayInput)(nil)).Elem(), SecretStoreStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsPatchInput)(nil)).Elem(), SecretStoreStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusConditionsPatchArrayInput)(nil)).Elem(), SecretStoreStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusPatchInput)(nil)).Elem(), SecretStoreStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretStoreStatusPatchPtrInput)(nil)).Elem(), SecretStoreStatusPatchArgs{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromPatchArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretItemsPatchArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretSpecTargetTemplateTemplateFromSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusBindingPatchPtrOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusPatchOutput{})
	pulumi.RegisterOutputType(ExternalSecretStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreTypeArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreListTypeOutput{})
	pulumi.RegisterOutputType(SecretStorePatchTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsNamespaceSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefKubernetesAuthServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessIDPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypeParamPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefAccessTypePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessAuthSecretRefSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAkeylessPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthRrsaPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefAccessKeySecretSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAlibabaPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthJwtServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefAccessKeyIDSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsAuthSecretRefSessionTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSecretsManagerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSecretsManagerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSecretsManagerPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSecretsManagerPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSessionTagsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSessionTagsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSessionTagsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAwsSessionTagsPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificateOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientCertificatePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientIdPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefClientSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvAuthSecretRefTenantIdPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderAzurekvServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefCredentialsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderBitwardensecretsmanagerPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefAuthSecretRefPrivateKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderChefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyApiKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyUserRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyUserRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthApikeyUserRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthJwtServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderConjurPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientIdSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaClientSecretSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDelineaPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42Output{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42PtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefCredentialsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42AuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42PatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDevice42PatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefDopplerTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderDopplerPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakeDataPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFakePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixApiKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderFortanixPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthSecretRefSecretAccessKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmAuthWorkloadIdentityServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGcpsmPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefAccessTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderGitlabPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthContainerAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthContainerAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthContainerAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthContainerAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmAuthSecretRefSecretApiKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderIbmPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientIdPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsClientSecretPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalAuthUniversalAuthCredentialsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalSecretsScopeOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalSecretsScopePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalSecretsScopePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderInfisicalSecretsScopePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityAuthRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityAuthRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityAuthRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityAuthRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKeepersecurityPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientCertPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertClientKeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthCertPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthServiceAccountPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenBearerTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesAuthTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderKubernetesServerPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbasePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthApiKeyRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPasscodeRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbaseAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbasePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnboardbasePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefConnectTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOnepasswordPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOraclePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefFingerprintPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleAuthSecretRefPrivatekeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOraclePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOraclePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderOracleServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPasswordSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPasswordSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltAuthPrivateKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassboltPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefCredentialsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotAuthSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPassworddepotPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiAccessTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderPulumiPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayAccessKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewayPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeyOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeyPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeyPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeyPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderScalewaySecretKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthClientSecretSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderSenhaseguraPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRolePtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRolePatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRolePatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleRoleRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleRoleRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthAppRoleSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertClientCertPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamJwtServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefAccessKeyIDSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSecretAccessKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthIamSecretRefSessionTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtKubernetesServiceAccountTokenServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthJwtSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthKubernetesServiceAccountRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthLdapSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthTokenSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultAuthUserPassSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderVaultTlsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookResultPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderWebhookSecretsSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthAuthorizedKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexcertificatemanagerPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthAuthorizedKeySecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxAuthPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderCertSecretRefPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxCaProviderPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecProviderYandexlockboxPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreSpecRetrySettingsPatchPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusPtrOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusPatchOutput{})
	pulumi.RegisterOutputType(SecretStoreStatusPatchPtrOutput{})
}
