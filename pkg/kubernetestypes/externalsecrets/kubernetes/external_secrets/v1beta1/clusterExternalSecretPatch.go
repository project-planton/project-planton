// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// ClusterExternalSecret is the Schema for the clusterexternalsecrets API.
type ClusterExternalSecretPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput           `pulumi:"metadata"`
	Spec     ClusterExternalSecretSpecPatchPtrOutput   `pulumi:"spec"`
	Status   ClusterExternalSecretStatusPatchPtrOutput `pulumi:"status"`
}

// NewClusterExternalSecretPatch registers a new resource with the given unique name, arguments, and options.
func NewClusterExternalSecretPatch(ctx *pulumi.Context,
	name string, args *ClusterExternalSecretPatchArgs, opts ...pulumi.ResourceOption) (*ClusterExternalSecretPatch, error) {
	if args == nil {
		args = &ClusterExternalSecretPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("external-secrets.io/v1beta1")
	args.Kind = pulumi.StringPtr("ClusterExternalSecret")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ClusterExternalSecretPatch
	err := ctx.RegisterResource("kubernetes:external-secrets.io/v1beta1:ClusterExternalSecretPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterExternalSecretPatch gets an existing ClusterExternalSecretPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterExternalSecretPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterExternalSecretPatchState, opts ...pulumi.ResourceOption) (*ClusterExternalSecretPatch, error) {
	var resource ClusterExternalSecretPatch
	err := ctx.ReadResource("kubernetes:external-secrets.io/v1beta1:ClusterExternalSecretPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterExternalSecretPatch resources.
type clusterExternalSecretPatchState struct {
}

type ClusterExternalSecretPatchState struct {
}

func (ClusterExternalSecretPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterExternalSecretPatchState)(nil)).Elem()
}

type clusterExternalSecretPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch         `pulumi:"metadata"`
	Spec     *ClusterExternalSecretSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a ClusterExternalSecretPatch resource.
type ClusterExternalSecretPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	Spec     ClusterExternalSecretSpecPatchPtrInput
}

func (ClusterExternalSecretPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterExternalSecretPatchArgs)(nil)).Elem()
}

type ClusterExternalSecretPatchInput interface {
	pulumi.Input

	ToClusterExternalSecretPatchOutput() ClusterExternalSecretPatchOutput
	ToClusterExternalSecretPatchOutputWithContext(ctx context.Context) ClusterExternalSecretPatchOutput
}

func (*ClusterExternalSecretPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExternalSecretPatch)(nil)).Elem()
}

func (i *ClusterExternalSecretPatch) ToClusterExternalSecretPatchOutput() ClusterExternalSecretPatchOutput {
	return i.ToClusterExternalSecretPatchOutputWithContext(context.Background())
}

func (i *ClusterExternalSecretPatch) ToClusterExternalSecretPatchOutputWithContext(ctx context.Context) ClusterExternalSecretPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExternalSecretPatchOutput)
}

// ClusterExternalSecretPatchArrayInput is an input type that accepts ClusterExternalSecretPatchArray and ClusterExternalSecretPatchArrayOutput values.
// You can construct a concrete instance of `ClusterExternalSecretPatchArrayInput` via:
//
//	ClusterExternalSecretPatchArray{ ClusterExternalSecretPatchArgs{...} }
type ClusterExternalSecretPatchArrayInput interface {
	pulumi.Input

	ToClusterExternalSecretPatchArrayOutput() ClusterExternalSecretPatchArrayOutput
	ToClusterExternalSecretPatchArrayOutputWithContext(context.Context) ClusterExternalSecretPatchArrayOutput
}

type ClusterExternalSecretPatchArray []ClusterExternalSecretPatchInput

func (ClusterExternalSecretPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterExternalSecretPatch)(nil)).Elem()
}

func (i ClusterExternalSecretPatchArray) ToClusterExternalSecretPatchArrayOutput() ClusterExternalSecretPatchArrayOutput {
	return i.ToClusterExternalSecretPatchArrayOutputWithContext(context.Background())
}

func (i ClusterExternalSecretPatchArray) ToClusterExternalSecretPatchArrayOutputWithContext(ctx context.Context) ClusterExternalSecretPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExternalSecretPatchArrayOutput)
}

// ClusterExternalSecretPatchMapInput is an input type that accepts ClusterExternalSecretPatchMap and ClusterExternalSecretPatchMapOutput values.
// You can construct a concrete instance of `ClusterExternalSecretPatchMapInput` via:
//
//	ClusterExternalSecretPatchMap{ "key": ClusterExternalSecretPatchArgs{...} }
type ClusterExternalSecretPatchMapInput interface {
	pulumi.Input

	ToClusterExternalSecretPatchMapOutput() ClusterExternalSecretPatchMapOutput
	ToClusterExternalSecretPatchMapOutputWithContext(context.Context) ClusterExternalSecretPatchMapOutput
}

type ClusterExternalSecretPatchMap map[string]ClusterExternalSecretPatchInput

func (ClusterExternalSecretPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterExternalSecretPatch)(nil)).Elem()
}

func (i ClusterExternalSecretPatchMap) ToClusterExternalSecretPatchMapOutput() ClusterExternalSecretPatchMapOutput {
	return i.ToClusterExternalSecretPatchMapOutputWithContext(context.Background())
}

func (i ClusterExternalSecretPatchMap) ToClusterExternalSecretPatchMapOutputWithContext(ctx context.Context) ClusterExternalSecretPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterExternalSecretPatchMapOutput)
}

type ClusterExternalSecretPatchOutput struct{ *pulumi.OutputState }

func (ClusterExternalSecretPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterExternalSecretPatch)(nil)).Elem()
}

func (o ClusterExternalSecretPatchOutput) ToClusterExternalSecretPatchOutput() ClusterExternalSecretPatchOutput {
	return o
}

func (o ClusterExternalSecretPatchOutput) ToClusterExternalSecretPatchOutputWithContext(ctx context.Context) ClusterExternalSecretPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ClusterExternalSecretPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExternalSecretPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ClusterExternalSecretPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterExternalSecretPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ClusterExternalSecretPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *ClusterExternalSecretPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o ClusterExternalSecretPatchOutput) Spec() ClusterExternalSecretSpecPatchPtrOutput {
	return o.ApplyT(func(v *ClusterExternalSecretPatch) ClusterExternalSecretSpecPatchPtrOutput { return v.Spec }).(ClusterExternalSecretSpecPatchPtrOutput)
}

func (o ClusterExternalSecretPatchOutput) Status() ClusterExternalSecretStatusPatchPtrOutput {
	return o.ApplyT(func(v *ClusterExternalSecretPatch) ClusterExternalSecretStatusPatchPtrOutput { return v.Status }).(ClusterExternalSecretStatusPatchPtrOutput)
}

type ClusterExternalSecretPatchArrayOutput struct{ *pulumi.OutputState }

func (ClusterExternalSecretPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterExternalSecretPatch)(nil)).Elem()
}

func (o ClusterExternalSecretPatchArrayOutput) ToClusterExternalSecretPatchArrayOutput() ClusterExternalSecretPatchArrayOutput {
	return o
}

func (o ClusterExternalSecretPatchArrayOutput) ToClusterExternalSecretPatchArrayOutputWithContext(ctx context.Context) ClusterExternalSecretPatchArrayOutput {
	return o
}

func (o ClusterExternalSecretPatchArrayOutput) Index(i pulumi.IntInput) ClusterExternalSecretPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterExternalSecretPatch {
		return vs[0].([]*ClusterExternalSecretPatch)[vs[1].(int)]
	}).(ClusterExternalSecretPatchOutput)
}

type ClusterExternalSecretPatchMapOutput struct{ *pulumi.OutputState }

func (ClusterExternalSecretPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterExternalSecretPatch)(nil)).Elem()
}

func (o ClusterExternalSecretPatchMapOutput) ToClusterExternalSecretPatchMapOutput() ClusterExternalSecretPatchMapOutput {
	return o
}

func (o ClusterExternalSecretPatchMapOutput) ToClusterExternalSecretPatchMapOutputWithContext(ctx context.Context) ClusterExternalSecretPatchMapOutput {
	return o
}

func (o ClusterExternalSecretPatchMapOutput) MapIndex(k pulumi.StringInput) ClusterExternalSecretPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterExternalSecretPatch {
		return vs[0].(map[string]*ClusterExternalSecretPatch)[vs[1].(string)]
	}).(ClusterExternalSecretPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExternalSecretPatchInput)(nil)).Elem(), &ClusterExternalSecretPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExternalSecretPatchArrayInput)(nil)).Elem(), ClusterExternalSecretPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterExternalSecretPatchMapInput)(nil)).Elem(), ClusterExternalSecretPatchMap{})
	pulumi.RegisterOutputType(ClusterExternalSecretPatchOutput{})
	pulumi.RegisterOutputType(ClusterExternalSecretPatchArrayOutput{})
	pulumi.RegisterOutputType(ClusterExternalSecretPatchMapOutput{})
}
