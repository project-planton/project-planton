// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SolrPrometheusExporter is the Schema for the solrprometheusexporters API
type SolrPrometheusExporter struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaOutput               `pulumi:"metadata"`
	Spec     SolrPrometheusExporterSpecOutput      `pulumi:"spec"`
	Status   SolrPrometheusExporterStatusPtrOutput `pulumi:"status"`
}

// NewSolrPrometheusExporter registers a new resource with the given unique name, arguments, and options.
func NewSolrPrometheusExporter(ctx *pulumi.Context,
	name string, args *SolrPrometheusExporterArgs, opts ...pulumi.ResourceOption) (*SolrPrometheusExporter, error) {
	if args == nil {
		args = &SolrPrometheusExporterArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("solr.apache.org/v1beta1")
	args.Kind = pulumi.StringPtr("SolrPrometheusExporter")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SolrPrometheusExporter
	err := ctx.RegisterResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSolrPrometheusExporter gets an existing SolrPrometheusExporter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSolrPrometheusExporter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SolrPrometheusExporterState, opts ...pulumi.ResourceOption) (*SolrPrometheusExporter, error) {
	var resource SolrPrometheusExporter
	err := ctx.ReadResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SolrPrometheusExporter resources.
type solrPrometheusExporterState struct {
}

type SolrPrometheusExporterState struct {
}

func (SolrPrometheusExporterState) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterState)(nil)).Elem()
}

type solrPrometheusExporterArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta          `pulumi:"metadata"`
	Spec     *SolrPrometheusExporterSpec `pulumi:"spec"`
}

// The set of arguments for constructing a SolrPrometheusExporter resource.
type SolrPrometheusExporterArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput
	Spec     SolrPrometheusExporterSpecPtrInput
}

func (SolrPrometheusExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterArgs)(nil)).Elem()
}

type SolrPrometheusExporterInput interface {
	pulumi.Input

	ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput
	ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput
}

func (*SolrPrometheusExporter) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporter)(nil)).Elem()
}

func (i *SolrPrometheusExporter) ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput {
	return i.ToSolrPrometheusExporterOutputWithContext(context.Background())
}

func (i *SolrPrometheusExporter) ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterOutput)
}

// SolrPrometheusExporterArrayInput is an input type that accepts SolrPrometheusExporterArray and SolrPrometheusExporterArrayOutput values.
// You can construct a concrete instance of `SolrPrometheusExporterArrayInput` via:
//
//	SolrPrometheusExporterArray{ SolrPrometheusExporterArgs{...} }
type SolrPrometheusExporterArrayInput interface {
	pulumi.Input

	ToSolrPrometheusExporterArrayOutput() SolrPrometheusExporterArrayOutput
	ToSolrPrometheusExporterArrayOutputWithContext(context.Context) SolrPrometheusExporterArrayOutput
}

type SolrPrometheusExporterArray []SolrPrometheusExporterInput

func (SolrPrometheusExporterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolrPrometheusExporter)(nil)).Elem()
}

func (i SolrPrometheusExporterArray) ToSolrPrometheusExporterArrayOutput() SolrPrometheusExporterArrayOutput {
	return i.ToSolrPrometheusExporterArrayOutputWithContext(context.Background())
}

func (i SolrPrometheusExporterArray) ToSolrPrometheusExporterArrayOutputWithContext(ctx context.Context) SolrPrometheusExporterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterArrayOutput)
}

// SolrPrometheusExporterMapInput is an input type that accepts SolrPrometheusExporterMap and SolrPrometheusExporterMapOutput values.
// You can construct a concrete instance of `SolrPrometheusExporterMapInput` via:
//
//	SolrPrometheusExporterMap{ "key": SolrPrometheusExporterArgs{...} }
type SolrPrometheusExporterMapInput interface {
	pulumi.Input

	ToSolrPrometheusExporterMapOutput() SolrPrometheusExporterMapOutput
	ToSolrPrometheusExporterMapOutputWithContext(context.Context) SolrPrometheusExporterMapOutput
}

type SolrPrometheusExporterMap map[string]SolrPrometheusExporterInput

func (SolrPrometheusExporterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolrPrometheusExporter)(nil)).Elem()
}

func (i SolrPrometheusExporterMap) ToSolrPrometheusExporterMapOutput() SolrPrometheusExporterMapOutput {
	return i.ToSolrPrometheusExporterMapOutputWithContext(context.Background())
}

func (i SolrPrometheusExporterMap) ToSolrPrometheusExporterMapOutputWithContext(ctx context.Context) SolrPrometheusExporterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterMapOutput)
}

type SolrPrometheusExporterOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporter)(nil)).Elem()
}

func (o SolrPrometheusExporterOutput) ToSolrPrometheusExporterOutput() SolrPrometheusExporterOutput {
	return o
}

func (o SolrPrometheusExporterOutput) ToSolrPrometheusExporterOutputWithContext(ctx context.Context) SolrPrometheusExporterOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SolrPrometheusExporterOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SolrPrometheusExporterOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o SolrPrometheusExporterOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

func (o SolrPrometheusExporterOutput) Spec() SolrPrometheusExporterSpecOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) SolrPrometheusExporterSpecOutput { return v.Spec }).(SolrPrometheusExporterSpecOutput)
}

func (o SolrPrometheusExporterOutput) Status() SolrPrometheusExporterStatusPtrOutput {
	return o.ApplyT(func(v *SolrPrometheusExporter) SolrPrometheusExporterStatusPtrOutput { return v.Status }).(SolrPrometheusExporterStatusPtrOutput)
}

type SolrPrometheusExporterArrayOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolrPrometheusExporter)(nil)).Elem()
}

func (o SolrPrometheusExporterArrayOutput) ToSolrPrometheusExporterArrayOutput() SolrPrometheusExporterArrayOutput {
	return o
}

func (o SolrPrometheusExporterArrayOutput) ToSolrPrometheusExporterArrayOutputWithContext(ctx context.Context) SolrPrometheusExporterArrayOutput {
	return o
}

func (o SolrPrometheusExporterArrayOutput) Index(i pulumi.IntInput) SolrPrometheusExporterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SolrPrometheusExporter {
		return vs[0].([]*SolrPrometheusExporter)[vs[1].(int)]
	}).(SolrPrometheusExporterOutput)
}

type SolrPrometheusExporterMapOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolrPrometheusExporter)(nil)).Elem()
}

func (o SolrPrometheusExporterMapOutput) ToSolrPrometheusExporterMapOutput() SolrPrometheusExporterMapOutput {
	return o
}

func (o SolrPrometheusExporterMapOutput) ToSolrPrometheusExporterMapOutputWithContext(ctx context.Context) SolrPrometheusExporterMapOutput {
	return o
}

func (o SolrPrometheusExporterMapOutput) MapIndex(k pulumi.StringInput) SolrPrometheusExporterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SolrPrometheusExporter {
		return vs[0].(map[string]*SolrPrometheusExporter)[vs[1].(string)]
	}).(SolrPrometheusExporterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterInput)(nil)).Elem(), &SolrPrometheusExporter{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterArrayInput)(nil)).Elem(), SolrPrometheusExporterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterMapInput)(nil)).Elem(), SolrPrometheusExporterMap{})
	pulumi.RegisterOutputType(SolrPrometheusExporterOutput{})
	pulumi.RegisterOutputType(SolrPrometheusExporterArrayOutput{})
	pulumi.RegisterOutputType(SolrPrometheusExporterMapOutput{})
}
