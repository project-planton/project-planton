// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// SolrPrometheusExporterList is a list of SolrPrometheusExporter
type SolrPrometheusExporterList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of solrprometheusexporters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SolrPrometheusExporterTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewSolrPrometheusExporterList registers a new resource with the given unique name, arguments, and options.
func NewSolrPrometheusExporterList(ctx *pulumi.Context,
	name string, args *SolrPrometheusExporterListArgs, opts ...pulumi.ResourceOption) (*SolrPrometheusExporterList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("solr.apache.org/v1beta1")
	args.Kind = pulumi.StringPtr("SolrPrometheusExporterList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource SolrPrometheusExporterList
	err := ctx.RegisterResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporterList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSolrPrometheusExporterList gets an existing SolrPrometheusExporterList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSolrPrometheusExporterList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SolrPrometheusExporterListState, opts ...pulumi.ResourceOption) (*SolrPrometheusExporterList, error) {
	var resource SolrPrometheusExporterList
	err := ctx.ReadResource("kubernetes:solr.apache.org/v1beta1:SolrPrometheusExporterList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SolrPrometheusExporterList resources.
type solrPrometheusExporterListState struct {
}

type SolrPrometheusExporterListState struct {
}

func (SolrPrometheusExporterListState) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterListState)(nil)).Elem()
}

type solrPrometheusExporterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of solrprometheusexporters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []SolrPrometheusExporterType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a SolrPrometheusExporterList resource.
type SolrPrometheusExporterListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of solrprometheusexporters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items SolrPrometheusExporterTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (SolrPrometheusExporterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*solrPrometheusExporterListArgs)(nil)).Elem()
}

type SolrPrometheusExporterListInput interface {
	pulumi.Input

	ToSolrPrometheusExporterListOutput() SolrPrometheusExporterListOutput
	ToSolrPrometheusExporterListOutputWithContext(ctx context.Context) SolrPrometheusExporterListOutput
}

func (*SolrPrometheusExporterList) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporterList)(nil)).Elem()
}

func (i *SolrPrometheusExporterList) ToSolrPrometheusExporterListOutput() SolrPrometheusExporterListOutput {
	return i.ToSolrPrometheusExporterListOutputWithContext(context.Background())
}

func (i *SolrPrometheusExporterList) ToSolrPrometheusExporterListOutputWithContext(ctx context.Context) SolrPrometheusExporterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterListOutput)
}

// SolrPrometheusExporterListArrayInput is an input type that accepts SolrPrometheusExporterListArray and SolrPrometheusExporterListArrayOutput values.
// You can construct a concrete instance of `SolrPrometheusExporterListArrayInput` via:
//
//	SolrPrometheusExporterListArray{ SolrPrometheusExporterListArgs{...} }
type SolrPrometheusExporterListArrayInput interface {
	pulumi.Input

	ToSolrPrometheusExporterListArrayOutput() SolrPrometheusExporterListArrayOutput
	ToSolrPrometheusExporterListArrayOutputWithContext(context.Context) SolrPrometheusExporterListArrayOutput
}

type SolrPrometheusExporterListArray []SolrPrometheusExporterListInput

func (SolrPrometheusExporterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolrPrometheusExporterList)(nil)).Elem()
}

func (i SolrPrometheusExporterListArray) ToSolrPrometheusExporterListArrayOutput() SolrPrometheusExporterListArrayOutput {
	return i.ToSolrPrometheusExporterListArrayOutputWithContext(context.Background())
}

func (i SolrPrometheusExporterListArray) ToSolrPrometheusExporterListArrayOutputWithContext(ctx context.Context) SolrPrometheusExporterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterListArrayOutput)
}

// SolrPrometheusExporterListMapInput is an input type that accepts SolrPrometheusExporterListMap and SolrPrometheusExporterListMapOutput values.
// You can construct a concrete instance of `SolrPrometheusExporterListMapInput` via:
//
//	SolrPrometheusExporterListMap{ "key": SolrPrometheusExporterListArgs{...} }
type SolrPrometheusExporterListMapInput interface {
	pulumi.Input

	ToSolrPrometheusExporterListMapOutput() SolrPrometheusExporterListMapOutput
	ToSolrPrometheusExporterListMapOutputWithContext(context.Context) SolrPrometheusExporterListMapOutput
}

type SolrPrometheusExporterListMap map[string]SolrPrometheusExporterListInput

func (SolrPrometheusExporterListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolrPrometheusExporterList)(nil)).Elem()
}

func (i SolrPrometheusExporterListMap) ToSolrPrometheusExporterListMapOutput() SolrPrometheusExporterListMapOutput {
	return i.ToSolrPrometheusExporterListMapOutputWithContext(context.Background())
}

func (i SolrPrometheusExporterListMap) ToSolrPrometheusExporterListMapOutputWithContext(ctx context.Context) SolrPrometheusExporterListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SolrPrometheusExporterListMapOutput)
}

type SolrPrometheusExporterListOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SolrPrometheusExporterList)(nil)).Elem()
}

func (o SolrPrometheusExporterListOutput) ToSolrPrometheusExporterListOutput() SolrPrometheusExporterListOutput {
	return o
}

func (o SolrPrometheusExporterListOutput) ToSolrPrometheusExporterListOutputWithContext(ctx context.Context) SolrPrometheusExporterListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o SolrPrometheusExporterListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SolrPrometheusExporterList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of solrprometheusexporters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o SolrPrometheusExporterListOutput) Items() SolrPrometheusExporterTypeArrayOutput {
	return o.ApplyT(func(v *SolrPrometheusExporterList) SolrPrometheusExporterTypeArrayOutput { return v.Items }).(SolrPrometheusExporterTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SolrPrometheusExporterListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *SolrPrometheusExporterList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o SolrPrometheusExporterListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *SolrPrometheusExporterList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type SolrPrometheusExporterListArrayOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SolrPrometheusExporterList)(nil)).Elem()
}

func (o SolrPrometheusExporterListArrayOutput) ToSolrPrometheusExporterListArrayOutput() SolrPrometheusExporterListArrayOutput {
	return o
}

func (o SolrPrometheusExporterListArrayOutput) ToSolrPrometheusExporterListArrayOutputWithContext(ctx context.Context) SolrPrometheusExporterListArrayOutput {
	return o
}

func (o SolrPrometheusExporterListArrayOutput) Index(i pulumi.IntInput) SolrPrometheusExporterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SolrPrometheusExporterList {
		return vs[0].([]*SolrPrometheusExporterList)[vs[1].(int)]
	}).(SolrPrometheusExporterListOutput)
}

type SolrPrometheusExporterListMapOutput struct{ *pulumi.OutputState }

func (SolrPrometheusExporterListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SolrPrometheusExporterList)(nil)).Elem()
}

func (o SolrPrometheusExporterListMapOutput) ToSolrPrometheusExporterListMapOutput() SolrPrometheusExporterListMapOutput {
	return o
}

func (o SolrPrometheusExporterListMapOutput) ToSolrPrometheusExporterListMapOutputWithContext(ctx context.Context) SolrPrometheusExporterListMapOutput {
	return o
}

func (o SolrPrometheusExporterListMapOutput) MapIndex(k pulumi.StringInput) SolrPrometheusExporterListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SolrPrometheusExporterList {
		return vs[0].(map[string]*SolrPrometheusExporterList)[vs[1].(string)]
	}).(SolrPrometheusExporterListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterListInput)(nil)).Elem(), &SolrPrometheusExporterList{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterListArrayInput)(nil)).Elem(), SolrPrometheusExporterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SolrPrometheusExporterListMapInput)(nil)).Elem(), SolrPrometheusExporterListMap{})
	pulumi.RegisterOutputType(SolrPrometheusExporterListOutput{})
	pulumi.RegisterOutputType(SolrPrometheusExporterListArrayOutput{})
	pulumi.RegisterOutputType(SolrPrometheusExporterListMapOutput{})
}
