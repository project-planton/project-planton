// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

type StrimziPodSetType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMeta   `pulumi:"metadata"`
	Spec     *StrimziPodSetSpec   `pulumi:"spec"`
	Status   *StrimziPodSetStatus `pulumi:"status"`
}

// StrimziPodSetTypeInput is an input type that accepts StrimziPodSetTypeArgs and StrimziPodSetTypeOutput values.
// You can construct a concrete instance of `StrimziPodSetTypeInput` via:
//
//	StrimziPodSetTypeArgs{...}
type StrimziPodSetTypeInput interface {
	pulumi.Input

	ToStrimziPodSetTypeOutput() StrimziPodSetTypeOutput
	ToStrimziPodSetTypeOutputWithContext(context.Context) StrimziPodSetTypeOutput
}

type StrimziPodSetTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPtrInput   `pulumi:"metadata"`
	Spec     StrimziPodSetSpecPtrInput   `pulumi:"spec"`
	Status   StrimziPodSetStatusPtrInput `pulumi:"status"`
}

func (StrimziPodSetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetType)(nil)).Elem()
}

func (i StrimziPodSetTypeArgs) ToStrimziPodSetTypeOutput() StrimziPodSetTypeOutput {
	return i.ToStrimziPodSetTypeOutputWithContext(context.Background())
}

func (i StrimziPodSetTypeArgs) ToStrimziPodSetTypeOutputWithContext(ctx context.Context) StrimziPodSetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetTypeOutput)
}

// StrimziPodSetTypeArrayInput is an input type that accepts StrimziPodSetTypeArray and StrimziPodSetTypeArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetTypeArrayInput` via:
//
//	StrimziPodSetTypeArray{ StrimziPodSetTypeArgs{...} }
type StrimziPodSetTypeArrayInput interface {
	pulumi.Input

	ToStrimziPodSetTypeArrayOutput() StrimziPodSetTypeArrayOutput
	ToStrimziPodSetTypeArrayOutputWithContext(context.Context) StrimziPodSetTypeArrayOutput
}

type StrimziPodSetTypeArray []StrimziPodSetTypeInput

func (StrimziPodSetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetType)(nil)).Elem()
}

func (i StrimziPodSetTypeArray) ToStrimziPodSetTypeArrayOutput() StrimziPodSetTypeArrayOutput {
	return i.ToStrimziPodSetTypeArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetTypeArray) ToStrimziPodSetTypeArrayOutputWithContext(ctx context.Context) StrimziPodSetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetTypeArrayOutput)
}

type StrimziPodSetTypeOutput struct{ *pulumi.OutputState }

func (StrimziPodSetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetType)(nil)).Elem()
}

func (o StrimziPodSetTypeOutput) ToStrimziPodSetTypeOutput() StrimziPodSetTypeOutput {
	return o
}

func (o StrimziPodSetTypeOutput) ToStrimziPodSetTypeOutputWithContext(ctx context.Context) StrimziPodSetTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StrimziPodSetTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v StrimziPodSetType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o StrimziPodSetTypeOutput) Spec() StrimziPodSetSpecPtrOutput {
	return o.ApplyT(func(v StrimziPodSetType) *StrimziPodSetSpec { return v.Spec }).(StrimziPodSetSpecPtrOutput)
}

func (o StrimziPodSetTypeOutput) Status() StrimziPodSetStatusPtrOutput {
	return o.ApplyT(func(v StrimziPodSetType) *StrimziPodSetStatus { return v.Status }).(StrimziPodSetStatusPtrOutput)
}

type StrimziPodSetTypeArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetType)(nil)).Elem()
}

func (o StrimziPodSetTypeArrayOutput) ToStrimziPodSetTypeArrayOutput() StrimziPodSetTypeArrayOutput {
	return o
}

func (o StrimziPodSetTypeArrayOutput) ToStrimziPodSetTypeArrayOutputWithContext(ctx context.Context) StrimziPodSetTypeArrayOutput {
	return o
}

func (o StrimziPodSetTypeArrayOutput) Index(i pulumi.IntInput) StrimziPodSetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StrimziPodSetType {
		return vs[0].([]StrimziPodSetType)[vs[1].(int)]
	}).(StrimziPodSetTypeOutput)
}

// StrimziPodSetList is a list of StrimziPodSet
type StrimziPodSetListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []StrimziPodSetType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// StrimziPodSetListTypeInput is an input type that accepts StrimziPodSetListTypeArgs and StrimziPodSetListTypeOutput values.
// You can construct a concrete instance of `StrimziPodSetListTypeInput` via:
//
//	StrimziPodSetListTypeArgs{...}
type StrimziPodSetListTypeInput interface {
	pulumi.Input

	ToStrimziPodSetListTypeOutput() StrimziPodSetListTypeOutput
	ToStrimziPodSetListTypeOutputWithContext(context.Context) StrimziPodSetListTypeOutput
}

// StrimziPodSetList is a list of StrimziPodSet
type StrimziPodSetListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items StrimziPodSetTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (StrimziPodSetListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetListType)(nil)).Elem()
}

func (i StrimziPodSetListTypeArgs) ToStrimziPodSetListTypeOutput() StrimziPodSetListTypeOutput {
	return i.ToStrimziPodSetListTypeOutputWithContext(context.Background())
}

func (i StrimziPodSetListTypeArgs) ToStrimziPodSetListTypeOutputWithContext(ctx context.Context) StrimziPodSetListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetListTypeOutput)
}

// StrimziPodSetList is a list of StrimziPodSet
type StrimziPodSetListTypeOutput struct{ *pulumi.OutputState }

func (StrimziPodSetListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetListType)(nil)).Elem()
}

func (o StrimziPodSetListTypeOutput) ToStrimziPodSetListTypeOutput() StrimziPodSetListTypeOutput {
	return o
}

func (o StrimziPodSetListTypeOutput) ToStrimziPodSetListTypeOutputWithContext(ctx context.Context) StrimziPodSetListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o StrimziPodSetListTypeOutput) Items() StrimziPodSetTypeArrayOutput {
	return o.ApplyT(func(v StrimziPodSetListType) []StrimziPodSetType { return v.Items }).(StrimziPodSetTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v StrimziPodSetListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

type StrimziPodSetPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch   `pulumi:"metadata"`
	Spec     *StrimziPodSetSpecPatch   `pulumi:"spec"`
	Status   *StrimziPodSetStatusPatch `pulumi:"status"`
}

// StrimziPodSetPatchTypeInput is an input type that accepts StrimziPodSetPatchTypeArgs and StrimziPodSetPatchTypeOutput values.
// You can construct a concrete instance of `StrimziPodSetPatchTypeInput` via:
//
//	StrimziPodSetPatchTypeArgs{...}
type StrimziPodSetPatchTypeInput interface {
	pulumi.Input

	ToStrimziPodSetPatchTypeOutput() StrimziPodSetPatchTypeOutput
	ToStrimziPodSetPatchTypeOutputWithContext(context.Context) StrimziPodSetPatchTypeOutput
}

type StrimziPodSetPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput   `pulumi:"metadata"`
	Spec     StrimziPodSetSpecPatchPtrInput   `pulumi:"spec"`
	Status   StrimziPodSetStatusPatchPtrInput `pulumi:"status"`
}

func (StrimziPodSetPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetPatchType)(nil)).Elem()
}

func (i StrimziPodSetPatchTypeArgs) ToStrimziPodSetPatchTypeOutput() StrimziPodSetPatchTypeOutput {
	return i.ToStrimziPodSetPatchTypeOutputWithContext(context.Background())
}

func (i StrimziPodSetPatchTypeArgs) ToStrimziPodSetPatchTypeOutputWithContext(ctx context.Context) StrimziPodSetPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetPatchTypeOutput)
}

type StrimziPodSetPatchTypeOutput struct{ *pulumi.OutputState }

func (StrimziPodSetPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetPatchType)(nil)).Elem()
}

func (o StrimziPodSetPatchTypeOutput) ToStrimziPodSetPatchTypeOutput() StrimziPodSetPatchTypeOutput {
	return o
}

func (o StrimziPodSetPatchTypeOutput) ToStrimziPodSetPatchTypeOutputWithContext(ctx context.Context) StrimziPodSetPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o StrimziPodSetPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v StrimziPodSetPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

func (o StrimziPodSetPatchTypeOutput) Spec() StrimziPodSetSpecPatchPtrOutput {
	return o.ApplyT(func(v StrimziPodSetPatchType) *StrimziPodSetSpecPatch { return v.Spec }).(StrimziPodSetSpecPatchPtrOutput)
}

func (o StrimziPodSetPatchTypeOutput) Status() StrimziPodSetStatusPatchPtrOutput {
	return o.ApplyT(func(v StrimziPodSetPatchType) *StrimziPodSetStatusPatch { return v.Status }).(StrimziPodSetStatusPatchPtrOutput)
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpec struct {
	// The Pods managed by this StrimziPodSet.
	Pods     []map[string]interface{}   `pulumi:"pods"`
	Selector *StrimziPodSetSpecSelector `pulumi:"selector"`
}

// StrimziPodSetSpecInput is an input type that accepts StrimziPodSetSpecArgs and StrimziPodSetSpecOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecInput` via:
//
//	StrimziPodSetSpecArgs{...}
type StrimziPodSetSpecInput interface {
	pulumi.Input

	ToStrimziPodSetSpecOutput() StrimziPodSetSpecOutput
	ToStrimziPodSetSpecOutputWithContext(context.Context) StrimziPodSetSpecOutput
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpecArgs struct {
	// The Pods managed by this StrimziPodSet.
	Pods     pulumi.MapArrayInput              `pulumi:"pods"`
	Selector StrimziPodSetSpecSelectorPtrInput `pulumi:"selector"`
}

func (StrimziPodSetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpec)(nil)).Elem()
}

func (i StrimziPodSetSpecArgs) ToStrimziPodSetSpecOutput() StrimziPodSetSpecOutput {
	return i.ToStrimziPodSetSpecOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecArgs) ToStrimziPodSetSpecOutputWithContext(ctx context.Context) StrimziPodSetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecOutput)
}

func (i StrimziPodSetSpecArgs) ToStrimziPodSetSpecPtrOutput() StrimziPodSetSpecPtrOutput {
	return i.ToStrimziPodSetSpecPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecArgs) ToStrimziPodSetSpecPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecOutput).ToStrimziPodSetSpecPtrOutputWithContext(ctx)
}

// StrimziPodSetSpecPtrInput is an input type that accepts StrimziPodSetSpecArgs, StrimziPodSetSpecPtr and StrimziPodSetSpecPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecPtrInput` via:
//
//	        StrimziPodSetSpecArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetSpecPtrInput interface {
	pulumi.Input

	ToStrimziPodSetSpecPtrOutput() StrimziPodSetSpecPtrOutput
	ToStrimziPodSetSpecPtrOutputWithContext(context.Context) StrimziPodSetSpecPtrOutput
}

type strimziPodSetSpecPtrType StrimziPodSetSpecArgs

func StrimziPodSetSpecPtr(v *StrimziPodSetSpecArgs) StrimziPodSetSpecPtrInput {
	return (*strimziPodSetSpecPtrType)(v)
}

func (*strimziPodSetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpec)(nil)).Elem()
}

func (i *strimziPodSetSpecPtrType) ToStrimziPodSetSpecPtrOutput() StrimziPodSetSpecPtrOutput {
	return i.ToStrimziPodSetSpecPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetSpecPtrType) ToStrimziPodSetSpecPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecPtrOutput)
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpecOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpec)(nil)).Elem()
}

func (o StrimziPodSetSpecOutput) ToStrimziPodSetSpecOutput() StrimziPodSetSpecOutput {
	return o
}

func (o StrimziPodSetSpecOutput) ToStrimziPodSetSpecOutputWithContext(ctx context.Context) StrimziPodSetSpecOutput {
	return o
}

func (o StrimziPodSetSpecOutput) ToStrimziPodSetSpecPtrOutput() StrimziPodSetSpecPtrOutput {
	return o.ToStrimziPodSetSpecPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetSpecOutput) ToStrimziPodSetSpecPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetSpec) *StrimziPodSetSpec {
		return &v
	}).(StrimziPodSetSpecPtrOutput)
}

// The Pods managed by this StrimziPodSet.
func (o StrimziPodSetSpecOutput) Pods() pulumi.MapArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpec) []map[string]interface{} { return v.Pods }).(pulumi.MapArrayOutput)
}

func (o StrimziPodSetSpecOutput) Selector() StrimziPodSetSpecSelectorPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpec) *StrimziPodSetSpecSelector { return v.Selector }).(StrimziPodSetSpecSelectorPtrOutput)
}

type StrimziPodSetSpecPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpec)(nil)).Elem()
}

func (o StrimziPodSetSpecPtrOutput) ToStrimziPodSetSpecPtrOutput() StrimziPodSetSpecPtrOutput {
	return o
}

func (o StrimziPodSetSpecPtrOutput) ToStrimziPodSetSpecPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPtrOutput {
	return o
}

func (o StrimziPodSetSpecPtrOutput) Elem() StrimziPodSetSpecOutput {
	return o.ApplyT(func(v *StrimziPodSetSpec) StrimziPodSetSpec {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetSpec
		return ret
	}).(StrimziPodSetSpecOutput)
}

// The Pods managed by this StrimziPodSet.
func (o StrimziPodSetSpecPtrOutput) Pods() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetSpec) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(pulumi.MapArrayOutput)
}

func (o StrimziPodSetSpecPtrOutput) Selector() StrimziPodSetSpecSelectorPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetSpec) *StrimziPodSetSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(StrimziPodSetSpecSelectorPtrOutput)
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpecPatch struct {
	// The Pods managed by this StrimziPodSet.
	Pods     []map[string]interface{}        `pulumi:"pods"`
	Selector *StrimziPodSetSpecSelectorPatch `pulumi:"selector"`
}

// StrimziPodSetSpecPatchInput is an input type that accepts StrimziPodSetSpecPatchArgs and StrimziPodSetSpecPatchOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecPatchInput` via:
//
//	StrimziPodSetSpecPatchArgs{...}
type StrimziPodSetSpecPatchInput interface {
	pulumi.Input

	ToStrimziPodSetSpecPatchOutput() StrimziPodSetSpecPatchOutput
	ToStrimziPodSetSpecPatchOutputWithContext(context.Context) StrimziPodSetSpecPatchOutput
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpecPatchArgs struct {
	// The Pods managed by this StrimziPodSet.
	Pods     pulumi.MapArrayInput                   `pulumi:"pods"`
	Selector StrimziPodSetSpecSelectorPatchPtrInput `pulumi:"selector"`
}

func (StrimziPodSetSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecPatch)(nil)).Elem()
}

func (i StrimziPodSetSpecPatchArgs) ToStrimziPodSetSpecPatchOutput() StrimziPodSetSpecPatchOutput {
	return i.ToStrimziPodSetSpecPatchOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecPatchArgs) ToStrimziPodSetSpecPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecPatchOutput)
}

func (i StrimziPodSetSpecPatchArgs) ToStrimziPodSetSpecPatchPtrOutput() StrimziPodSetSpecPatchPtrOutput {
	return i.ToStrimziPodSetSpecPatchPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecPatchArgs) ToStrimziPodSetSpecPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecPatchOutput).ToStrimziPodSetSpecPatchPtrOutputWithContext(ctx)
}

// StrimziPodSetSpecPatchPtrInput is an input type that accepts StrimziPodSetSpecPatchArgs, StrimziPodSetSpecPatchPtr and StrimziPodSetSpecPatchPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecPatchPtrInput` via:
//
//	        StrimziPodSetSpecPatchArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetSpecPatchPtrInput interface {
	pulumi.Input

	ToStrimziPodSetSpecPatchPtrOutput() StrimziPodSetSpecPatchPtrOutput
	ToStrimziPodSetSpecPatchPtrOutputWithContext(context.Context) StrimziPodSetSpecPatchPtrOutput
}

type strimziPodSetSpecPatchPtrType StrimziPodSetSpecPatchArgs

func StrimziPodSetSpecPatchPtr(v *StrimziPodSetSpecPatchArgs) StrimziPodSetSpecPatchPtrInput {
	return (*strimziPodSetSpecPatchPtrType)(v)
}

func (*strimziPodSetSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecPatch)(nil)).Elem()
}

func (i *strimziPodSetSpecPatchPtrType) ToStrimziPodSetSpecPatchPtrOutput() StrimziPodSetSpecPatchPtrOutput {
	return i.ToStrimziPodSetSpecPatchPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetSpecPatchPtrType) ToStrimziPodSetSpecPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecPatchPtrOutput)
}

// The specification of the StrimziPodSet.
type StrimziPodSetSpecPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecPatchOutput) ToStrimziPodSetSpecPatchOutput() StrimziPodSetSpecPatchOutput {
	return o
}

func (o StrimziPodSetSpecPatchOutput) ToStrimziPodSetSpecPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchOutput {
	return o
}

func (o StrimziPodSetSpecPatchOutput) ToStrimziPodSetSpecPatchPtrOutput() StrimziPodSetSpecPatchPtrOutput {
	return o.ToStrimziPodSetSpecPatchPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetSpecPatchOutput) ToStrimziPodSetSpecPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetSpecPatch) *StrimziPodSetSpecPatch {
		return &v
	}).(StrimziPodSetSpecPatchPtrOutput)
}

// The Pods managed by this StrimziPodSet.
func (o StrimziPodSetSpecPatchOutput) Pods() pulumi.MapArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpecPatch) []map[string]interface{} { return v.Pods }).(pulumi.MapArrayOutput)
}

func (o StrimziPodSetSpecPatchOutput) Selector() StrimziPodSetSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpecPatch) *StrimziPodSetSpecSelectorPatch { return v.Selector }).(StrimziPodSetSpecSelectorPatchPtrOutput)
}

type StrimziPodSetSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecPatchPtrOutput) ToStrimziPodSetSpecPatchPtrOutput() StrimziPodSetSpecPatchPtrOutput {
	return o
}

func (o StrimziPodSetSpecPatchPtrOutput) ToStrimziPodSetSpecPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecPatchPtrOutput {
	return o
}

func (o StrimziPodSetSpecPatchPtrOutput) Elem() StrimziPodSetSpecPatchOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecPatch) StrimziPodSetSpecPatch {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetSpecPatch
		return ret
	}).(StrimziPodSetSpecPatchOutput)
}

// The Pods managed by this StrimziPodSet.
func (o StrimziPodSetSpecPatchPtrOutput) Pods() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecPatch) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(pulumi.MapArrayOutput)
}

func (o StrimziPodSetSpecPatchPtrOutput) Selector() StrimziPodSetSpecSelectorPatchPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecPatch) *StrimziPodSetSpecSelectorPatch {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(StrimziPodSetSpecSelectorPatchPtrOutput)
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelector struct {
	MatchExpressions []StrimziPodSetSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                           `pulumi:"matchLabels"`
}

// StrimziPodSetSpecSelectorInput is an input type that accepts StrimziPodSetSpecSelectorArgs and StrimziPodSetSpecSelectorOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorInput` via:
//
//	StrimziPodSetSpecSelectorArgs{...}
type StrimziPodSetSpecSelectorInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorOutput() StrimziPodSetSpecSelectorOutput
	ToStrimziPodSetSpecSelectorOutputWithContext(context.Context) StrimziPodSetSpecSelectorOutput
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelectorArgs struct {
	MatchExpressions StrimziPodSetSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                               `pulumi:"matchLabels"`
}

func (StrimziPodSetSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelector)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorArgs) ToStrimziPodSetSpecSelectorOutput() StrimziPodSetSpecSelectorOutput {
	return i.ToStrimziPodSetSpecSelectorOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorArgs) ToStrimziPodSetSpecSelectorOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorOutput)
}

func (i StrimziPodSetSpecSelectorArgs) ToStrimziPodSetSpecSelectorPtrOutput() StrimziPodSetSpecSelectorPtrOutput {
	return i.ToStrimziPodSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorArgs) ToStrimziPodSetSpecSelectorPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorOutput).ToStrimziPodSetSpecSelectorPtrOutputWithContext(ctx)
}

// StrimziPodSetSpecSelectorPtrInput is an input type that accepts StrimziPodSetSpecSelectorArgs, StrimziPodSetSpecSelectorPtr and StrimziPodSetSpecSelectorPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorPtrInput` via:
//
//	        StrimziPodSetSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetSpecSelectorPtrInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorPtrOutput() StrimziPodSetSpecSelectorPtrOutput
	ToStrimziPodSetSpecSelectorPtrOutputWithContext(context.Context) StrimziPodSetSpecSelectorPtrOutput
}

type strimziPodSetSpecSelectorPtrType StrimziPodSetSpecSelectorArgs

func StrimziPodSetSpecSelectorPtr(v *StrimziPodSetSpecSelectorArgs) StrimziPodSetSpecSelectorPtrInput {
	return (*strimziPodSetSpecSelectorPtrType)(v)
}

func (*strimziPodSetSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecSelector)(nil)).Elem()
}

func (i *strimziPodSetSpecSelectorPtrType) ToStrimziPodSetSpecSelectorPtrOutput() StrimziPodSetSpecSelectorPtrOutput {
	return i.ToStrimziPodSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetSpecSelectorPtrType) ToStrimziPodSetSpecSelectorPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorPtrOutput)
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelectorOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelector)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorOutput) ToStrimziPodSetSpecSelectorOutput() StrimziPodSetSpecSelectorOutput {
	return o
}

func (o StrimziPodSetSpecSelectorOutput) ToStrimziPodSetSpecSelectorOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorOutput {
	return o
}

func (o StrimziPodSetSpecSelectorOutput) ToStrimziPodSetSpecSelectorPtrOutput() StrimziPodSetSpecSelectorPtrOutput {
	return o.ToStrimziPodSetSpecSelectorPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetSpecSelectorOutput) ToStrimziPodSetSpecSelectorPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetSpecSelector) *StrimziPodSetSpecSelector {
		return &v
	}).(StrimziPodSetSpecSelectorPtrOutput)
}

func (o StrimziPodSetSpecSelectorOutput) MatchExpressions() StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelector) []StrimziPodSetSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(StrimziPodSetSpecSelectorMatchExpressionsArrayOutput)
}

func (o StrimziPodSetSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type StrimziPodSetSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecSelector)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorPtrOutput) ToStrimziPodSetSpecSelectorPtrOutput() StrimziPodSetSpecSelectorPtrOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPtrOutput) ToStrimziPodSetSpecSelectorPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPtrOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPtrOutput) Elem() StrimziPodSetSpecSelectorOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelector) StrimziPodSetSpecSelector {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetSpecSelector
		return ret
	}).(StrimziPodSetSpecSelectorOutput)
}

func (o StrimziPodSetSpecSelectorPtrOutput) MatchExpressions() StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelector) []StrimziPodSetSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(StrimziPodSetSpecSelectorMatchExpressionsArrayOutput)
}

func (o StrimziPodSetSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type StrimziPodSetSpecSelectorMatchExpressions struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StrimziPodSetSpecSelectorMatchExpressionsInput is an input type that accepts StrimziPodSetSpecSelectorMatchExpressionsArgs and StrimziPodSetSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorMatchExpressionsInput` via:
//
//	StrimziPodSetSpecSelectorMatchExpressionsArgs{...}
type StrimziPodSetSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorMatchExpressionsOutput() StrimziPodSetSpecSelectorMatchExpressionsOutput
	ToStrimziPodSetSpecSelectorMatchExpressionsOutputWithContext(context.Context) StrimziPodSetSpecSelectorMatchExpressionsOutput
}

type StrimziPodSetSpecSelectorMatchExpressionsArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StrimziPodSetSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorMatchExpressionsArgs) ToStrimziPodSetSpecSelectorMatchExpressionsOutput() StrimziPodSetSpecSelectorMatchExpressionsOutput {
	return i.ToStrimziPodSetSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorMatchExpressionsArgs) ToStrimziPodSetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorMatchExpressionsOutput)
}

// StrimziPodSetSpecSelectorMatchExpressionsArrayInput is an input type that accepts StrimziPodSetSpecSelectorMatchExpressionsArray and StrimziPodSetSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorMatchExpressionsArrayInput` via:
//
//	StrimziPodSetSpecSelectorMatchExpressionsArray{ StrimziPodSetSpecSelectorMatchExpressionsArgs{...} }
type StrimziPodSetSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsArrayOutput
	ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) StrimziPodSetSpecSelectorMatchExpressionsArrayOutput
}

type StrimziPodSetSpecSelectorMatchExpressionsArray []StrimziPodSetSpecSelectorMatchExpressionsInput

func (StrimziPodSetSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorMatchExpressionsArray) ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return i.ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorMatchExpressionsArray) ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorMatchExpressionsArrayOutput)
}

type StrimziPodSetSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorMatchExpressionsOutput) ToStrimziPodSetSpecSelectorMatchExpressionsOutput() StrimziPodSetSpecSelectorMatchExpressionsOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsOutput) ToStrimziPodSetSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressions) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StrimziPodSetSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressions) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o StrimziPodSetSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressions) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type StrimziPodSetSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorMatchExpressionsArrayOutput) ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsArrayOutput) ToStrimziPodSetSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) StrimziPodSetSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StrimziPodSetSpecSelectorMatchExpressions {
		return vs[0].([]StrimziPodSetSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(StrimziPodSetSpecSelectorMatchExpressionsOutput)
}

type StrimziPodSetSpecSelectorMatchExpressionsPatch struct {
	Key      *string  `pulumi:"key"`
	Operator *string  `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// StrimziPodSetSpecSelectorMatchExpressionsPatchInput is an input type that accepts StrimziPodSetSpecSelectorMatchExpressionsPatchArgs and StrimziPodSetSpecSelectorMatchExpressionsPatchOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorMatchExpressionsPatchInput` via:
//
//	StrimziPodSetSpecSelectorMatchExpressionsPatchArgs{...}
type StrimziPodSetSpecSelectorMatchExpressionsPatchInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchOutput
	ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutputWithContext(context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchOutput
}

type StrimziPodSetSpecSelectorMatchExpressionsPatchArgs struct {
	Key      pulumi.StringPtrInput   `pulumi:"key"`
	Operator pulumi.StringPtrInput   `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (StrimziPodSetSpecSelectorMatchExpressionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorMatchExpressionsPatchArgs) ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchOutput {
	return i.ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorMatchExpressionsPatchArgs) ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorMatchExpressionsPatchOutput)
}

// StrimziPodSetSpecSelectorMatchExpressionsPatchArrayInput is an input type that accepts StrimziPodSetSpecSelectorMatchExpressionsPatchArray and StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorMatchExpressionsPatchArrayInput` via:
//
//	StrimziPodSetSpecSelectorMatchExpressionsPatchArray{ StrimziPodSetSpecSelectorMatchExpressionsPatchArgs{...} }
type StrimziPodSetSpecSelectorMatchExpressionsPatchArrayInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput
	ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput
}

type StrimziPodSetSpecSelectorMatchExpressionsPatchArray []StrimziPodSetSpecSelectorMatchExpressionsPatchInput

func (StrimziPodSetSpecSelectorMatchExpressionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorMatchExpressionsPatchArray) ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return i.ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorMatchExpressionsPatchArray) ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput)
}

type StrimziPodSetSpecSelectorMatchExpressionsPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) ToStrimziPodSetSpecSelectorMatchExpressionsPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressionsPatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressionsPatch) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorMatchExpressionsPatch) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetSpecSelectorMatchExpressionsPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput) ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput() StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput) ToStrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return o
}

func (o StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput) Index(i pulumi.IntInput) StrimziPodSetSpecSelectorMatchExpressionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StrimziPodSetSpecSelectorMatchExpressionsPatch {
		return vs[0].([]StrimziPodSetSpecSelectorMatchExpressionsPatch)[vs[1].(int)]
	}).(StrimziPodSetSpecSelectorMatchExpressionsPatchOutput)
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelectorPatch struct {
	MatchExpressions []StrimziPodSetSpecSelectorMatchExpressionsPatch `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                `pulumi:"matchLabels"`
}

// StrimziPodSetSpecSelectorPatchInput is an input type that accepts StrimziPodSetSpecSelectorPatchArgs and StrimziPodSetSpecSelectorPatchOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorPatchInput` via:
//
//	StrimziPodSetSpecSelectorPatchArgs{...}
type StrimziPodSetSpecSelectorPatchInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorPatchOutput() StrimziPodSetSpecSelectorPatchOutput
	ToStrimziPodSetSpecSelectorPatchOutputWithContext(context.Context) StrimziPodSetSpecSelectorPatchOutput
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelectorPatchArgs struct {
	MatchExpressions StrimziPodSetSpecSelectorMatchExpressionsPatchArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                    `pulumi:"matchLabels"`
}

func (StrimziPodSetSpecSelectorPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorPatch)(nil)).Elem()
}

func (i StrimziPodSetSpecSelectorPatchArgs) ToStrimziPodSetSpecSelectorPatchOutput() StrimziPodSetSpecSelectorPatchOutput {
	return i.ToStrimziPodSetSpecSelectorPatchOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorPatchArgs) ToStrimziPodSetSpecSelectorPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorPatchOutput)
}

func (i StrimziPodSetSpecSelectorPatchArgs) ToStrimziPodSetSpecSelectorPatchPtrOutput() StrimziPodSetSpecSelectorPatchPtrOutput {
	return i.ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetSpecSelectorPatchArgs) ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorPatchOutput).ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(ctx)
}

// StrimziPodSetSpecSelectorPatchPtrInput is an input type that accepts StrimziPodSetSpecSelectorPatchArgs, StrimziPodSetSpecSelectorPatchPtr and StrimziPodSetSpecSelectorPatchPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetSpecSelectorPatchPtrInput` via:
//
//	        StrimziPodSetSpecSelectorPatchArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetSpecSelectorPatchPtrInput interface {
	pulumi.Input

	ToStrimziPodSetSpecSelectorPatchPtrOutput() StrimziPodSetSpecSelectorPatchPtrOutput
	ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(context.Context) StrimziPodSetSpecSelectorPatchPtrOutput
}

type strimziPodSetSpecSelectorPatchPtrType StrimziPodSetSpecSelectorPatchArgs

func StrimziPodSetSpecSelectorPatchPtr(v *StrimziPodSetSpecSelectorPatchArgs) StrimziPodSetSpecSelectorPatchPtrInput {
	return (*strimziPodSetSpecSelectorPatchPtrType)(v)
}

func (*strimziPodSetSpecSelectorPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecSelectorPatch)(nil)).Elem()
}

func (i *strimziPodSetSpecSelectorPatchPtrType) ToStrimziPodSetSpecSelectorPatchPtrOutput() StrimziPodSetSpecSelectorPatchPtrOutput {
	return i.ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetSpecSelectorPatchPtrType) ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetSpecSelectorPatchPtrOutput)
}

// Selector is a label query which matches all the pods managed by this `StrimziPodSet`. Only `matchLabels` is supported. If `matchExpressions` is set, it will be ignored.
type StrimziPodSetSpecSelectorPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetSpecSelectorPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorPatchOutput) ToStrimziPodSetSpecSelectorPatchOutput() StrimziPodSetSpecSelectorPatchOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPatchOutput) ToStrimziPodSetSpecSelectorPatchOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPatchOutput) ToStrimziPodSetSpecSelectorPatchPtrOutput() StrimziPodSetSpecSelectorPatchPtrOutput {
	return o.ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetSpecSelectorPatchOutput) ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetSpecSelectorPatch) *StrimziPodSetSpecSelectorPatch {
		return &v
	}).(StrimziPodSetSpecSelectorPatchPtrOutput)
}

func (o StrimziPodSetSpecSelectorPatchOutput) MatchExpressions() StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorPatch) []StrimziPodSetSpecSelectorMatchExpressionsPatch {
		return v.MatchExpressions
	}).(StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput)
}

func (o StrimziPodSetSpecSelectorPatchOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v StrimziPodSetSpecSelectorPatch) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type StrimziPodSetSpecSelectorPatchPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetSpecSelectorPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetSpecSelectorPatch)(nil)).Elem()
}

func (o StrimziPodSetSpecSelectorPatchPtrOutput) ToStrimziPodSetSpecSelectorPatchPtrOutput() StrimziPodSetSpecSelectorPatchPtrOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPatchPtrOutput) ToStrimziPodSetSpecSelectorPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetSpecSelectorPatchPtrOutput {
	return o
}

func (o StrimziPodSetSpecSelectorPatchPtrOutput) Elem() StrimziPodSetSpecSelectorPatchOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelectorPatch) StrimziPodSetSpecSelectorPatch {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetSpecSelectorPatch
		return ret
	}).(StrimziPodSetSpecSelectorPatchOutput)
}

func (o StrimziPodSetSpecSelectorPatchPtrOutput) MatchExpressions() StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelectorPatch) []StrimziPodSetSpecSelectorMatchExpressionsPatch {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput)
}

func (o StrimziPodSetSpecSelectorPatchPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StrimziPodSetSpecSelectorPatch) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// The status of the StrimziPodSet.
type StrimziPodSetStatus struct {
	// List of status conditions.
	Conditions []StrimziPodSetStatusConditions `pulumi:"conditions"`
	// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
	CurrentPods *int `pulumi:"currentPods"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Number of pods managed by this `StrimziPodSet` resource.
	Pods *int `pulumi:"pods"`
	// Number of pods managed by this `StrimziPodSet` resource that are ready.
	ReadyPods *int `pulumi:"readyPods"`
}

// StrimziPodSetStatusInput is an input type that accepts StrimziPodSetStatusArgs and StrimziPodSetStatusOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusInput` via:
//
//	StrimziPodSetStatusArgs{...}
type StrimziPodSetStatusInput interface {
	pulumi.Input

	ToStrimziPodSetStatusOutput() StrimziPodSetStatusOutput
	ToStrimziPodSetStatusOutputWithContext(context.Context) StrimziPodSetStatusOutput
}

// The status of the StrimziPodSet.
type StrimziPodSetStatusArgs struct {
	// List of status conditions.
	Conditions StrimziPodSetStatusConditionsArrayInput `pulumi:"conditions"`
	// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
	CurrentPods pulumi.IntPtrInput `pulumi:"currentPods"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Number of pods managed by this `StrimziPodSet` resource.
	Pods pulumi.IntPtrInput `pulumi:"pods"`
	// Number of pods managed by this `StrimziPodSet` resource that are ready.
	ReadyPods pulumi.IntPtrInput `pulumi:"readyPods"`
}

func (StrimziPodSetStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatus)(nil)).Elem()
}

func (i StrimziPodSetStatusArgs) ToStrimziPodSetStatusOutput() StrimziPodSetStatusOutput {
	return i.ToStrimziPodSetStatusOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusArgs) ToStrimziPodSetStatusOutputWithContext(ctx context.Context) StrimziPodSetStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusOutput)
}

func (i StrimziPodSetStatusArgs) ToStrimziPodSetStatusPtrOutput() StrimziPodSetStatusPtrOutput {
	return i.ToStrimziPodSetStatusPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusArgs) ToStrimziPodSetStatusPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusOutput).ToStrimziPodSetStatusPtrOutputWithContext(ctx)
}

// StrimziPodSetStatusPtrInput is an input type that accepts StrimziPodSetStatusArgs, StrimziPodSetStatusPtr and StrimziPodSetStatusPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusPtrInput` via:
//
//	        StrimziPodSetStatusArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetStatusPtrInput interface {
	pulumi.Input

	ToStrimziPodSetStatusPtrOutput() StrimziPodSetStatusPtrOutput
	ToStrimziPodSetStatusPtrOutputWithContext(context.Context) StrimziPodSetStatusPtrOutput
}

type strimziPodSetStatusPtrType StrimziPodSetStatusArgs

func StrimziPodSetStatusPtr(v *StrimziPodSetStatusArgs) StrimziPodSetStatusPtrInput {
	return (*strimziPodSetStatusPtrType)(v)
}

func (*strimziPodSetStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetStatus)(nil)).Elem()
}

func (i *strimziPodSetStatusPtrType) ToStrimziPodSetStatusPtrOutput() StrimziPodSetStatusPtrOutput {
	return i.ToStrimziPodSetStatusPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetStatusPtrType) ToStrimziPodSetStatusPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusPtrOutput)
}

// The status of the StrimziPodSet.
type StrimziPodSetStatusOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatus)(nil)).Elem()
}

func (o StrimziPodSetStatusOutput) ToStrimziPodSetStatusOutput() StrimziPodSetStatusOutput {
	return o
}

func (o StrimziPodSetStatusOutput) ToStrimziPodSetStatusOutputWithContext(ctx context.Context) StrimziPodSetStatusOutput {
	return o
}

func (o StrimziPodSetStatusOutput) ToStrimziPodSetStatusPtrOutput() StrimziPodSetStatusPtrOutput {
	return o.ToStrimziPodSetStatusPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetStatusOutput) ToStrimziPodSetStatusPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetStatus) *StrimziPodSetStatus {
		return &v
	}).(StrimziPodSetStatusPtrOutput)
}

// List of status conditions.
func (o StrimziPodSetStatusOutput) Conditions() StrimziPodSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v StrimziPodSetStatus) []StrimziPodSetStatusConditions { return v.Conditions }).(StrimziPodSetStatusConditionsArrayOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
func (o StrimziPodSetStatusOutput) CurrentPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatus) *int { return v.CurrentPods }).(pulumi.IntPtrOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o StrimziPodSetStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource.
func (o StrimziPodSetStatusOutput) Pods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatus) *int { return v.Pods }).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that are ready.
func (o StrimziPodSetStatusOutput) ReadyPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatus) *int { return v.ReadyPods }).(pulumi.IntPtrOutput)
}

type StrimziPodSetStatusPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetStatus)(nil)).Elem()
}

func (o StrimziPodSetStatusPtrOutput) ToStrimziPodSetStatusPtrOutput() StrimziPodSetStatusPtrOutput {
	return o
}

func (o StrimziPodSetStatusPtrOutput) ToStrimziPodSetStatusPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPtrOutput {
	return o
}

func (o StrimziPodSetStatusPtrOutput) Elem() StrimziPodSetStatusOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) StrimziPodSetStatus {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetStatus
		return ret
	}).(StrimziPodSetStatusOutput)
}

// List of status conditions.
func (o StrimziPodSetStatusPtrOutput) Conditions() StrimziPodSetStatusConditionsArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) []StrimziPodSetStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StrimziPodSetStatusConditionsArrayOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
func (o StrimziPodSetStatusPtrOutput) CurrentPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPods
	}).(pulumi.IntPtrOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o StrimziPodSetStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource.
func (o StrimziPodSetStatusPtrOutput) Pods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that are ready.
func (o StrimziPodSetStatusPtrOutput) ReadyPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatus) *int {
		if v == nil {
			return nil
		}
		return v.ReadyPods
	}).(pulumi.IntPtrOutput)
}

type StrimziPodSetStatusConditions struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// StrimziPodSetStatusConditionsInput is an input type that accepts StrimziPodSetStatusConditionsArgs and StrimziPodSetStatusConditionsOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusConditionsInput` via:
//
//	StrimziPodSetStatusConditionsArgs{...}
type StrimziPodSetStatusConditionsInput interface {
	pulumi.Input

	ToStrimziPodSetStatusConditionsOutput() StrimziPodSetStatusConditionsOutput
	ToStrimziPodSetStatusConditionsOutputWithContext(context.Context) StrimziPodSetStatusConditionsOutput
}

type StrimziPodSetStatusConditionsArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StrimziPodSetStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusConditions)(nil)).Elem()
}

func (i StrimziPodSetStatusConditionsArgs) ToStrimziPodSetStatusConditionsOutput() StrimziPodSetStatusConditionsOutput {
	return i.ToStrimziPodSetStatusConditionsOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusConditionsArgs) ToStrimziPodSetStatusConditionsOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusConditionsOutput)
}

// StrimziPodSetStatusConditionsArrayInput is an input type that accepts StrimziPodSetStatusConditionsArray and StrimziPodSetStatusConditionsArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusConditionsArrayInput` via:
//
//	StrimziPodSetStatusConditionsArray{ StrimziPodSetStatusConditionsArgs{...} }
type StrimziPodSetStatusConditionsArrayInput interface {
	pulumi.Input

	ToStrimziPodSetStatusConditionsArrayOutput() StrimziPodSetStatusConditionsArrayOutput
	ToStrimziPodSetStatusConditionsArrayOutputWithContext(context.Context) StrimziPodSetStatusConditionsArrayOutput
}

type StrimziPodSetStatusConditionsArray []StrimziPodSetStatusConditionsInput

func (StrimziPodSetStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetStatusConditions)(nil)).Elem()
}

func (i StrimziPodSetStatusConditionsArray) ToStrimziPodSetStatusConditionsArrayOutput() StrimziPodSetStatusConditionsArrayOutput {
	return i.ToStrimziPodSetStatusConditionsArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusConditionsArray) ToStrimziPodSetStatusConditionsArrayOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusConditionsArrayOutput)
}

type StrimziPodSetStatusConditionsOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusConditions)(nil)).Elem()
}

func (o StrimziPodSetStatusConditionsOutput) ToStrimziPodSetStatusConditionsOutput() StrimziPodSetStatusConditionsOutput {
	return o
}

func (o StrimziPodSetStatusConditionsOutput) ToStrimziPodSetStatusConditionsOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o StrimziPodSetStatusConditionsOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditions) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o StrimziPodSetStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o StrimziPodSetStatusConditionsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditions) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o StrimziPodSetStatusConditionsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditions) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o StrimziPodSetStatusConditionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StrimziPodSetStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetStatusConditions)(nil)).Elem()
}

func (o StrimziPodSetStatusConditionsArrayOutput) ToStrimziPodSetStatusConditionsArrayOutput() StrimziPodSetStatusConditionsArrayOutput {
	return o
}

func (o StrimziPodSetStatusConditionsArrayOutput) ToStrimziPodSetStatusConditionsArrayOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsArrayOutput {
	return o
}

func (o StrimziPodSetStatusConditionsArrayOutput) Index(i pulumi.IntInput) StrimziPodSetStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StrimziPodSetStatusConditions {
		return vs[0].([]StrimziPodSetStatusConditions)[vs[1].(int)]
	}).(StrimziPodSetStatusConditionsOutput)
}

type StrimziPodSetStatusConditionsPatch struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message *string `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason *string `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status *string `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type *string `pulumi:"type"`
}

// StrimziPodSetStatusConditionsPatchInput is an input type that accepts StrimziPodSetStatusConditionsPatchArgs and StrimziPodSetStatusConditionsPatchOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusConditionsPatchInput` via:
//
//	StrimziPodSetStatusConditionsPatchArgs{...}
type StrimziPodSetStatusConditionsPatchInput interface {
	pulumi.Input

	ToStrimziPodSetStatusConditionsPatchOutput() StrimziPodSetStatusConditionsPatchOutput
	ToStrimziPodSetStatusConditionsPatchOutputWithContext(context.Context) StrimziPodSetStatusConditionsPatchOutput
}

type StrimziPodSetStatusConditionsPatchArgs struct {
	// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// Human-readable message indicating details about the condition's last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// The reason for the condition's last transition (a single word in CamelCase).
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// The status of the condition, either True, False or Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The unique identifier of a condition, used to distinguish between other conditions in the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StrimziPodSetStatusConditionsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusConditionsPatch)(nil)).Elem()
}

func (i StrimziPodSetStatusConditionsPatchArgs) ToStrimziPodSetStatusConditionsPatchOutput() StrimziPodSetStatusConditionsPatchOutput {
	return i.ToStrimziPodSetStatusConditionsPatchOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusConditionsPatchArgs) ToStrimziPodSetStatusConditionsPatchOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusConditionsPatchOutput)
}

// StrimziPodSetStatusConditionsPatchArrayInput is an input type that accepts StrimziPodSetStatusConditionsPatchArray and StrimziPodSetStatusConditionsPatchArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusConditionsPatchArrayInput` via:
//
//	StrimziPodSetStatusConditionsPatchArray{ StrimziPodSetStatusConditionsPatchArgs{...} }
type StrimziPodSetStatusConditionsPatchArrayInput interface {
	pulumi.Input

	ToStrimziPodSetStatusConditionsPatchArrayOutput() StrimziPodSetStatusConditionsPatchArrayOutput
	ToStrimziPodSetStatusConditionsPatchArrayOutputWithContext(context.Context) StrimziPodSetStatusConditionsPatchArrayOutput
}

type StrimziPodSetStatusConditionsPatchArray []StrimziPodSetStatusConditionsPatchInput

func (StrimziPodSetStatusConditionsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetStatusConditionsPatch)(nil)).Elem()
}

func (i StrimziPodSetStatusConditionsPatchArray) ToStrimziPodSetStatusConditionsPatchArrayOutput() StrimziPodSetStatusConditionsPatchArrayOutput {
	return i.ToStrimziPodSetStatusConditionsPatchArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusConditionsPatchArray) ToStrimziPodSetStatusConditionsPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusConditionsPatchArrayOutput)
}

type StrimziPodSetStatusConditionsPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusConditionsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusConditionsPatch)(nil)).Elem()
}

func (o StrimziPodSetStatusConditionsPatchOutput) ToStrimziPodSetStatusConditionsPatchOutput() StrimziPodSetStatusConditionsPatchOutput {
	return o
}

func (o StrimziPodSetStatusConditionsPatchOutput) ToStrimziPodSetStatusConditionsPatchOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsPatchOutput {
	return o
}

// Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.
func (o StrimziPodSetStatusConditionsPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditionsPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// Human-readable message indicating details about the condition's last transition.
func (o StrimziPodSetStatusConditionsPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditionsPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// The reason for the condition's last transition (a single word in CamelCase).
func (o StrimziPodSetStatusConditionsPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditionsPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// The status of the condition, either True, False or Unknown.
func (o StrimziPodSetStatusConditionsPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditionsPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The unique identifier of a condition, used to distinguish between other conditions in the resource.
func (o StrimziPodSetStatusConditionsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusConditionsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StrimziPodSetStatusConditionsPatchArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusConditionsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StrimziPodSetStatusConditionsPatch)(nil)).Elem()
}

func (o StrimziPodSetStatusConditionsPatchArrayOutput) ToStrimziPodSetStatusConditionsPatchArrayOutput() StrimziPodSetStatusConditionsPatchArrayOutput {
	return o
}

func (o StrimziPodSetStatusConditionsPatchArrayOutput) ToStrimziPodSetStatusConditionsPatchArrayOutputWithContext(ctx context.Context) StrimziPodSetStatusConditionsPatchArrayOutput {
	return o
}

func (o StrimziPodSetStatusConditionsPatchArrayOutput) Index(i pulumi.IntInput) StrimziPodSetStatusConditionsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StrimziPodSetStatusConditionsPatch {
		return vs[0].([]StrimziPodSetStatusConditionsPatch)[vs[1].(int)]
	}).(StrimziPodSetStatusConditionsPatchOutput)
}

// The status of the StrimziPodSet.
type StrimziPodSetStatusPatch struct {
	// List of status conditions.
	Conditions []StrimziPodSetStatusConditionsPatch `pulumi:"conditions"`
	// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
	CurrentPods *int `pulumi:"currentPods"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// Number of pods managed by this `StrimziPodSet` resource.
	Pods *int `pulumi:"pods"`
	// Number of pods managed by this `StrimziPodSet` resource that are ready.
	ReadyPods *int `pulumi:"readyPods"`
}

// StrimziPodSetStatusPatchInput is an input type that accepts StrimziPodSetStatusPatchArgs and StrimziPodSetStatusPatchOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusPatchInput` via:
//
//	StrimziPodSetStatusPatchArgs{...}
type StrimziPodSetStatusPatchInput interface {
	pulumi.Input

	ToStrimziPodSetStatusPatchOutput() StrimziPodSetStatusPatchOutput
	ToStrimziPodSetStatusPatchOutputWithContext(context.Context) StrimziPodSetStatusPatchOutput
}

// The status of the StrimziPodSet.
type StrimziPodSetStatusPatchArgs struct {
	// List of status conditions.
	Conditions StrimziPodSetStatusConditionsPatchArrayInput `pulumi:"conditions"`
	// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
	CurrentPods pulumi.IntPtrInput `pulumi:"currentPods"`
	// The generation of the CRD that was last reconciled by the operator.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// Number of pods managed by this `StrimziPodSet` resource.
	Pods pulumi.IntPtrInput `pulumi:"pods"`
	// Number of pods managed by this `StrimziPodSet` resource that are ready.
	ReadyPods pulumi.IntPtrInput `pulumi:"readyPods"`
}

func (StrimziPodSetStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusPatch)(nil)).Elem()
}

func (i StrimziPodSetStatusPatchArgs) ToStrimziPodSetStatusPatchOutput() StrimziPodSetStatusPatchOutput {
	return i.ToStrimziPodSetStatusPatchOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusPatchArgs) ToStrimziPodSetStatusPatchOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusPatchOutput)
}

func (i StrimziPodSetStatusPatchArgs) ToStrimziPodSetStatusPatchPtrOutput() StrimziPodSetStatusPatchPtrOutput {
	return i.ToStrimziPodSetStatusPatchPtrOutputWithContext(context.Background())
}

func (i StrimziPodSetStatusPatchArgs) ToStrimziPodSetStatusPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusPatchOutput).ToStrimziPodSetStatusPatchPtrOutputWithContext(ctx)
}

// StrimziPodSetStatusPatchPtrInput is an input type that accepts StrimziPodSetStatusPatchArgs, StrimziPodSetStatusPatchPtr and StrimziPodSetStatusPatchPtrOutput values.
// You can construct a concrete instance of `StrimziPodSetStatusPatchPtrInput` via:
//
//	        StrimziPodSetStatusPatchArgs{...}
//
//	or:
//
//	        nil
type StrimziPodSetStatusPatchPtrInput interface {
	pulumi.Input

	ToStrimziPodSetStatusPatchPtrOutput() StrimziPodSetStatusPatchPtrOutput
	ToStrimziPodSetStatusPatchPtrOutputWithContext(context.Context) StrimziPodSetStatusPatchPtrOutput
}

type strimziPodSetStatusPatchPtrType StrimziPodSetStatusPatchArgs

func StrimziPodSetStatusPatchPtr(v *StrimziPodSetStatusPatchArgs) StrimziPodSetStatusPatchPtrInput {
	return (*strimziPodSetStatusPatchPtrType)(v)
}

func (*strimziPodSetStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetStatusPatch)(nil)).Elem()
}

func (i *strimziPodSetStatusPatchPtrType) ToStrimziPodSetStatusPatchPtrOutput() StrimziPodSetStatusPatchPtrOutput {
	return i.ToStrimziPodSetStatusPatchPtrOutputWithContext(context.Background())
}

func (i *strimziPodSetStatusPatchPtrType) ToStrimziPodSetStatusPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetStatusPatchPtrOutput)
}

// The status of the StrimziPodSet.
type StrimziPodSetStatusPatchOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StrimziPodSetStatusPatch)(nil)).Elem()
}

func (o StrimziPodSetStatusPatchOutput) ToStrimziPodSetStatusPatchOutput() StrimziPodSetStatusPatchOutput {
	return o
}

func (o StrimziPodSetStatusPatchOutput) ToStrimziPodSetStatusPatchOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchOutput {
	return o
}

func (o StrimziPodSetStatusPatchOutput) ToStrimziPodSetStatusPatchPtrOutput() StrimziPodSetStatusPatchPtrOutput {
	return o.ToStrimziPodSetStatusPatchPtrOutputWithContext(context.Background())
}

func (o StrimziPodSetStatusPatchOutput) ToStrimziPodSetStatusPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StrimziPodSetStatusPatch) *StrimziPodSetStatusPatch {
		return &v
	}).(StrimziPodSetStatusPatchPtrOutput)
}

// List of status conditions.
func (o StrimziPodSetStatusPatchOutput) Conditions() StrimziPodSetStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v StrimziPodSetStatusPatch) []StrimziPodSetStatusConditionsPatch { return v.Conditions }).(StrimziPodSetStatusConditionsPatchArrayOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
func (o StrimziPodSetStatusPatchOutput) CurrentPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusPatch) *int { return v.CurrentPods }).(pulumi.IntPtrOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o StrimziPodSetStatusPatchOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusPatch) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource.
func (o StrimziPodSetStatusPatchOutput) Pods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusPatch) *int { return v.Pods }).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that are ready.
func (o StrimziPodSetStatusPatchOutput) ReadyPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StrimziPodSetStatusPatch) *int { return v.ReadyPods }).(pulumi.IntPtrOutput)
}

type StrimziPodSetStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (StrimziPodSetStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetStatusPatch)(nil)).Elem()
}

func (o StrimziPodSetStatusPatchPtrOutput) ToStrimziPodSetStatusPatchPtrOutput() StrimziPodSetStatusPatchPtrOutput {
	return o
}

func (o StrimziPodSetStatusPatchPtrOutput) ToStrimziPodSetStatusPatchPtrOutputWithContext(ctx context.Context) StrimziPodSetStatusPatchPtrOutput {
	return o
}

func (o StrimziPodSetStatusPatchPtrOutput) Elem() StrimziPodSetStatusPatchOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) StrimziPodSetStatusPatch {
		if v != nil {
			return *v
		}
		var ret StrimziPodSetStatusPatch
		return ret
	}).(StrimziPodSetStatusPatchOutput)
}

// List of status conditions.
func (o StrimziPodSetStatusPatchPtrOutput) Conditions() StrimziPodSetStatusConditionsPatchArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) []StrimziPodSetStatusConditionsPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(StrimziPodSetStatusConditionsPatchArrayOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that have the current revision.
func (o StrimziPodSetStatusPatchPtrOutput) CurrentPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.CurrentPods
	}).(pulumi.IntPtrOutput)
}

// The generation of the CRD that was last reconciled by the operator.
func (o StrimziPodSetStatusPatchPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource.
func (o StrimziPodSetStatusPatchPtrOutput) Pods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.Pods
	}).(pulumi.IntPtrOutput)
}

// Number of pods managed by this `StrimziPodSet` resource that are ready.
func (o StrimziPodSetStatusPatchPtrOutput) ReadyPods() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StrimziPodSetStatusPatch) *int {
		if v == nil {
			return nil
		}
		return v.ReadyPods
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetTypeInput)(nil)).Elem(), StrimziPodSetTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetTypeArrayInput)(nil)).Elem(), StrimziPodSetTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetListTypeInput)(nil)).Elem(), StrimziPodSetListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetPatchTypeInput)(nil)).Elem(), StrimziPodSetPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecInput)(nil)).Elem(), StrimziPodSetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecPtrInput)(nil)).Elem(), StrimziPodSetSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecPatchInput)(nil)).Elem(), StrimziPodSetSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecPatchPtrInput)(nil)).Elem(), StrimziPodSetSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorInput)(nil)).Elem(), StrimziPodSetSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorPtrInput)(nil)).Elem(), StrimziPodSetSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsInput)(nil)).Elem(), StrimziPodSetSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), StrimziPodSetSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsPatchInput)(nil)).Elem(), StrimziPodSetSpecSelectorMatchExpressionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorMatchExpressionsPatchArrayInput)(nil)).Elem(), StrimziPodSetSpecSelectorMatchExpressionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorPatchInput)(nil)).Elem(), StrimziPodSetSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetSpecSelectorPatchPtrInput)(nil)).Elem(), StrimziPodSetSpecSelectorPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusInput)(nil)).Elem(), StrimziPodSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusPtrInput)(nil)).Elem(), StrimziPodSetStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusConditionsInput)(nil)).Elem(), StrimziPodSetStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusConditionsArrayInput)(nil)).Elem(), StrimziPodSetStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusConditionsPatchInput)(nil)).Elem(), StrimziPodSetStatusConditionsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusConditionsPatchArrayInput)(nil)).Elem(), StrimziPodSetStatusConditionsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusPatchInput)(nil)).Elem(), StrimziPodSetStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetStatusPatchPtrInput)(nil)).Elem(), StrimziPodSetStatusPatchArgs{})
	pulumi.RegisterOutputType(StrimziPodSetTypeOutput{})
	pulumi.RegisterOutputType(StrimziPodSetTypeArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetListTypeOutput{})
	pulumi.RegisterOutputType(StrimziPodSetPatchTypeOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecPtrOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorMatchExpressionsPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorMatchExpressionsPatchArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetSpecSelectorPatchPtrOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusPtrOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusConditionsOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusConditionsPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusConditionsPatchArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusPatchOutput{})
	pulumi.RegisterOutputType(StrimziPodSetStatusPatchPtrOutput{})
}
