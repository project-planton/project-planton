// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// StrimziPodSetList is a list of StrimziPodSet
type StrimziPodSetList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items StrimziPodSetTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewStrimziPodSetList registers a new resource with the given unique name, arguments, and options.
func NewStrimziPodSetList(ctx *pulumi.Context,
	name string, args *StrimziPodSetListArgs, opts ...pulumi.ResourceOption) (*StrimziPodSetList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("core.strimzi.io/v1beta2")
	args.Kind = pulumi.StringPtr("StrimziPodSetList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource StrimziPodSetList
	err := ctx.RegisterResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSetList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStrimziPodSetList gets an existing StrimziPodSetList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStrimziPodSetList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StrimziPodSetListState, opts ...pulumi.ResourceOption) (*StrimziPodSetList, error) {
	var resource StrimziPodSetList
	err := ctx.ReadResource("kubernetes:core.strimzi.io/v1beta2:StrimziPodSetList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StrimziPodSetList resources.
type strimziPodSetListState struct {
}

type StrimziPodSetListState struct {
}

func (StrimziPodSetListState) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetListState)(nil)).Elem()
}

type strimziPodSetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items []StrimziPodSetType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a StrimziPodSetList resource.
type StrimziPodSetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
	Items StrimziPodSetTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (StrimziPodSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*strimziPodSetListArgs)(nil)).Elem()
}

type StrimziPodSetListInput interface {
	pulumi.Input

	ToStrimziPodSetListOutput() StrimziPodSetListOutput
	ToStrimziPodSetListOutputWithContext(ctx context.Context) StrimziPodSetListOutput
}

func (*StrimziPodSetList) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetList)(nil)).Elem()
}

func (i *StrimziPodSetList) ToStrimziPodSetListOutput() StrimziPodSetListOutput {
	return i.ToStrimziPodSetListOutputWithContext(context.Background())
}

func (i *StrimziPodSetList) ToStrimziPodSetListOutputWithContext(ctx context.Context) StrimziPodSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetListOutput)
}

// StrimziPodSetListArrayInput is an input type that accepts StrimziPodSetListArray and StrimziPodSetListArrayOutput values.
// You can construct a concrete instance of `StrimziPodSetListArrayInput` via:
//
//	StrimziPodSetListArray{ StrimziPodSetListArgs{...} }
type StrimziPodSetListArrayInput interface {
	pulumi.Input

	ToStrimziPodSetListArrayOutput() StrimziPodSetListArrayOutput
	ToStrimziPodSetListArrayOutputWithContext(context.Context) StrimziPodSetListArrayOutput
}

type StrimziPodSetListArray []StrimziPodSetListInput

func (StrimziPodSetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSetList)(nil)).Elem()
}

func (i StrimziPodSetListArray) ToStrimziPodSetListArrayOutput() StrimziPodSetListArrayOutput {
	return i.ToStrimziPodSetListArrayOutputWithContext(context.Background())
}

func (i StrimziPodSetListArray) ToStrimziPodSetListArrayOutputWithContext(ctx context.Context) StrimziPodSetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetListArrayOutput)
}

// StrimziPodSetListMapInput is an input type that accepts StrimziPodSetListMap and StrimziPodSetListMapOutput values.
// You can construct a concrete instance of `StrimziPodSetListMapInput` via:
//
//	StrimziPodSetListMap{ "key": StrimziPodSetListArgs{...} }
type StrimziPodSetListMapInput interface {
	pulumi.Input

	ToStrimziPodSetListMapOutput() StrimziPodSetListMapOutput
	ToStrimziPodSetListMapOutputWithContext(context.Context) StrimziPodSetListMapOutput
}

type StrimziPodSetListMap map[string]StrimziPodSetListInput

func (StrimziPodSetListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSetList)(nil)).Elem()
}

func (i StrimziPodSetListMap) ToStrimziPodSetListMapOutput() StrimziPodSetListMapOutput {
	return i.ToStrimziPodSetListMapOutputWithContext(context.Background())
}

func (i StrimziPodSetListMap) ToStrimziPodSetListMapOutputWithContext(ctx context.Context) StrimziPodSetListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StrimziPodSetListMapOutput)
}

type StrimziPodSetListOutput struct{ *pulumi.OutputState }

func (StrimziPodSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StrimziPodSetList)(nil)).Elem()
}

func (o StrimziPodSetListOutput) ToStrimziPodSetListOutput() StrimziPodSetListOutput {
	return o
}

func (o StrimziPodSetListOutput) ToStrimziPodSetListOutputWithContext(ctx context.Context) StrimziPodSetListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o StrimziPodSetListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *StrimziPodSetList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of strimzipodsets. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
func (o StrimziPodSetListOutput) Items() StrimziPodSetTypeArrayOutput {
	return o.ApplyT(func(v *StrimziPodSetList) StrimziPodSetTypeArrayOutput { return v.Items }).(StrimziPodSetTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *StrimziPodSetList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o StrimziPodSetListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *StrimziPodSetList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type StrimziPodSetListArrayOutput struct{ *pulumi.OutputState }

func (StrimziPodSetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StrimziPodSetList)(nil)).Elem()
}

func (o StrimziPodSetListArrayOutput) ToStrimziPodSetListArrayOutput() StrimziPodSetListArrayOutput {
	return o
}

func (o StrimziPodSetListArrayOutput) ToStrimziPodSetListArrayOutputWithContext(ctx context.Context) StrimziPodSetListArrayOutput {
	return o
}

func (o StrimziPodSetListArrayOutput) Index(i pulumi.IntInput) StrimziPodSetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StrimziPodSetList {
		return vs[0].([]*StrimziPodSetList)[vs[1].(int)]
	}).(StrimziPodSetListOutput)
}

type StrimziPodSetListMapOutput struct{ *pulumi.OutputState }

func (StrimziPodSetListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StrimziPodSetList)(nil)).Elem()
}

func (o StrimziPodSetListMapOutput) ToStrimziPodSetListMapOutput() StrimziPodSetListMapOutput {
	return o
}

func (o StrimziPodSetListMapOutput) ToStrimziPodSetListMapOutputWithContext(ctx context.Context) StrimziPodSetListMapOutput {
	return o
}

func (o StrimziPodSetListMapOutput) MapIndex(k pulumi.StringInput) StrimziPodSetListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StrimziPodSetList {
		return vs[0].(map[string]*StrimziPodSetList)[vs[1].(string)]
	}).(StrimziPodSetListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetListInput)(nil)).Elem(), &StrimziPodSetList{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetListArrayInput)(nil)).Elem(), StrimziPodSetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StrimziPodSetListMapInput)(nil)).Elem(), StrimziPodSetListMap{})
	pulumi.RegisterOutputType(StrimziPodSetListOutput{})
	pulumi.RegisterOutputType(StrimziPodSetListArrayOutput{})
	pulumi.RegisterOutputType(StrimziPodSetListMapOutput{})
}
