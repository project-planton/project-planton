// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/azure/azureaksnodepool/v1/spec.proto

package azureaksnodepoolv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for OS types in an AKS node pool.
type AzureAksNodePoolOsType int32

const (
	AzureAksNodePoolOsType_azure_aks_node_pool_os_type_unspecified AzureAksNodePoolOsType = 0
	AzureAksNodePoolOsType_LINUX                                   AzureAksNodePoolOsType = 1
	AzureAksNodePoolOsType_WINDOWS                                 AzureAksNodePoolOsType = 2
)

// Enum value maps for AzureAksNodePoolOsType.
var (
	AzureAksNodePoolOsType_name = map[int32]string{
		0: "azure_aks_node_pool_os_type_unspecified",
		1: "LINUX",
		2: "WINDOWS",
	}
	AzureAksNodePoolOsType_value = map[string]int32{
		"azure_aks_node_pool_os_type_unspecified": 0,
		"LINUX":   1,
		"WINDOWS": 2,
	}
)

func (x AzureAksNodePoolOsType) Enum() *AzureAksNodePoolOsType {
	p := new(AzureAksNodePoolOsType)
	*p = x
	return p
}

func (x AzureAksNodePoolOsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AzureAksNodePoolOsType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_enumTypes[0].Descriptor()
}

func (AzureAksNodePoolOsType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_enumTypes[0]
}

func (x AzureAksNodePoolOsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AzureAksNodePoolOsType.Descriptor instead.
func (AzureAksNodePoolOsType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescGZIP(), []int{0}
}

// AzureAksNodePoolSpec defines the desired state of an AKS cluster node pool.
type AzureAksNodePoolSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reference to the parent AKS cluster by name.
	// Must refer to an existing AzureAksCluster resource in the same environment.
	ClusterName *v1.StringValueOrRef `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// VM size (SKU) for the nodes in this pool (e.g., "Standard_D4s_v3").
	// Determines the CPU/memory of each node. No default; user must specify.
	VmSize string `protobuf:"bytes,2,opt,name=vm_size,json=vmSize,proto3" json:"vm_size,omitempty"`
	// Number of nodes to create in this pool initially (if autoscaling is off, this is the fixed node count).
	// Must be at least 1.
	InitialNodeCount int32 `protobuf:"varint,3,opt,name=initial_node_count,json=initialNodeCount,proto3" json:"initial_node_count,omitempty"`
	// Autoscaling configuration for this node pool. If set, cluster autoscaler is enabled for this pool.
	// If not provided, the node pool will have a fixed size (no autoscaling).
	Autoscaling *AzureAksNodePoolAutoscaling `protobuf:"bytes,4,opt,name=autoscaling,proto3" json:"autoscaling,omitempty"` // optional
	// Zones to spread this node pool across for high availability (e.g., ["1", "2", "3"] for three zones).
	// If unspecified, nodes are not pinned to specific zones (using region defaults). If specified, at least 2 zones should be provided for HA.
	AvailabilityZones []string `protobuf:"bytes,5,rep,name=availability_zones,json=availabilityZones,proto3" json:"availability_zones,omitempty"`
	// Operating system type for nodes. Defaults to Linux. Use "WINDOWS" for a Windows node pool (requires a cluster with Windows support).
	OsType AzureAksNodePoolOsType `protobuf:"varint,6,opt,name=os_type,json=osType,proto3,enum=project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolOsType" json:"os_type,omitempty"`
	// Use Spot (preemptible) VMs for this node pool to reduce cost. Defaults to false (regular on-demand VMs).
	SpotEnabled   bool `protobuf:"varint,7,opt,name=spot_enabled,json=spotEnabled,proto3" json:"spot_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureAksNodePoolSpec) Reset() {
	*x = AzureAksNodePoolSpec{}
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureAksNodePoolSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureAksNodePoolSpec) ProtoMessage() {}

func (x *AzureAksNodePoolSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureAksNodePoolSpec.ProtoReflect.Descriptor instead.
func (*AzureAksNodePoolSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AzureAksNodePoolSpec) GetClusterName() *v1.StringValueOrRef {
	if x != nil {
		return x.ClusterName
	}
	return nil
}

func (x *AzureAksNodePoolSpec) GetVmSize() string {
	if x != nil {
		return x.VmSize
	}
	return ""
}

func (x *AzureAksNodePoolSpec) GetInitialNodeCount() int32 {
	if x != nil {
		return x.InitialNodeCount
	}
	return 0
}

func (x *AzureAksNodePoolSpec) GetAutoscaling() *AzureAksNodePoolAutoscaling {
	if x != nil {
		return x.Autoscaling
	}
	return nil
}

func (x *AzureAksNodePoolSpec) GetAvailabilityZones() []string {
	if x != nil {
		return x.AvailabilityZones
	}
	return nil
}

func (x *AzureAksNodePoolSpec) GetOsType() AzureAksNodePoolOsType {
	if x != nil {
		return x.OsType
	}
	return AzureAksNodePoolOsType_azure_aks_node_pool_os_type_unspecified
}

func (x *AzureAksNodePoolSpec) GetSpotEnabled() bool {
	if x != nil {
		return x.SpotEnabled
	}
	return false
}

// Autoscaling settings for an AKS node pool. Effective only if autoscaling is enabled.
type AzureAksNodePoolAutoscaling struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Minimum number of nodes for this pool when autoscaler is active. Can be 0 for user node pools to allow scale-to-zero.
	MinNodes uint32 `protobuf:"varint,1,opt,name=min_nodes,json=minNodes,proto3" json:"min_nodes,omitempty"`
	// Maximum number of nodes for this pool when autoscaler is active.
	MaxNodes      uint32 `protobuf:"varint,2,opt,name=max_nodes,json=maxNodes,proto3" json:"max_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureAksNodePoolAutoscaling) Reset() {
	*x = AzureAksNodePoolAutoscaling{}
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureAksNodePoolAutoscaling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureAksNodePoolAutoscaling) ProtoMessage() {}

func (x *AzureAksNodePoolAutoscaling) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureAksNodePoolAutoscaling.ProtoReflect.Descriptor instead.
func (*AzureAksNodePoolAutoscaling) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *AzureAksNodePoolAutoscaling) GetMinNodes() uint32 {
	if x != nil {
		return x.MinNodes
	}
	return 0
}

func (x *AzureAksNodePoolAutoscaling) GetMaxNodes() uint32 {
	if x != nil {
		return x.MaxNodes
	}
	return 0
}

var File_project_planton_provider_azure_azureaksnodepool_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDesc = "" +
	"\n" +
	"=project/planton/provider/azure/azureaksnodepool/v1/spec.proto\x122project.planton.provider.azure.azureaksnodepool.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\xd6\x04\n" +
	"\x14AzureAksNodePoolSpec\x12w\n" +
	"\fcluster_name\x18\x01 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1c\xbaH\x03\xc8\x01\x01\x88\xd4a\x90\x03\x92\xd4a\rmetadata.nameR\vclusterName\x12\x1f\n" +
	"\avm_size\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x06vmSize\x128\n" +
	"\x12initial_node_count\x18\x03 \x01(\x05B\n" +
	"\xbaH\a\xc8\x01\x01\x1a\x02 \x00R\x10initialNodeCount\x12q\n" +
	"\vautoscaling\x18\x04 \x01(\v2O.project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolAutoscalingR\vautoscaling\x12G\n" +
	"\x12availability_zones\x18\x05 \x03(\tB\x18\xbaH\x15\xd8\x01\x01\x92\x01\x0f\b\x02\"\vr\tR\x011R\x012R\x013R\x11availabilityZones\x12\x8a\x01\n" +
	"\aos_type\x18\x06 \x01(\x0e2J.project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolOsTypeB%\x8a\xa6\x1d!AZURE_AKS_NODE_POOL_OS_TYPE_LINUXR\x06osType\x12!\n" +
	"\fspot_enabled\x18\a \x01(\bR\vspotEnabled\"g\n" +
	"\x1bAzureAksNodePoolAutoscaling\x12#\n" +
	"\tmin_nodes\x18\x01 \x01(\rB\x06\xbaH\x03\xc8\x01\x01R\bminNodes\x12#\n" +
	"\tmax_nodes\x18\x02 \x01(\rB\x06\xbaH\x03\xc8\x01\x01R\bmaxNodes*]\n" +
	"\x16AzureAksNodePoolOsType\x12+\n" +
	"'azure_aks_node_pool_os_type_unspecified\x10\x00\x12\t\n" +
	"\x05LINUX\x10\x01\x12\v\n" +
	"\aWINDOWS\x10\x02B\xa9\x03\n" +
	"6com.project.planton.provider.azure.azureaksnodepool.v1B\tSpecProtoP\x01Zugithub.com/project-planton/project-planton/apis/project/planton/provider/azure/azureaksnodepool/v1;azureaksnodepoolv1\xa2\x02\x05PPPAA\xaa\x022Project.Planton.Provider.Azure.Azureaksnodepool.V1\xca\x022Project\\Planton\\Provider\\Azure\\Azureaksnodepool\\V1\xe2\x02>Project\\Planton\\Provider\\Azure\\Azureaksnodepool\\V1\\GPBMetadata\xea\x027Project::Planton::Provider::Azure::Azureaksnodepool::V1b\x06proto3"

var (
	file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDesc), len(file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDescData
}

var file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_goTypes = []any{
	(AzureAksNodePoolOsType)(0),         // 0: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolOsType
	(*AzureAksNodePoolSpec)(nil),        // 1: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolSpec
	(*AzureAksNodePoolAutoscaling)(nil), // 2: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolAutoscaling
	(*v1.StringValueOrRef)(nil),         // 3: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_depIdxs = []int32{
	3, // 0: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolSpec.cluster_name:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	2, // 1: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolSpec.autoscaling:type_name -> project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolAutoscaling
	0, // 2: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolSpec.os_type:type_name -> project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolOsType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_init() }
func file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_init() {
	if File_project_planton_provider_azure_azureaksnodepool_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDesc), len(file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_azure_azureaksnodepool_v1_spec_proto = out.File
	file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_goTypes = nil
	file_project_planton_provider_azure_azureaksnodepool_v1_spec_proto_depIdxs = nil
}
