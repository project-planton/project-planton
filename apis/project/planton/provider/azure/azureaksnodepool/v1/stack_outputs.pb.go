// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/azure/azureaksnodepool/v1/stack_outputs.proto

package azureaksnodepoolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AzureAksNodePoolStackOutputs describes the info retrieved after provisioning an AKS node pool.
type AzureAksNodePoolStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the node pool in AKS. Typically matches the AzureAksNodePool metadata.name.
	NodePoolName string `protobuf:"bytes,1,opt,name=node_pool_name,json=nodePoolName,proto3" json:"node_pool_name,omitempty"`
	// Azure Resource Manager ID of the created node pool (Agent Pool resource).
	AgentPoolResourceId string `protobuf:"bytes,2,opt,name=agent_pool_resource_id,json=agentPoolResourceId,proto3" json:"agent_pool_resource_id,omitempty"`
	// The maximum number of pods that can run on each node of this pool.
	// (Determined by AKS based on network configuration and VM size.)
	MaxPodsPerNode uint32 `protobuf:"varint,3,opt,name=max_pods_per_node,json=maxPodsPerNode,proto3" json:"max_pods_per_node,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AzureAksNodePoolStackOutputs) Reset() {
	*x = AzureAksNodePoolStackOutputs{}
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureAksNodePoolStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureAksNodePoolStackOutputs) ProtoMessage() {}

func (x *AzureAksNodePoolStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureAksNodePoolStackOutputs.ProtoReflect.Descriptor instead.
func (*AzureAksNodePoolStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AzureAksNodePoolStackOutputs) GetNodePoolName() string {
	if x != nil {
		return x.NodePoolName
	}
	return ""
}

func (x *AzureAksNodePoolStackOutputs) GetAgentPoolResourceId() string {
	if x != nil {
		return x.AgentPoolResourceId
	}
	return ""
}

func (x *AzureAksNodePoolStackOutputs) GetMaxPodsPerNode() uint32 {
	if x != nil {
		return x.MaxPodsPerNode
	}
	return 0
}

var File_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Fproject/planton/provider/azure/azureaksnodepool/v1/stack_outputs.proto\x122project.planton.provider.azure.azureaksnodepool.v1\"\xa4\x01\n" +
	"\x1cAzureAksNodePoolStackOutputs\x12$\n" +
	"\x0enode_pool_name\x18\x01 \x01(\tR\fnodePoolName\x123\n" +
	"\x16agent_pool_resource_id\x18\x02 \x01(\tR\x13agentPoolResourceId\x12)\n" +
	"\x11max_pods_per_node\x18\x03 \x01(\rR\x0emaxPodsPerNodeB\xb1\x03\n" +
	"6com.project.planton.provider.azure.azureaksnodepool.v1B\x11StackOutputsProtoP\x01Zugithub.com/project-planton/project-planton/apis/project/planton/provider/azure/azureaksnodepool/v1;azureaksnodepoolv1\xa2\x02\x05PPPAA\xaa\x022Project.Planton.Provider.Azure.Azureaksnodepool.V1\xca\x022Project\\Planton\\Provider\\Azure\\Azureaksnodepool\\V1\xe2\x02>Project\\Planton\\Provider\\Azure\\Azureaksnodepool\\V1\\GPBMetadata\xea\x027Project::Planton::Provider::Azure::Azureaksnodepool::V1b\x06proto3"

var (
	file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_goTypes = []any{
	(*AzureAksNodePoolStackOutputs)(nil), // 0: project.planton.provider.azure.azureaksnodepool.v1.AzureAksNodePoolStackOutputs
}
var file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_init() }
func file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto = out.File
	file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_azure_azureaksnodepool_v1_stack_outputs_proto_depIdxs = nil
}
