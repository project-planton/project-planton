// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/azure/azurekeyvault/v1/stack_outputs.proto

package azurekeyvaultv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// azure-key-vault stack outputs
type AzureKeyVaultStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// map containing secret-name and its corresponding secret-id on secrets-manager
	SecretIdMap   map[string]string `protobuf:"bytes,1,rep,name=secret_id_map,json=secretIdMap,proto3" json:"secret_id_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureKeyVaultStackOutputs) Reset() {
	*x = AzureKeyVaultStackOutputs{}
	mi := &file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureKeyVaultStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureKeyVaultStackOutputs) ProtoMessage() {}

func (x *AzureKeyVaultStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureKeyVaultStackOutputs.ProtoReflect.Descriptor instead.
func (*AzureKeyVaultStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AzureKeyVaultStackOutputs) GetSecretIdMap() map[string]string {
	if x != nil {
		return x.SecretIdMap
	}
	return nil
}

var File_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Cproject/planton/provider/azure/azurekeyvault/v1/stack_outputs.proto\x12/project.planton.provider.azure.azurekeyvault.v1\"\xdc\x01\n" +
	"\x19AzureKeyVaultStackOutputs\x12\x7f\n" +
	"\rsecret_id_map\x18\x01 \x03(\v2[.project.planton.provider.azure.azurekeyvault.v1.AzureKeyVaultStackOutputs.SecretIdMapEntryR\vsecretIdMap\x1a>\n" +
	"\x10SecretIdMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x9c\x03\n" +
	"3com.project.planton.provider.azure.azurekeyvault.v1B\x11StackOutputsProtoP\x01Zogithub.com/project-planton/project-planton/apis/project/planton/provider/azure/azurekeyvault/v1;azurekeyvaultv1\xa2\x02\x05PPPAA\xaa\x02/Project.Planton.Provider.Azure.Azurekeyvault.V1\xca\x02/Project\\Planton\\Provider\\Azure\\Azurekeyvault\\V1\xe2\x02;Project\\Planton\\Provider\\Azure\\Azurekeyvault\\V1\\GPBMetadata\xea\x024Project::Planton::Provider::Azure::Azurekeyvault::V1b\x06proto3"

var (
	file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_goTypes = []any{
	(*AzureKeyVaultStackOutputs)(nil), // 0: project.planton.provider.azure.azurekeyvault.v1.AzureKeyVaultStackOutputs
	nil,                               // 1: project.planton.provider.azure.azurekeyvault.v1.AzureKeyVaultStackOutputs.SecretIdMapEntry
}
var file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.azure.azurekeyvault.v1.AzureKeyVaultStackOutputs.secret_id_map:type_name -> project.planton.provider.azure.azurekeyvault.v1.AzureKeyVaultStackOutputs.SecretIdMapEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_init() }
func file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto = out.File
	file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_azure_azurekeyvault_v1_stack_outputs_proto_depIdxs = nil
}
