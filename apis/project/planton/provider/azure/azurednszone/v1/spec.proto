syntax = "proto3";

package project.planton.provider.azure.azurednszone.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/networking/enums/dnsrecordtype/dns_record_type.proto";
import "project/planton/shared/options/options.proto";

// **AzureDnsZoneSpec** defines the configuration for creating an Azure DNS Zone.
// This specifies the minimal parameters needed for an Azure DNS zone, including the DNS domain name
// and the Azure Resource Group in which the zone will reside. Optionally, DNS records can be provided.
message AzureDnsZoneSpec {
  // The DNS zone name (e.g., "example.com"). Do not include a trailing dot.
  string zone_name = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "zone_name"
      message: "Zone name must be a valid DNS domain (e.g., example.com)"
      expression: "this.matches('^(?:[a-z0-9-]+[.])+[a-z]{2,}$')"
    }
  ];

  // The Azure Resource Group in which to create the DNS zone. This resource group must exist in the target subscription.
  string resource_group = 2 [(buf.validate.field).required = true];

  // (Optional) DNS records to pre-populate in the zone. Each record includes type, name, values, and TTL.
  // If no records are provided, the zone will be created empty (common when external systems manage DNS records).
  repeated AzureDnsRecord records = 3;
}

// **AzureDnsRecord** represents a DNS record to be added to the Azure DNS Zone.
// It includes the record type, the record name (usually a fully qualified domain name ending with a dot),
// one or more record values, and an optional TTL (Time To Live) in seconds.
message AzureDnsRecord {
  // The DNS record type (e.g., A, AAAA, CNAME, TXT, MX).
  project.planton.shared.networking.enums.dnsrecordtype.DnsRecordType record_type = 1 [(buf.validate.field).required = true];

  // The name of the DNS record. This can be a fully qualified domain name (ending with a dot, e.g., "www.example.com.")
  // or a relative name within the zone (e.g., "www" for "www.example.com"). An empty name "@" denotes the zone root.
  string name = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "record_name"
      message: "Record name should be a valid DNS name. Use a trailing dot for FQDN."
      expression: "this.matches('^(?:[*][.])?(?:[_a-z0-9](?:[_a-z0-9-]{0,61}[a-z0-9])?[.])+(?:[a-z](?:[a-z0-9-]{0,61}[a-z0-9])?)?$')"
    }
  ];

  // The list of values for the DNS record. For example, IP addresses for A/AAAA records, or hostnames for CNAME records (each CNAME value should end with a dot).
  repeated string values = 3 [(buf.validate.field).repeated.min_items = 1];

  // The Time To Live (TTL) for the DNS record, in seconds.
  optional int32 ttl_seconds = 4 [(project.planton.shared.options.default) = "60"];
}
