syntax = "proto3";

package project.planton.provider.gcp.gcpgkeclustercore.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";

// GcpGkeClusterCoreSpec defines the key configuration for a GKE control-plane (private cluster).
message GcpGkeClusterCoreSpec {
  // GCP project in which to create the cluster (reference to GcpProject resource).
  project.planton.shared.foreignkey.v1.StringValueOrRef project_id = 1 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpProject,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.project_id"
  ];

  // Location for the cluster: region (for regional) or zone (for zonal).
  string location = 2 [
    (buf.validate.field).required = true,
    // e.g. "us-central1" or "us-central1-a"
    (buf.validate.field).string.pattern = "^[a-z]+-[a-z]+[0-9](-[a-z])?$"
  ];

  // VPC Subnetwork to attach this cluster (must exist; carries primary & secondary IP ranges).
  project.planton.shared.foreignkey.v1.StringValueOrRef subnetwork_self_link = 3 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpSubnetwork,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.self_link"
  ];

  // Name of the secondary range on the subnetwork for Pod IPs (VPC-native aliasing).
  project.planton.shared.foreignkey.v1.StringValueOrRef cluster_secondary_range_name = 4 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpSubnetwork,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.pods_secondary_range_name"
  ];

  // Name of the secondary range on the subnetwork for Service IPs.
  project.planton.shared.foreignkey.v1.StringValueOrRef services_secondary_range_name = 5 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpSubnetwork,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.services_secondary_range_name"
  ];

  // RFC1918 /28 CIDR block for the Kubernetes control-plane masters (private endpoint range).
  string master_ipv4_cidr_block = 6 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.pattern = "^\\d+\\.\\d+\\.\\d+\\.\\d+\\/28$"
    // e.g. "172.16.0.16/28"; must be /28 and non-overlapping.
  ];

  // Whether nodes should be created with public IPs
  bool enable_public_nodes = 7;

  // Kubernetes release channel for auto-upgrades (Rapid, Regular, Stable, or NONE).
  GkeReleaseChannel release_channel = 8 [(project.planton.shared.options.default) = "REGULAR"];

  // Disable network policy enforcement (Calico)
  bool disable_network_policy = 9;

  // Disable Workload Identity for pods (mapping KSA to GCP service accounts).
  bool disable_workload_identity = 10;

  // Optionally, could add a field to specify a non-default Workload Identity Pool:
  // string workload_pool = 11 [(buf.validate.field).string.pattern = ".+\\.svc\\.id\\.goog$"];

  // Reference to a Cloud NAT configuration to allow outbound internet for private nodes.
  project.planton.shared.foreignkey.v1.StringValueOrRef router_nat_name = 12 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpRouterNat,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "metadata.name"
  ];
}

// Enum for available GKE release channels.
enum GkeReleaseChannel {
  gke_release_channel_unspecified = 0;
  RAPID = 1;
  REGULAR = 2;
  STABLE = 3;
  NONE = 4;
}
