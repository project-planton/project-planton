// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpgkeclustercore/v1/spec.proto

package gcpgkeclustercorev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for available GKE release channels.
type GkeReleaseChannel int32

const (
	GkeReleaseChannel_gke_release_channel_unspecified GkeReleaseChannel = 0
	GkeReleaseChannel_RAPID                           GkeReleaseChannel = 1
	GkeReleaseChannel_REGULAR                         GkeReleaseChannel = 2
	GkeReleaseChannel_STABLE                          GkeReleaseChannel = 3
	GkeReleaseChannel_NONE                            GkeReleaseChannel = 4
)

// Enum value maps for GkeReleaseChannel.
var (
	GkeReleaseChannel_name = map[int32]string{
		0: "gke_release_channel_unspecified",
		1: "RAPID",
		2: "REGULAR",
		3: "STABLE",
		4: "NONE",
	}
	GkeReleaseChannel_value = map[string]int32{
		"gke_release_channel_unspecified": 0,
		"RAPID":                           1,
		"REGULAR":                         2,
		"STABLE":                          3,
		"NONE":                            4,
	}
)

func (x GkeReleaseChannel) Enum() *GkeReleaseChannel {
	p := new(GkeReleaseChannel)
	*p = x
	return p
}

func (x GkeReleaseChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GkeReleaseChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_enumTypes[0].Descriptor()
}

func (GkeReleaseChannel) Type() protoreflect.EnumType {
	return &file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_enumTypes[0]
}

func (x GkeReleaseChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GkeReleaseChannel.Descriptor instead.
func (GkeReleaseChannel) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescGZIP(), []int{0}
}

// GcpGkeClusterCoreSpec defines the key configuration for a GKE control-plane (private cluster).
type GcpGkeClusterCoreSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// GCP project in which to create the cluster (reference to GcpProject resource).
	ProjectId *v1.StringValueOrRef `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Location for the cluster: region (for regional) or zone (for zonal).
	Location string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// VPC Subnetwork to attach this cluster (must exist; carries primary & secondary IP ranges).
	SubnetworkSelfLink *v1.StringValueOrRef `protobuf:"bytes,3,opt,name=subnetwork_self_link,json=subnetworkSelfLink,proto3" json:"subnetwork_self_link,omitempty"`
	// Name of the secondary range on the subnetwork for Pod IPs (VPC-native aliasing).
	ClusterSecondaryRangeName *v1.StringValueOrRef `protobuf:"bytes,4,opt,name=cluster_secondary_range_name,json=clusterSecondaryRangeName,proto3" json:"cluster_secondary_range_name,omitempty"`
	// Name of the secondary range on the subnetwork for Service IPs.
	ServicesSecondaryRangeName *v1.StringValueOrRef `protobuf:"bytes,5,opt,name=services_secondary_range_name,json=servicesSecondaryRangeName,proto3" json:"services_secondary_range_name,omitempty"`
	// RFC1918 /28 CIDR block for the Kubernetes control-plane masters (private endpoint range).
	MasterIpv4CidrBlock string `protobuf:"bytes,6,opt,name=master_ipv4_cidr_block,json=masterIpv4CidrBlock,proto3" json:"master_ipv4_cidr_block,omitempty"`
	// Whether nodes should be created with public IPs
	EnablePublicNodes bool `protobuf:"varint,7,opt,name=enable_public_nodes,json=enablePublicNodes,proto3" json:"enable_public_nodes,omitempty"`
	// Kubernetes release channel for auto-upgrades (Rapid, Regular, Stable, or NONE).
	ReleaseChannel GkeReleaseChannel `protobuf:"varint,8,opt,name=release_channel,json=releaseChannel,proto3,enum=project.planton.provider.gcp.gcpgkeclustercore.v1.GkeReleaseChannel" json:"release_channel,omitempty"`
	// Disable network policy enforcement (Calico)
	DisableNetworkPolicy bool `protobuf:"varint,9,opt,name=disable_network_policy,json=disableNetworkPolicy,proto3" json:"disable_network_policy,omitempty"`
	// Disable Workload Identity for pods (mapping KSA to GCP service accounts).
	DisableWorkloadIdentity bool `protobuf:"varint,10,opt,name=disable_workload_identity,json=disableWorkloadIdentity,proto3" json:"disable_workload_identity,omitempty"`
	// Reference to a Cloud NAT configuration to allow outbound internet for private nodes.
	RouterNatName *v1.StringValueOrRef `protobuf:"bytes,12,opt,name=router_nat_name,json=routerNatName,proto3" json:"router_nat_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpGkeClusterCoreSpec) Reset() {
	*x = GcpGkeClusterCoreSpec{}
	mi := &file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpGkeClusterCoreSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpGkeClusterCoreSpec) ProtoMessage() {}

func (x *GcpGkeClusterCoreSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpGkeClusterCoreSpec.ProtoReflect.Descriptor instead.
func (*GcpGkeClusterCoreSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcpGkeClusterCoreSpec) GetProjectId() *v1.StringValueOrRef {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GcpGkeClusterCoreSpec) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *GcpGkeClusterCoreSpec) GetSubnetworkSelfLink() *v1.StringValueOrRef {
	if x != nil {
		return x.SubnetworkSelfLink
	}
	return nil
}

func (x *GcpGkeClusterCoreSpec) GetClusterSecondaryRangeName() *v1.StringValueOrRef {
	if x != nil {
		return x.ClusterSecondaryRangeName
	}
	return nil
}

func (x *GcpGkeClusterCoreSpec) GetServicesSecondaryRangeName() *v1.StringValueOrRef {
	if x != nil {
		return x.ServicesSecondaryRangeName
	}
	return nil
}

func (x *GcpGkeClusterCoreSpec) GetMasterIpv4CidrBlock() string {
	if x != nil {
		return x.MasterIpv4CidrBlock
	}
	return ""
}

func (x *GcpGkeClusterCoreSpec) GetEnablePublicNodes() bool {
	if x != nil {
		return x.EnablePublicNodes
	}
	return false
}

func (x *GcpGkeClusterCoreSpec) GetReleaseChannel() GkeReleaseChannel {
	if x != nil {
		return x.ReleaseChannel
	}
	return GkeReleaseChannel_gke_release_channel_unspecified
}

func (x *GcpGkeClusterCoreSpec) GetDisableNetworkPolicy() bool {
	if x != nil {
		return x.DisableNetworkPolicy
	}
	return false
}

func (x *GcpGkeClusterCoreSpec) GetDisableWorkloadIdentity() bool {
	if x != nil {
		return x.DisableWorkloadIdentity
	}
	return false
}

func (x *GcpGkeClusterCoreSpec) GetRouterNatName() *v1.StringValueOrRef {
	if x != nil {
		return x.RouterNatName
	}
	return nil
}

var File_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDesc = "" +
	"\n" +
	"<project/planton/provider/gcp/gcpgkeclustercore/v1/spec.proto\x121project.planton.provider.gcp.gcpgkeclustercore.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\xd2\t\n" +
	"\x15GcpGkeClusterCoreSpec\x12\x7f\n" +
	"\n" +
	"project_id\x18\x01 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB(\xbaH\x03\xc8\x01\x01\x88\xd4a\xe3\x04\x92\xd4a\x19status.outputs.project_idR\tprojectId\x12C\n" +
	"\blocation\x18\x02 \x01(\tB'\xbaH$\xc8\x01\x01r\x1f2\x1d^[a-z]+-[a-z]+[0-9](-[a-z])?$R\blocation\x12\x91\x01\n" +
	"\x14subnetwork_self_link\x18\x03 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB'\xbaH\x03\xc8\x01\x01\x88\xd4a\xe5\x04\x92\xd4a\x18status.outputs.self_linkR\x12subnetworkSelfLink\x12\xb0\x01\n" +
	"\x1ccluster_secondary_range_name\x18\x04 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB7\xbaH\x03\xc8\x01\x01\x88\xd4a\xe5\x04\x92\xd4a(status.outputs.pods_secondary_range_nameR\x19clusterSecondaryRangeName\x12\xb6\x01\n" +
	"\x1dservices_secondary_range_name\x18\x05 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB;\xbaH\x03\xc8\x01\x01\x88\xd4a\xe5\x04\x92\xd4a,status.outputs.services_secondary_range_nameR\x1aservicesSecondaryRangeName\x12W\n" +
	"\x16master_ipv4_cidr_block\x18\x06 \x01(\tB\"\xbaH\x1f\xc8\x01\x01r\x1a2\x18^\\d+\\.\\d+\\.\\d+\\.\\d+\\/28$R\x13masterIpv4CidrBlock\x12.\n" +
	"\x13enable_public_nodes\x18\a \x01(\bR\x11enablePublicNodes\x12z\n" +
	"\x0frelease_channel\x18\b \x01(\x0e2D.project.planton.provider.gcp.gcpgkeclustercore.v1.GkeReleaseChannelB\v\x8a\xa6\x1d\aREGULARR\x0ereleaseChannel\x124\n" +
	"\x16disable_network_policy\x18\t \x01(\bR\x14disableNetworkPolicy\x12:\n" +
	"\x19disable_workload_identity\x18\n" +
	" \x01(\bR\x17disableWorkloadIdentity\x12|\n" +
	"\x0frouter_nat_name\x18\f \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1c\xbaH\x03\xc8\x01\x01\x88\xd4a\xe6\x04\x92\xd4a\rmetadata.nameR\rrouterNatName*f\n" +
	"\x11GkeReleaseChannel\x12#\n" +
	"\x1fgke_release_channel_unspecified\x10\x00\x12\t\n" +
	"\x05RAPID\x10\x01\x12\v\n" +
	"\aREGULAR\x10\x02\x12\n" +
	"\n" +
	"\x06STABLE\x10\x03\x12\b\n" +
	"\x04NONE\x10\x04B\xa4\x03\n" +
	"5com.project.planton.provider.gcp.gcpgkeclustercore.v1B\tSpecProtoP\x01Zugithub.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeclustercore/v1;gcpgkeclustercorev1\xa2\x02\x05PPPGG\xaa\x021Project.Planton.Provider.Gcp.Gcpgkeclustercore.V1\xca\x021Project\\Planton\\Provider\\Gcp\\Gcpgkeclustercore\\V1\xe2\x02=Project\\Planton\\Provider\\Gcp\\Gcpgkeclustercore\\V1\\GPBMetadata\xea\x026Project::Planton::Provider::Gcp::Gcpgkeclustercore::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_goTypes = []any{
	(GkeReleaseChannel)(0),        // 0: project.planton.provider.gcp.gcpgkeclustercore.v1.GkeReleaseChannel
	(*GcpGkeClusterCoreSpec)(nil), // 1: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec
	(*v1.StringValueOrRef)(nil),   // 2: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.project_id:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	2, // 1: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.subnetwork_self_link:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	2, // 2: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.cluster_secondary_range_name:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	2, // 3: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.services_secondary_range_name:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	0, // 4: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.release_channel:type_name -> project.planton.provider.gcp.gcpgkeclustercore.v1.GkeReleaseChannel
	2, // 5: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreSpec.router_nat_name:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_spec_proto_depIdxs = nil
}
