// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpgkeclustercore/v1/stack_outputs.proto

package gcpgkeclustercorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GcpGkeClusterCoreStackOutputs captures key info after provisioning a GKE cluster.
type GcpGkeClusterCoreStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kubernetes API server endpoint for the cluster.
	// For a private cluster, this will be an internal/private endpoint URL or IP.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Base64-encoded CA certificate for the cluster’s API server.
	// Clients need this to authenticate the cluster’s TLS cert.
	ClusterCaCertificate string `protobuf:"bytes,2,opt,name=cluster_ca_certificate,json=clusterCaCertificate,proto3" json:"cluster_ca_certificate,omitempty"`
	// Workload Identity Pool identifier used by this cluster (e.g. "PROJECT_ID.svc.id.goog").
	WorkloadIdentityPool string `protobuf:"bytes,3,opt,name=workload_identity_pool,json=workloadIdentityPool,proto3" json:"workload_identity_pool,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GcpGkeClusterCoreStackOutputs) Reset() {
	*x = GcpGkeClusterCoreStackOutputs{}
	mi := &file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpGkeClusterCoreStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpGkeClusterCoreStackOutputs) ProtoMessage() {}

func (x *GcpGkeClusterCoreStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpGkeClusterCoreStackOutputs.ProtoReflect.Descriptor instead.
func (*GcpGkeClusterCoreStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *GcpGkeClusterCoreStackOutputs) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GcpGkeClusterCoreStackOutputs) GetClusterCaCertificate() string {
	if x != nil {
		return x.ClusterCaCertificate
	}
	return ""
}

func (x *GcpGkeClusterCoreStackOutputs) GetWorkloadIdentityPool() string {
	if x != nil {
		return x.WorkloadIdentityPool
	}
	return ""
}

var File_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Eproject/planton/provider/gcp/gcpgkeclustercore/v1/stack_outputs.proto\x121project.planton.provider.gcp.gcpgkeclustercore.v1\"\xa7\x01\n" +
	"\x1dGcpGkeClusterCoreStackOutputs\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x124\n" +
	"\x16cluster_ca_certificate\x18\x02 \x01(\tR\x14clusterCaCertificate\x124\n" +
	"\x16workload_identity_pool\x18\x03 \x01(\tR\x14workloadIdentityPoolB\xac\x03\n" +
	"5com.project.planton.provider.gcp.gcpgkeclustercore.v1B\x11StackOutputsProtoP\x01Zugithub.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeclustercore/v1;gcpgkeclustercorev1\xa2\x02\x05PPPGG\xaa\x021Project.Planton.Provider.Gcp.Gcpgkeclustercore.V1\xca\x021Project\\Planton\\Provider\\Gcp\\Gcpgkeclustercore\\V1\xe2\x02=Project\\Planton\\Provider\\Gcp\\Gcpgkeclustercore\\V1\\GPBMetadata\xea\x026Project::Planton::Provider::Gcp::Gcpgkeclustercore::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_goTypes = []any{
	(*GcpGkeClusterCoreStackOutputs)(nil), // 0: project.planton.provider.gcp.gcpgkeclustercore.v1.GcpGkeClusterCoreStackOutputs
}
var file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_init() }
func file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto = out.File
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpgkeclustercore_v1_stack_outputs_proto_depIdxs = nil
}
