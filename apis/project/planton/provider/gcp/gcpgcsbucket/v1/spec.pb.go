// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpgcsbucket/v1/spec.proto

package gcpgcsbucketv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **GcpGcsBucketSpec** defines the configuration for creating a Google Cloud Storage (GCS) bucket.
// This message specifies the parameters required to create and manage a GCS bucket within a specified GCP project
// and region.
// By setting properties such as the project ID, region, and access control, you can configure the bucket to store
// and serve data
// with the desired accessibility, whether it's public or private, catering to your application's needs.
type GcpGcsBucketSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the GCP project where the storage bucket will be created.
	GcpProjectId string `protobuf:"bytes,1,opt,name=gcp_project_id,json=gcpProjectId,proto3" json:"gcp_project_id,omitempty"`
	// The GCP region where the storage bucket will be created.
	GcpRegion string `protobuf:"bytes,2,opt,name=gcp_region,json=gcpRegion,proto3" json:"gcp_region,omitempty"`
	// A flag indicating whether the GCS bucket should have external (public) access.
	// Defaults to `false`, meaning the bucket is private by default.
	IsPublic      bool `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpGcsBucketSpec) Reset() {
	*x = GcpGcsBucketSpec{}
	mi := &file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpGcsBucketSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpGcsBucketSpec) ProtoMessage() {}

func (x *GcpGcsBucketSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpGcsBucketSpec.ProtoReflect.Descriptor instead.
func (*GcpGcsBucketSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcpGcsBucketSpec) GetGcpProjectId() string {
	if x != nil {
		return x.GcpProjectId
	}
	return ""
}

func (x *GcpGcsBucketSpec) GetGcpRegion() string {
	if x != nil {
		return x.GcpRegion
	}
	return ""
}

func (x *GcpGcsBucketSpec) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

var File_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDesc = "" +
	"\n" +
	"7project/planton/provider/gcp/gcpgcsbucket/v1/spec.proto\x12,project.planton.provider.gcp.gcpgcsbucket.v1\x1a\x1bbuf/validate/validate.proto\"\x84\x01\n" +
	"\x10GcpGcsBucketSpec\x12,\n" +
	"\x0egcp_project_id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\fgcpProjectId\x12%\n" +
	"\n" +
	"gcp_region\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\tgcpRegion\x12\x1b\n" +
	"\tis_public\x18\x03 \x01(\bR\bisPublicB\x81\x03\n" +
	"0com.project.planton.provider.gcp.gcpgcsbucket.v1B\tSpecProtoP\x01Zkgithub.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgcsbucket/v1;gcpgcsbucketv1\xa2\x02\x05PPPGG\xaa\x02,Project.Planton.Provider.Gcp.Gcpgcsbucket.V1\xca\x02,Project\\Planton\\Provider\\Gcp\\Gcpgcsbucket\\V1\xe2\x028Project\\Planton\\Provider\\Gcp\\Gcpgcsbucket\\V1\\GPBMetadata\xea\x021Project::Planton::Provider::Gcp::Gcpgcsbucket::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_goTypes = []any{
	(*GcpGcsBucketSpec)(nil), // 0: project.planton.provider.gcp.gcpgcsbucket.v1.GcpGcsBucketSpec
}
var file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpgcsbucket_v1_spec_proto_depIdxs = nil
}
