// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpcloudcdn/v1/documentation.proto

//# Overview
//
//The **GCP Cloud CDN API Resource** provides a consistent and standardized interface for deploying and managing Google's Cloud Content Delivery Network (CDN) services within our infrastructure. This resource simplifies the process of accelerating content delivery by caching content at Google's global edge locations, allowing users to enhance performance and reduce latency for end-users worldwide.
//
//## Purpose
//
//We developed this API resource to streamline the deployment and configuration of GCP Cloud CDN services. By offering a unified interface, it reduces the complexity involved in setting up content delivery networks on Google Cloud Platform (GCP), enabling users to:
//
//- **Accelerate Content Delivery**: Quickly set up CDN to cache content closer to users.
//- **Enhance Performance**: Reduce latency and improve load times for web applications and services.
//- **Simplify Configuration**: Abstract the complexities of GCP Cloud CDN setup.
//- **Integrate Seamlessly**: Utilize existing GCP credentials and projects.
//- **Focus on Content**: Allow developers to concentrate on content creation rather than infrastructure management.
//
//## Key Features
//
//- **Consistent Interface**: Aligns with our existing APIs for deploying open-source software, microservices, and cloud infrastructure.
//- **Simplified Deployment**: Automates the provisioning of CDN configurations, including backend services and cache settings.
//- **Scalability**: Leverages Google's global network to handle varying traffic loads efficiently.
//- **Security**: Supports SSL/TLS encryption and integrates with Google Cloud Armor for security policies.
//- **Integration**: Works seamlessly with other GCP services like Cloud Storage, Compute Engine, and App Engine.
//
//## Use Cases
//
//- **Web Application Acceleration**: Improve load times by caching static and dynamic content globally.
//- **Media Streaming**: Deliver high-quality video and audio streams with low latency.
//- **API Endpoint Optimization**: Enhance API responsiveness by caching responses at edge locations.
//- **E-Commerce Platforms**: Provide faster page loads and content delivery to enhance user experience.
//- **Mobile Applications**: Reduce latency for mobile users by serving content from nearby edge locations.
//
//## Future Enhancements
//
//As this resource is currently in a partial implementation phase, future updates will include:
//
//- **Advanced Configuration Options**: Support for custom caching policies, URL signing, and cache invalidation.
//- **Enhanced Security Features**: Integration with Google Cloud Armor for DDoS protection and WAF capabilities.
//- **Monitoring and Logging**: Improved support for logging access requests and integrating with Google Cloud Monitoring.
//- **Automation and CI/CD Integration**: Streamlined deployment processes with integration into continuous deployment pipelines.
//- **Comprehensive Documentation**: Expanded usage examples, best practices, and troubleshooting guides.

package gcpcloudcdnv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto protoreflect.FileDescriptor

var file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_rawDesc = []byte{
	0x0a, 0x3f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x63, 0x70, 0x2f, 0x67,
	0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x64, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x2b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x67, 0x63, 0x70, 0x2e,
	0x67, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x83,
	0x03, 0x0a, 0x2f, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x67, 0x63, 0x70, 0x2e, 0x67, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x42, 0x12, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x69, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2f, 0x67, 0x63, 0x70, 0x2f, 0x67, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x64, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x64,
	0x6e, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x50, 0x50, 0x50, 0x47, 0x47, 0xaa, 0x02, 0x2b, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x63, 0x70, 0x2e, 0x47, 0x63, 0x70, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x63, 0x64, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x2b, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5c, 0x47, 0x63, 0x70, 0x5c, 0x47, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x63, 0x64, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x37, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5c, 0x47, 0x63, 0x70, 0x5c, 0x47, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63,
	0x64, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x30, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a,
	0x47, 0x63, 0x70, 0x3a, 0x3a, 0x47, 0x63, 0x70, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x63, 0x64, 0x6e,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_goTypes = []any{}
var file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_init() }
func file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_init() {
	if File_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_depIdxs,
	}.Build()
	File_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto = out.File
	file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_rawDesc = nil
	file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpcloudcdn_v1_documentation_proto_depIdxs = nil
}
