syntax = "proto3";

package project.planton.provider.gcp.gkecluster.v1;

import "buf/validate/validate.proto";

// **GkeClusterSpec** defines the specifications for a Google Kubernetes Engine (GKE) cluster.
// This message includes necessary parameters to create and manage a GKE cluster within a specified GCP project.
// It covers details like project IDs, region, zone, networking configurations, logging options, autoscaling settings,
// node pools, Kubernetes addons, and ingress DNS domains.
message GkeClusterSpec {
  // The GCP project ID in which the GKE cluster will be created.
  string cluster_project_id = 1;

  // **Required.** The GCP region where the GKE cluster will be created.
  // **Warning:** The GKE cluster will be recreated if this value is updated.
  // Refer to: https://cloud.google.com/compute/docs/regions-zones
  string region = 2 [
    (buf.validate.field).required = true
  ];

  // **Required.** The GCP zone where the GKE cluster will be created.
  // Refer to: https://cloud.google.com/compute/docs/regions-zones
  string zone = 3 [
    (buf.validate.field).required = true
  ];

  // A flag indicating whether the cluster should be created in a shared VPC network.
  // **Warning:** The GKE cluster will be recreated if this is updated.
  // **Note:** The VPC network is created in a separate project when this is enabled.
  bool is_create_shared_vpc = 4;

  // A flag to toggle workload logs for the GKE cluster environment.
  // When enabled, logs from Kubernetes pods will be sent to Google Cloud Logging.
  // **Warning:** Enabling log forwarding may increase cloud bills depending on the log volume.
  bool is_workload_logs_enabled = 5;

  // Configuration for cluster autoscaling.
  GkeClusterAutoscalingConfig cluster_autoscaling_config = 6;

  // A list of node pools for the GKE cluster.
  repeated GkeClusterNodePool node_pools = 7;

  // Specifications for Kubernetes addons in the GKE cluster.
  GkeClusterAddons kubernetes_addons = 8;

  // Ingress DNS domains to be configured in the GKE cluster.
  repeated GkeClusterIngressDnsDomain ingress_dns_domains = 9;
}

// **GcpProject** represents a Google Cloud Platform project.
message GcpProject {
  // The name of the GCP project.
  string name = 1;

  // The ID of the GCP project.
  string id = 2;

  // The number associated with the GCP project.
  string number = 3;

  // The ID of the billing account linked to the project.
  string billing_account_id = 4;
}

// **GkeClusterAutoscalingConfig** specifies the autoscaling settings for GKE clusters.
// For more details, visit: https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning
message GkeClusterAutoscalingConfig {
  // A flag to enable or disable autoscaling of Kubernetes worker nodes.
  // When set to true, the cluster will automatically scale up or down based on resource requirements.
  bool is_enabled = 1;

  // The minimum number of CPU cores the cluster can scale down to when autoscaling is enabled.
  // This is the total number of CPU cores across all nodes in the cluster.
  int64 cpu_min_cores = 2;

  // The maximum number of CPU cores the cluster can scale up to when autoscaling is enabled.
  // This is the total number of CPU cores across all nodes in the cluster.
  int64 cpu_max_cores = 3;

  // The minimum amount of memory in gigabytes (GB) the cluster can scale down to when autoscaling is enabled.
  // This is the total memory across all nodes in the cluster.
  int64 memory_min_gb = 4;

  // The maximum amount of memory in gigabytes (GB) the cluster can scale up to when autoscaling is enabled.
  // This is the total memory across all nodes in the cluster.
  int64 memory_max_gb = 5;
}

// **GkeClusterNodePool** defines a node pool within the GKE cluster.
message GkeClusterNodePool {
  // The name of the node pool.
  // This name is added as a label to the node pool and can be used to schedule workloads.
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 25,
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Only alphanumeric characters (A-Z, a-z, 0-9) and hyphens are allowed",
      expression: "this.matches('^[A-Za-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Must not start with a hyphen",
      expression: "this.matches('^[^-].*$')"
    },
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Must not end with a hyphen",
      expression: "this.matches('[^-]$')"
    }
  ];

  // **Required.** The machine type for the node pool (e.g., 'n2-custom-8-16234').
  string machine_type = 2 [
    (buf.validate.field).required = true
  ];

  // The minimum number of nodes in the node pool. Defaults to 1.
  int32 min_node_count = 3;

  // The maximum number of nodes in the node pool. Defaults to 1.
  int32 max_node_count = 4;

  // A flag to enable spot instances on the node pool. Defaults to false.
  bool is_spot_enabled = 5;
}

// **GkeClusterIngressDnsDomain** represents an ingress DNS domain configuration.
message GkeClusterIngressDnsDomain {
  // A unique identifier for the ingress DNS domain.
  string id = 1;

  // **Required.** The DNS domain name (e.g., 'example.com').
  string name = 2 [
    (buf.validate.field).required = true
  ];

  // A flag to enable TLS for the endpoint domain. Defaults to false.
  // **Important:** Certificates are not created for endpoints that do not require TLS.
  // Also, ingress DNS domains without TLS enabled cannot be used for creating endpoints for microservice instances,
  // PostgreSQL clusters, Kafka clusters, Redis clusters, or Solr clouds.
  bool is_tls_enabled = 3;

  // The GCP project ID containing the DNS zone for the endpoint domain.
  // This value is retrieved from the DNS domains in the organization's DNS data.
  // It is required for configuring the certificate issuer to perform DNS validations.
  string dns_zone_gcp_project_id = 4;
}

// **GkeClusterAddons** specifies the Kubernetes addons to be installed on the GKE cluster.
message GkeClusterAddons {
  // A flag to control the installation of the PostgreSQL operator.
  bool is_install_postgres_operator = 1;

  // A flag to control the installation of the Kafka operator.
  bool is_install_kafka_operator = 2;

  // A flag to control the installation of the Solr operator.
  bool is_install_solr_operator = 3;

  // A flag to control the installation of Kubecost.
  bool is_install_kubecost = 4;

  // A flag to control the installation of Ingress NGINX.
  bool is_install_ingress_nginx = 5;

  // A flag to control the installation of Istio.
  bool is_install_istio = 6;

  // A flag to control the installation of Cert-Manager.
  bool is_install_cert_manager = 7;

  // A flag to control the installation of External DNS.
  bool is_install_external_dns = 8;

  // A flag to control the installation of External Secrets.
  bool is_install_external_secrets = 9;

  // A flag to control the installation of the Elastic operator.
  bool is_install_elastic_operator = 10;

  // A flag to control the installation of the Keycloak operator.
  bool is_install_keycloak_operator = 11;
}
