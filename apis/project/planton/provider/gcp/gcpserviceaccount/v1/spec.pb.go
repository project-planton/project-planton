// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpserviceaccount/v1/spec.proto

package gcpserviceaccountv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GcpServiceAccountSpec defines the minimal config needed to create
// a Google Cloud service account, optionally create a key for it, and
// manage either project- or organization-level IAM roles for that service account.
type GcpServiceAccountSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// service_account_id is the short unique ID for the service account (6-30 chars),
	// used to form the email <service_account_id>@<project>.iam.gserviceaccount.com.
	// Required: must comply with GCP naming rules (lowercase letters, digits, etc.).
	ServiceAccountId string `protobuf:"bytes,1,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// project_id specifies the GCP project in which the service account is created.
	// If omitted, the provider default project is used. Typically recommended to set explicitly.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// org_id, if set, manages org-level IAM roles for the service account.
	// If the user wants to assign an organization role, they must provide org_id
	// (an integer string like "123456789012", or a numeric value stored as string).
	OrgId string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// create_key indicates whether a key should be automatically generated
	// for this service account. If true, a JSON private key is created;
	// if false, no user-managed key is created.
	CreateKey *bool `protobuf:"varint,4,opt,name=create_key,json=createKey,proto3,oneof" json:"create_key,omitempty"`
	// project_iam_roles is a list of IAM roles to be granted at the project level
	// to this service account. For example: ["roles/logging.logWriter", "roles/storage.admin"].
	// Each role in this list will be bound to the service account in the specified project_id.
	ProjectIamRoles []string `protobuf:"bytes,5,rep,name=project_iam_roles,json=projectIamRoles,proto3" json:"project_iam_roles,omitempty"`
	// org_iam_roles is a list of IAM roles to be granted at the organization level
	// to this service account. For example: ["roles/resourcemanager.organizationViewer"].
	// Each role in this list will be bound to the service account in the specified org_id.
	OrgIamRoles   []string `protobuf:"bytes,6,rep,name=org_iam_roles,json=orgIamRoles,proto3" json:"org_iam_roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpServiceAccountSpec) Reset() {
	*x = GcpServiceAccountSpec{}
	mi := &file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpServiceAccountSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpServiceAccountSpec) ProtoMessage() {}

func (x *GcpServiceAccountSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpServiceAccountSpec.ProtoReflect.Descriptor instead.
func (*GcpServiceAccountSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcpServiceAccountSpec) GetServiceAccountId() string {
	if x != nil {
		return x.ServiceAccountId
	}
	return ""
}

func (x *GcpServiceAccountSpec) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GcpServiceAccountSpec) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GcpServiceAccountSpec) GetCreateKey() bool {
	if x != nil && x.CreateKey != nil {
		return *x.CreateKey
	}
	return false
}

func (x *GcpServiceAccountSpec) GetProjectIamRoles() []string {
	if x != nil {
		return x.ProjectIamRoles
	}
	return nil
}

func (x *GcpServiceAccountSpec) GetOrgIamRoles() []string {
	if x != nil {
		return x.OrgIamRoles
	}
	return nil
}

var File_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDesc = "" +
	"\n" +
	"<project/planton/provider/gcp/gcpserviceaccount/v1/spec.proto\x121project.planton.provider.gcp.gcpserviceaccount.v1\x1a\x1bbuf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\"\x97\x02\n" +
	"\x15GcpServiceAccountSpec\x12:\n" +
	"\x12service_account_id\x18\x01 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x06\x18\x1eR\x10serviceAccountId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x15\n" +
	"\x06org_id\x18\x03 \x01(\tR\x05orgId\x12-\n" +
	"\n" +
	"create_key\x18\x04 \x01(\bB\t\x8a\xa6\x1d\x05falseH\x00R\tcreateKey\x88\x01\x01\x12*\n" +
	"\x11project_iam_roles\x18\x05 \x03(\tR\x0fprojectIamRoles\x12\"\n" +
	"\rorg_iam_roles\x18\x06 \x03(\tR\vorgIamRolesB\r\n" +
	"\v_create_keyB\xa4\x03\n" +
	"5com.project.planton.provider.gcp.gcpserviceaccount.v1B\tSpecProtoP\x01Zugithub.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpserviceaccount/v1;gcpserviceaccountv1\xa2\x02\x05PPPGG\xaa\x021Project.Planton.Provider.Gcp.Gcpserviceaccount.V1\xca\x021Project\\Planton\\Provider\\Gcp\\Gcpserviceaccount\\V1\xe2\x02=Project\\Planton\\Provider\\Gcp\\Gcpserviceaccount\\V1\\GPBMetadata\xea\x026Project::Planton::Provider::Gcp::Gcpserviceaccount::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_goTypes = []any{
	(*GcpServiceAccountSpec)(nil), // 0: project.planton.provider.gcp.gcpserviceaccount.v1.GcpServiceAccountSpec
}
var file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto != nil {
		return
	}
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpserviceaccount_v1_spec_proto_depIdxs = nil
}
