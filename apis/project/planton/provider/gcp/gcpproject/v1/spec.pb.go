// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpproject/v1/spec.proto

package gcpprojectv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GcpProjectSpec captures the minimal configuration required to create
// a Google Cloud project, attach it to your resource hierarchy, link a
// billing account, apply standard labels, (optionally) remove the default
// network, and pre-enable a set of Google Cloud APIs.
//
// This definition intentionally limits itself to the 80-20 use-case surface.
// Advanced concerns—shared-VPC attachment, complex IAM matrices, org-policy
// constraints, etc.—should be handled by dedicated resources.
type GcpProjectSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Organization ID (numeric string) under which the project is created.
	// Mutually exclusive with folder_id—exactly one parent must be provided.
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	// Folder ID (numeric string) under which the project is created.
	// Mutually exclusive with org_id.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Billing account ID in the form "0123AB-4567CD-89EFGH".
	// Strongly recommended for any project that will use billable services.
	BillingAccountId string `protobuf:"bytes,3,opt,name=billing_account_id,json=billingAccountId,proto3" json:"billing_account_id,omitempty"`
	// Key/value metadata labels for cost allocation and governance.
	// GCP label keys must be <= 63 chars, lowercase letters, digits, or underscores.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If true, the auto-created "default" VPC network is deleted immediately
	// after project creation. Disabling the default network is a common
	// security hardening step.
	DisableDefaultNetwork bool `protobuf:"varint,5,opt,name=disable_default_network,json=disableDefaultNetwork,proto3" json:"disable_default_network,omitempty"`
	// List of Cloud APIs to enable (e.g. "compute.googleapis.com").
	// Each entry must end with ".googleapis.com".
	EnabledApis []string `protobuf:"bytes,6,rep,name=enabled_apis,json=enabledApis,proto3" json:"enabled_apis,omitempty"`
	// Optional IAM member (user / group / serviceAccount) to be granted
	// the Owner role at project creation.
	// Examples:
	//
	//	"group:devops-admins@example.com"
	//	"user:alice@example.com"
	//	"serviceAccount:ci-automation@example.iam.gserviceaccount.com"
	OwnerMember   string `protobuf:"bytes,7,opt,name=owner_member,json=ownerMember,proto3" json:"owner_member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpProjectSpec) Reset() {
	*x = GcpProjectSpec{}
	mi := &file_project_planton_provider_gcp_gcpproject_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpProjectSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpProjectSpec) ProtoMessage() {}

func (x *GcpProjectSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpproject_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpProjectSpec.ProtoReflect.Descriptor instead.
func (*GcpProjectSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcpProjectSpec) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GcpProjectSpec) GetFolderId() string {
	if x != nil {
		return x.FolderId
	}
	return ""
}

func (x *GcpProjectSpec) GetBillingAccountId() string {
	if x != nil {
		return x.BillingAccountId
	}
	return ""
}

func (x *GcpProjectSpec) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GcpProjectSpec) GetDisableDefaultNetwork() bool {
	if x != nil {
		return x.DisableDefaultNetwork
	}
	return false
}

func (x *GcpProjectSpec) GetEnabledApis() []string {
	if x != nil {
		return x.EnabledApis
	}
	return nil
}

func (x *GcpProjectSpec) GetOwnerMember() string {
	if x != nil {
		return x.OwnerMember
	}
	return ""
}

var File_project_planton_provider_gcp_gcpproject_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDesc = "" +
	"\n" +
	"5project/planton/provider/gcp/gcpproject/v1/spec.proto\x12*project.planton.provider.gcp.gcpproject.v1\x1a\x1bbuf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\"\x9c\x05\n" +
	"\x0eGcpProjectSpec\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12\x1b\n" +
	"\tfolder_id\x18\x02 \x01(\tR\bfolderId\x12Z\n" +
	"\x12billing_account_id\x18\x03 \x01(\tB,\xbaH)r'2%^[A-Z0-9]{6}-[A-Z0-9]{6}-[A-Z0-9]{6}$R\x10billingAccountId\x12^\n" +
	"\x06labels\x18\x04 \x03(\v2F.project.planton.provider.gcp.gcpproject.v1.GcpProjectSpec.LabelsEntryR\x06labels\x12@\n" +
	"\x17disable_default_network\x18\x05 \x01(\bB\b\x8a\xa6\x1d\x04trueR\x15disableDefaultNetwork\x12K\n" +
	"\fenabled_apis\x18\x06 \x03(\tB(\xbaH%\x92\x01\"\" r\x1e2\x1c^[a-z0-9]+\\.googleapis\\.com$R\venabledApis\x12*\n" +
	"\fowner_member\x18\a \x01(\tB\a\xbaH\x04r\x02`\x01R\vownerMember\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:\xa3\x01\xbaH\x9f\x01\x1a\x9c\x01\n" +
	"\x1cgcp-project.parent.exclusive\x1a|((size(this.org_id) > 0) == (size(this.folder_id) > 0))? 'Exactly one of org_id or folder_id must be set, but not both.': ''B\xf3\x02\n" +
	".com.project.planton.provider.gcp.gcpproject.v1B\tSpecProtoP\x01Zggithub.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpproject/v1;gcpprojectv1\xa2\x02\x05PPPGG\xaa\x02*Project.Planton.Provider.Gcp.Gcpproject.V1\xca\x02*Project\\Planton\\Provider\\Gcp\\Gcpproject\\V1\xe2\x026Project\\Planton\\Provider\\Gcp\\Gcpproject\\V1\\GPBMetadata\xea\x02/Project::Planton::Provider::Gcp::Gcpproject::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpproject_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_gcp_gcpproject_v1_spec_proto_goTypes = []any{
	(*GcpProjectSpec)(nil), // 0: project.planton.provider.gcp.gcpproject.v1.GcpProjectSpec
	nil,                    // 1: project.planton.provider.gcp.gcpproject.v1.GcpProjectSpec.LabelsEntry
}
var file_project_planton_provider_gcp_gcpproject_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.gcp.gcpproject.v1.GcpProjectSpec.labels:type_name -> project.planton.provider.gcp.gcpproject.v1.GcpProjectSpec.LabelsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpproject_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcpproject_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcpproject_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpproject_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpproject_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpproject_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcpproject_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpproject_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcpproject_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpproject_v1_spec_proto_depIdxs = nil
}
