syntax = "proto3";

package project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";

// GkeWorkloadIdentityBindingSpec describes an IAM policy binding that
// allows a Kubernetes ServiceAccount (KSA) to impersonate a Google
// ServiceAccount (GSA) via Workload Identity Federation.
message GcpGkeWorkloadIdentityBindingSpec {
  // The GCP project that hosts the GKE cluster (and therefore the
  // Workload-Identity pool <project>.svc.id.goog).
  project.planton.shared.foreignkey.v1.StringValueOrRef project_id = 1 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpProject,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.project_id"
  ];

  // The email of the Google Service Account to impersonate.
  // Example: "cert-manager@my-project.iam.gserviceaccount.com"
  project.planton.shared.foreignkey.v1.StringValueOrRef service_account_email = 2 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpServiceAccount,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.email"
  ];

  // Kubernetes namespace of the ServiceAccount running in the cluster.
  string ksa_namespace = 3 [(buf.validate.field).required = true];

  // Name of the Kubernetes ServiceAccount.
  string ksa_name = 4 [(buf.validate.field).required = true];
}
