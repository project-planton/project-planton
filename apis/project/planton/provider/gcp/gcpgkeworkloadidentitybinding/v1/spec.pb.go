// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcpgkeworkloadidentitybinding/v1/spec.proto

package gcpgkeworkloadidentitybindingv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GkeWorkloadIdentityBindingSpec describes an IAM policy binding that
// allows a Kubernetes ServiceAccount (KSA) to impersonate a Google
// ServiceAccount (GSA) via Workload Identity Federation.
type GcpGkeWorkloadIdentityBindingSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The GCP project that hosts the GKE cluster (and therefore the
	// Workload-Identity pool <project>.svc.id.goog).
	ProjectId *v1.StringValueOrRef `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The email of the Google Service Account to impersonate.
	// Example: "cert-manager@my-project.iam.gserviceaccount.com"
	ServiceAccountEmail *v1.StringValueOrRef `protobuf:"bytes,2,opt,name=service_account_email,json=serviceAccountEmail,proto3" json:"service_account_email,omitempty"`
	// Kubernetes namespace of the ServiceAccount running in the cluster.
	KsaNamespace string `protobuf:"bytes,3,opt,name=ksa_namespace,json=ksaNamespace,proto3" json:"ksa_namespace,omitempty"`
	// Name of the Kubernetes ServiceAccount.
	KsaName       string `protobuf:"bytes,4,opt,name=ksa_name,json=ksaName,proto3" json:"ksa_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpGkeWorkloadIdentityBindingSpec) Reset() {
	*x = GcpGkeWorkloadIdentityBindingSpec{}
	mi := &file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpGkeWorkloadIdentityBindingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpGkeWorkloadIdentityBindingSpec) ProtoMessage() {}

func (x *GcpGkeWorkloadIdentityBindingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpGkeWorkloadIdentityBindingSpec.ProtoReflect.Descriptor instead.
func (*GcpGkeWorkloadIdentityBindingSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcpGkeWorkloadIdentityBindingSpec) GetProjectId() *v1.StringValueOrRef {
	if x != nil {
		return x.ProjectId
	}
	return nil
}

func (x *GcpGkeWorkloadIdentityBindingSpec) GetServiceAccountEmail() *v1.StringValueOrRef {
	if x != nil {
		return x.ServiceAccountEmail
	}
	return nil
}

func (x *GcpGkeWorkloadIdentityBindingSpec) GetKsaNamespace() string {
	if x != nil {
		return x.KsaNamespace
	}
	return ""
}

func (x *GcpGkeWorkloadIdentityBindingSpec) GetKsaName() string {
	if x != nil {
		return x.KsaName
	}
	return ""
}

var File_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Hproject/planton/provider/gcp/gcpgkeworkloadidentitybinding/v1/spec.proto\x12=project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\x86\x03\n" +
	"!GcpGkeWorkloadIdentityBindingSpec\x12\x7f\n" +
	"\n" +
	"project_id\x18\x01 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB(\xbaH\x03\xc8\x01\x01\x88\xd4a\xe3\x04\x92\xd4a\x19status.outputs.project_idR\tprojectId\x12\x8f\x01\n" +
	"\x15service_account_email\x18\x02 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB#\xbaH\x03\xc8\x01\x01\x88\xd4a\xe9\x04\x92\xd4a\x14status.outputs.emailR\x13serviceAccountEmail\x12+\n" +
	"\rksa_namespace\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\fksaNamespace\x12!\n" +
	"\bksa_name\x18\x04 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\aksaNameB\xf9\x03\n" +
	"Acom.project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1B\tSpecProtoP\x01Z\x8d\x01github.com/project-planton/project-planton/apis/project/planton/provider/gcp/gcpgkeworkloadidentitybinding/v1;gcpgkeworkloadidentitybindingv1\xa2\x02\x05PPPGG\xaa\x02=Project.Planton.Provider.Gcp.Gcpgkeworkloadidentitybinding.V1\xca\x02=Project\\Planton\\Provider\\Gcp\\Gcpgkeworkloadidentitybinding\\V1\xe2\x02IProject\\Planton\\Provider\\Gcp\\Gcpgkeworkloadidentitybinding\\V1\\GPBMetadata\xea\x02BProject::Planton::Provider::Gcp::Gcpgkeworkloadidentitybinding::V1b\x06proto3"

var (
	file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_goTypes = []any{
	(*GcpGkeWorkloadIdentityBindingSpec)(nil), // 0: project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1.GcpGkeWorkloadIdentityBindingSpec
	(*v1.StringValueOrRef)(nil),               // 1: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1.GcpGkeWorkloadIdentityBindingSpec.project_id:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	1, // 1: project.planton.provider.gcp.gcpgkeworkloadidentitybinding.v1.GcpGkeWorkloadIdentityBindingSpec.service_account_email:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDesc), len(file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcpgkeworkloadidentitybinding_v1_spec_proto_depIdxs = nil
}
