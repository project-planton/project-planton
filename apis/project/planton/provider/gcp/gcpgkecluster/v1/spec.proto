syntax = "proto3";

package project.planton.provider.gcp.gcpgkecluster.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/options/options.proto";

// **GcpGkeClusterSpec** defines the specifications for a Google Kubernetes Engine (GKE) cluster.
// This message includes necessary parameters to create and manage a GKE cluster within a specified GCP project.
// It covers details like project IDs, region, zone, networking configurations, logging options, autoscaling settings,
// node pools, Kubernetes addons, and ingress DNS domains.
message GcpGkeClusterSpec {
  // The GCP project ID in which the GKE cluster will be created.
  string cluster_project_id = 1 [
    (buf.validate.field).required = true
  ];

  // The GCP region where the GKE cluster will be created.
  // **Warning:** The GKE cluster will be recreated if this value is updated.
  // Refer to: https://cloud.google.com/compute/docs/regions-zones
  string region = 2 [
    (project.planton.shared.options.default) = "us-central1"
  ];

  // The GCP zone where the GKE cluster will be created.
  // Refer to: https://cloud.google.com/compute/docs/regions-zones
  string zone = 3 [
    (project.planton.shared.options.default) = "us-central1-a"
  ];

  GcpGkeClusterSharedVpcConfig shared_vpc_config = 4;

  // A flag to toggle workload logs for the GKE cluster environment.
  // When enabled, logs from Kubernetes pods will be sent to Google Cloud Logging.
  // **Warning:** Enabling log forwarding may increase cloud bills depending on the log volume.
  bool is_workload_logs_enabled = 5;

  // Configuration for cluster autoscaling.
  GcpGkeClusterAutoscalingConfig cluster_autoscaling_config = 6;

  // A list of node pools for the GKE cluster.
  repeated GcpGkeClusterNodePool node_pools = 7;
}

// **GcpGkeClusterSharedVpcConfig** specifies the shared VPC network settings for GKE clusters.
// This message includes the project ID for the shared VPC network where the GKE cluster is created.
// For more details, visit: https://cloud.google.com/kubernetes-engine/docs/how-to/cluster-shared-vpc
message GcpGkeClusterSharedVpcConfig {
  // A flag indicating whether the cluster should be created in a shared VPC network.
  // **Warning:** The GKE cluster will be recreated if this is updated.
  bool is_enabled = 1;

  // The GCP project ID in which the GKE cluster will be created.
  option (buf.validate.message).cel = {
    id: "spec.shared_vpc_config.vpc_project_id.required",
    expression: "this.is_enabled && size(this.vpc_project_id) == 0"
        "? 'VPC Project Id is required to setup shared-vpc'"
        ": ''"
  };
  string vpc_project_id = 2 [
    (buf.validate.field).required = true
  ];
}

// **GcpGkeClusterAutoscalingConfig** specifies the autoscaling settings for GKE clusters.
// For more details, visit: https://cloud.google.com/kubernetes-engine/docs/how-to/node-auto-provisioning
message GcpGkeClusterAutoscalingConfig {
  // A flag to enable or disable autoscaling of Kubernetes worker nodes.
  // When set to true, the cluster will automatically scale up or down based on resource requirements.
  bool is_enabled = 1;

  // The minimum number of CPU cores the cluster can scale down to when autoscaling is enabled.
  // This is the total number of CPU cores across all nodes in the cluster.
  int64 cpu_min_cores = 2;

  // The maximum number of CPU cores the cluster can scale up to when autoscaling is enabled.
  // This is the total number of CPU cores across all nodes in the cluster.
  int64 cpu_max_cores = 3;

  // The minimum amount of memory in gigabytes (GB) the cluster can scale down to when autoscaling is enabled.
  // This is the total memory across all nodes in the cluster.
  int64 memory_min_gb = 4;

  // The maximum amount of memory in gigabytes (GB) the cluster can scale up to when autoscaling is enabled.
  // This is the total memory across all nodes in the cluster.
  int64 memory_max_gb = 5;
}

// **GcpGkeClusterNodePool** defines a node pool within the GKE cluster.
message GcpGkeClusterNodePool {
  // The name of the node pool.
  // This name is added as a label to the node pool and can be used to schedule workloads.
  string name = 1 [
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 25,
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Only alphanumeric characters (A-Z, a-z, 0-9) and hyphens are allowed",
      expression: "this.matches('^[A-Za-z0-9-]+$')"
    },
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Must not start with a hyphen",
      expression: "this.matches('^[^-].*$')"
    },
    (buf.validate.field).cel = {
      id: "gcp.node_pool.name",
      message: "Must not end with a hyphen",
      expression: "this.matches('[^-]$')"
    }
  ];

  // The machine type for the node pool (e.g., 'n2-custom-8-16234').
  string machine_type = 2 [
    (buf.validate.field).required = true
  ];

  // The minimum number of nodes in the node pool. Defaults to 1.
  int32 min_node_count = 3;

  // The maximum number of nodes in the node pool. Defaults to 1.
  int32 max_node_count = 4;

  // A flag to enable spot instances on the node pool. Defaults to false.
  bool is_spot_enabled = 5;
}
