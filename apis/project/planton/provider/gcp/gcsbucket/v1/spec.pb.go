// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/provider/gcp/gcsbucket/v1/spec.proto

package gcsbucketv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **GcsBucketSpec** defines the configuration for creating a Google Cloud Storage (GCS) bucket.
// This message specifies the parameters required to create and manage a GCS bucket within a specified GCP project
// and region.
// By setting properties such as the project ID, region, and access control, you can configure the bucket to store
// and serve data
// with the desired accessibility, whether it's public or private, catering to your application's needs.
type GcsBucketSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the GCP project where the storage bucket will be created.
	GcpProjectId string `protobuf:"bytes,1,opt,name=gcp_project_id,json=gcpProjectId,proto3" json:"gcp_project_id,omitempty"`
	// The GCP region where the storage bucket will be created.
	GcpRegion string `protobuf:"bytes,2,opt,name=gcp_region,json=gcpRegion,proto3" json:"gcp_region,omitempty"`
	// A flag indicating whether the GCS bucket should have external (public) access.
	// Defaults to `false`, meaning the bucket is private by default.
	IsPublic bool `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
}

func (x *GcsBucketSpec) Reset() {
	*x = GcsBucketSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GcsBucketSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcsBucketSpec) ProtoMessage() {}

func (x *GcsBucketSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcsBucketSpec.ProtoReflect.Descriptor instead.
func (*GcsBucketSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *GcsBucketSpec) GetGcpProjectId() string {
	if x != nil {
		return x.GcpProjectId
	}
	return ""
}

func (x *GcsBucketSpec) GetGcpRegion() string {
	if x != nil {
		return x.GcpRegion
	}
	return ""
}

func (x *GcsBucketSpec) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

var File_project_planton_provider_gcp_gcsbucket_v1_spec_proto protoreflect.FileDescriptor

var file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDesc = []byte{
	0x0a, 0x34, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x63, 0x70, 0x2f, 0x67,
	0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x67, 0x63, 0x70, 0x2e, 0x67, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81,
	0x01, 0x0a, 0x0d, 0x47, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x2c, 0x0a, 0x0e, 0x67, 0x63, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0c, 0x67, 0x63, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0a, 0x67, 0x63, 0x70, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x09, 0x67, 0x63, 0x70, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x42, 0xec, 0x02, 0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x67, 0x63, 0x70, 0x2e, 0x67, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x53, 0x70, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x65, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x63, 0x70, 0x2f,
	0x67, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x63, 0x73,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x50, 0x50, 0x50, 0x47, 0x47,
	0xaa, 0x02, 0x29, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x63, 0x70, 0x2e,
	0x47, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x29, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x47, 0x63, 0x70, 0x5c, 0x47, 0x63, 0x73, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x35, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5c, 0x47, 0x63, 0x70, 0x5c, 0x47, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x47,
	0x63, 0x70, 0x3a, 0x3a, 0x47, 0x63, 0x73, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescData = file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDesc
)

func file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescData)
	})
	return file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDescData
}

var file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_goTypes = []any{
	(*GcsBucketSpec)(nil), // 0: project.planton.provider.gcp.gcsbucket.v1.GcsBucketSpec
}
var file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_init() }
func file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_init() {
	if File_project_planton_provider_gcp_gcsbucket_v1_spec_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GcsBucketSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_gcp_gcsbucket_v1_spec_proto = out.File
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_rawDesc = nil
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_goTypes = nil
	file_project_planton_provider_gcp_gcsbucket_v1_spec_proto_depIdxs = nil
}
