// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceandatabasecluster/v1/stack_outputs.proto

package digitaloceandatabaseclusterv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DigitalOceanDatabaseClusterStackOutputs captures the key outputs after provisioning a DigitalOcean database cluster.
type DigitalOceanDatabaseClusterStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier (UUID) of the created database cluster.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The full connection URI for the database cluster (including credentials and database name).
	ConnectionUri string `protobuf:"bytes,2,opt,name=connection_uri,json=connectionUri,proto3" json:"connection_uri,omitempty"`
	// The hostname or IP address at which the database cluster is accessible.
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	// The network port that the database cluster is listening on.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// The username for the cluster’s default database user.
	DatabaseUser string `protobuf:"bytes,5,opt,name=database_user,json=databaseUser,proto3" json:"database_user,omitempty"`
	// The password for the cluster’s default database user.
	DatabasePassword string `protobuf:"bytes,6,opt,name=database_password,json=databasePassword,proto3" json:"database_password,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DigitalOceanDatabaseClusterStackOutputs) Reset() {
	*x = DigitalOceanDatabaseClusterStackOutputs{}
	mi := &file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanDatabaseClusterStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanDatabaseClusterStackOutputs) ProtoMessage() {}

func (x *DigitalOceanDatabaseClusterStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanDatabaseClusterStackOutputs.ProtoReflect.Descriptor instead.
func (*DigitalOceanDatabaseClusterStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetConnectionUri() string {
	if x != nil {
		return x.ConnectionUri
	}
	return ""
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetDatabaseUser() string {
	if x != nil {
		return x.DatabaseUser
	}
	return ""
}

func (x *DigitalOceanDatabaseClusterStackOutputs) GetDatabasePassword() string {
	if x != nil {
		return x.DatabasePassword
	}
	return ""
}

var File_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Xproject/planton/provider/digitalocean/digitaloceandatabasecluster/v1/stack_outputs.proto\x12Dproject.planton.provider.digitalocean.digitaloceandatabasecluster.v1\"\xe9\x01\n" +
	"'DigitalOceanDatabaseClusterStackOutputs\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12%\n" +
	"\x0econnection_uri\x18\x02 \x01(\tR\rconnectionUri\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x04 \x01(\rR\x04port\x12#\n" +
	"\rdatabase_user\x18\x05 \x01(\tR\fdatabaseUser\x12+\n" +
	"\x11database_password\x18\x06 \x01(\tR\x10databasePasswordB\xa9\x04\n" +
	"Hcom.project.planton.provider.digitalocean.digitaloceandatabasecluster.v1B\x11StackOutputsProtoP\x01Z\x92\x01github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceandatabasecluster/v1;digitaloceandatabaseclusterv1\xa2\x02\x05PPPDD\xaa\x02DProject.Planton.Provider.Digitalocean.Digitaloceandatabasecluster.V1\xca\x02DProject\\Planton\\Provider\\Digitalocean\\Digitaloceandatabasecluster\\V1\xe2\x02PProject\\Planton\\Provider\\Digitalocean\\Digitaloceandatabasecluster\\V1\\GPBMetadata\xea\x02IProject::Planton::Provider::Digitalocean::Digitaloceandatabasecluster::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_goTypes = []any{
	(*DigitalOceanDatabaseClusterStackOutputs)(nil), // 0: project.planton.provider.digitalocean.digitaloceandatabasecluster.v1.DigitalOceanDatabaseClusterStackOutputs
}
var file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_init()
}
func file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceandatabasecluster_v1_stack_outputs_proto_depIdxs = nil
}
