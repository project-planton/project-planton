// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceanvpc/v1/api.proto

package digitaloceanvpcv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	shared "github.com/project-planton/project-planton/apis/project/planton/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// digital-ocean-vpc
type DigitalOceanVpc struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// api-version
	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// resource-kind
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// metadata
	Metadata *shared.ApiResourceMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec
	Spec *DigitalOceanVpcSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	// status
	Status        *DigitalOceanVpcStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalOceanVpc) Reset() {
	*x = DigitalOceanVpc{}
	mi := &file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanVpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanVpc) ProtoMessage() {}

func (x *DigitalOceanVpc) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanVpc.ProtoReflect.Descriptor instead.
func (*DigitalOceanVpc) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanVpc) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *DigitalOceanVpc) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DigitalOceanVpc) GetMetadata() *shared.ApiResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DigitalOceanVpc) GetSpec() *DigitalOceanVpcSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DigitalOceanVpc) GetStatus() *DigitalOceanVpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// digital-ocean-vpc status
type DigitalOceanVpcStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stack-outputs
	//
	//	digital-ocean-vpc stack-outputs
	Outputs       *DigitalOceanVpcStackOutputs `protobuf:"bytes,1,opt,name=outputs,proto3" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalOceanVpcStatus) Reset() {
	*x = DigitalOceanVpcStatus{}
	mi := &file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanVpcStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanVpcStatus) ProtoMessage() {}

func (x *DigitalOceanVpcStatus) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanVpcStatus.ProtoReflect.Descriptor instead.
func (*DigitalOceanVpcStatus) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *DigitalOceanVpcStatus) GetOutputs() *DigitalOceanVpcStackOutputs {
	if x != nil {
		return x.Outputs
	}
	return nil
}

var File_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDesc = "" +
	"\n" +
	"Bproject/planton/provider/digitalocean/digitaloceanvpc/v1/api.proto\x128project.planton.provider.digitalocean.digitaloceanvpc.v1\x1a\x1bbuf/validate/validate.proto\x1aCproject/planton/provider/digitalocean/digitaloceanvpc/v1/spec.proto\x1aLproject/planton/provider/digitalocean/digitaloceanvpc/v1/stack_outputs.proto\x1a%project/planton/shared/metadata.proto\x1a#project/planton/shared/status.proto\"\xb0\x03\n" +
	"\x0fDigitalOceanVpc\x12L\n" +
	"\vapi_version\x18\x01 \x01(\tB+\xbaH(r&\n" +
	"$digital-ocean.project-planton.org/v1R\n" +
	"apiVersion\x12*\n" +
	"\x04kind\x18\x02 \x01(\tB\x16\xbaH\x13r\x11\n" +
	"\x0fDigitalOceanVpcR\x04kind\x12O\n" +
	"\bmetadata\x18\x03 \x01(\v2+.project.planton.shared.ApiResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12i\n" +
	"\x04spec\x18\x04 \x01(\v2M.project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12g\n" +
	"\x06status\x18\x05 \x01(\v2O.project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStatusR\x06status\"\x88\x01\n" +
	"\x15DigitalOceanVpcStatus\x12o\n" +
	"\aoutputs\x18\x01 \x01(\v2U.project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStackOutputsR\aoutputsB\xcb\x03\n" +
	"<com.project.planton.provider.digitalocean.digitaloceanvpc.v1B\bApiProtoP\x01Zzgithub.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanvpc/v1;digitaloceanvpcv1\xa2\x02\x05PPPDD\xaa\x028Project.Planton.Provider.Digitalocean.Digitaloceanvpc.V1\xca\x028Project\\Planton\\Provider\\Digitalocean\\Digitaloceanvpc\\V1\xe2\x02DProject\\Planton\\Provider\\Digitalocean\\Digitaloceanvpc\\V1\\GPBMetadata\xea\x02=Project::Planton::Provider::Digitalocean::Digitaloceanvpc::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_goTypes = []any{
	(*DigitalOceanVpc)(nil),             // 0: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpc
	(*DigitalOceanVpcStatus)(nil),       // 1: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStatus
	(*shared.ApiResourceMetadata)(nil),  // 2: project.planton.shared.ApiResourceMetadata
	(*DigitalOceanVpcSpec)(nil),         // 3: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcSpec
	(*DigitalOceanVpcStackOutputs)(nil), // 4: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStackOutputs
}
var file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpc.metadata:type_name -> project.planton.shared.ApiResourceMetadata
	3, // 1: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpc.spec:type_name -> project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcSpec
	1, // 2: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpc.status:type_name -> project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStatus
	4, // 3: project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStatus.outputs:type_name -> project.planton.provider.digitalocean.digitaloceanvpc.v1.DigitalOceanVpcStackOutputs
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_init() }
func file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto != nil {
		return
	}
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_spec_proto_init()
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_stack_outputs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceanvpc_v1_api_proto_depIdxs = nil
}
