// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceandnszone/v1/stack_input.proto

package digitaloceandnszonev1

import (
	digitalocean "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// digital-ocean-dns-zone stack-input
type DigitalOceanDnsZoneStackInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// target cloud-resource
	Target *DigitalOceanDnsZone `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// provider-config
	ProviderConfig *digitalocean.DigitalOceanProviderConfig `protobuf:"bytes,2,opt,name=provider_config,json=providerConfig,proto3" json:"provider_config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DigitalOceanDnsZoneStackInput) Reset() {
	*x = DigitalOceanDnsZoneStackInput{}
	mi := &file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanDnsZoneStackInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanDnsZoneStackInput) ProtoMessage() {}

func (x *DigitalOceanDnsZoneStackInput) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanDnsZoneStackInput.ProtoReflect.Descriptor instead.
func (*DigitalOceanDnsZoneStackInput) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanDnsZoneStackInput) GetTarget() *DigitalOceanDnsZone {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *DigitalOceanDnsZoneStackInput) GetProviderConfig() *digitalocean.DigitalOceanProviderConfig {
	if x != nil {
		return x.ProviderConfig
	}
	return nil
}

var File_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDesc = "" +
	"\n" +
	"Nproject/planton/provider/digitalocean/digitaloceandnszone/v1/stack_input.proto\x12<project.planton.provider.digitalocean.digitaloceandnszone.v1\x1aFproject/planton/provider/digitalocean/digitaloceandnszone/v1/api.proto\x1a4project/planton/provider/digitalocean/provider.proto\"\xf6\x01\n" +
	"\x1dDigitalOceanDnsZoneStackInput\x12i\n" +
	"\x06target\x18\x01 \x01(\v2Q.project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZoneR\x06target\x12j\n" +
	"\x0fprovider_config\x18\x02 \x01(\v2A.project.planton.provider.digitalocean.DigitalOceanProviderConfigR\x0eproviderConfigB\xef\x03\n" +
	"@com.project.planton.provider.digitalocean.digitaloceandnszone.v1B\x0fStackInputProtoP\x01Z\x82\x01github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceandnszone/v1;digitaloceandnszonev1\xa2\x02\x05PPPDD\xaa\x02<Project.Planton.Provider.Digitalocean.Digitaloceandnszone.V1\xca\x02<Project\\Planton\\Provider\\Digitalocean\\Digitaloceandnszone\\V1\xe2\x02HProject\\Planton\\Provider\\Digitalocean\\Digitaloceandnszone\\V1\\GPBMetadata\xea\x02AProject::Planton::Provider::Digitalocean::Digitaloceandnszone::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_goTypes = []any{
	(*DigitalOceanDnsZoneStackInput)(nil),           // 0: project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZoneStackInput
	(*DigitalOceanDnsZone)(nil),                     // 1: project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZone
	(*digitalocean.DigitalOceanProviderConfig)(nil), // 2: project.planton.provider.digitalocean.DigitalOceanProviderConfig
}
var file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZoneStackInput.target:type_name -> project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZone
	2, // 1: project.planton.provider.digitalocean.digitaloceandnszone.v1.DigitalOceanDnsZoneStackInput.provider_config:type_name -> project.planton.provider.digitalocean.DigitalOceanProviderConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_init()
}
func file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto != nil {
		return
	}
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_api_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceandnszone_v1_stack_input_proto_depIdxs = nil
}
