syntax = "proto3";

package project.planton.provider.digitalocean.digitaloceanfirewall.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";
import "project/planton/provider/digitalocean/region.proto";

// DigitalOceanFirewallSpec defines the user configuration for a DigitalOcean Droplet (VM).
message DigitalOceanFirewallSpec {
  string name = 1;  // Name of the firewall for identification (must be unique per account/project).

  // Inbound rules: traffic allowed *to* Droplets on specific ports from specified sources.
  repeated DigitalOceanFirewallInboundRule inbound_rules = 2;

  // Outbound rules: traffic allowed *from* Droplets on specific ports to specified destinations.
  repeated DigitalOceanFirewallOutboundRule outbound_rules = 3;

  // The Droplet IDs to which this firewall is applied (max 10).
  // These Droplets will have the firewall's rules enforced.
  repeated int64 droplet_ids = 4;

  // The names of Droplet tags to which this firewall is applied (max 5).
  // Any Droplet with these tags will be protected by this firewall.
  repeated string tags = 5;
}

// Definition of an inbound (ingress) firewall rule.
message DigitalOceanFirewallInboundRule {
  string protocol = 1;    // "tcp", "udp", or "icmp". Required.
  string port_range = 2;  // Ports to allow (e.g., "80", "8000-9000", or "1-65535"; empty or "1-65535" means all ports for tcp/udp).

  // Allowed traffic sources (at least one of these fields should be non-empty):
  repeated string source_addresses = 3;       // IPv4 or IPv6 addresses or CIDR ranges (e.g., "192.0.2.0/24", "0.0.0.0/0").
  repeated int64  source_droplet_ids = 4;     // IDs of Droplets from which traffic is allowed.
  repeated string source_tags = 5;            // Names of Droplet tags; any Droplet with these tags is allowed.
  repeated string source_kubernetes_ids = 6;  // IDs of Kubernetes clusters from which traffic is allowed.
  repeated string source_load_balancer_uids = 7;  // IDs of Load Balancers from which traffic is allowed.
}

// Definition of an outbound (egress) firewall rule.
message DigitalOceanFirewallOutboundRule {
  string protocol = 1;    // "tcp", "udp", or "icmp". Required.
  string port_range = 2;  // Ports to allow (format as in inbound rules; required for tcp/udp).

  // Allowed traffic destinations (at least one must be set):
  repeated string destination_addresses = 3;       // IPv4/IPv6 addresses or CIDRs to which traffic is allowed.
  repeated int64  destination_droplet_ids = 4;     // IDs of Droplets to which traffic is allowed.
  repeated string destination_tags = 5;            // Names of Droplet tags whose members are allowed destinations.
  repeated string destination_kubernetes_ids = 6;  // IDs of Kubernetes clusters to which traffic is allowed.
  repeated string destination_load_balancer_uids = 7;  // IDs of Load Balancers which are allowed as destinations.
}
