// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceanbucket/v1/spec.proto

package digitaloceanbucketv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	digitalocean "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported access control settings for a bucket.
type DigitalOceanBucketAccessControl int32

const (
	DigitalOceanBucketAccessControl_PRIVATE     DigitalOceanBucketAccessControl = 0
	DigitalOceanBucketAccessControl_PUBLIC_READ DigitalOceanBucketAccessControl = 1
)

// Enum value maps for DigitalOceanBucketAccessControl.
var (
	DigitalOceanBucketAccessControl_name = map[int32]string{
		0: "PRIVATE",
		1: "PUBLIC_READ",
	}
	DigitalOceanBucketAccessControl_value = map[string]int32{
		"PRIVATE":     0,
		"PUBLIC_READ": 1,
	}
)

func (x DigitalOceanBucketAccessControl) Enum() *DigitalOceanBucketAccessControl {
	p := new(DigitalOceanBucketAccessControl)
	*p = x
	return p
}

func (x DigitalOceanBucketAccessControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DigitalOceanBucketAccessControl) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_enumTypes[0].Descriptor()
}

func (DigitalOceanBucketAccessControl) Type() protoreflect.EnumType {
	return &file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_enumTypes[0]
}

func (x DigitalOceanBucketAccessControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DigitalOceanBucketAccessControl.Descriptor instead.
func (DigitalOceanBucketAccessControl) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescGZIP(), []int{0}
}

// DigitalOceanBucketSpec defines the user configuration for a DigitalOcean Spaces bucket.
type DigitalOceanBucketSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// bucket name (DNS-compatible, 3â€“63 chars)
	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	// region slug (datacenter location for the bucket)
	Region digitalocean.DigitalOceanRegion `protobuf:"varint,2,opt,name=region,proto3,enum=project.planton.provider.digitalocean.DigitalOceanRegion" json:"region,omitempty"`
	// access control setting for the bucket (private or public-read)
	AccessControl DigitalOceanBucketAccessControl `protobuf:"varint,3,opt,name=access_control,json=accessControl,proto3,enum=project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketAccessControl" json:"access_control,omitempty"`
	// enable versioning for the bucket (disabled by default)
	VersioningEnabled bool `protobuf:"varint,4,opt,name=versioning_enabled,json=versioningEnabled,proto3" json:"versioning_enabled,omitempty"`
	// tags to apply to the bucket (must be unique)
	Tags          []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalOceanBucketSpec) Reset() {
	*x = DigitalOceanBucketSpec{}
	mi := &file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanBucketSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanBucketSpec) ProtoMessage() {}

func (x *DigitalOceanBucketSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanBucketSpec.ProtoReflect.Descriptor instead.
func (*DigitalOceanBucketSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanBucketSpec) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *DigitalOceanBucketSpec) GetRegion() digitalocean.DigitalOceanRegion {
	if x != nil {
		return x.Region
	}
	return digitalocean.DigitalOceanRegion(0)
}

func (x *DigitalOceanBucketSpec) GetAccessControl() DigitalOceanBucketAccessControl {
	if x != nil {
		return x.AccessControl
	}
	return DigitalOceanBucketAccessControl_PRIVATE
}

func (x *DigitalOceanBucketSpec) GetVersioningEnabled() bool {
	if x != nil {
		return x.VersioningEnabled
	}
	return false
}

func (x *DigitalOceanBucketSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Fproject/planton/provider/digitalocean/digitaloceanbucket/v1/spec.proto\x12;project.planton.provider.digitalocean.digitaloceanbucket.v1\x1a\x1bbuf/validate/validate.proto\x1a,project/planton/shared/options/options.proto\x1a2project/planton/provider/digitalocean/region.proto\"\x96\x03\n" +
	"\x16DigitalOceanBucketSpec\x12N\n" +
	"\vbucket_name\x18\x01 \x01(\tB-\xbaH*\xc8\x01\x01r%\x10\x03\x18?2\x1f^[a-z0-9]([-a-z0-9]*[a-z0-9])?$R\n" +
	"bucketName\x12Y\n" +
	"\x06region\x18\x02 \x01(\x0e29.project.planton.provider.digitalocean.DigitalOceanRegionB\x06\xbaH\x03\xc8\x01\x01R\x06region\x12\x83\x01\n" +
	"\x0eaccess_control\x18\x03 \x01(\x0e2\\.project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketAccessControlR\raccessControl\x12-\n" +
	"\x12versioning_enabled\x18\x04 \x01(\bR\x11versioningEnabled\x12\x1c\n" +
	"\x04tags\x18\x05 \x03(\tB\b\xbaH\x05\x92\x01\x02\x18\x01R\x04tags*?\n" +
	"\x1fDigitalOceanBucketAccessControl\x12\v\n" +
	"\aPRIVATE\x10\x00\x12\x0f\n" +
	"\vPUBLIC_READ\x10\x01B\xe2\x03\n" +
	"?com.project.planton.provider.digitalocean.digitaloceanbucket.v1B\tSpecProtoP\x01Z\x80\x01github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanbucket/v1;digitaloceanbucketv1\xa2\x02\x05PPPDD\xaa\x02;Project.Planton.Provider.Digitalocean.Digitaloceanbucket.V1\xca\x02;Project\\Planton\\Provider\\Digitalocean\\Digitaloceanbucket\\V1\xe2\x02GProject\\Planton\\Provider\\Digitalocean\\Digitaloceanbucket\\V1\\GPBMetadata\xea\x02@Project::Planton::Provider::Digitalocean::Digitaloceanbucket::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_goTypes = []any{
	(DigitalOceanBucketAccessControl)(0), // 0: project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketAccessControl
	(*DigitalOceanBucketSpec)(nil),       // 1: project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketSpec
	(digitalocean.DigitalOceanRegion)(0), // 2: project.planton.provider.digitalocean.DigitalOceanRegion
}
var file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketSpec.region:type_name -> project.planton.provider.digitalocean.DigitalOceanRegion
	0, // 1: project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketSpec.access_control:type_name -> project.planton.provider.digitalocean.digitaloceanbucket.v1.DigitalOceanBucketAccessControl
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_init() }
func file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceanbucket_v1_spec_proto_depIdxs = nil
}
