// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceancontainerregistry/v1/spec.proto

package digitaloceancontainerregistryv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	digitalocean "github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported subscription tiers for a DigitalOcean Container Registry.
type DigitalOceanContainerRegistryTier int32

const (
	DigitalOceanContainerRegistryTier_digitalocean_container_registry_tier_unspecified DigitalOceanContainerRegistryTier = 0
	DigitalOceanContainerRegistryTier_STARTER                                          DigitalOceanContainerRegistryTier = 1 // Free tier, limited storage.
	DigitalOceanContainerRegistryTier_BASIC                                            DigitalOceanContainerRegistryTier = 2 // Paid tier, moderate storage.
	DigitalOceanContainerRegistryTier_PROFESSIONAL                                     DigitalOceanContainerRegistryTier = 3 // Paid tier, highest storage, production ready.
)

// Enum value maps for DigitalOceanContainerRegistryTier.
var (
	DigitalOceanContainerRegistryTier_name = map[int32]string{
		0: "digitalocean_container_registry_tier_unspecified",
		1: "STARTER",
		2: "BASIC",
		3: "PROFESSIONAL",
	}
	DigitalOceanContainerRegistryTier_value = map[string]int32{
		"digitalocean_container_registry_tier_unspecified": 0,
		"STARTER":      1,
		"BASIC":        2,
		"PROFESSIONAL": 3,
	}
)

func (x DigitalOceanContainerRegistryTier) Enum() *DigitalOceanContainerRegistryTier {
	p := new(DigitalOceanContainerRegistryTier)
	*p = x
	return p
}

func (x DigitalOceanContainerRegistryTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DigitalOceanContainerRegistryTier) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_enumTypes[0].Descriptor()
}

func (DigitalOceanContainerRegistryTier) Type() protoreflect.EnumType {
	return &file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_enumTypes[0]
}

func (x DigitalOceanContainerRegistryTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DigitalOceanContainerRegistryTier.Descriptor instead.
func (DigitalOceanContainerRegistryTier) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescGZIP(), []int{0}
}

// **DigitalOceanContainerRegistrySpec** defines the configuration for creating a DigitalOcean
// Container Registry (DOCR). It exposes only the essential fields needed for the common 80 % use case.
type DigitalOceanContainerRegistrySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Registry name (must be unique within your DigitalOcean account).
	// 1-63 characters, lowercase letters, numbers, and hyphens; must start and end with an alphanumeric.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Subscription tier slug (defines storage limits and pricing).
	SubscriptionTier DigitalOceanContainerRegistryTier `protobuf:"varint,2,opt,name=subscription_tier,json=subscriptionTier,proto3,enum=project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistryTier" json:"subscription_tier,omitempty"`
	// Optional region slug where registry data is stored (e.g., "nyc3", "sfo3").
	// If omitted, DigitalOcean chooses a default/nearest region.
	Region digitalocean.DigitalOceanRegion `protobuf:"varint,3,opt,name=region,proto3,enum=project.planton.provider.digitalocean.DigitalOceanRegion" json:"region,omitempty"`
	// Enable garbage collection of untagged images.
	// Default is false (no automatic GC).
	GarbageCollectionEnabled bool `protobuf:"varint,4,opt,name=garbage_collection_enabled,json=garbageCollectionEnabled,proto3" json:"garbage_collection_enabled,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DigitalOceanContainerRegistrySpec) Reset() {
	*x = DigitalOceanContainerRegistrySpec{}
	mi := &file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanContainerRegistrySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanContainerRegistrySpec) ProtoMessage() {}

func (x *DigitalOceanContainerRegistrySpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanContainerRegistrySpec.ProtoReflect.Descriptor instead.
func (*DigitalOceanContainerRegistrySpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanContainerRegistrySpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DigitalOceanContainerRegistrySpec) GetSubscriptionTier() DigitalOceanContainerRegistryTier {
	if x != nil {
		return x.SubscriptionTier
	}
	return DigitalOceanContainerRegistryTier_digitalocean_container_registry_tier_unspecified
}

func (x *DigitalOceanContainerRegistrySpec) GetRegion() digitalocean.DigitalOceanRegion {
	if x != nil {
		return x.Region
	}
	return digitalocean.DigitalOceanRegion(0)
}

func (x *DigitalOceanContainerRegistrySpec) GetGarbageCollectionEnabled() bool {
	if x != nil {
		return x.GarbageCollectionEnabled
	}
	return false
}

var File_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Qproject/planton/provider/digitalocean/digitaloceancontainerregistry/v1/spec.proto\x12Fproject.planton.provider.digitalocean.digitaloceancontainerregistry.v1\x1a\x1bbuf/validate/validate.proto\x1a2project/planton/provider/digitalocean/region.proto\"\xa0\x03\n" +
	"!DigitalOceanContainerRegistrySpec\x12A\n" +
	"\x04name\x18\x01 \x01(\tB-\xbaH*\xc8\x01\x01r%\x10\x01\x18?2\x1f^[a-z0-9]([-a-z0-9]*[a-z0-9])?$R\x04name\x12\x9e\x01\n" +
	"\x11subscription_tier\x18\x02 \x01(\x0e2i.project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistryTierB\x06\xbaH\x03\xc8\x01\x01R\x10subscriptionTier\x12Y\n" +
	"\x06region\x18\x03 \x01(\x0e29.project.planton.provider.digitalocean.DigitalOceanRegionB\x06\xbaH\x03\xc8\x01\x01R\x06region\x12<\n" +
	"\x1agarbage_collection_enabled\x18\x04 \x01(\bR\x18garbageCollectionEnabled*\x83\x01\n" +
	"!DigitalOceanContainerRegistryTier\x124\n" +
	"0digitalocean_container_registry_tier_unspecified\x10\x00\x12\v\n" +
	"\aSTARTER\x10\x01\x12\t\n" +
	"\x05BASIC\x10\x02\x12\x10\n" +
	"\fPROFESSIONAL\x10\x03B\xaf\x04\n" +
	"Jcom.project.planton.provider.digitalocean.digitaloceancontainerregistry.v1B\tSpecProtoP\x01Z\x96\x01github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceancontainerregistry/v1;digitaloceancontainerregistryv1\xa2\x02\x05PPPDD\xaa\x02FProject.Planton.Provider.Digitalocean.Digitaloceancontainerregistry.V1\xca\x02FProject\\Planton\\Provider\\Digitalocean\\Digitaloceancontainerregistry\\V1\xe2\x02RProject\\Planton\\Provider\\Digitalocean\\Digitaloceancontainerregistry\\V1\\GPBMetadata\xea\x02KProject::Planton::Provider::Digitalocean::Digitaloceancontainerregistry::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_goTypes = []any{
	(DigitalOceanContainerRegistryTier)(0),    // 0: project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistryTier
	(*DigitalOceanContainerRegistrySpec)(nil), // 1: project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistrySpec
	(digitalocean.DigitalOceanRegion)(0),      // 2: project.planton.provider.digitalocean.DigitalOceanRegion
}
var file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_depIdxs = []int32{
	0, // 0: project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistrySpec.subscription_tier:type_name -> project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistryTier
	2, // 1: project.planton.provider.digitalocean.digitaloceancontainerregistry.v1.DigitalOceanContainerRegistrySpec.region:type_name -> project.planton.provider.digitalocean.DigitalOceanRegion
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_init()
}
func file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceancontainerregistry_v1_spec_proto_depIdxs = nil
}
