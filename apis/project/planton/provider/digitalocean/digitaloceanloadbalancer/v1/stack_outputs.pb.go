// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/digitalocean/digitaloceanloadbalancer/v1/stack_outputs.proto

package digitaloceanloadbalancerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DigitalOceanLoadBalancerStackOutputs captures the resulting Droplet info after provisioning.
type DigitalOceanLoadBalancerStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// droplet unique identifier (DigitalOcean ID)
	DropletId string `protobuf:"bytes,1,opt,name=droplet_id,json=dropletId,proto3" json:"droplet_id,omitempty"`
	// primary IPv4 address (public if available, otherwise private)
	Ipv4Address string `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	// IPv6 address (if IPv6 was enabled)
	Ipv6Address string `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	// image ID of the dropletâ€™s base image
	ImageId int64 `protobuf:"varint,6,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// VPC network UUID in which the droplet resides
	VpcUuid       string `protobuf:"bytes,7,opt,name=vpc_uuid,json=vpcUuid,proto3" json:"vpc_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalOceanLoadBalancerStackOutputs) Reset() {
	*x = DigitalOceanLoadBalancerStackOutputs{}
	mi := &file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalOceanLoadBalancerStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalOceanLoadBalancerStackOutputs) ProtoMessage() {}

func (x *DigitalOceanLoadBalancerStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalOceanLoadBalancerStackOutputs.ProtoReflect.Descriptor instead.
func (*DigitalOceanLoadBalancerStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *DigitalOceanLoadBalancerStackOutputs) GetDropletId() string {
	if x != nil {
		return x.DropletId
	}
	return ""
}

func (x *DigitalOceanLoadBalancerStackOutputs) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *DigitalOceanLoadBalancerStackOutputs) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *DigitalOceanLoadBalancerStackOutputs) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *DigitalOceanLoadBalancerStackOutputs) GetVpcUuid() string {
	if x != nil {
		return x.VpcUuid
	}
	return ""
}

var File_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Uproject/planton/provider/digitalocean/digitaloceanloadbalancer/v1/stack_outputs.proto\x12Aproject.planton.provider.digitalocean.digitaloceanloadbalancer.v1\"\xc1\x01\n" +
	"$DigitalOceanLoadBalancerStackOutputs\x12\x1d\n" +
	"\n" +
	"droplet_id\x18\x01 \x01(\tR\tdropletId\x12!\n" +
	"\fipv4_address\x18\x02 \x01(\tR\vipv4Address\x12!\n" +
	"\fipv6_address\x18\x03 \x01(\tR\vipv6Address\x12\x19\n" +
	"\bimage_id\x18\x06 \x01(\x03R\aimageId\x12\x19\n" +
	"\bvpc_uuid\x18\a \x01(\tR\avpcUuidB\x94\x04\n" +
	"Ecom.project.planton.provider.digitalocean.digitaloceanloadbalancer.v1B\x11StackOutputsProtoP\x01Z\x8c\x01github.com/project-planton/project-planton/apis/project/planton/provider/digitalocean/digitaloceanloadbalancer/v1;digitaloceanloadbalancerv1\xa2\x02\x05PPPDD\xaa\x02AProject.Planton.Provider.Digitalocean.Digitaloceanloadbalancer.V1\xca\x02AProject\\Planton\\Provider\\Digitalocean\\Digitaloceanloadbalancer\\V1\xe2\x02MProject\\Planton\\Provider\\Digitalocean\\Digitaloceanloadbalancer\\V1\\GPBMetadata\xea\x02FProject::Planton::Provider::Digitalocean::Digitaloceanloadbalancer::V1b\x06proto3"

var (
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_goTypes = []any{
	(*DigitalOceanLoadBalancerStackOutputs)(nil), // 0: project.planton.provider.digitalocean.digitaloceanloadbalancer.v1.DigitalOceanLoadBalancerStackOutputs
}
var file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_init()
}
func file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto = out.File
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_digitalocean_digitaloceanloadbalancer_v1_stack_outputs_proto_depIdxs = nil
}
