syntax = "proto3";

package project.planton.provider.confluent.confluentkafka.v1;

import "buf/validate/validate.proto";

//confluent-kafka spec
message ConfluentKafkaSpec {
  //cloud provider
  //https://www.pulumi.com/registry/packages/confluentcloud/api-docs/kafkacluster/#cloud_yaml
  string cloud = 1 [
    (buf.validate.field).ignore = IGNORE_DEFAULT,
    (buf.validate.field).string = {
      in: ["AWS", "AZURE", "GCP"]
    }
  ];

  //availability
  //https://www.pulumi.com/registry/packages/confluentcloud/api-docs/kafkacluster/#availability_yaml
  string availability = 2 [
    (buf.validate.field).ignore = IGNORE_DEFAULT,
    (buf.validate.field).string = {
      in: ["SINGLE_ZONE", "MULTI_ZONE", "LOW", "HIGH"]
    }
  ];

  //environment objects represent an isolated namespace for your confluent resources for organizational purposes.
  //https://www.pulumi.com/registry/packages/confluentcloud/api-docs/kafkacluster/#environment_yaml
  string environment = 3;
}
