// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/civo/civovolume/v1/stack_outputs.proto

package civovolumev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CivoVolumeStackOutputs captures the resulting volume information after provisioning.
type CivoVolumeStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier (ID) of the created Civo volume.
	VolumeId string `protobuf:"bytes,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	// The ID of the Civo instance the volume is attached to (if any).
	AttachedInstanceId string `protobuf:"bytes,2,opt,name=attached_instance_id,json=attachedInstanceId,proto3" json:"attached_instance_id,omitempty"`
	// The device path of the volume on the attached instance (if any).
	DevicePath    string `protobuf:"bytes,3,opt,name=device_path,json=devicePath,proto3" json:"device_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CivoVolumeStackOutputs) Reset() {
	*x = CivoVolumeStackOutputs{}
	mi := &file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CivoVolumeStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CivoVolumeStackOutputs) ProtoMessage() {}

func (x *CivoVolumeStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CivoVolumeStackOutputs.ProtoReflect.Descriptor instead.
func (*CivoVolumeStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *CivoVolumeStackOutputs) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *CivoVolumeStackOutputs) GetAttachedInstanceId() string {
	if x != nil {
		return x.AttachedInstanceId
	}
	return ""
}

func (x *CivoVolumeStackOutputs) GetDevicePath() string {
	if x != nil {
		return x.DevicePath
	}
	return ""
}

var File_project_planton_provider_civo_civovolume_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"?project/planton/provider/civo/civovolume/v1/stack_outputs.proto\x12+project.planton.provider.civo.civovolume.v1\"\x88\x01\n" +
	"\x16CivoVolumeStackOutputs\x12\x1b\n" +
	"\tvolume_id\x18\x01 \x01(\tR\bvolumeId\x120\n" +
	"\x14attached_instance_id\x18\x02 \x01(\tR\x12attachedInstanceId\x12\x1f\n" +
	"\vdevice_path\x18\x03 \x01(\tR\n" +
	"devicePathB\x81\x03\n" +
	"/com.project.planton.provider.civo.civovolume.v1B\x11StackOutputsProtoP\x01Zhgithub.com/project-planton/project-planton/apis/project/planton/provider/civo/civovolume/v1;civovolumev1\xa2\x02\x05PPPCC\xaa\x02+Project.Planton.Provider.Civo.Civovolume.V1\xca\x02+Project\\Planton\\Provider\\Civo\\Civovolume\\V1\xe2\x027Project\\Planton\\Provider\\Civo\\Civovolume\\V1\\GPBMetadata\xea\x020Project::Planton::Provider::Civo::Civovolume::V1b\x06proto3"

var (
	file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_goTypes = []any{
	(*CivoVolumeStackOutputs)(nil), // 0: project.planton.provider.civo.civovolume.v1.CivoVolumeStackOutputs
}
var file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_init() }
func file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_civo_civovolume_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_civo_civovolume_v1_stack_outputs_proto = out.File
	file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_civo_civovolume_v1_stack_outputs_proto_depIdxs = nil
}
