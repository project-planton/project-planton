syntax = "proto3";

package project.planton.provider.civo.civovolume.v1;

import "buf/validate/validate.proto";
import "project/planton/provider/civo/region.proto";

// CivoVolumeSpec defines the specification required to create a Civo block storage volume.
// A block storage volume provides expandable storage that can be attached to Civo instances.
// This specification focuses on essential parameters for volume creation, adhering to the 80/20 principle.
message CivoVolumeSpec {
  // The name of the volume. Must be lowercase letters, numbers, and hyphens only,
  // starting with a letter and ending with a letter or number. Maximum 64 characters.
  string volume_name = 1 [
    (buf.validate.field).string.pattern = "^[a-z]([a-z0-9-]*[a-z0-9])?$",
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 64,
    (buf.validate.field).required = true
  ];

  // The Civo region where the volume will be created.
  // Must match the region of any instance that will attach to this volume.
  CivoRegion region = 2 [(buf.validate.field).required = true];

  // The size of the volume in GiB.
  // Constraints: between 1 and 16000 (inclusive).
  uint32 size_gib = 3 [
    (buf.validate.field).uint32.gte = 1,
    (buf.validate.field).uint32.lte = 16000,
    (buf.validate.field).required = true
  ];

  // The initial filesystem to format the volume with.
  // Allowed values: ext4, xfs, or none (no pre-formatting). Default is none.
  CivoVolumeFilesystemType filesystem_type = 4;

  // An optional snapshot ID or reference to create this volume from.
  // If provided, the new volume will be created from the given snapshot (inheriting its region and minimum size).
  string snapshot_id = 5;

  // A list of tags to apply to the volume.
  // Tags must be unique and consist of letters, numbers, colons, dashes, or underscores.
  repeated string tags = 6 [
    (buf.validate.field).repeated.unique = true,
    (buf.validate.field).repeated.items.string.max_len = 64,
    (buf.validate.field).repeated.items.string.pattern = "^[A-Za-z0-9:_-]+$"
  ];
}

// Supported filesystem types for formatting a Civo volume.
enum CivoVolumeFilesystemType {
  NONE = 0; // Do not format the volume (leave unformatted).
  EXT4 = 1; // Format the volume with an ext4 filesystem.
  XFS = 2; // Format the volume with an XFS filesystem.
}
