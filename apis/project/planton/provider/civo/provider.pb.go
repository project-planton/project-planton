// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/civo/provider.proto

package civo

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CivoProviderConfig defines the authentication parameters required
// for interacting with Civo Cloud via infrastructure‑as‑code tools.
// Typical use‑cases include provisioning Kubernetes clusters, compute
// instances, and object stores with Terraform or Pulumi.
type CivoProviderConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The personal access token (PAT) used to authenticate all Civo API
	// requests. Create and manage it at https://dashboard.civo.com/security.
	ApiToken string `protobuf:"bytes,1,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
	// The default region in which resources will be provisioned
	// unless explicitly overridden (e.g. LON1, FRA1, NYC1, PHX1, MUM1).
	DefaultRegion CivoRegion `protobuf:"varint,2,opt,name=default_region,json=defaultRegion,proto3,enum=project.planton.provider.civo.CivoRegion" json:"default_region,omitempty"`
	// Optional Access Key ID for Civo Object Store (S3‑compatible).
	// Required only if your IaC workflow interacts with object storage.
	ObjectStoreAccessId string `protobuf:"bytes,3,opt,name=object_store_access_id,json=objectStoreAccessId,proto3" json:"object_store_access_id,omitempty"`
	// Optional Secret Key for Civo Object Store.
	ObjectStoreSecretKey string `protobuf:"bytes,4,opt,name=object_store_secret_key,json=objectStoreSecretKey,proto3" json:"object_store_secret_key,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CivoProviderConfig) Reset() {
	*x = CivoProviderConfig{}
	mi := &file_project_planton_provider_civo_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CivoProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CivoProviderConfig) ProtoMessage() {}

func (x *CivoProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_civo_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CivoProviderConfig.ProtoReflect.Descriptor instead.
func (*CivoProviderConfig) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_civo_provider_proto_rawDescGZIP(), []int{0}
}

func (x *CivoProviderConfig) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

func (x *CivoProviderConfig) GetDefaultRegion() CivoRegion {
	if x != nil {
		return x.DefaultRegion
	}
	return CivoRegion_civo_region_unspecified
}

func (x *CivoProviderConfig) GetObjectStoreAccessId() string {
	if x != nil {
		return x.ObjectStoreAccessId
	}
	return ""
}

func (x *CivoProviderConfig) GetObjectStoreSecretKey() string {
	if x != nil {
		return x.ObjectStoreSecretKey
	}
	return ""
}

var File_project_planton_provider_civo_provider_proto protoreflect.FileDescriptor

const file_project_planton_provider_civo_provider_proto_rawDesc = "" +
	"\n" +
	",project/planton/provider/civo/provider.proto\x12\x1dproject.planton.provider.civo\x1a\x1bbuf/validate/validate.proto\x1a*project/planton/provider/civo/region.proto\"\xff\x01\n" +
	"\x12CivoProviderConfig\x12#\n" +
	"\tapi_token\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bapiToken\x12X\n" +
	"\x0edefault_region\x18\x02 \x01(\x0e2).project.planton.provider.civo.CivoRegionB\x06\xbaH\x03\xc8\x01\x01R\rdefaultRegion\x123\n" +
	"\x16object_store_access_id\x18\x03 \x01(\tR\x13objectStoreAccessId\x125\n" +
	"\x17object_store_secret_key\x18\x04 \x01(\tR\x14objectStoreSecretKeyB\x99\x02\n" +
	"!com.project.planton.provider.civoB\rProviderProtoP\x01ZMgithub.com/project-planton/project-planton/apis/project/planton/provider/civo\xa2\x02\x04PPPC\xaa\x02\x1dProject.Planton.Provider.Civo\xca\x02\x1dProject\\Planton\\Provider\\Civo\xe2\x02)Project\\Planton\\Provider\\Civo\\GPBMetadata\xea\x02 Project::Planton::Provider::Civob\x06proto3"

var (
	file_project_planton_provider_civo_provider_proto_rawDescOnce sync.Once
	file_project_planton_provider_civo_provider_proto_rawDescData []byte
)

func file_project_planton_provider_civo_provider_proto_rawDescGZIP() []byte {
	file_project_planton_provider_civo_provider_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_civo_provider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_provider_proto_rawDesc), len(file_project_planton_provider_civo_provider_proto_rawDesc)))
	})
	return file_project_planton_provider_civo_provider_proto_rawDescData
}

var file_project_planton_provider_civo_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_civo_provider_proto_goTypes = []any{
	(*CivoProviderConfig)(nil), // 0: project.planton.provider.civo.CivoProviderConfig
	(CivoRegion)(0),            // 1: project.planton.provider.civo.CivoRegion
}
var file_project_planton_provider_civo_provider_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.civo.CivoProviderConfig.default_region:type_name -> project.planton.provider.civo.CivoRegion
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_planton_provider_civo_provider_proto_init() }
func file_project_planton_provider_civo_provider_proto_init() {
	if File_project_planton_provider_civo_provider_proto != nil {
		return
	}
	file_project_planton_provider_civo_region_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_provider_proto_rawDesc), len(file_project_planton_provider_civo_provider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_civo_provider_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_civo_provider_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_civo_provider_proto_msgTypes,
	}.Build()
	File_project_planton_provider_civo_provider_proto = out.File
	file_project_planton_provider_civo_provider_proto_goTypes = nil
	file_project_planton_provider_civo_provider_proto_depIdxs = nil
}
