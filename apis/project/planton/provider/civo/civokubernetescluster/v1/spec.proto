syntax = "proto3";

package project.planton.provider.civo.civokubernetescluster.v1;

import "buf/validate/validate.proto";
import "project/planton/provider/civo/region.proto";
import "project/planton/shared/cloudresourcekind/cloud_resource_kind.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";

// CivoKubernetesClusterSpec defines the specification for creating a managed Kubernetes cluster on Civo Cloud (K3s).
// It focuses on essential parameters for a production-grade cluster, following the 80/20 principle to expose only the most commonly used settings.
message CivoKubernetesClusterSpec {
  // The name of the Kubernetes cluster.
  // Constraints: Must be unique per account. No spaces allowed (alphanumeric and hyphens recommended). If left blank, a random name will be assigned.
  string cluster_name = 1 [
    (buf.validate.field).required = true
  ];

  // The Civo region where the cluster will be created.
  // Determines where the cluster's control plane and nodes are provisioned.
  CivoRegion region = 2 [
    (buf.validate.field).required = true
  ];

  // The Kubernetes version to use for the cluster (semantic versioning).
  // Must be a supported version on Civo (e.g., "1.26.3").
  string kubernetes_version = 3 [
    (buf.validate.field).required = true
  ];

  // Reference to the Civo network where the cluster will reside.
  // This must be an existing network in the same region. The network's ID is used for the cluster's networking.
  project.planton.shared.foreignkey.v1.StringValueOrRef network = 4 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = CivoVpc,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.network_id"
  ];

  // Whether to enable a highly available control plane for the cluster.
  // If true (when supported), the cluster is created with multiple master nodes for increased availability.
  // Default: false.
  bool highly_available = 5 [
    (project.planton.shared.options.recommended_default) = "false"
  ];

  // Whether to enable automatic Kubernetes version patch upgrades for the cluster.
  // If true, the cluster will automatically upgrade to new patch releases of Kubernetes when available.
  bool auto_upgrade = 6;

  // Whether to disable surge upgrades for the cluster.
  // If false (default), cluster upgrades may temporarily provision extra resources to minimize downtime during updates.
  bool disable_surge_upgrade = 7;

  // A list of tags to apply to the cluster.
  // Tags help organize and identify the cluster within Civo.
  repeated string tags = 8;

  // Configuration for the cluster's default node pool.
  CivoKubernetesClusterDefaultNodePool default_node_pool = 9 [
    (buf.validate.field).required = true
  ];
}

// Civo Kubernetes Cluster Default Node Pool
message CivoKubernetesClusterDefaultNodePool {
  // The instance size (node flavor) for each node in the default pool (e.g., "g4s.kube.medium").
  // This defines the CPU and memory for the nodes.
  string size = 1 [
    (buf.validate.field).required = true
  ];

  // The number of nodes to provision in the default node pool.
  // Must be at least 1.
  uint32 node_count = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).uint32.gt = 0
  ];
}
