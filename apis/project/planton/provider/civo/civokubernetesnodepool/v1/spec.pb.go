// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/civo/civokubernetesnodepool/v1/spec.proto

package civokubernetesnodepoolv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CivoKubernetesNodePoolSpec defines the specification for creating a node pool in an existing Civo Kubernetes cluster.
// It focuses on essential parameters, following the 80/20 principle to expose only the most commonly used settings.
type CivoKubernetesNodePoolSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A name for the node pool. Must be unique within the Civo Kubernetes cluster.
	NodePoolName string `protobuf:"bytes,1,opt,name=node_pool_name,json=nodePoolName,proto3" json:"node_pool_name,omitempty"`
	// Reference to the Civo Kubernetes cluster in which to create this node pool.
	// Accepts the cluster's name or a reference to the CivoKubernetesCluster resource.
	Cluster *v1.StringValueOrRef `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// The slug identifier for the size of each node in the pool (e.g., "g4s.kube.medium").
	// Defines the CPU and memory of the nodes.
	Size string `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	// The number of nodes to provision in the pool. Must be at least 1.
	NodeCount uint32 `protobuf:"varint,4,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`
	// Enable auto-scaling for this node pool. If true, the platform manages node count between min_nodes and max_nodes.
	AutoScale bool `protobuf:"varint,5,opt,name=auto_scale,json=autoScale,proto3" json:"auto_scale,omitempty"`
	// Minimum number of nodes when auto-scaling is enabled. Required if auto_scale is true.
	MinNodes uint32 `protobuf:"varint,6,opt,name=min_nodes,json=minNodes,proto3" json:"min_nodes,omitempty"`
	// Maximum number of nodes when auto-scaling is enabled. Required if auto_scale is true.
	MaxNodes uint32 `protobuf:"varint,7,opt,name=max_nodes,json=maxNodes,proto3" json:"max_nodes,omitempty"`
	// A list of tags to apply to the node pool for organizational purposes.
	Tags          []string `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CivoKubernetesNodePoolSpec) Reset() {
	*x = CivoKubernetesNodePoolSpec{}
	mi := &file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CivoKubernetesNodePoolSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CivoKubernetesNodePoolSpec) ProtoMessage() {}

func (x *CivoKubernetesNodePoolSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CivoKubernetesNodePoolSpec.ProtoReflect.Descriptor instead.
func (*CivoKubernetesNodePoolSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *CivoKubernetesNodePoolSpec) GetNodePoolName() string {
	if x != nil {
		return x.NodePoolName
	}
	return ""
}

func (x *CivoKubernetesNodePoolSpec) GetCluster() *v1.StringValueOrRef {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *CivoKubernetesNodePoolSpec) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CivoKubernetesNodePoolSpec) GetNodeCount() uint32 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

func (x *CivoKubernetesNodePoolSpec) GetAutoScale() bool {
	if x != nil {
		return x.AutoScale
	}
	return false
}

func (x *CivoKubernetesNodePoolSpec) GetMinNodes() uint32 {
	if x != nil {
		return x.MinNodes
	}
	return 0
}

func (x *CivoKubernetesNodePoolSpec) GetMaxNodes() uint32 {
	if x != nil {
		return x.MaxNodes
	}
	return 0
}

func (x *CivoKubernetesNodePoolSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Bproject/planton/provider/civo/civokubernetesnodepool/v1/spec.proto\x127project.planton.provider.civo.civokubernetesnodepool.v1\x1a\x1bbuf/validate/validate.proto\x1aBproject/planton/shared/cloudresourcekind/cloud_resource_kind.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\xee\x02\n" +
	"\x1aCivoKubernetesNodePoolSpec\x12,\n" +
	"\x0enode_pool_name\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\fnodePoolName\x12n\n" +
	"\acluster\x18\x02 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1c\xbaH\x03\xc8\x01\x01\x88\xd4a\xe3\v\x92\xd4a\rmetadata.nameR\acluster\x12\x1a\n" +
	"\x04size\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04size\x12)\n" +
	"\n" +
	"node_count\x18\x04 \x01(\rB\n" +
	"\xbaH\a\xc8\x01\x01*\x02 \x00R\tnodeCount\x12\x1d\n" +
	"\n" +
	"auto_scale\x18\x05 \x01(\bR\tautoScale\x12\x1b\n" +
	"\tmin_nodes\x18\x06 \x01(\rR\bminNodes\x12\x1b\n" +
	"\tmax_nodes\x18\a \x01(\rR\bmaxNodes\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tagsB\xce\x03\n" +
	";com.project.planton.provider.civo.civokubernetesnodepool.v1B\tSpecProtoP\x01Z\x80\x01github.com/project-planton/project-planton/apis/project/planton/provider/civo/civokubernetesnodepool/v1;civokubernetesnodepoolv1\xa2\x02\x05PPPCC\xaa\x027Project.Planton.Provider.Civo.Civokubernetesnodepool.V1\xca\x027Project\\Planton\\Provider\\Civo\\Civokubernetesnodepool\\V1\xe2\x02CProject\\Planton\\Provider\\Civo\\Civokubernetesnodepool\\V1\\GPBMetadata\xea\x02<Project::Planton::Provider::Civo::Civokubernetesnodepool::V1b\x06proto3"

var (
	file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDesc), len(file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDescData
}

var file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_goTypes = []any{
	(*CivoKubernetesNodePoolSpec)(nil), // 0: project.planton.provider.civo.civokubernetesnodepool.v1.CivoKubernetesNodePoolSpec
	(*v1.StringValueOrRef)(nil),        // 1: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.civo.civokubernetesnodepool.v1.CivoKubernetesNodePoolSpec.cluster:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_init() }
func file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_init() {
	if File_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDesc), len(file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto = out.File
	file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_goTypes = nil
	file_project_planton_provider_civo_civokubernetesnodepool_v1_spec_proto_depIdxs = nil
}
