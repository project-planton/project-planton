// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/civo/civodatabase/v1/spec.proto

package civodatabasev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	civo "github.com/project-planton/project-planton/apis/project/planton/provider/civo"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumeration of supported database engines for Civo managed databases.
type CivoDatabaseEngine int32

const (
	CivoDatabaseEngine_civo_database_engine_unspecified CivoDatabaseEngine = 0
	CivoDatabaseEngine_mysql                            CivoDatabaseEngine = 1
	CivoDatabaseEngine_postgres                         CivoDatabaseEngine = 2
)

// Enum value maps for CivoDatabaseEngine.
var (
	CivoDatabaseEngine_name = map[int32]string{
		0: "civo_database_engine_unspecified",
		1: "mysql",
		2: "postgres",
	}
	CivoDatabaseEngine_value = map[string]int32{
		"civo_database_engine_unspecified": 0,
		"mysql":                            1,
		"postgres":                         2,
	}
)

func (x CivoDatabaseEngine) Enum() *CivoDatabaseEngine {
	p := new(CivoDatabaseEngine)
	*p = x
	return p
}

func (x CivoDatabaseEngine) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CivoDatabaseEngine) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_civo_civodatabase_v1_spec_proto_enumTypes[0].Descriptor()
}

func (CivoDatabaseEngine) Type() protoreflect.EnumType {
	return &file_project_planton_provider_civo_civodatabase_v1_spec_proto_enumTypes[0]
}

func (x CivoDatabaseEngine) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CivoDatabaseEngine.Descriptor instead.
func (CivoDatabaseEngine) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescGZIP(), []int{0}
}

// CivoDatabaseSpec defines the essential configuration for creating a managed database instance on Civo.
// Following the 80/20 principle, it exposes only the most commonly used fields.
type CivoDatabaseSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A human-readable name for the database instance.
	// This name must be unique within the chosen Civo region.
	DbInstanceName string `protobuf:"bytes,1,opt,name=db_instance_name,json=dbInstanceName,proto3" json:"db_instance_name,omitempty"`
	// The database engine for the instance (MySQL or PostgreSQL).
	Engine CivoDatabaseEngine `protobuf:"varint,2,opt,name=engine,proto3,enum=project.planton.provider.civo.civodatabase.v1.CivoDatabaseEngine" json:"engine,omitempty"`
	// The engine version for the database.
	// For example: "8.0" for MySQL 8.0, "14" for PostgreSQL 14.
	// Only major (and optionally minor) version numbers are expected.
	EngineVersion string `protobuf:"bytes,3,opt,name=engine_version,json=engineVersion,proto3" json:"engine_version,omitempty"`
	// The Civo region where the database will be created.
	Region civo.CivoRegion `protobuf:"varint,4,opt,name=region,proto3,enum=project.planton.provider.civo.CivoRegion" json:"region,omitempty"`
	// The plan or size identifier for the database instance (e.g., "g3.db.small").
	// This defines CPU, memory, and base storage for the instance.
	SizeSlug string `protobuf:"bytes,5,opt,name=size_slug,json=sizeSlug,proto3" json:"size_slug,omitempty"`
	// The number of replica nodes to add to the database (0 means no replicas, just the primary).
	// Typically use 0, 2, or 4 for a total of 1, 3, or 5 nodes in the cluster.
	Replicas uint32 `protobuf:"varint,6,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The target private network for the database instance.
	// Provide a literal network UUID or a reference to a CivoNetwork resource.
	NetworkId *v1.StringValueOrRef `protobuf:"bytes,7,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// (Optional) Firewall rules to attach to this database instance.
	// Provide one or more firewall IDs or references to CivoFirewall resources for access control.
	FirewallIds []*v1.StringValueOrRef `protobuf:"bytes,8,rep,name=firewall_ids,json=firewallIds,proto3" json:"firewall_ids,omitempty"`
	// (Optional) Custom storage size in GiB for the database, if different from the default provided by size_slug.
	StorageGib uint32 `protobuf:"varint,9,opt,name=storage_gib,json=storageGib,proto3" json:"storage_gib,omitempty"`
	// (Optional) Tags to assign to the database instance for organizational purposes.
	Tags          []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CivoDatabaseSpec) Reset() {
	*x = CivoDatabaseSpec{}
	mi := &file_project_planton_provider_civo_civodatabase_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CivoDatabaseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CivoDatabaseSpec) ProtoMessage() {}

func (x *CivoDatabaseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_civo_civodatabase_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CivoDatabaseSpec.ProtoReflect.Descriptor instead.
func (*CivoDatabaseSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *CivoDatabaseSpec) GetDbInstanceName() string {
	if x != nil {
		return x.DbInstanceName
	}
	return ""
}

func (x *CivoDatabaseSpec) GetEngine() CivoDatabaseEngine {
	if x != nil {
		return x.Engine
	}
	return CivoDatabaseEngine_civo_database_engine_unspecified
}

func (x *CivoDatabaseSpec) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

func (x *CivoDatabaseSpec) GetRegion() civo.CivoRegion {
	if x != nil {
		return x.Region
	}
	return civo.CivoRegion(0)
}

func (x *CivoDatabaseSpec) GetSizeSlug() string {
	if x != nil {
		return x.SizeSlug
	}
	return ""
}

func (x *CivoDatabaseSpec) GetReplicas() uint32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *CivoDatabaseSpec) GetNetworkId() *v1.StringValueOrRef {
	if x != nil {
		return x.NetworkId
	}
	return nil
}

func (x *CivoDatabaseSpec) GetFirewallIds() []*v1.StringValueOrRef {
	if x != nil {
		return x.FirewallIds
	}
	return nil
}

func (x *CivoDatabaseSpec) GetStorageGib() uint32 {
	if x != nil {
		return x.StorageGib
	}
	return 0
}

func (x *CivoDatabaseSpec) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_project_planton_provider_civo_civodatabase_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDesc = "" +
	"\n" +
	"8project/planton/provider/civo/civodatabase/v1/spec.proto\x12-project.planton.provider.civo.civodatabase.v1\x1a\x1bbuf/validate/validate.proto\x1a*project/planton/provider/civo/region.proto\x1aBproject/planton/shared/cloudresourcekind/cloud_resource_kind.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\"\xbc\x05\n" +
	"\x10CivoDatabaseSpec\x124\n" +
	"\x10db_instance_name\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x18@R\x0edbInstanceName\x12a\n" +
	"\x06engine\x18\x02 \x01(\x0e2A.project.planton.provider.civo.civodatabase.v1.CivoDatabaseEngineB\x06\xbaH\x03\xc8\x01\x01R\x06engine\x12D\n" +
	"\x0eengine_version\x18\x03 \x01(\tB\x1d\xbaH\x1a\xc8\x01\x01r\x152\x13^[0-9]+(\\.[0-9]+)?$R\rengineVersion\x12I\n" +
	"\x06region\x18\x04 \x01(\x0e2).project.planton.provider.civo.CivoRegionB\x06\xbaH\x03\xc8\x01\x01R\x06region\x12#\n" +
	"\tsize_slug\x18\x05 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bsizeSlug\x12#\n" +
	"\breplicas\x18\x06 \x01(\rB\a\xbaH\x04*\x02\x18\x04R\breplicas\x12\x7f\n" +
	"\n" +
	"network_id\x18\a \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB(\xbaH\x03\xc8\x01\x01\x88\xd4a\xe7\v\x92\xd4a\x19status.outputs.network_idR\tnetworkId\x12~\n" +
	"\ffirewall_ids\x18\b \x03(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB#\x88\xd4a\xe1\v\x92\xd4a\x1astatus.outputs.firewall_idR\vfirewallIds\x12\x1f\n" +
	"\vstorage_gib\x18\t \x01(\rR\n" +
	"storageGib\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags*S\n" +
	"\x12CivoDatabaseEngine\x12$\n" +
	" civo_database_engine_unspecified\x10\x00\x12\t\n" +
	"\x05mysql\x10\x01\x12\f\n" +
	"\bpostgres\x10\x02B\x87\x03\n" +
	"1com.project.planton.provider.civo.civodatabase.v1B\tSpecProtoP\x01Zlgithub.com/project-planton/project-planton/apis/project/planton/provider/civo/civodatabase/v1;civodatabasev1\xa2\x02\x05PPPCC\xaa\x02-Project.Planton.Provider.Civo.Civodatabase.V1\xca\x02-Project\\Planton\\Provider\\Civo\\Civodatabase\\V1\xe2\x029Project\\Planton\\Provider\\Civo\\Civodatabase\\V1\\GPBMetadata\xea\x022Project::Planton::Provider::Civo::Civodatabase::V1b\x06proto3"

var (
	file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDesc), len(file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDescData
}

var file_project_planton_provider_civo_civodatabase_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_civo_civodatabase_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_civo_civodatabase_v1_spec_proto_goTypes = []any{
	(CivoDatabaseEngine)(0),     // 0: project.planton.provider.civo.civodatabase.v1.CivoDatabaseEngine
	(*CivoDatabaseSpec)(nil),    // 1: project.planton.provider.civo.civodatabase.v1.CivoDatabaseSpec
	(civo.CivoRegion)(0),        // 2: project.planton.provider.civo.CivoRegion
	(*v1.StringValueOrRef)(nil), // 3: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_civo_civodatabase_v1_spec_proto_depIdxs = []int32{
	0, // 0: project.planton.provider.civo.civodatabase.v1.CivoDatabaseSpec.engine:type_name -> project.planton.provider.civo.civodatabase.v1.CivoDatabaseEngine
	2, // 1: project.planton.provider.civo.civodatabase.v1.CivoDatabaseSpec.region:type_name -> project.planton.provider.civo.CivoRegion
	3, // 2: project.planton.provider.civo.civodatabase.v1.CivoDatabaseSpec.network_id:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	3, // 3: project.planton.provider.civo.civodatabase.v1.CivoDatabaseSpec.firewall_ids:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_project_planton_provider_civo_civodatabase_v1_spec_proto_init() }
func file_project_planton_provider_civo_civodatabase_v1_spec_proto_init() {
	if File_project_planton_provider_civo_civodatabase_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDesc), len(file_project_planton_provider_civo_civodatabase_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_civo_civodatabase_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_civo_civodatabase_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_civo_civodatabase_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_civo_civodatabase_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_civo_civodatabase_v1_spec_proto = out.File
	file_project_planton_provider_civo_civodatabase_v1_spec_proto_goTypes = nil
	file_project_planton_provider_civo_civodatabase_v1_spec_proto_depIdxs = nil
}
