syntax = "proto3";

package project.planton.provider.kubernetes.addon.externalsecretskubernetes.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/kubernetes/kubernetes.proto";
import "project/planton/shared/kubernetes/options.proto";
import "project/planton/shared/kubernetes/target_cluster.proto";
import "project/planton/shared/options/options.proto";

// ExternalSecretsKubernetesSpec defines configuration for the External Secrets
// Operator (ESO) on any Kubernetes cluster.
message ExternalSecretsKubernetesSpec {
  // The Kubernetes cluster on which to install this add‑on.
  project.planton.shared.kubernetes.KubernetesAddonTargetCluster target_cluster = 1;

  // How often the controller polls the backing secret store (in seconds).
  // Very small values can incur high cloud‑API costs.
  uint32 poll_interval_seconds = 2 [
    (project.planton.shared.options.default) = "10",
    (buf.validate.field).uint32.gt = 0
  ];

  // CPU / memory tuning for the ESO controller container.
  ExternalSecretsKubernetesSpecContainer container = 3 [(buf.validate.field).required = true];

  // Provider‑specific glue.  Exactly one block should be set.
  oneof provider_config {
    // Google Cloud Secrets Manager + Workload Identity.
    ExternalSecretsGkeConfig gke = 100;

    // AWS Secrets Manager + IRSA.
    ExternalSecretsEksConfig eks = 101;

    // Azure Key Vault + Workload / Managed Identity.
    ExternalSecretsAksConfig aks = 102;
  }
}

// Resource limits / requests for the controller container.
message ExternalSecretsKubernetesSpecContainer {
  project.planton.shared.kubernetes.ContainerResources resources = 1 [(project.planton.shared.kubernetes.default_container_resources) = {
    limits: {
      cpu: "1000m"
      memory: "1Gi"
    }
    requests: {
      cpu: "50m"
      memory: "100Mi"
    }
  }];
}

// -----------------------------------------------------------------------------
// Provider‑specific blocks
// -----------------------------------------------------------------------------

// GKE + Google Cloud Secrets Manager.
message ExternalSecretsGkeConfig {
  // GCP project hosting both the secrets and the GKE cluster.
  project.planton.shared.foreignkey.v1.StringValueOrRef project_id = 1 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpProject,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.project_id"
  ];

  // Google service‑account e‑mail used via Workload Identity.
  string gsa_email = 2 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = GcpServiceAccount,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.email"
  ];
}

// EKS + AWS Secrets Manager.
message ExternalSecretsEksConfig {
  // AWS region containing the secret store (defaults to cluster region if empty).
  string region = 1;

  // Optional existing IAM role ARN for IRSA; auto‑created if left blank.
  string irsa_role_arn_override = 2;
}

// AKS + Azure Key Vault.
message ExternalSecretsAksConfig {
  // Azure Key Vault resource ID that stores the secrets.
  string key_vault_resource_id = 1;

  // Optional client ID of an existing managed identity to bind to ESO.
  string managed_identity_client_id = 2;
}
