// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workload/postgreskubernetes/v1/spec.proto

package postgreskubernetesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kubernetes "github.com/project-planton/project-planton/apis/project/planton/shared/kubernetes"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// **PostgresKubernetesSpec** defines the configuration for deploying PostgreSQL on a Kubernetes cluster.
// This message specifies the parameters needed to create and manage a PostgreSQL deployment within a Kubernetes environment.
// It includes container specifications and ingress settings to control resource allocation and external access.
type PostgresKubernetesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The container specifications for the PostgreSQL deployment.
	Container *PostgresKubernetesContainer `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	// The ingress configuration for the PostgreSQL deployment.
	Ingress       *kubernetes.IngressSpec `protobuf:"bytes,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresKubernetesSpec) Reset() {
	*x = PostgresKubernetesSpec{}
	mi := &file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresKubernetesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresKubernetesSpec) ProtoMessage() {}

func (x *PostgresKubernetesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresKubernetesSpec.ProtoReflect.Descriptor instead.
func (*PostgresKubernetesSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *PostgresKubernetesSpec) GetContainer() *PostgresKubernetesContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *PostgresKubernetesSpec) GetIngress() *kubernetes.IngressSpec {
	if x != nil {
		return x.Ingress
	}
	return nil
}

// *
// **PostgresKubernetesContainer** specifies the container configuration for the PostgreSQL application.
// It includes resource allocations for CPU and memory, the number of replicas, and disk size for data persistence.
// Proper configuration ensures optimal performance and data reliability for your PostgreSQL deployment.
type PostgresKubernetesContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of replicas of PostgreSQL pods.
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The CPU and memory resources allocated to the PostgreSQL container.
	Resources *kubernetes.ContainerResources `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	// *
	// The storage size to allocate for each PostgreSQL instance (e.g., "1Gi").
	// A default value is set if the client does not provide a value.
	DiskSize      string `protobuf:"bytes,3,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PostgresKubernetesContainer) Reset() {
	*x = PostgresKubernetesContainer{}
	mi := &file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresKubernetesContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresKubernetesContainer) ProtoMessage() {}

func (x *PostgresKubernetesContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresKubernetesContainer.ProtoReflect.Descriptor instead.
func (*PostgresKubernetesContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *PostgresKubernetesContainer) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *PostgresKubernetesContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *PostgresKubernetesContainer) GetDiskSize() string {
	if x != nil {
		return x.DiskSize
	}
	return ""
}

var file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*PostgresKubernetesContainer)(nil),
		Field:         534001,
		Name:          "project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.default_container",
		Tag:           "bytes,534001,opt,name=default_container",
		Filename:      "project/planton/provider/kubernetes/workload/postgreskubernetes/v1/spec.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainer default_container = 534001;
	E_DefaultContainer = &file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_extTypes[0]
)

var File_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Mproject/planton/provider/kubernetes/workload/postgreskubernetes/v1/spec.proto\x12Cproject.planton.provider.kubernetes.workloads.postgreskubernetes.v1\x1a\x1bbuf/validate/validate.proto\x1a2project/planton/shared/kubernetes/kubernetes.proto\x1a/project/planton/shared/kubernetes/options.proto\x1a,project/planton/shared/options/options.proto\x1a google/protobuf/descriptor.proto\"\x8f\x02\n" +
	"\x16PostgresKubernetesSpec\x12\xaa\x01\n" +
	"\tcontainer\x18\x01 \x01(\v2`.project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainerB*\x8aß„\x02%\b\x01\x12\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100Mi\x1a\x031GiR\tcontainer\x12H\n" +
	"\aingress\x18\x02 \x01(\v2..project.planton.shared.kubernetes.IngressSpecR\aingress\"\xcd\x02\n" +
	"\x1bPostgresKubernetesContainer\x12\x1a\n" +
	"\breplicas\x18\x01 \x01(\x05R\breplicas\x12S\n" +
	"\tresources\x18\x02 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12\xbc\x01\n" +
	"\tdisk_size\x18\x03 \x01(\tB\x9e\x01\xbaH\x9a\x01\xba\x01\x96\x01\n" +
	"!spec.container.disk_size.required\x12\x1aDisk size value is invalid\x1aUthis.matches('^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$') && size(this) > 0R\bdiskSize:\xae\x01\n" +
	"\x11default_container\x12\x1d.google.protobuf.FieldOptions\x18\xf1\xcb  \x01(\v2`.project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainerR\x10defaultContainerB\x93\x04\n" +
	"Gcom.project.planton.provider.kubernetes.workloads.postgreskubernetes.v1B\tSpecProtoP\x01Z\x87\x01github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/postgreskubernetes/v1;postgreskubernetesv1\xa2\x02\x06PPPKWP\xaa\x02CProject.Planton.Provider.Kubernetes.Workloads.Postgreskubernetes.V1\xca\x02CProject\\Planton\\Provider\\Kubernetes\\Workloads\\Postgreskubernetes\\V1\xe2\x02OProject\\Planton\\Provider\\Kubernetes\\Workloads\\Postgreskubernetes\\V1\\GPBMetadata\xea\x02IProject::Planton::Provider::Kubernetes::Workloads::Postgreskubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_goTypes = []any{
	(*PostgresKubernetesSpec)(nil),        // 0: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesSpec
	(*PostgresKubernetesContainer)(nil),   // 1: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainer
	(*kubernetes.IngressSpec)(nil),        // 2: project.planton.shared.kubernetes.IngressSpec
	(*kubernetes.ContainerResources)(nil), // 3: project.planton.shared.kubernetes.ContainerResources
	(*descriptorpb.FieldOptions)(nil),     // 4: google.protobuf.FieldOptions
}
var file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesSpec.container:type_name -> project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainer
	2, // 1: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesSpec.ingress:type_name -> project.planton.shared.kubernetes.IngressSpec
	3, // 2: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	4, // 3: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.default_container:extendee -> google.protobuf.FieldOptions
	1, // 4: project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.default_container:type_name -> project.planton.provider.kubernetes.workloads.postgreskubernetes.v1.PostgresKubernetesContainer
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_init()
}
func file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_init() {
	if File_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_msgTypes,
		ExtensionInfos:    file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_extTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto = out.File
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workload_postgreskubernetes_v1_spec_proto_depIdxs = nil
}
