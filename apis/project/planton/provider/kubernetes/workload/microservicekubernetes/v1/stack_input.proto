syntax = "proto3";

package project.planton.provider.kubernetes.workload.microservicekubernetes.v1;

import "project/planton/provider/kubernetes/provider.proto";
import "project/planton/provider/kubernetes/workload/microservicekubernetes/v1/api.proto";

//microservice-kubernetes stack-input
message MicroserviceKubernetesStackInput {
  //target cloud-resource
  MicroserviceKubernetes target = 1;
  //provider-config
  project.planton.provider.kubernetes.KubernetesProviderConfig provider_config = 2;
  //kubernetes namespace
  string kubernetes_namespace = 3;
  //docker-config-json to be used for setting up image-pull-secret
  //
  //why is this field important?
  //kubernetes needs authentication credentials to pull images from private container registries.
  //an image pull secret is a kubernetes secret that stores docker registry credentials,
  //allowing the kubelet to pull private images for your pods.
  //
  //when is an image pull secret needed?
  //- standard kubernetes clusters: required for all private registries (gcr, ecr, docker hub, etc.)
  //- self-hosted registries: required for any private container registry
  //- multi-cloud deployments: needed when pulling images across cloud boundaries
  //
  //when is an image pull secret NOT needed?
  //- gke with workload identity: uses IAM bindings instead of explicit credentials
  //- eks with irsa (iam roles for service accounts): uses AWS IAM roles for authentication
  //- aks with workload identity: uses azure managed identities
  //- public images: no authentication required for public registries
  //
  //priority order:
  //1. if this field is set, it takes precedence (used by Planton Cloud)
  //2. if not set, check metadata.labels["kubernetes.planton.io/docker-config-json-file"] for file path
  //3. if neither set, no image pull secret is created (assumes workload identity or public images)
  //
  //example docker-config-json:
  //{"auths":{"registry.example.com":{"username":"user","password":"pass","auth":"dXNlcjpwYXNz"}}}
  //
  //for more details on image pull secrets, see:
  //https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  string docker_config_json = 4;
}
