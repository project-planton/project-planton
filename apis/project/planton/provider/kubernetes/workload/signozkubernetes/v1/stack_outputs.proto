syntax = "proto3";

package project.planton.provider.kubernetes.workload.signozkubernetes.v1;

import "project/planton/shared/kubernetes/kubernetes.proto";

// SignozKubernetesStackOutputs captures observable outputs from a SigNoz deployment on Kubernetes.
message SignozKubernetesStackOutputs {
  // namespace specifies the Kubernetes namespace in which the SigNoz cluster is created.
  string namespace = 1;

  // kubernetes service name for the SigNoz UI and API.
  // ex: main-signoz-kubernetes
  // in the above example, "main" is the name of the signoz-kubernetes
  string signoz_service = 2;

  // kubernetes service name for the OpenTelemetry Collector.
  // ex: main-signoz-otel-collector
  string otel_collector_service = 3;

  // command to setup port-forwarding to open SigNoz UI from developers laptop.
  // this might come handy when signoz-kubernetes ingress is disabled for security reasons.
  // this is rendered by combining signoz service and namespace.
  // ex: kubectl port-forward svc/signoz-kubernetes -n kubernetes_namespace 8080:8080
  // running the command from this attribute makes it possible to access SigNoz UI using http://localhost:8080
  string port_forward_command = 4;

  // kubernetes endpoint to connect to SigNoz from within the cluster.
  // ex: main-signoz-kubernetes.namespace.svc.cluster.local:8080
  string kube_endpoint = 5;

  // public endpoint to access SigNoz UI from clients outside kubernetes.
  // ex: https://signoz-planton-pcs-dev-main.observability.dev.planton.live
  string external_hostname = 6;

  // internal endpoint to access SigNoz UI from clients inside kubernetes.
  // ex: https://signoz-planton-pcs-dev-main.observability-internal.dev.planton.live
  string internal_hostname = 7;

  // kubernetes endpoint for the OpenTelemetry Collector gRPC ingestion endpoint.
  // ex: main-signoz-otel-collector.namespace.svc.cluster.local:4317
  string otel_collector_grpc_endpoint = 8;

  // kubernetes endpoint for the OpenTelemetry Collector HTTP ingestion endpoint.
  // ex: main-signoz-otel-collector.namespace.svc.cluster.local:4318
  string otel_collector_http_endpoint = 9;

  // external hostname for the OpenTelemetry Collector gRPC endpoint if ingress is configured.
  // ex: https://signoz-ingest-grpc-planton-pcs-dev-main.observability.dev.planton.live
  string otel_collector_external_grpc_hostname = 10;

  // external hostname for the OpenTelemetry Collector HTTP endpoint if ingress is configured.
  // ex: https://signoz-ingest-http-planton-pcs-dev-main.observability.dev.planton.live
  string otel_collector_external_http_hostname = 11;

  // ClickHouse database endpoint (internal cluster endpoint).
  // ex: signoz-clickhouse.namespace.svc.cluster.local:8123
  // This is only populated when using self-managed ClickHouse.
  string clickhouse_endpoint = 12;

  // ClickHouse username for authentication.
  string clickhouse_username = 13;

  // kubernetes secret key for the ClickHouse password.
  project.planton.shared.kubernetes.KubernetesSecretKey clickhouse_password_secret = 14;
}

