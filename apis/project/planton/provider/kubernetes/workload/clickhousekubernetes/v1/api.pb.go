// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workload/clickhousekubernetes/v1/api.proto

package clickhousekubernetesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	shared "github.com/project-planton/project-planton/apis/project/planton/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// clickhouse-kubernetes
type ClickhouseKubernetes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// api-version
	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// resource-kind
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// metadata
	Metadata *shared.ApiResourceMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec
	Spec *ClickhouseKubernetesSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	// status
	Status        *ClickhouseKubernetesStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickhouseKubernetes) Reset() {
	*x = ClickhouseKubernetes{}
	mi := &file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseKubernetes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseKubernetes) ProtoMessage() {}

func (x *ClickhouseKubernetes) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseKubernetes.ProtoReflect.Descriptor instead.
func (*ClickhouseKubernetes) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *ClickhouseKubernetes) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *ClickhouseKubernetes) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ClickhouseKubernetes) GetMetadata() *shared.ApiResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ClickhouseKubernetes) GetSpec() *ClickhouseKubernetesSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ClickhouseKubernetes) GetStatus() *ClickhouseKubernetesStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// clickhouse-kubernetes status
type ClickhouseKubernetesStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stack-outputs
	Outputs       *ClickhouseKubernetesStackOutputs `protobuf:"bytes,1,opt,name=outputs,proto3" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickhouseKubernetesStatus) Reset() {
	*x = ClickhouseKubernetesStatus{}
	mi := &file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickhouseKubernetesStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickhouseKubernetesStatus) ProtoMessage() {}

func (x *ClickhouseKubernetesStatus) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickhouseKubernetesStatus.ProtoReflect.Descriptor instead.
func (*ClickhouseKubernetesStatus) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *ClickhouseKubernetesStatus) GetOutputs() *ClickhouseKubernetesStackOutputs {
	if x != nil {
		return x.Outputs
	}
	return nil
}

var File_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDesc = "" +
	"\n" +
	"Nproject/planton/provider/kubernetes/workload/clickhousekubernetes/v1/api.proto\x12Dproject.planton.provider.kubernetes.workload.clickhousekubernetes.v1\x1a\x1bbuf/validate/validate.proto\x1aOproject/planton/provider/kubernetes/workload/clickhousekubernetes/v1/spec.proto\x1aXproject/planton/provider/kubernetes/workload/clickhousekubernetes/v1/stack_outputs.proto\x1a#project/planton/shared/status.proto\x1a%project/planton/shared/metadata.proto\"\xd9\x03\n" +
	"\x14ClickhouseKubernetes\x12I\n" +
	"\vapi_version\x18\x01 \x01(\tB(\xbaH%r#\n" +
	"!kubernetes.project-planton.org/v1R\n" +
	"apiVersion\x12/\n" +
	"\x04kind\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\n" +
	"\x14ClickhouseKubernetesR\x04kind\x12O\n" +
	"\bmetadata\x18\x03 \x01(\v2+.project.planton.shared.ApiResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12z\n" +
	"\x04spec\x18\x04 \x01(\v2^.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12x\n" +
	"\x06status\x18\x05 \x01(\v2`.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStatusR\x06status\"\x9f\x01\n" +
	"\x1aClickhouseKubernetesStatus\x12\x80\x01\n" +
	"\aoutputs\x18\x01 \x01(\v2f.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStackOutputsR\aoutputsB\x9b\x04\n" +
	"Hcom.project.planton.provider.kubernetes.workload.clickhousekubernetes.v1B\bApiProtoP\x01Z\x8b\x01github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/clickhousekubernetes/v1;clickhousekubernetesv1\xa2\x02\x06PPPKWC\xaa\x02DProject.Planton.Provider.Kubernetes.Workload.Clickhousekubernetes.V1\xca\x02DProject\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\xe2\x02PProject\\Planton\\Provider\\Kubernetes\\Workload\\Clickhousekubernetes\\V1\\GPBMetadata\xea\x02JProject::Planton::Provider::Kubernetes::Workload::Clickhousekubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_goTypes = []any{
	(*ClickhouseKubernetes)(nil),             // 0: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetes
	(*ClickhouseKubernetesStatus)(nil),       // 1: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStatus
	(*shared.ApiResourceMetadata)(nil),       // 2: project.planton.shared.ApiResourceMetadata
	(*ClickhouseKubernetesSpec)(nil),         // 3: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesSpec
	(*ClickhouseKubernetesStackOutputs)(nil), // 4: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStackOutputs
}
var file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetes.metadata:type_name -> project.planton.shared.ApiResourceMetadata
	3, // 1: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetes.spec:type_name -> project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesSpec
	1, // 2: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetes.status:type_name -> project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStatus
	4, // 3: project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStatus.outputs:type_name -> project.planton.provider.kubernetes.workload.clickhousekubernetes.v1.ClickhouseKubernetesStackOutputs
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_init()
}
func file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_init() {
	if File_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto != nil {
		return
	}
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_spec_proto_init()
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_stack_outputs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_msgTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto = out.File
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workload_clickhousekubernetes_v1_api_proto_depIdxs = nil
}
