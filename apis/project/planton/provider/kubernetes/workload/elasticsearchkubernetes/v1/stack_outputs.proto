syntax = "proto3";

package project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1;

import "project/planton/shared/kubernetes/kubernetes.proto";

//elasticsearch-kubernetes stack-outputs
message ElasticsearchKubernetesStackOutputs {
  //kubernetes namespace in which elasticsearch-kubernetes is created.
  string namespace = 1;

  //elasticsearch outputs
  ElasticsearchKubernetesElasticsearchStackOutputs elasticsearch = 2;

  //kibana outputs
  ElasticsearchKubernetesKibanaStackOutputs kibana = 3;
}

//elasticsearch outputs
message ElasticsearchKubernetesElasticsearchStackOutputs {
  //kubernetes service name for elasticsearch-kubernetes.
  //ex: main-es-http
  //in the above example, "main" is the name of the elasticsearch-kubernetes
  string service = 1;

  //command to setup port-forwarding to open elasticsearch-kubernetes from developers laptop.
  //this might come handy when elasticsearch-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining elasticsearch_kubernetes_kubernetes_service and kubernetes_namespace
  //ex: kubectl port-forward svc/elasticsearch_kubernetes_kubernetes_service -n kubernetes_namespace 9200:9200
  //running the command from this attribute makes it possible to access elasticsearch-kubernetes using http://localhost:9200
  string port_forward_command = 2;

  //kubernetes endpoint to connect to elasticsearch-kubernetes from the web browser.
  //ex: main-es-http.namespace.svc.cluster.local:9200
  string kube_endpoint = 3;

  //public endpoint to open elasticsearch-kubernetes from clients outside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main.planton.live
  string external_hostname = 4;

  //internal endpoint to open elasticsearch-kubernetes from clients inside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main-internal.planton.live
  string internal_hostname = 5;

  // elasticsearch username
  string username = 6;

  //kubernetes secret key for the password.
  project.planton.shared.kubernetes.KubernetesSecretKey password_secret = 7;
}

//kibana outputs
message ElasticsearchKubernetesKibanaStackOutputs {
  //kubernetes service name for kibana.
  //ex: main-kb-http
  //in the above example, "main" is the name of the elasticsearch-kubernetes
  string service = 1;

  //command to setup port-forwarding to open kibana from developers laptop.
  //this might come handy when elasticsearch-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining kibana_service_name and kubernetes_namespace
  //ex: kubectl port-forward svc/kibana_service_name -n kubernetes_namespace 5601:5601
  //running the command from this attribute makes it possible to access elasticsearch-kubernetes using http://localhost:5601
  string port_forward_command = 2;

  //kubernetes endpoint to connect to elasticsearch-kubernetes from the web browser.
  //ex: main-es-http.namespace.svc.cluster.local:9200
  string kube_endpoint = 3;

  //public endpoint to open elasticsearch-kubernetes from clients outside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main-kb.planton.live
  string external_hostname = 4;

  //internal endpoint to open elasticsearch-kubernetes from clients inside kubernetes.
  //ex: https://elsk8s-planton-pcs-dev-main-kb-internal.planton.live
  string internal_hostname = 5;
}
