// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto

package elasticsearchkubernetesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kubernetes "github.com/project-planton/project-planton/apis/project/planton/shared/kubernetes"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **ElasticsearchKubernetesSpec** defines the configuration for deploying Elasticsearch on a Kubernetes cluster.
// This message includes specifications for the Elasticsearch container, Kibana container, and ingress settings.
// By configuring these parameters, you can set up an Elasticsearch deployment tailored to your application's needs,
// including resource allocation, persistence settings, and external access through ingress.
type ElasticsearchKubernetesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The specifications for the Elasticsearch container deployment.
	ElasticsearchContainer *ElasticsearchKubernetesElasticsearchContainer `protobuf:"bytes,1,opt,name=elasticsearch_container,json=elasticsearchContainer,proto3" json:"elasticsearch_container,omitempty"`
	// The specifications for the Kibana container deployment.
	KibanaContainer *ElasticsearchKubernetesKibanaContainer `protobuf:"bytes,2,opt,name=kibana_container,json=kibanaContainer,proto3" json:"kibana_container,omitempty"`
	// The ingress configuration for the Elasticsearch deployment.
	Ingress       *kubernetes.IngressSpec `protobuf:"bytes,3,opt,name=ingress,proto3" json:"ingress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesSpec) Reset() {
	*x = ElasticsearchKubernetesSpec{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesSpec) ProtoMessage() {}

func (x *ElasticsearchKubernetesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesSpec.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *ElasticsearchKubernetesSpec) GetElasticsearchContainer() *ElasticsearchKubernetesElasticsearchContainer {
	if x != nil {
		return x.ElasticsearchContainer
	}
	return nil
}

func (x *ElasticsearchKubernetesSpec) GetKibanaContainer() *ElasticsearchKubernetesKibanaContainer {
	if x != nil {
		return x.KibanaContainer
	}
	return nil
}

func (x *ElasticsearchKubernetesSpec) GetIngress() *kubernetes.IngressSpec {
	if x != nil {
		return x.Ingress
	}
	return nil
}

// **ElasticsearchKubernetesElasticsearchContainer** specifies the configuration for the Elasticsearch container.
// It includes settings such as the number of replicas, resource allocations, data persistence options, and disk size.
// Proper configuration ensures optimal performance and data reliability for your Elasticsearch deployment.
type ElasticsearchKubernetesElasticsearchContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of Elasticsearch pods to deploy
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The CPU and memory resources allocated to the Elasticsearch container.
	Resources *kubernetes.ContainerResources `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	// A flag to enable or disable data persistence for Elasticsearch.
	// When enabled, in-memory data is persisted to a storage volume, allowing data to survive pod restarts.
	IsPersistenceEnabled bool   `protobuf:"varint,3,opt,name=is_persistence_enabled,json=isPersistenceEnabled,proto3" json:"is_persistence_enabled,omitempty"`
	DiskSize             string `protobuf:"bytes,4,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesElasticsearchContainer) Reset() {
	*x = ElasticsearchKubernetesElasticsearchContainer{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesElasticsearchContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesElasticsearchContainer) ProtoMessage() {}

func (x *ElasticsearchKubernetesElasticsearchContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesElasticsearchContainer.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesElasticsearchContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetIsPersistenceEnabled() bool {
	if x != nil {
		return x.IsPersistenceEnabled
	}
	return false
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetDiskSize() string {
	if x != nil {
		return x.DiskSize
	}
	return ""
}

// **ElasticsearchKubernetesKibanaContainer** specifies the configuration for the Kibana container.
// Kibana provides visualization capabilities for data stored in Elasticsearch.
// This message allows you to enable Kibana, set the number of replicas, and allocate resources accordingly.
type ElasticsearchKubernetesKibanaContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A flag to enable or disable the deployment of Kibana for Elasticsearch.
	// Defaults to `false`.
	IsEnabled bool `protobuf:"varint,1,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	// The number of Kibana pods to deploy.
	// Recommended default is 1.
	Replicas int32 `protobuf:"varint,2,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The CPU and memory resources allocated to the Kibana container.
	Resources     *kubernetes.ContainerResources `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesKibanaContainer) Reset() {
	*x = ElasticsearchKubernetesKibanaContainer{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesKibanaContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesKibanaContainer) ProtoMessage() {}

func (x *ElasticsearchKubernetesKibanaContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesKibanaContainer.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesKibanaContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *ElasticsearchKubernetesKibanaContainer) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *ElasticsearchKubernetesKibanaContainer) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ElasticsearchKubernetesKibanaContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ElasticsearchKubernetesElasticsearchContainer)(nil),
		Field:         509001,
		Name:          "project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_container",
		Tag:           "bytes,509001,opt,name=default_elasticsearch_container",
		Filename:      "project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ElasticsearchKubernetesKibanaContainer)(nil),
		Field:         509002,
		Name:          "project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_container",
		Tag:           "bytes,509002,opt,name=default_kibana_container",
		Filename:      "project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer default_elasticsearch_container = 509001;
	E_DefaultElasticsearchContainer = &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes[0]
	// optional project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer default_kibana_container = 509002;
	E_DefaultKibanaContainer = &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes[1]
)

var File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Rproject/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto\x12Gproject.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1\x1a\x1bbuf/validate/validate.proto\x1a google/protobuf/descriptor.proto\x1a2project/planton/shared/kubernetes/kubernetes.proto\x1a/project/planton/shared/kubernetes/options.proto\x1a,project/planton/shared/options/options.proto\"\x8d\x04\n" +
	"\x1bElasticsearchKubernetesSpec\x12\xdd\x01\n" +
	"\x17elasticsearch_container\x18\x01 \x01(\v2v.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainerB,\xca\xc4\xf8\x01'\b\x01\x12\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100Mi\x18\x01\"\x031GiR\x16elasticsearchContainer\x12\xc3\x01\n" +
	"\x10kibana_container\x18\x02 \x01(\v2o.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainerB'\xd2\xc4\xf8\x01\"\b\x01\x10\x01\x1a\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100MiR\x0fkibanaContainer\x12H\n" +
	"\aingress\x18\x03 \x01(\v2..project.planton.shared.kubernetes.IngressSpecR\aingress\"\xd3\x04\n" +
	"-ElasticsearchKubernetesElasticsearchContainer\x12\x1a\n" +
	"\breplicas\x18\x01 \x01(\x05R\breplicas\x12S\n" +
	"\tresources\x18\x02 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x124\n" +
	"\x16is_persistence_enabled\x18\x03 \x01(\bR\x14isPersistenceEnabled\x12\x1b\n" +
	"\tdisk_size\x18\x04 \x01(\tR\bdiskSize:\xdd\x02\xbaH\xd9\x02\x1a\xd6\x02\n" +
	"!spec.container.disk_size.required\x12IDisk size is required and must match the format if persistence is enabled\x1a\xe5\x01((!this.is_persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == '')) || (this.is_persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches('^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$')))\"\xb8\x01\n" +
	"&ElasticsearchKubernetesKibanaContainer\x12\x1d\n" +
	"\n" +
	"is_enabled\x18\x01 \x01(\bR\tisEnabled\x12\x1a\n" +
	"\breplicas\x18\x02 \x01(\x05R\breplicas\x12S\n" +
	"\tresources\x18\x03 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesR\tresources:\xdf\x01\n" +
	"\x1fdefault_elasticsearch_container\x12\x1d.google.protobuf.FieldOptions\x18Ɉ\x1f \x01(\v2v.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainerR\x1ddefaultElasticsearchContainer:\xca\x01\n" +
	"\x18default_kibana_container\x12\x1d.google.protobuf.FieldOptions\x18ʈ\x1f \x01(\v2o.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainerR\x16defaultKibanaContainerB\xb1\x04\n" +
	"Kcom.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1B\tSpecProtoP\x01Z\x91\x01github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1;elasticsearchkubernetesv1\xa2\x02\x06PPPKWE\xaa\x02GProject.Planton.Provider.Kubernetes.Workload.Elasticsearchkubernetes.V1\xca\x02GProject\\Planton\\Provider\\Kubernetes\\Workload\\Elasticsearchkubernetes\\V1\xe2\x02SProject\\Planton\\Provider\\Kubernetes\\Workload\\Elasticsearchkubernetes\\V1\\GPBMetadata\xea\x02MProject::Planton::Provider::Kubernetes::Workload::Elasticsearchkubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes = []any{
	(*ElasticsearchKubernetesSpec)(nil),                   // 0: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec
	(*ElasticsearchKubernetesElasticsearchContainer)(nil), // 1: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer
	(*ElasticsearchKubernetesKibanaContainer)(nil),        // 2: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer
	(*kubernetes.IngressSpec)(nil),                        // 3: project.planton.shared.kubernetes.IngressSpec
	(*kubernetes.ContainerResources)(nil),                 // 4: project.planton.shared.kubernetes.ContainerResources
	(*descriptorpb.FieldOptions)(nil),                     // 5: google.protobuf.FieldOptions
}
var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec.elasticsearch_container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer
	2, // 1: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec.kibana_container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer
	3, // 2: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec.ingress:type_name -> project.planton.shared.kubernetes.IngressSpec
	4, // 3: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	4, // 4: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	5, // 5: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_container:extendee -> google.protobuf.FieldOptions
	5, // 6: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_container:extendee -> google.protobuf.FieldOptions
	1, // 7: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer
	2, // 8: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	7, // [7:9] is the sub-list for extension type_name
	5, // [5:7] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_init()
}
func file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_init() {
	if File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes,
		ExtensionInfos:    file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto = out.File
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs = nil
}
