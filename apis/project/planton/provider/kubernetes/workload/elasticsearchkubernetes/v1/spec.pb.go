// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto

package elasticsearchkubernetesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kubernetes "github.com/project-planton/project-planton/apis/project/planton/shared/kubernetes"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **ElasticsearchKubernetesSpec** defines the configuration for deploying Elasticsearch on a Kubernetes cluster.
// This message includes specifications for the Elasticsearch and Kibana, each with their own container and ingress settings.
// By configuring these parameters, you can set up an Elasticsearch deployment tailored to your application's needs,
// including resource allocation, persistence settings, and external access through ingress.
type ElasticsearchKubernetesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The elasticsearch configuration.
	Elasticsearch *ElasticsearchKubernetesElasticsearchSpec `protobuf:"bytes,1,opt,name=elasticsearch,proto3" json:"elasticsearch,omitempty"`
	// The kibana configuration.
	Kibana        *ElasticsearchKubernetesKibanaSpec `protobuf:"bytes,2,opt,name=kibana,proto3" json:"kibana,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesSpec) Reset() {
	*x = ElasticsearchKubernetesSpec{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesSpec) ProtoMessage() {}

func (x *ElasticsearchKubernetesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesSpec.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *ElasticsearchKubernetesSpec) GetElasticsearch() *ElasticsearchKubernetesElasticsearchSpec {
	if x != nil {
		return x.Elasticsearch
	}
	return nil
}

func (x *ElasticsearchKubernetesSpec) GetKibana() *ElasticsearchKubernetesKibanaSpec {
	if x != nil {
		return x.Kibana
	}
	return nil
}

// **ElasticsearchKubernetesElasticsearchSpec** groups Elasticsearch container and ingress configuration.
type ElasticsearchKubernetesElasticsearchSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Container configuration for Elasticsearch.
	Container *ElasticsearchKubernetesElasticsearchContainer `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	// Ingress configuration for Elasticsearch.
	Ingress       *ElasticsearchKubernetesIngress `protobuf:"bytes,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesElasticsearchSpec) Reset() {
	*x = ElasticsearchKubernetesElasticsearchSpec{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesElasticsearchSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesElasticsearchSpec) ProtoMessage() {}

func (x *ElasticsearchKubernetesElasticsearchSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesElasticsearchSpec.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesElasticsearchSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *ElasticsearchKubernetesElasticsearchSpec) GetContainer() *ElasticsearchKubernetesElasticsearchContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *ElasticsearchKubernetesElasticsearchSpec) GetIngress() *ElasticsearchKubernetesIngress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

// **ElasticsearchKubernetesKibanaSpec** groups Kibana enabled flag, container and ingress configuration.
type ElasticsearchKubernetesKibanaSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Flag to enable or disable Kibana deployment. Defaults to false.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Container configuration for Kibana.
	Container *ElasticsearchKubernetesKibanaContainer `protobuf:"bytes,2,opt,name=container,proto3" json:"container,omitempty"`
	// Ingress configuration for Kibana.
	Ingress       *ElasticsearchKubernetesIngress `protobuf:"bytes,3,opt,name=ingress,proto3" json:"ingress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesKibanaSpec) Reset() {
	*x = ElasticsearchKubernetesKibanaSpec{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesKibanaSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesKibanaSpec) ProtoMessage() {}

func (x *ElasticsearchKubernetesKibanaSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesKibanaSpec.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesKibanaSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *ElasticsearchKubernetesKibanaSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ElasticsearchKubernetesKibanaSpec) GetContainer() *ElasticsearchKubernetesKibanaContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *ElasticsearchKubernetesKibanaSpec) GetIngress() *ElasticsearchKubernetesIngress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

// **ElasticsearchKubernetesElasticsearchContainer** specifies the configuration for the Elasticsearch container.
// It includes settings such as the number of replicas, resource allocations, data persistence options, and disk size.
// Proper configuration ensures optimal performance and data reliability for your Elasticsearch deployment.
type ElasticsearchKubernetesElasticsearchContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of Elasticsearch pods to deploy
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The CPU and memory resources allocated to the Elasticsearch container.
	Resources *kubernetes.ContainerResources `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	// A flag to enable or disable data persistence for Elasticsearch.
	// When enabled, in-memory data is persisted to a storage volume, allowing data to survive pod restarts.
	PersistenceEnabled bool   `protobuf:"varint,3,opt,name=persistence_enabled,json=persistenceEnabled,proto3" json:"persistence_enabled,omitempty"`
	DiskSize           string `protobuf:"bytes,4,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesElasticsearchContainer) Reset() {
	*x = ElasticsearchKubernetesElasticsearchContainer{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesElasticsearchContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesElasticsearchContainer) ProtoMessage() {}

func (x *ElasticsearchKubernetesElasticsearchContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesElasticsearchContainer.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesElasticsearchContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{3}
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetPersistenceEnabled() bool {
	if x != nil {
		return x.PersistenceEnabled
	}
	return false
}

func (x *ElasticsearchKubernetesElasticsearchContainer) GetDiskSize() string {
	if x != nil {
		return x.DiskSize
	}
	return ""
}

// **ElasticsearchKubernetesKibanaContainer** specifies the configuration for the Kibana container.
// Kibana provides visualization capabilities for data stored in Elasticsearch.
// This message allows you to set the number of replicas and allocate resources accordingly.
type ElasticsearchKubernetesKibanaContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of Kibana pods to deploy.
	// Recommended default is 1.
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// The CPU and memory resources allocated to the Kibana container.
	Resources     *kubernetes.ContainerResources `protobuf:"bytes,2,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesKibanaContainer) Reset() {
	*x = ElasticsearchKubernetesKibanaContainer{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesKibanaContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesKibanaContainer) ProtoMessage() {}

func (x *ElasticsearchKubernetesKibanaContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesKibanaContainer.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesKibanaContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{4}
}

func (x *ElasticsearchKubernetesKibanaContainer) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *ElasticsearchKubernetesKibanaContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

// **ElasticsearchKubernetesIngress** defines the ingress configuration for Elasticsearch or Kibana.
// It allows you to enable external access and specify the hostname.
type ElasticsearchKubernetesIngress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Flag to enable or disable ingress.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The full hostname for external access (e.g., "elasticsearch.example.com").
	// This hostname will be configured automatically via external-dns.
	// Required when enabled is true.
	Hostname      string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ElasticsearchKubernetesIngress) Reset() {
	*x = ElasticsearchKubernetesIngress{}
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ElasticsearchKubernetesIngress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElasticsearchKubernetesIngress) ProtoMessage() {}

func (x *ElasticsearchKubernetesIngress) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElasticsearchKubernetesIngress.ProtoReflect.Descriptor instead.
func (*ElasticsearchKubernetesIngress) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP(), []int{5}
}

func (x *ElasticsearchKubernetesIngress) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ElasticsearchKubernetesIngress) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ElasticsearchKubernetesElasticsearchSpec)(nil),
		Field:         509001,
		Name:          "project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_spec",
		Tag:           "bytes,509001,opt,name=default_elasticsearch_spec",
		Filename:      "project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ElasticsearchKubernetesKibanaSpec)(nil),
		Field:         509002,
		Name:          "project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_spec",
		Tag:           "bytes,509002,opt,name=default_kibana_spec",
		Filename:      "project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec default_elasticsearch_spec = 509001;
	E_DefaultElasticsearchSpec = &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes[0]
	// optional project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec default_kibana_spec = 509002;
	E_DefaultKibanaSpec = &file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes[1]
)

var File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Rproject/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1/spec.proto\x12Gproject.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1\x1a\x1bbuf/validate/validate.proto\x1a google/protobuf/descriptor.proto\x1a2project/planton/shared/kubernetes/kubernetes.proto\x1a/project/planton/shared/kubernetes/options.proto\x1a,project/planton/shared/options/options.proto\"\x97\x03\n" +
	"\x1bElasticsearchKubernetesSpec\x12\xc7\x01\n" +
	"\relasticsearch\x18\x01 \x01(\v2q.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpecB.\xca\xc4\xf8\x01)\n" +
	"'\b\x01\x12\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100Mi\x18\x01\"\x031GiR\relasticsearch\x12\xad\x01\n" +
	"\x06kibana\x18\x02 \x01(\v2j.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpecB)\xd2\xc4\xf8\x01$\b\x01\x12 \b\x01\x12\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100MiR\x06kibana\"\xc5\x02\n" +
	"(ElasticsearchKubernetesElasticsearchSpec\x12\x94\x01\n" +
	"\tcontainer\x18\x01 \x01(\v2v.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainerR\tcontainer\x12\x81\x01\n" +
	"\aingress\x18\x02 \x01(\v2g.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesIngressR\aingress\"\xd1\x02\n" +
	"!ElasticsearchKubernetesKibanaSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x8d\x01\n" +
	"\tcontainer\x18\x02 \x01(\v2o.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainerR\tcontainer\x12\x81\x01\n" +
	"\aingress\x18\x03 \x01(\v2g.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesIngressR\aingress\"\xd6\x04\n" +
	"-ElasticsearchKubernetesElasticsearchContainer\x12\x1a\n" +
	"\breplicas\x18\x01 \x01(\x05R\breplicas\x12S\n" +
	"\tresources\x18\x02 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesR\tresources\x12/\n" +
	"\x13persistence_enabled\x18\x03 \x01(\bR\x12persistenceEnabled\x12\x1b\n" +
	"\tdisk_size\x18\x04 \x01(\tR\bdiskSize:\xe5\x02\xbaH\xe1\x02\x1a\xde\x02\n" +
	"/spec.elasticsearch.container.disk_size.required\x12IDisk size is required and must match the format if persistence is enabled\x1a\xdf\x01((!this.persistence_enabled && (size(this.disk_size) == 0 || this.disk_size == '')) || (this.persistence_enabled && size(this.disk_size) > 0 && this.disk_size.matches('^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$')))\"\x99\x01\n" +
	"&ElasticsearchKubernetesKibanaContainer\x12\x1a\n" +
	"\breplicas\x18\x01 \x01(\x05R\breplicas\x12S\n" +
	"\tresources\x18\x02 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesR\tresources\"\xd5\x01\n" +
	"\x1eElasticsearchKubernetesIngress\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname:}\xbaHz\x1ax\n" +
	"\x1espec.ingress.hostname.required\x12,hostname is required when ingress is enabled\x1a(!this.enabled || size(this.hostname) > 0:\xd0\x01\n" +
	"\x1adefault_elasticsearch_spec\x12\x1d.google.protobuf.FieldOptions\x18Ɉ\x1f \x01(\v2q.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpecR\x18defaultElasticsearchSpec:\xbb\x01\n" +
	"\x13default_kibana_spec\x12\x1d.google.protobuf.FieldOptions\x18ʈ\x1f \x01(\v2j.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpecR\x11defaultKibanaSpecB\xb1\x04\n" +
	"Kcom.project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1B\tSpecProtoP\x01Z\x91\x01github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/elasticsearchkubernetes/v1;elasticsearchkubernetesv1\xa2\x02\x06PPPKWE\xaa\x02GProject.Planton.Provider.Kubernetes.Workload.Elasticsearchkubernetes.V1\xca\x02GProject\\Planton\\Provider\\Kubernetes\\Workload\\Elasticsearchkubernetes\\V1\xe2\x02SProject\\Planton\\Provider\\Kubernetes\\Workload\\Elasticsearchkubernetes\\V1\\GPBMetadata\xea\x02MProject::Planton::Provider::Kubernetes::Workload::Elasticsearchkubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes = []any{
	(*ElasticsearchKubernetesSpec)(nil),                   // 0: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec
	(*ElasticsearchKubernetesElasticsearchSpec)(nil),      // 1: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec
	(*ElasticsearchKubernetesKibanaSpec)(nil),             // 2: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec
	(*ElasticsearchKubernetesElasticsearchContainer)(nil), // 3: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer
	(*ElasticsearchKubernetesKibanaContainer)(nil),        // 4: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer
	(*ElasticsearchKubernetesIngress)(nil),                // 5: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesIngress
	(*kubernetes.ContainerResources)(nil),                 // 6: project.planton.shared.kubernetes.ContainerResources
	(*descriptorpb.FieldOptions)(nil),                     // 7: google.protobuf.FieldOptions
}
var file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs = []int32{
	1,  // 0: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec.elasticsearch:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec
	2,  // 1: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesSpec.kibana:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec
	3,  // 2: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec.container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer
	5,  // 3: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec.ingress:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesIngress
	4,  // 4: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec.container:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer
	5,  // 5: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec.ingress:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesIngress
	6,  // 6: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	6,  // 7: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	7,  // 8: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_spec:extendee -> google.protobuf.FieldOptions
	7,  // 9: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_spec:extendee -> google.protobuf.FieldOptions
	1,  // 10: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_elasticsearch_spec:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesElasticsearchSpec
	2,  // 11: project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.default_kibana_spec:type_name -> project.planton.provider.kubernetes.workload.elasticsearchkubernetes.v1.ElasticsearchKubernetesKibanaSpec
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	10, // [10:12] is the sub-list for extension type_name
	8,  // [8:10] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_init()
}
func file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_init() {
	if File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_msgTypes,
		ExtensionInfos:    file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_extTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto = out.File
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workload_elasticsearchkubernetes_v1_spec_proto_depIdxs = nil
}
