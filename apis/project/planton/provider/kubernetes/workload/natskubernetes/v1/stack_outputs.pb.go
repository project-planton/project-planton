// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workload/natskubernetes/v1/stack_outputs.proto

package natskubernetesv1

import (
	kubernetes "github.com/project-planton/project-planton/apis/project/planton/shared/kubernetes"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// nats-kubernetes stack outputs captures key runtime info after provisioning.
type NatsKubernetesStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kubernetes namespace in which the nats cluster is deployed.
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// internal dns url for clients (e.g. "nats://nats.default.svc:4222").
	ClientUrlInternal string `protobuf:"bytes,2,opt,name=client_url_internal,json=clientUrlInternal,proto3" json:"client_url_internal,omitempty"`
	// external url if ingress or load-balancer is enabled.
	ClientUrlExternal string `protobuf:"bytes,3,opt,name=client_url_external,json=clientUrlExternal,proto3" json:"client_url_external,omitempty"`
	// reference to the secret that stores the auth token (blank if auth disabled).
	AuthTokenSecret *kubernetes.KubernetesSecretKey `protobuf:"bytes,4,opt,name=auth_token_secret,json=authTokenSecret,proto3" json:"auth_token_secret,omitempty"`
	// jet-stream domain configured for the cluster (blank if jet-stream disabled).
	JetStreamDomain string `protobuf:"bytes,5,opt,name=jet_stream_domain,json=jetStreamDomain,proto3" json:"jet_stream_domain,omitempty"`
	// prometheus metrics endpoint (e.g. "http://nats-prom.default.svc:7777/metrics").
	MetricsEndpoint string `protobuf:"bytes,6,opt,name=metrics_endpoint,json=metricsEndpoint,proto3" json:"metrics_endpoint,omitempty"`
	// kubernetes secret containing the tls certificate and key (blank if tls disabled).
	TlsSecret     *kubernetes.KubernetesSecretKey `protobuf:"bytes,7,opt,name=tls_secret,json=tlsSecret,proto3" json:"tls_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NatsKubernetesStackOutputs) Reset() {
	*x = NatsKubernetesStackOutputs{}
	mi := &file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NatsKubernetesStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NatsKubernetesStackOutputs) ProtoMessage() {}

func (x *NatsKubernetesStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NatsKubernetesStackOutputs.ProtoReflect.Descriptor instead.
func (*NatsKubernetesStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *NatsKubernetesStackOutputs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NatsKubernetesStackOutputs) GetClientUrlInternal() string {
	if x != nil {
		return x.ClientUrlInternal
	}
	return ""
}

func (x *NatsKubernetesStackOutputs) GetClientUrlExternal() string {
	if x != nil {
		return x.ClientUrlExternal
	}
	return ""
}

func (x *NatsKubernetesStackOutputs) GetAuthTokenSecret() *kubernetes.KubernetesSecretKey {
	if x != nil {
		return x.AuthTokenSecret
	}
	return nil
}

func (x *NatsKubernetesStackOutputs) GetJetStreamDomain() string {
	if x != nil {
		return x.JetStreamDomain
	}
	return ""
}

func (x *NatsKubernetesStackOutputs) GetMetricsEndpoint() string {
	if x != nil {
		return x.MetricsEndpoint
	}
	return ""
}

func (x *NatsKubernetesStackOutputs) GetTlsSecret() *kubernetes.KubernetesSecretKey {
	if x != nil {
		return x.TlsSecret
	}
	return nil
}

var File_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Rproject/planton/provider/kubernetes/workload/natskubernetes/v1/stack_outputs.proto\x12?project.planton.provider.kubernetes.workloads.natskubernetes.v1\x1a2project/planton/shared/kubernetes/kubernetes.proto\"\xac\x03\n" +
	"\x1aNatsKubernetesStackOutputs\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12.\n" +
	"\x13client_url_internal\x18\x02 \x01(\tR\x11clientUrlInternal\x12.\n" +
	"\x13client_url_external\x18\x03 \x01(\tR\x11clientUrlExternal\x12b\n" +
	"\x11auth_token_secret\x18\x04 \x01(\v26.project.planton.shared.kubernetes.KubernetesSecretKeyR\x0fauthTokenSecret\x12*\n" +
	"\x11jet_stream_domain\x18\x05 \x01(\tR\x0fjetStreamDomain\x12)\n" +
	"\x10metrics_endpoint\x18\x06 \x01(\tR\x0fmetricsEndpoint\x12U\n" +
	"\n" +
	"tls_secret\x18\a \x01(\v26.project.planton.shared.kubernetes.KubernetesSecretKeyR\ttlsSecretB\xfe\x03\n" +
	"Ccom.project.planton.provider.kubernetes.workloads.natskubernetes.v1B\x11StackOutputsProtoP\x01Z\x7fgithub.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workload/natskubernetes/v1;natskubernetesv1\xa2\x02\x06PPPKWN\xaa\x02?Project.Planton.Provider.Kubernetes.Workloads.Natskubernetes.V1\xca\x02?Project\\Planton\\Provider\\Kubernetes\\Workloads\\Natskubernetes\\V1\xe2\x02KProject\\Planton\\Provider\\Kubernetes\\Workloads\\Natskubernetes\\V1\\GPBMetadata\xea\x02EProject::Planton::Provider::Kubernetes::Workloads::Natskubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_goTypes = []any{
	(*NatsKubernetesStackOutputs)(nil),     // 0: project.planton.provider.kubernetes.workloads.natskubernetes.v1.NatsKubernetesStackOutputs
	(*kubernetes.KubernetesSecretKey)(nil), // 1: project.planton.shared.kubernetes.KubernetesSecretKey
}
var file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.kubernetes.workloads.natskubernetes.v1.NatsKubernetesStackOutputs.auth_token_secret:type_name -> project.planton.shared.kubernetes.KubernetesSecretKey
	1, // 1: project.planton.provider.kubernetes.workloads.natskubernetes.v1.NatsKubernetesStackOutputs.tls_secret:type_name -> project.planton.shared.kubernetes.KubernetesSecretKey
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_init()
}
func file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto = out.File
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workload_natskubernetes_v1_stack_outputs_proto_depIdxs = nil
}
