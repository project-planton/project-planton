syntax = "proto3";

package project.planton.provider.kubernetes.workloads.grafanakubernetes.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/kubernetes/kubernetes.proto";
import "project/planton/shared/kubernetes/options.proto";

// **GrafanaKubernetesSpec** defines the configuration for deploying Grafana on a Kubernetes cluster.
// This message specifies the parameters needed to create and manage a Grafana deployment within a Kubernetes environment.
// It includes container specifications and ingress settings to control resource allocation and external access.
message GrafanaKubernetesSpec {
  // The container specifications for the Grafana deployment.
  GrafanaKubernetesSpecContainer container = 1 [
    (buf.validate.field).required = true
  ];

  // The ingress configuration for the Grafana deployment.
  project.planton.shared.kubernetes.IngressSpec ingress = 3;
}

// **GrafanaKubernetesSpecContainer** specifies the container configuration for the Grafana application.
// It includes resource allocations for CPU and memory to ensure the application runs efficiently.
// Recommended defaults: CPU requests - 50m, Memory requests - 256Mi, CPU limits - 1, Memory limits - 1Gi.
message GrafanaKubernetesSpecContainer {
  // The CPU and memory resources allocated to the Grafana container.
  project.planton.shared.kubernetes.ContainerResources resources = 1 [
    (project.planton.shared.kubernetes.default_container_resources) = {
      limits {
        cpu: "1000m"
        memory: "1Gi"
      },
      requests {
        cpu: "50m"
        memory: "100Mi"
      }
    }
  ];
}
