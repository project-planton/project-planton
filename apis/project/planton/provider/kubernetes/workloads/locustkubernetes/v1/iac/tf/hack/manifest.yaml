apiVersion: kubernetes.project-planton.org/v1
kind: LocustKubernetes
metadata:
  name: test-locust-cluster
spec:
  masterContainer:
    replicas: 1
    resources:
      limits:
        cpu: 3000m
        memory: 3Gi
      requests:
        cpu: 250m
        memory: 250Mi
  workerContainer:
    replicas: 1
    resources:
      limits:
        cpu: 3000m
        memory: 3Gi
      requests:
        cpu: 250m
        memory: 250Mi
  ingress:
    isEnabled: true
    dnsDomain: example.com
  loadTest:
    name: load-test-for-demo
    mainPyContent: >
      # this is example code do replace it as required

      # -*- coding: utf-8 -*-


      from locust import HttpUser, task, between

      from lib.functions import choose_random_page



      default_headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X
      10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100
      Safari/537.36'}



      class WebsiteUser(HttpUser):
          wait_time = between(1, 2)

          @task(1)
          def get_index(self):
              self.client.get("/", headers=default_headers)

          @task(3)
          def get_random_page(self):
            self.client.get(choose_random_page(), headers=default_headers)
    libFilesContent:
      "functionspy": |
        # this is example code do replace it as required
        # -*- coding: utf-8 -*-

        import random


        def choose_random_page():
            pages = [
                '/policies/privacy/',
                '/contact/',
                '/about/',
                '/search/howsearchworks/crawling-indexing/',
                '/search/howsearchworks/algorithms/'
            ]

            return random.choice(pages)
      "initpy": |
        # -*- coding: utf-8 -*-
