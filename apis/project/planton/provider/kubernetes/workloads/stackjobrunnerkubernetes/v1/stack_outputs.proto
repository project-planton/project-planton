syntax = "proto3";

package project.planton.provider.kubernetes.workloads.stackjobrunnerkubernetes.v1;

// stack-job-runner-kubernetes stack-outputs
message StackJobRunnerKubernetesStackOutputs {
  //kubernetes namespace in which stack-job-runner-kubernetes is created.
  string namespace = 1;

  //kubernetes service name for stack-job-runner-kubernetes.
  //ex: main-stack-job-runner-kubernetes
  //in the above example, "main" is the name of the stack-job-runner-kubernetes
  string service = 2;

  //command to setup port-forwarding to open stack-job-runner-kubernetes from developers laptop.
  //this might come handy when stack-job-runner-kubernetes ingress is disabled for security reasons.
  //this is rendered by combining stack-job-runner_kubernetes_kubernetes_service and kubernetes_namespace
  //ex: kubectl port-forward svc/stack-job-runner_kubernetes_kubernetes_service -n kubernetes_namespace 6379:6379
  //running the command from this attribute makes it possible to access stack-job-runner-kubernetes using http://localhost:8080/stack-job-runner
  string port_forward_command = 3;

  //kubernetes endpoint to connect to stack-job-runner-kubernetes from the web browser.
  //ex: main-stack-job-runner-kubernetes.namespace.svc.cluster.local:6379
  string kube_endpoint = 4;

  //public endpoint to open stack-job-runner-kubernetes from clients outside kubernetes.
  //ex: https://sjr-planton-pcs-dev-main.data.dev.planton.live
  string external_hostname = 5;

  //internal endpoint to open stack-job-runner-kubernetes from clients inside kubernetes.
  //ex: https://sjr-planton-pcs-dev-main.data-internal.dev.planton.live
  string internal_hostname = 6;
}
