// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workloads/helmrelease/v1/spec.proto

package helmreleasev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **HelmReleaseSpec** defines the configuration for deploying a Helm release on a Kubernetes cluster.
// This message specifies the parameters needed to create and manage a Helm chart deployment within a Kubernetes environment.
// By configuring the Helm chart specifications, you can deploy applications packaged as Helm charts with customized values.
type HelmReleaseSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The repository URL where the Helm chart is hosted.
	// For example, "https://charts.helm.sh/stable".
	// an example for chart-repo (redis chart) can be found in https://artifacthub.io/packages/helm/bitnami/redis?modal=install
	Repo string `protobuf:"bytes,1,opt,name=repo,proto3" json:"repo,omitempty"`
	// The name of the Helm chart to deploy.
	// For example, "nginx-ingress".
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The version of the Helm chart to deploy.
	// For example, "1.41.3".
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// A map of key-value pairs representing custom values for the Helm chart.
	// These values override the default settings in the chart's values.yaml file.
	Values        map[string]string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelmReleaseSpec) Reset() {
	*x = HelmReleaseSpec{}
	mi := &file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmReleaseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmReleaseSpec) ProtoMessage() {}

func (x *HelmReleaseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmReleaseSpec.ProtoReflect.Descriptor instead.
func (*HelmReleaseSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *HelmReleaseSpec) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *HelmReleaseSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HelmReleaseSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HelmReleaseSpec) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Gproject/planton/provider/kubernetes/workloads/helmrelease/v1/spec.proto\x12<project.planton.provider.kubernetes.workloads.helmrelease.v1\x1a\x1bbuf/validate/validate.proto\"\x99\x02\n" +
	"\x0fHelmReleaseSpec\x12\x1a\n" +
	"\x04repo\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04repo\x12\x1a\n" +
	"\x04name\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x04name\x12 \n" +
	"\aversion\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\aversion\x12q\n" +
	"\x06values\x18\x04 \x03(\v2Y.project.planton.provider.kubernetes.workloads.helmrelease.v1.HelmReleaseSpec.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\xe2\x03\n" +
	"@com.project.planton.provider.kubernetes.workloads.helmrelease.v1B\tSpecProtoP\x01Zzgithub.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workloads/helmrelease/v1;helmreleasev1\xa2\x02\x06PPPKWH\xaa\x02<Project.Planton.Provider.Kubernetes.Workloads.Helmrelease.V1\xca\x02<Project\\Planton\\Provider\\Kubernetes\\Workloads\\Helmrelease\\V1\xe2\x02HProject\\Planton\\Provider\\Kubernetes\\Workloads\\Helmrelease\\V1\\GPBMetadata\xea\x02BProject::Planton::Provider::Kubernetes::Workloads::Helmrelease::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_goTypes = []any{
	(*HelmReleaseSpec)(nil), // 0: project.planton.provider.kubernetes.workloads.helmrelease.v1.HelmReleaseSpec
	nil,                     // 1: project.planton.provider.kubernetes.workloads.helmrelease.v1.HelmReleaseSpec.ValuesEntry
}
var file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.kubernetes.workloads.helmrelease.v1.HelmReleaseSpec.values:type_name -> project.planton.provider.kubernetes.workloads.helmrelease.v1.HelmReleaseSpec.ValuesEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_init() }
func file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_init() {
	if File_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto = out.File
	file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workloads_helmrelease_v1_spec_proto_depIdxs = nil
}
