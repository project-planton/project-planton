// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/workloads/keycloakkubernetes/v1/spec.proto

package keycloakkubernetesv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	kubernetes "github.com/project-planton/project-planton/apis/project/planton/shared/kubernetes"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// **KeycloakKubernetesSpec** defines the configuration for deploying Keycloak on a Kubernetes cluster.
// This message specifies the parameters needed to create and manage a Keycloak deployment within a Kubernetes environment.
// It includes container specifications and ingress settings to control resource allocation and external access.
type KeycloakKubernetesSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The container specifications for the Keycloak deployment.
	Container *KeycloakKubernetesContainer `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	// The ingress configuration for the Keycloak deployment.
	Ingress       *kubernetes.IngressSpec `protobuf:"bytes,2,opt,name=ingress,proto3" json:"ingress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeycloakKubernetesSpec) Reset() {
	*x = KeycloakKubernetesSpec{}
	mi := &file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeycloakKubernetesSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeycloakKubernetesSpec) ProtoMessage() {}

func (x *KeycloakKubernetesSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeycloakKubernetesSpec.ProtoReflect.Descriptor instead.
func (*KeycloakKubernetesSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *KeycloakKubernetesSpec) GetContainer() *KeycloakKubernetesContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

func (x *KeycloakKubernetesSpec) GetIngress() *kubernetes.IngressSpec {
	if x != nil {
		return x.Ingress
	}
	return nil
}

// **KeycloakKubernetesContainer** specifies the container configuration for the Keycloak application.
// It includes resource allocations for CPU and memory to ensure the application runs efficiently.
// Recommended defaults: CPU requests - 50m, Memory requests - 256Mi, CPU limits - 1, Memory limits - 1Gi.
type KeycloakKubernetesContainer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CPU and memory resources allocated to the Keycloak container.
	Resources     *kubernetes.ContainerResources `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeycloakKubernetesContainer) Reset() {
	*x = KeycloakKubernetesContainer{}
	mi := &file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeycloakKubernetesContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeycloakKubernetesContainer) ProtoMessage() {}

func (x *KeycloakKubernetesContainer) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeycloakKubernetesContainer.ProtoReflect.Descriptor instead.
func (*KeycloakKubernetesContainer) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *KeycloakKubernetesContainer) GetResources() *kubernetes.ContainerResources {
	if x != nil {
		return x.Resources
	}
	return nil
}

var File_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Nproject/planton/provider/kubernetes/workloads/keycloakkubernetes/v1/spec.proto\x12Cproject.planton.provider.kubernetes.workloads.keycloakkubernetes.v1\x1a\x1bbuf/validate/validate.proto\x1a2project/planton/shared/kubernetes/kubernetes.proto\x1a/project/planton/shared/kubernetes/options.proto\"\xe2\x01\n" +
	"\x16KeycloakKubernetesSpec\x12~\n" +
	"\tcontainer\x18\x01 \x01(\v2`.project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesContainerR\tcontainer\x12H\n" +
	"\aingress\x18\x02 \x01(\v2..project.planton.shared.kubernetes.IngressSpecR\aingress\"\x95\x01\n" +
	"\x1bKeycloakKubernetesContainer\x12v\n" +
	"\tresources\x18\x01 \x01(\v25.project.planton.shared.kubernetes.ContainerResourcesB!\xba\xfb\xa4\x02\x1c\n" +
	"\f\n" +
	"\x051000m\x12\x031Gi\x12\f\n" +
	"\x0350m\x12\x05100MiR\tresourcesB\x94\x04\n" +
	"Gcom.project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1B\tSpecProtoP\x01Z\x88\x01github.com/project-planton/project-planton/apis/project/planton/provider/kubernetes/workloads/keycloakkubernetes/v1;keycloakkubernetesv1\xa2\x02\x06PPPKWK\xaa\x02CProject.Planton.Provider.Kubernetes.Workloads.Keycloakkubernetes.V1\xca\x02CProject\\Planton\\Provider\\Kubernetes\\Workloads\\Keycloakkubernetes\\V1\xe2\x02OProject\\Planton\\Provider\\Kubernetes\\Workloads\\Keycloakkubernetes\\V1\\GPBMetadata\xea\x02IProject::Planton::Provider::Kubernetes::Workloads::Keycloakkubernetes::V1b\x06proto3"

var (
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDescData
}

var file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_goTypes = []any{
	(*KeycloakKubernetesSpec)(nil),        // 0: project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesSpec
	(*KeycloakKubernetesContainer)(nil),   // 1: project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesContainer
	(*kubernetes.IngressSpec)(nil),        // 2: project.planton.shared.kubernetes.IngressSpec
	(*kubernetes.ContainerResources)(nil), // 3: project.planton.shared.kubernetes.ContainerResources
}
var file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesSpec.container:type_name -> project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesContainer
	2, // 1: project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesSpec.ingress:type_name -> project.planton.shared.kubernetes.IngressSpec
	3, // 2: project.planton.provider.kubernetes.workloads.keycloakkubernetes.v1.KeycloakKubernetesContainer.resources:type_name -> project.planton.shared.kubernetes.ContainerResources
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_init()
}
func file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_init() {
	if File_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDesc), len(file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto = out.File
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_goTypes = nil
	file_project_planton_provider_kubernetes_workloads_keycloakkubernetes_v1_spec_proto_depIdxs = nil
}
