// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/provider.proto

package kubernetes

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KubernetesProvider enum represents the various Kubernetes providers.
// This enumeration allows specifying the type of Kubernetes cluster being used, such as GKE, EKS, or AKS, with additional context on each.
type KubernetesProvider int32

const (
	KubernetesProvider_kubernetes_provider_unspecified KubernetesProvider = 0 // Unspecified Kubernetes provider.
	KubernetesProvider_gcp_gke                         KubernetesProvider = 1 // Google Kubernetes Engine (GKE) - A managed Kubernetes service by Google Cloud that provides automated cluster management and scaling.
	KubernetesProvider_aws_eks                         KubernetesProvider = 2 // Amazon Elastic Kubernetes Service (EKS) - A managed Kubernetes service by AWS that simplifies the deployment and management of Kubernetes clusters.
	KubernetesProvider_azure_aks                       KubernetesProvider = 3 // Azure Kubernetes Service (AKS) - A managed Kubernetes service by Microsoft Azure that provides Kubernetes cluster orchestration and management.
	KubernetesProvider_digital_ocean_doks              KubernetesProvider = 4 // DigitalOcean Kubernetes Service (DOKS) - A managed Kubernetes service by DigitalOcean that simplifies the deployment and management of Kubernetes clusters.
)

// Enum value maps for KubernetesProvider.
var (
	KubernetesProvider_name = map[int32]string{
		0: "kubernetes_provider_unspecified",
		1: "gcp_gke",
		2: "aws_eks",
		3: "azure_aks",
		4: "digital_ocean_doks",
	}
	KubernetesProvider_value = map[string]int32{
		"kubernetes_provider_unspecified": 0,
		"gcp_gke":                         1,
		"aws_eks":                         2,
		"azure_aks":                       3,
		"digital_ocean_doks":              4,
	}
)

func (x KubernetesProvider) Enum() *KubernetesProvider {
	p := new(KubernetesProvider)
	*p = x
	return p
}

func (x KubernetesProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_kubernetes_provider_proto_enumTypes[0].Descriptor()
}

func (KubernetesProvider) Type() protoreflect.EnumType {
	return &file_project_planton_provider_kubernetes_provider_proto_enumTypes[0]
}

func (x KubernetesProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesProvider.Descriptor instead.
func (KubernetesProvider) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{0}
}

// KubernetesProviderConfig message represents the specification required to create or connect a Kubernetes Cluster.
// This message consolidates all necessary input parameters to establish a connection with a Kubernetes cluster, ensuring accurate configuration and validation of credentials.
// Fields include environment information, Kubernetes provider details, and credentials for GKE clusters.
type KubernetesProviderConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Kubernetes provider, specifying the type of cluster (e.g., gcp_gke, aws_eks, azure_aks).
	// For more detailed information, refer to the official documentation of each provider.
	Provider KubernetesProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=project.planton.provider.kubernetes.KubernetesProvider" json:"provider,omitempty"`
	// Credential specification for GCP GKE provider.
	// This field contains detailed information for connecting to a Google Kubernetes Engine (GKE) cluster.
	GcpGke *KubernetesClusterCredentialGcpGke `protobuf:"bytes,2,opt,name=gcp_gke,json=gcpGke,proto3" json:"gcp_gke,omitempty"`
	// Credential specification for AWS EKS provider.
	// This field contains detailed information for connecting to a Elastic Kubernetes Engine(EKS) cluster.
	AwsEks *KubernetesClusterCredentialAwsEks `protobuf:"bytes,3,opt,name=aws_eks,json=awsEks,proto3" json:"aws_eks,omitempty"`
	// Credential specification for Azure AKS provider.
	// This field contains detailed information for connecting to a Azure Kubernetes Service(AKS) cluster.
	AzureAks         *KubernetesClusterCredentialAzureAks         `protobuf:"bytes,4,opt,name=azure_aks,json=azureAks,proto3" json:"azure_aks,omitempty"`
	DigitalOceanDoks *KubernetesClusterCredentialDigitalOceanDoks `protobuf:"bytes,5,opt,name=digital_ocean_doks,json=digitalOceanDoks,proto3" json:"digital_ocean_doks,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KubernetesProviderConfig) Reset() {
	*x = KubernetesProviderConfig{}
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesProviderConfig) ProtoMessage() {}

func (x *KubernetesProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesProviderConfig.ProtoReflect.Descriptor instead.
func (*KubernetesProviderConfig) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{0}
}

func (x *KubernetesProviderConfig) GetProvider() KubernetesProvider {
	if x != nil {
		return x.Provider
	}
	return KubernetesProvider_kubernetes_provider_unspecified
}

func (x *KubernetesProviderConfig) GetGcpGke() *KubernetesClusterCredentialGcpGke {
	if x != nil {
		return x.GcpGke
	}
	return nil
}

func (x *KubernetesProviderConfig) GetAwsEks() *KubernetesClusterCredentialAwsEks {
	if x != nil {
		return x.AwsEks
	}
	return nil
}

func (x *KubernetesProviderConfig) GetAzureAks() *KubernetesClusterCredentialAzureAks {
	if x != nil {
		return x.AzureAks
	}
	return nil
}

func (x *KubernetesProviderConfig) GetDigitalOceanDoks() *KubernetesClusterCredentialDigitalOceanDoks {
	if x != nil {
		return x.DigitalOceanDoks
	}
	return nil
}

// KubernetesClusterCredentialGcpGke message represents the specification required to connect to a Google Kubernetes Engine (GKE) cluster.
// This message consolidates the necessary input parameters for establishing a secure connection with a GKE cluster.
type KubernetesClusterCredentialGcpGke struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The cluster endpoint for the GKE cluster.
	// This is a required field and must contain the URL endpoint for the GKE cluster.
	ClusterEndpoint string `protobuf:"bytes,1,opt,name=cluster_endpoint,json=clusterEndpoint,proto3" json:"cluster_endpoint,omitempty"`
	// The cluster Certificate Authority (CA) data for the GKE cluster.
	// This is a required field and must contain the base64 encoded CA certificate.
	ClusterCaData string `protobuf:"bytes,2,opt,name=cluster_ca_data,json=clusterCaData,proto3" json:"cluster_ca_data,omitempty"`
	// The base64 encoded Google Service Account JSON key.
	// This is a required field and must be a valid base64 encoded string representing the service account key.
	ServiceAccountKeyBase64 string `protobuf:"bytes,3,opt,name=service_account_key_base64,json=serviceAccountKeyBase64,proto3" json:"service_account_key_base64,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *KubernetesClusterCredentialGcpGke) Reset() {
	*x = KubernetesClusterCredentialGcpGke{}
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesClusterCredentialGcpGke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesClusterCredentialGcpGke) ProtoMessage() {}

func (x *KubernetesClusterCredentialGcpGke) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesClusterCredentialGcpGke.ProtoReflect.Descriptor instead.
func (*KubernetesClusterCredentialGcpGke) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{1}
}

func (x *KubernetesClusterCredentialGcpGke) GetClusterEndpoint() string {
	if x != nil {
		return x.ClusterEndpoint
	}
	return ""
}

func (x *KubernetesClusterCredentialGcpGke) GetClusterCaData() string {
	if x != nil {
		return x.ClusterCaData
	}
	return ""
}

func (x *KubernetesClusterCredentialGcpGke) GetServiceAccountKeyBase64() string {
	if x != nil {
		return x.ServiceAccountKeyBase64
	}
	return ""
}

// KubernetesClusterCredentialAwsEks message represents the specification required to connect to a Elastic Kubernetes Service (EKS) cluster.
// This message consolidates the necessary input parameters for establishing a secure connection with a EKS cluster.
type KubernetesClusterCredentialAwsEks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesClusterCredentialAwsEks) Reset() {
	*x = KubernetesClusterCredentialAwsEks{}
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesClusterCredentialAwsEks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesClusterCredentialAwsEks) ProtoMessage() {}

func (x *KubernetesClusterCredentialAwsEks) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesClusterCredentialAwsEks.ProtoReflect.Descriptor instead.
func (*KubernetesClusterCredentialAwsEks) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{2}
}

// KubernetesClusterCredentialAzureEks message represents the specification required to connect to a Azure Kubernetes Service (AKS) cluster.
// This message consolidates the necessary input parameters for establishing a secure connection with a AKS cluster.
type KubernetesClusterCredentialAzureAks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesClusterCredentialAzureAks) Reset() {
	*x = KubernetesClusterCredentialAzureAks{}
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesClusterCredentialAzureAks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesClusterCredentialAzureAks) ProtoMessage() {}

func (x *KubernetesClusterCredentialAzureAks) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesClusterCredentialAzureAks.ProtoReflect.Descriptor instead.
func (*KubernetesClusterCredentialAzureAks) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{3}
}

// KubernetesClusterCredentialDigitalOceanDoks message represents the specification required to connect to a DigitalOcean Kubernetes Service (DOKS) cluster.
type KubernetesClusterCredentialDigitalOceanDoks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KubeConfig    string                 `protobuf:"bytes,1,opt,name=kube_config,json=kubeConfig,proto3" json:"kube_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesClusterCredentialDigitalOceanDoks) Reset() {
	*x = KubernetesClusterCredentialDigitalOceanDoks{}
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesClusterCredentialDigitalOceanDoks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesClusterCredentialDigitalOceanDoks) ProtoMessage() {}

func (x *KubernetesClusterCredentialDigitalOceanDoks) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_kubernetes_provider_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesClusterCredentialDigitalOceanDoks.ProtoReflect.Descriptor instead.
func (*KubernetesClusterCredentialDigitalOceanDoks) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP(), []int{4}
}

func (x *KubernetesClusterCredentialDigitalOceanDoks) GetKubeConfig() string {
	if x != nil {
		return x.KubeConfig
	}
	return ""
}

var File_project_planton_provider_kubernetes_provider_proto protoreflect.FileDescriptor

const file_project_planton_provider_kubernetes_provider_proto_rawDesc = "" +
	"\n" +
	"2project/planton/provider/kubernetes/provider.proto\x12#project.planton.provider.kubernetes\x1a\x1bbuf/validate/validate.proto\"\xa0\x04\n" +
	"\x18KubernetesProviderConfig\x12[\n" +
	"\bprovider\x18\x01 \x01(\x0e27.project.planton.provider.kubernetes.KubernetesProviderB\x06\xbaH\x03\xc8\x01\x01R\bprovider\x12_\n" +
	"\agcp_gke\x18\x02 \x01(\v2F.project.planton.provider.kubernetes.KubernetesClusterCredentialGcpGkeR\x06gcpGke\x12_\n" +
	"\aaws_eks\x18\x03 \x01(\v2F.project.planton.provider.kubernetes.KubernetesClusterCredentialAwsEksR\x06awsEks\x12e\n" +
	"\tazure_aks\x18\x04 \x01(\v2H.project.planton.provider.kubernetes.KubernetesClusterCredentialAzureAksR\bazureAks\x12~\n" +
	"\x12digital_ocean_doks\x18\x05 \x01(\v2P.project.planton.provider.kubernetes.KubernetesClusterCredentialDigitalOceanDoksR\x10digitalOceanDoks\"\xcb\x01\n" +
	"!KubernetesClusterCredentialGcpGke\x121\n" +
	"\x10cluster_endpoint\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x0fclusterEndpoint\x12.\n" +
	"\x0fcluster_ca_data\x18\x02 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\rclusterCaData\x12C\n" +
	"\x1aservice_account_key_base64\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x17serviceAccountKeyBase64\"#\n" +
	"!KubernetesClusterCredentialAwsEks\"%\n" +
	"#KubernetesClusterCredentialAzureAks\"V\n" +
	"+KubernetesClusterCredentialDigitalOceanDoks\x12'\n" +
	"\vkube_config\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"kubeConfig*z\n" +
	"\x12KubernetesProvider\x12#\n" +
	"\x1fkubernetes_provider_unspecified\x10\x00\x12\v\n" +
	"\agcp_gke\x10\x01\x12\v\n" +
	"\aaws_eks\x10\x02\x12\r\n" +
	"\tazure_aks\x10\x03\x12\x16\n" +
	"\x12digital_ocean_doks\x10\x04B\xbd\x02\n" +
	"'com.project.planton.provider.kubernetesB\rProviderProtoP\x01ZSgithub.com/project-planton/project-planton/apis/project/planton/provider/kubernetes\xa2\x02\x04PPPK\xaa\x02#Project.Planton.Provider.Kubernetes\xca\x02#Project\\Planton\\Provider\\Kubernetes\xe2\x02/Project\\Planton\\Provider\\Kubernetes\\GPBMetadata\xea\x02&Project::Planton::Provider::Kubernetesb\x06proto3"

var (
	file_project_planton_provider_kubernetes_provider_proto_rawDescOnce sync.Once
	file_project_planton_provider_kubernetes_provider_proto_rawDescData []byte
)

func file_project_planton_provider_kubernetes_provider_proto_rawDescGZIP() []byte {
	file_project_planton_provider_kubernetes_provider_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_kubernetes_provider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_provider_proto_rawDesc), len(file_project_planton_provider_kubernetes_provider_proto_rawDesc)))
	})
	return file_project_planton_provider_kubernetes_provider_proto_rawDescData
}

var file_project_planton_provider_kubernetes_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_kubernetes_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_project_planton_provider_kubernetes_provider_proto_goTypes = []any{
	(KubernetesProvider)(0),                             // 0: project.planton.provider.kubernetes.KubernetesProvider
	(*KubernetesProviderConfig)(nil),                    // 1: project.planton.provider.kubernetes.KubernetesProviderConfig
	(*KubernetesClusterCredentialGcpGke)(nil),           // 2: project.planton.provider.kubernetes.KubernetesClusterCredentialGcpGke
	(*KubernetesClusterCredentialAwsEks)(nil),           // 3: project.planton.provider.kubernetes.KubernetesClusterCredentialAwsEks
	(*KubernetesClusterCredentialAzureAks)(nil),         // 4: project.planton.provider.kubernetes.KubernetesClusterCredentialAzureAks
	(*KubernetesClusterCredentialDigitalOceanDoks)(nil), // 5: project.planton.provider.kubernetes.KubernetesClusterCredentialDigitalOceanDoks
}
var file_project_planton_provider_kubernetes_provider_proto_depIdxs = []int32{
	0, // 0: project.planton.provider.kubernetes.KubernetesProviderConfig.provider:type_name -> project.planton.provider.kubernetes.KubernetesProvider
	2, // 1: project.planton.provider.kubernetes.KubernetesProviderConfig.gcp_gke:type_name -> project.planton.provider.kubernetes.KubernetesClusterCredentialGcpGke
	3, // 2: project.planton.provider.kubernetes.KubernetesProviderConfig.aws_eks:type_name -> project.planton.provider.kubernetes.KubernetesClusterCredentialAwsEks
	4, // 3: project.planton.provider.kubernetes.KubernetesProviderConfig.azure_aks:type_name -> project.planton.provider.kubernetes.KubernetesClusterCredentialAzureAks
	5, // 4: project.planton.provider.kubernetes.KubernetesProviderConfig.digital_ocean_doks:type_name -> project.planton.provider.kubernetes.KubernetesClusterCredentialDigitalOceanDoks
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_project_planton_provider_kubernetes_provider_proto_init() }
func file_project_planton_provider_kubernetes_provider_proto_init() {
	if File_project_planton_provider_kubernetes_provider_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_kubernetes_provider_proto_rawDesc), len(file_project_planton_provider_kubernetes_provider_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_provider_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_provider_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_kubernetes_provider_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_kubernetes_provider_proto_msgTypes,
	}.Build()
	File_project_planton_provider_kubernetes_provider_proto = out.File
	file_project_planton_provider_kubernetes_provider_proto_goTypes = nil
	file_project_planton_provider_kubernetes_provider_proto_depIdxs = nil
}
