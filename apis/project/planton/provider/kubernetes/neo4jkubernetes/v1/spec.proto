syntax = "proto3";

package project.planton.provider.kubernetes.neo4jkubernetes.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/kubernetes/kubernetes.proto";
import "project/planton/shared/kubernetes/options.proto";
import "project/planton/shared/options/options.proto";
import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
  Neo4jKubernetesContainer default_container = 5008130;
}

// Neo4jKubernetesSpec holds the minimal required fields to deploy a single-node Neo4j Community instance on Kubernetes.
message Neo4jKubernetesSpec {
  // The specifications for the Neo4j container deployment.
  Neo4jKubernetesContainer container = 1 [
    (default_container) = {
      resources:  {
        limits {
          cpu: "1000m"
          memory: "1Gi"
        },
        requests {
          cpu: "50m"
          memory: "100Mi"
        }
      },
      disk_size: "1Gi",
    }
  ];

  // Optional extra memory config for Neo4j (heap, page cache).
  // By default, we rely on Neo4jâ€™s internal defaults if unset.
  Neo4jKubernetesMemoryConfig memory_config = 3;

  //The ingress configuration for the Solr deployment.
  project.planton.shared.kubernetes.IngressSpec ingress = 4;
}

// Neo4jKubernetesContainer defines the container specifications for the Neo4j deployment.
message Neo4jKubernetesContainer {
  // The CPU and memory resources allocated to the Neo4j container.
  project.planton.shared.kubernetes.ContainerResources resources = 1;

  // A flag to enable or disable data persistence for Neo4j.
  // When enabled, Neo4j stores its database files on a persistent volume,
  // allowing data to survive pod restarts.
  // Defaults to `false`.
  bool is_persistence_enabled = 2;

  // Size of the persistent volume if is_persistence_enabled=true (e.g., "10Gi").
  // If is_persistence_enabled=false, this may be ignored or left empty.
  string disk_size = 3;
}

// Neo4jKubernetesMemoryConfig sets optional memory parameters for the database.
message Neo4jKubernetesMemoryConfig {
  // Sets the maximum Java heap size (e.g., "1Gi" or "512m").
  // If omitted, Neo4j uses its default (~512m or auto-detect).
  string heap_max = 1;

  // Sets the page cache size for on-disk data (e.g., "512m").
  // If omitted, Neo4j uses a default or auto-detection.
  string page_cache = 2;
}
