syntax = "proto3";

package project.planton.provider.kubernetes.prometheuskubernetes.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/kubernetes/kubernetes.proto";
import "project/planton/shared/options/options.proto";

/**
 * **PrometheusKubernetesSpec** defines the configuration for deploying Prometheus on a Kubernetes cluster.
 * This message specifies the parameters needed to create and manage a Prometheus deployment within a Kubernetes environment.
 * It includes container specifications and ingress settings to control resource allocation and external access.
 */
message PrometheusKubernetesSpec {
  /**
   * **Required.** The container specifications for the Prometheus deployment.
   */
  PrometheusKubernetesContainer container = 1 [
    (buf.validate.field).required = true
  ];

  /**
   * The ingress configuration for the Prometheus deployment.
   */
  project.planton.shared.kubernetes.IngressSpec ingress = 2;
}

/**
 * **PrometheusKubernetesContainer** specifies the container configuration for the Prometheus application.
 * It includes resource allocations for CPU and memory, the number of replicas, data persistence options, and disk size.
 * Proper configuration ensures optimal performance and data reliability for your Prometheus deployment.
 */
message PrometheusKubernetesContainer {
  option (buf.validate.message).cel = {
    id: "spec.kubernetes.container.disk_size.mandatory",
    expression: "this.is_persistence_enabled && size(this.disk_size) == 0"
        "? 'Disk size is mandatory to enable persistence'"
        ": ''"
  };

  /**
   * **Required.** The number of Prometheus pods to deploy.
   * Recommended default is 1.
   */
  int32 replicas = 1 [
    (project.planton.shared.options.recommended_default) = "1"
  ];

  /**
   * **Required.** The CPU and memory resources allocated to the Prometheus container.
   * Recommended defaults: "cpu-requests: 50m", "memory-requests: 256Mi", "cpu-limits: 1", "memory-limits: 1Gi".
   */
  project.planton.shared.kubernetes.ContainerResources resources = 2 [
    (buf.validate.field).required = true
  ];

  /**
   * A flag to enable or disable data persistence for Prometheus.
   * When enabled, in-memory data is persisted to a storage volume, allowing data to survive pod restarts.
   * The backup data from the persistent volume is restored into Prometheus memory between pod restarts.
   * Defaults to `false`.
   */
  bool is_persistence_enabled = 3;

  /**
   * The size of the persistent volume attached to each Prometheus pod (e.g., "10Gi").
   * Required if `is_persistence_enabled` is `true`.
   * This value specifies the disk size for data persistence.
   * **Note:** This attribute is ignored when persistence is not enabled.
   * **Important:** This value cannot be modified after creation due to Kubernetes limitations on stateful sets.
   */
  string disk_size = 4 [
    (buf.validate.field).cel = {
      id: "spec.kubernetes.container.disk_size.is_valid",
      message: "Disk size value is invalid",
      // Validation regex for disk size.
      expression: "this.matches('^\\\\d+(\\\\.\\\\d+)?\\\\s?(Ki|Mi|Gi|Ti|Pi|Ei|K|M|G|T|P|E)$') && size(this) > 0"
    }
  ];
}
