syntax = "proto3";

package project.planton.provider.aws.awseksnodegroup.v1;

import "buf/validate/validate.proto";
import "project/planton/provider/aws/awseksnodegroup/v1/spec.proto";
import "project/planton/provider/aws/awseksnodegroup/v1/stack_outputs.proto";
import "project/planton/shared/status.proto";
import "project/planton/shared/metadata.proto";

// AwsEksNodeGroup represents a containerized application deployed on AWS ECS.
// This resource manages ECS services that can run on either Fargate or EC2.
message AwsEksNodeGroup {
  // api-version must be set to "aws.project-planton.org/v1".
  string api_version = 1 [
    (buf.validate.field).string.const = "aws.project-planton.org/v1"
  ];

  // resource-kind for this ECS service resource.
  string kind = 2 [
    (buf.validate.field).string.const = "AwsEksNodeGroup"
  ];

  // metadata captures identifying information (name, org, version, etc.)
  // and must pass standard validations for resource naming.
  project.planton.shared.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true
  ];

  // spec holds the core configuration data defining how the ECS service is deployed.
  AwsEksNodeGroupSpec spec = 4 [
    (buf.validate.field).required = true
  ];

  // status holds runtime or post-deployment information.
  AwsEksNodeGroupStatus status = 5;
}

// AwsEksNodeGroupStatus describes the status fields for an ECS service resource.
message AwsEksNodeGroupStatus {
  // stack_outputs captures the outputs returned by Pulumi/Terraform after provisioning.
  AwsEksNodeGroupStackOutputs outputs = 1;
}
