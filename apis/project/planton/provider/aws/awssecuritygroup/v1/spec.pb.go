// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awssecuritygroup/v1/spec.proto

package awssecuritygroupv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AwsSecurityGroupSpec defines the primary configuration for creating an AWS EC2 Security Group in a specified VPC.
type AwsSecurityGroupSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// vpc_id is the ID of the VPC where this Security Group will be created.
	// Example: "vpc-12345abcde"
	// This field is required because every Security Group must belong to one VPC.
	VpcId *v1.StringValueOrRef `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// description provides a short explanation of this Security Group’s purpose.
	// This field is required by AWS and cannot be modified once created without a replacement.
	// Example: "Allows inbound HTTP and SSH for web tier"
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// ingress_rules define the inbound traffic rules for this Security Group.
	// If empty, inbound traffic is fully restricted (deny all).
	Ingress []*SecurityGroupRule `protobuf:"bytes,3,rep,name=ingress,proto3" json:"ingress,omitempty"`
	// egress_rules define the outbound traffic rules for this Security Group.
	// If empty, AWS defaults to allow all outbound traffic unless configured otherwise.
	Egress        []*SecurityGroupRule `protobuf:"bytes,4,rep,name=egress,proto3" json:"egress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsSecurityGroupSpec) Reset() {
	*x = AwsSecurityGroupSpec{}
	mi := &file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsSecurityGroupSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsSecurityGroupSpec) ProtoMessage() {}

func (x *AwsSecurityGroupSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsSecurityGroupSpec.ProtoReflect.Descriptor instead.
func (*AwsSecurityGroupSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsSecurityGroupSpec) GetVpcId() *v1.StringValueOrRef {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *AwsSecurityGroupSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AwsSecurityGroupSpec) GetIngress() []*SecurityGroupRule {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *AwsSecurityGroupSpec) GetEgress() []*SecurityGroupRule {
	if x != nil {
		return x.Egress
	}
	return nil
}

// SecurityGroupRule represents a single inbound or outbound rule in the Security Group.
// For ingress, fill in sources (cidrs or source_security_group_ids).
// For egress, fill in destinations (cidrs or destination_security_group_ids).
type SecurityGroupRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// protocol indicates the protocol for the rule.
	// Common values: "tcp", "udp", "icmp", or "-1" (all protocols).
	Protocol string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// from_port is the starting port in the range.
	// For single-port rules, from_port == to_port.
	// Use 0 when specifying all ports (with protocol = -1) or for ICMP types.
	FromPort int32 `protobuf:"varint,2,opt,name=from_port,json=fromPort,proto3" json:"from_port,omitempty"`
	// to_port is the ending port in the range.
	// For single-port rules, to_port == from_port.
	// Use 0 when specifying all ports (with protocol = -1) or for ICMP codes.
	ToPort int32 `protobuf:"varint,3,opt,name=to_port,json=toPort,proto3" json:"to_port,omitempty"`
	// ipv4_cidrs is the list of IPv4 CIDR blocks allowed (ingress) or targeted (egress).
	// Examples: "10.0.0.0/16", "0.0.0.0/0"
	// If empty, no IPv4 CIDRs are included in this rule.
	Ipv4Cidrs []string `protobuf:"bytes,4,rep,name=ipv4_cidrs,json=ipv4Cidrs,proto3" json:"ipv4_cidrs,omitempty"`
	// ipv6_cidrs is the list of IPv6 CIDR blocks allowed or targeted.
	// Example: "::/0"
	// If empty, no IPv6 CIDRs are included in this rule.
	Ipv6Cidrs []string `protobuf:"bytes,5,rep,name=ipv6_cidrs,json=ipv6Cidrs,proto3" json:"ipv6_cidrs,omitempty"`
	// source_security_group_ids is the list of Security Group IDs that can send traffic (for ingress).
	// Typically used for internal traffic between resources. For egress, this field is less common.
	SourceSecurityGroupIds []string `protobuf:"bytes,6,rep,name=source_security_group_ids,json=sourceSecurityGroupIds,proto3" json:"source_security_group_ids,omitempty"`
	// destination_security_group_ids is the list of Security Group IDs that receive traffic (for egress).
	// Not typically used for ingress. Useful for restricting outbound traffic to specific groups.
	DestinationSecurityGroupIds []string `protobuf:"bytes,7,rep,name=destination_security_group_ids,json=destinationSecurityGroupIds,proto3" json:"destination_security_group_ids,omitempty"`
	// self_reference indicates whether to allow traffic from/to the same Security Group.
	// This is equivalent to referencing the group’s own ID.
	SelfReference bool `protobuf:"varint,8,opt,name=self_reference,json=selfReference,proto3" json:"self_reference,omitempty"`
	// rule_description is an optional explanation of this specific rule,
	// aiding in clarity and maintenance. Max 255 chars recommended.
	Description   string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityGroupRule) Reset() {
	*x = SecurityGroupRule{}
	mi := &file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityGroupRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityGroupRule) ProtoMessage() {}

func (x *SecurityGroupRule) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityGroupRule.ProtoReflect.Descriptor instead.
func (*SecurityGroupRule) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *SecurityGroupRule) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SecurityGroupRule) GetFromPort() int32 {
	if x != nil {
		return x.FromPort
	}
	return 0
}

func (x *SecurityGroupRule) GetToPort() int32 {
	if x != nil {
		return x.ToPort
	}
	return 0
}

func (x *SecurityGroupRule) GetIpv4Cidrs() []string {
	if x != nil {
		return x.Ipv4Cidrs
	}
	return nil
}

func (x *SecurityGroupRule) GetIpv6Cidrs() []string {
	if x != nil {
		return x.Ipv6Cidrs
	}
	return nil
}

func (x *SecurityGroupRule) GetSourceSecurityGroupIds() []string {
	if x != nil {
		return x.SourceSecurityGroupIds
	}
	return nil
}

func (x *SecurityGroupRule) GetDestinationSecurityGroupIds() []string {
	if x != nil {
		return x.DestinationSecurityGroupIds
	}
	return nil
}

func (x *SecurityGroupRule) GetSelfReference() bool {
	if x != nil {
		return x.SelfReference
	}
	return false
}

func (x *SecurityGroupRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_project_planton_provider_aws_awssecuritygroup_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDesc = "" +
	"\n" +
	";project/planton/provider/aws/awssecuritygroup/v1/spec.proto\x120project.planton.provider.aws.awssecuritygroup.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\"\xce\x03\n" +
	"\x14AwsSecurityGroupSpec\x12s\n" +
	"\x06vpc_id\x18\x01 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB$\xbaH\x03\xc8\x01\x01\x88\xd4a\xd9\x01\x92\xd4a\x15status.outputs.vpc_idR\x05vpcId\x12\x84\x01\n" +
	"\vdescription\x18\x02 \x01(\tBb\xbaH_\xba\x01Y\n" +
	"\x18description_length_check\x12*Description must not exceed 255 characters\x1a\x11size(this) <= 255\xc8\x01\x01R\vdescription\x12]\n" +
	"\aingress\x18\x03 \x03(\v2C.project.planton.provider.aws.awssecuritygroup.v1.SecurityGroupRuleR\aingress\x12[\n" +
	"\x06egress\x18\x04 \x03(\v2C.project.planton.provider.aws.awssecuritygroup.v1.SecurityGroupRuleR\x06egress\"\xe0\x03\n" +
	"\x11SecurityGroupRule\x12\"\n" +
	"\bprotocol\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bprotocol\x12\x1b\n" +
	"\tfrom_port\x18\x02 \x01(\x05R\bfromPort\x12\x17\n" +
	"\ato_port\x18\x03 \x01(\x05R\x06toPort\x12\x1d\n" +
	"\n" +
	"ipv4_cidrs\x18\x04 \x03(\tR\tipv4Cidrs\x12\x1d\n" +
	"\n" +
	"ipv6_cidrs\x18\x05 \x03(\tR\tipv6Cidrs\x129\n" +
	"\x19source_security_group_ids\x18\x06 \x03(\tR\x16sourceSecurityGroupIds\x12C\n" +
	"\x1edestination_security_group_ids\x18\a \x03(\tR\x1bdestinationSecurityGroupIds\x12%\n" +
	"\x0eself_reference\x18\b \x01(\bR\rselfReference\x12\x8b\x01\n" +
	"\vdescription\x18\t \x01(\tBi\xbaHf\xba\x01c\n" +
	"\x1drule_description_length_check\x12/Rule description must not exceed 255 characters\x1a\x11size(this) <= 255R\vdescriptionB\x9d\x03\n" +
	"4com.project.planton.provider.aws.awssecuritygroup.v1B\tSpecProtoP\x01Zsgithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awssecuritygroup/v1;awssecuritygroupv1\xa2\x02\x05PPPAA\xaa\x020Project.Planton.Provider.Aws.Awssecuritygroup.V1\xca\x020Project\\Planton\\Provider\\Aws\\Awssecuritygroup\\V1\xe2\x02<Project\\Planton\\Provider\\Aws\\Awssecuritygroup\\V1\\GPBMetadata\xea\x025Project::Planton::Provider::Aws::Awssecuritygroup::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_goTypes = []any{
	(*AwsSecurityGroupSpec)(nil), // 0: project.planton.provider.aws.awssecuritygroup.v1.AwsSecurityGroupSpec
	(*SecurityGroupRule)(nil),    // 1: project.planton.provider.aws.awssecuritygroup.v1.SecurityGroupRule
	(*v1.StringValueOrRef)(nil),  // 2: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.aws.awssecuritygroup.v1.AwsSecurityGroupSpec.vpc_id:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	1, // 1: project.planton.provider.aws.awssecuritygroup.v1.AwsSecurityGroupSpec.ingress:type_name -> project.planton.provider.aws.awssecuritygroup.v1.SecurityGroupRule
	1, // 2: project.planton.provider.aws.awssecuritygroup.v1.AwsSecurityGroupSpec.egress:type_name -> project.planton.provider.aws.awssecuritygroup.v1.SecurityGroupRule
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_init() }
func file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awssecuritygroup_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awssecuritygroup_v1_spec_proto = out.File
	file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awssecuritygroup_v1_spec_proto_depIdxs = nil
}
