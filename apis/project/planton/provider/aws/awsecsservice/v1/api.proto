syntax = "proto3";

package project.planton.provider.aws.awsecsservice.v1;

import "buf/validate/validate.proto";
import "project/planton/provider/aws/awsecsservice/v1/spec.proto";
import "project/planton/provider/aws/awsecsservice/v1/stack_outputs.proto";
import "project/planton/shared/status.proto";
import "project/planton/shared/metadata.proto";

// AwsEcsService represents a containerized application deployed on AWS ECS.
// This resource manages ECS services that can run on either Fargate or EC2.
message AwsEcsService {
  // api-version must be set to "aws.project-planton.org/v1".
  string api_version = 1 [
    (buf.validate.field).string.const = "aws.project-planton.org/v1"
  ];

  // resource-kind for this ECS service resource, typically "AwsEcsService".
  string kind = 2;

  // metadata captures identifying information (name, org, version, etc.)
  // and must pass standard validations for resource naming.
  project.planton.shared.ApiResourceMetadata metadata = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "metadata.name",
      message: "Name must be between 3 and 63 characters long",
      expression: "size(this.name) > 2 && size(this.name) <= 63"
    },
    (buf.validate.field).cel = {
      id: "metadata.version.message",
      message: "Version message is mandatory and cannot be empty",
      expression: "has(this.version.message)"
    }
  ];

  // spec holds the core configuration data defining how the ECS service is deployed.
  AwsEcsServiceSpec spec = 4 [
    (buf.validate.field).required = true
  ];

  // status holds runtime or post-deployment information.
  AwsEcsServiceStatus status = 5;
}

// AwsEcsServiceStatus describes the status fields for an ECS service resource.
message AwsEcsServiceStatus {
  // lifecycle indicates if the resource is active or has been marked for removal.
  project.planton.shared.ApiResourceLifecycle lifecycle = 99;

  // audit contains creation and update information for the resource.
  project.planton.shared.ApiResourceAudit audit = 98;

  // stack_job_id stores the ID of the Pulumi/Terraform stack job responsible for provisioning.
  string stack_job_id = 97;

  // stack_outputs captures the outputs returned by Pulumi/Terraform after provisioning.
  AwsEcsServiceStackOutputs stack_outputs = 1;
}
