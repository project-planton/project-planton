// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsecsservice/v1/stack_outputs.proto

package awsecsservicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AwsEcsServiceStackOutputs describes values returned by Pulumi/Terraform for an ECS service.
type AwsEcsServiceStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// aws_ecs_service_name is the final name of the ECS service.
	AwsEcsServiceName string `protobuf:"bytes,1,opt,name=aws_ecs_service_name,json=awsEcsServiceName,proto3" json:"aws_ecs_service_name,omitempty"`
	// ecs_cluster_name indicates which cluster the service is deployed in.
	EcsClusterName string `protobuf:"bytes,2,opt,name=ecs_cluster_name,json=ecsClusterName,proto3" json:"ecs_cluster_name,omitempty"`
	// load_balancer_dns_name is the DNS name of the ALB/NLB if is_public is true.
	LoadBalancerDnsName string `protobuf:"bytes,3,opt,name=load_balancer_dns_name,json=loadBalancerDnsName,proto3" json:"load_balancer_dns_name,omitempty"`
	// service_url is the final external endpoint if domain_name was configured.
	ServiceUrl string `protobuf:"bytes,4,opt,name=service_url,json=serviceUrl,proto3" json:"service_url,omitempty"`
	// service_discovery_name is the internal DNS name if service discovery was used.
	ServiceDiscoveryName string `protobuf:"bytes,5,opt,name=service_discovery_name,json=serviceDiscoveryName,proto3" json:"service_discovery_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AwsEcsServiceStackOutputs) Reset() {
	*x = AwsEcsServiceStackOutputs{}
	mi := &file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsEcsServiceStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsEcsServiceStackOutputs) ProtoMessage() {}

func (x *AwsEcsServiceStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsEcsServiceStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsEcsServiceStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AwsEcsServiceStackOutputs) GetAwsEcsServiceName() string {
	if x != nil {
		return x.AwsEcsServiceName
	}
	return ""
}

func (x *AwsEcsServiceStackOutputs) GetEcsClusterName() string {
	if x != nil {
		return x.EcsClusterName
	}
	return ""
}

func (x *AwsEcsServiceStackOutputs) GetLoadBalancerDnsName() string {
	if x != nil {
		return x.LoadBalancerDnsName
	}
	return ""
}

func (x *AwsEcsServiceStackOutputs) GetServiceUrl() string {
	if x != nil {
		return x.ServiceUrl
	}
	return ""
}

func (x *AwsEcsServiceStackOutputs) GetServiceDiscoveryName() string {
	if x != nil {
		return x.ServiceDiscoveryName
	}
	return ""
}

var File_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Aproject/planton/provider/aws/awsecsservice/v1/stack_outputs.proto\x12-project.planton.provider.aws.awsecsservice.v1\"\x82\x02\n" +
	"\x19AwsEcsServiceStackOutputs\x12/\n" +
	"\x14aws_ecs_service_name\x18\x01 \x01(\tR\x11awsEcsServiceName\x12(\n" +
	"\x10ecs_cluster_name\x18\x02 \x01(\tR\x0eecsClusterName\x123\n" +
	"\x16load_balancer_dns_name\x18\x03 \x01(\tR\x13loadBalancerDnsName\x12\x1f\n" +
	"\vservice_url\x18\x04 \x01(\tR\n" +
	"serviceUrl\x124\n" +
	"\x16service_discovery_name\x18\x05 \x01(\tR\x14serviceDiscoveryNameB\x90\x03\n" +
	"1com.project.planton.provider.aws.awsecsservice.v1B\x11StackOutputsProtoP\x01Zmgithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecsservice/v1;awsecsservicev1\xa2\x02\x05PPPAA\xaa\x02-Project.Planton.Provider.Aws.Awsecsservice.V1\xca\x02-Project\\Planton\\Provider\\Aws\\Awsecsservice\\V1\xe2\x029Project\\Planton\\Provider\\Aws\\Awsecsservice\\V1\\GPBMetadata\xea\x022Project::Planton::Provider::Aws::Awsecsservice::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_goTypes = []any{
	(*AwsEcsServiceStackOutputs)(nil), // 0: project.planton.provider.aws.awsecsservice.v1.AwsEcsServiceStackOutputs
}
var file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_init() }
func file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto = out.File
	file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_aws_awsecsservice_v1_stack_outputs_proto_depIdxs = nil
}
