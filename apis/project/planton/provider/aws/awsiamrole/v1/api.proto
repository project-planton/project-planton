syntax = "proto3";

package project.planton.provider.aws.awsiamrole.v1;

import "buf/validate/validate.proto";
import "project/planton/provider/aws/awsiamrole/v1/spec.proto";
import "project/planton/provider/aws/awsiamrole/v1/stack_outputs.proto";
import "project/planton/shared/metadata.proto";

// AwsIamRole represents a containerized application deployed on AWS ECS.
// This resource manages ECS services that can run on either Fargate or EC2.
message AwsIamRole {
  // api-version must be set to "aws.project-planton.org/v1".
  string api_version = 1 [(buf.validate.field).string.const = "aws.project-planton.org/v1"];

  // resource-kind for this ECS service resource, typically "AwsIamRole".
  string kind = 2 [(buf.validate.field).string.const = 'AwsIamRole'];

  // metadata captures identifying information (name, org, version, etc.)
  // and must pass standard validations for resource naming.
  project.planton.shared.CloudResourceMetadata metadata = 3 [(buf.validate.field).required = true];

  // spec holds the core configuration data defining how the ECS service is deployed.
  AwsIamRoleSpec spec = 4 [(buf.validate.field).required = true];

  // status holds runtime or post-deployment information.
  AwsIamRoleStatus status = 5;
}

// AwsIamRoleStatus describes the status fields for an ECS service resource.
message AwsIamRoleStatus {
  // stack_outputs captures the outputs returned by Pulumi/Terraform after provisioning.
  AwsIamRoleStackOutputs outputs = 1;
}
