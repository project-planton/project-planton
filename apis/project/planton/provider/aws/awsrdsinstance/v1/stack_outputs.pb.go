// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsrdsinstance/v1/stack_outputs.proto

package awsrdsinstancev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// aws_rds_instance stack outputs
type AwsRdsInstanceStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The DNS endpoint of the RDS instance, which is used to connect to the database.
	RdsInstanceEndpoint string `protobuf:"bytes,1,opt,name=rds_instance_endpoint,json=rdsInstanceEndpoint,proto3" json:"rds_instance_endpoint,omitempty"`
	// The unique identifier of the RDS instance in AWS, used for referencing the instance in API calls and other operations.
	RdsInstanceId string `protobuf:"bytes,2,opt,name=rds_instance_id,json=rdsInstanceId,proto3" json:"rds_instance_id,omitempty"`
	// The Amazon Resource Name (ARN) of the RDS instance, which is a unique identifier that allows access and management of the instance.
	RdsInstanceArn string `protobuf:"bytes,3,opt,name=rds_instance_arn,json=rdsInstanceArn,proto3" json:"rds_instance_arn,omitempty"`
	// The public or private IP address or DNS address of the RDS instance, which applications use to communicate with the database.
	RdsInstanceAddress string `protobuf:"bytes,4,opt,name=rds_instance_address,json=rdsInstanceAddress,proto3" json:"rds_instance_address,omitempty"`
	// The name of the subnet group associated with the RDS instance, which defines the VPC subnets in which the instance is deployed.
	RdsSubnetGroup string `protobuf:"bytes,5,opt,name=rds_subnet_group,json=rdsSubnetGroup,proto3" json:"rds_subnet_group,omitempty"`
	// The security group associated with the RDS instance, which controls inbound and outbound traffic rules for the instance.
	RdsSecurityGroup string `protobuf:"bytes,6,opt,name=rds_security_group,json=rdsSecurityGroup,proto3" json:"rds_security_group,omitempty"`
	// The parameter group assigned to the RDS instance, which contains configuration settings for managing the database engine.
	RdsParameterGroup string `protobuf:"bytes,7,opt,name=rds_parameter_group,json=rdsParameterGroup,proto3" json:"rds_parameter_group,omitempty"`
	// The options group assigned to the RDS instance.
	RdsOptionsGroup string `protobuf:"bytes,8,opt,name=rds_options_group,json=rdsOptionsGroup,proto3" json:"rds_options_group,omitempty"`
	// The port on which the database accepts connections.
	RdsInstancePort int32 `protobuf:"varint,9,opt,name=rds_instance_port,json=rdsInstancePort,proto3" json:"rds_instance_port,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AwsRdsInstanceStackOutputs) Reset() {
	*x = AwsRdsInstanceStackOutputs{}
	mi := &file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsRdsInstanceStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsRdsInstanceStackOutputs) ProtoMessage() {}

func (x *AwsRdsInstanceStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsRdsInstanceStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsRdsInstanceStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AwsRdsInstanceStackOutputs) GetRdsInstanceEndpoint() string {
	if x != nil {
		return x.RdsInstanceEndpoint
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsInstanceId() string {
	if x != nil {
		return x.RdsInstanceId
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsInstanceArn() string {
	if x != nil {
		return x.RdsInstanceArn
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsInstanceAddress() string {
	if x != nil {
		return x.RdsInstanceAddress
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsSubnetGroup() string {
	if x != nil {
		return x.RdsSubnetGroup
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsSecurityGroup() string {
	if x != nil {
		return x.RdsSecurityGroup
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsParameterGroup() string {
	if x != nil {
		return x.RdsParameterGroup
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsOptionsGroup() string {
	if x != nil {
		return x.RdsOptionsGroup
	}
	return ""
}

func (x *AwsRdsInstanceStackOutputs) GetRdsInstancePort() int32 {
	if x != nil {
		return x.RdsInstancePort
	}
	return 0
}

var File_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	"Bproject/planton/provider/aws/awsrdsinstance/v1/stack_outputs.proto\x12.project.planton.provider.aws.awsrdsinstance.v1\"\xb4\x03\n" +
	"\x1aAwsRdsInstanceStackOutputs\x122\n" +
	"\x15rds_instance_endpoint\x18\x01 \x01(\tR\x13rdsInstanceEndpoint\x12&\n" +
	"\x0frds_instance_id\x18\x02 \x01(\tR\rrdsInstanceId\x12(\n" +
	"\x10rds_instance_arn\x18\x03 \x01(\tR\x0erdsInstanceArn\x120\n" +
	"\x14rds_instance_address\x18\x04 \x01(\tR\x12rdsInstanceAddress\x12(\n" +
	"\x10rds_subnet_group\x18\x05 \x01(\tR\x0erdsSubnetGroup\x12,\n" +
	"\x12rds_security_group\x18\x06 \x01(\tR\x10rdsSecurityGroup\x12.\n" +
	"\x13rds_parameter_group\x18\a \x01(\tR\x11rdsParameterGroup\x12*\n" +
	"\x11rds_options_group\x18\b \x01(\tR\x0frdsOptionsGroup\x12*\n" +
	"\x11rds_instance_port\x18\t \x01(\x05R\x0frdsInstancePortB\x97\x03\n" +
	"2com.project.planton.provider.aws.awsrdsinstance.v1B\x11StackOutputsProtoP\x01Zogithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsrdsinstance/v1;awsrdsinstancev1\xa2\x02\x05PPPAA\xaa\x02.Project.Planton.Provider.Aws.Awsrdsinstance.V1\xca\x02.Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\xe2\x02:Project\\Planton\\Provider\\Aws\\Awsrdsinstance\\V1\\GPBMetadata\xea\x023Project::Planton::Provider::Aws::Awsrdsinstance::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_goTypes = []any{
	(*AwsRdsInstanceStackOutputs)(nil), // 0: project.planton.provider.aws.awsrdsinstance.v1.AwsRdsInstanceStackOutputs
}
var file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_init() }
func file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto = out.File
	file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_aws_awsrdsinstance_v1_stack_outputs_proto_depIdxs = nil
}
