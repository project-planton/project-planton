// awsdynamodb_spec_test.go
// Code generated by ginkgo; DO NOT EDIT.
// This file contains tests that exercise the buf.validate rules defined for
// AwsDynamodbSpec in project.planton.provider.aws.awsdynamodb.v1.

package project_planton_provider_aws_awsdynamodb_v1

import (
    "testing"

    "github.com/bufbuild/protovalidate-go"
    . "github.com/onsi/ginkgo/v2"
    . "github.com/onsi/gomega"
)

func TestAwsDynamodbSpecValidation(t *testing.T) {
    RegisterFailHandler(Fail)
    RunSpecs(t, "AwsDynamodbSpec Validation Suite")
}

var _ = Describe("AwsDynamodbSpec validation", func() {
    var validator protovalidate.Validator

    BeforeEach(func() {
        var err error
        validator, err = protovalidate.New()
        Expect(err).NotTo(HaveOccurred())
    })

    Context("table-level validation rules", func() {
        It("accepts a fully valid spec", func() {
            spec := &AwsDynamodbSpec{
                TableName:  "myTable",
                BillingMode: BillingMode_PROVISIONED,
                ProvisionedThroughput: &ProvisionedThroughput{
                    ReadCapacityUnits:  5,
                    WriteCapacityUnits: 5,
                },
                AttributeDefinitions: []*AttributeDefinition{
                    {
                        AttributeName: "pk",
                        AttributeType: AttributeType_STRING,
                    },
                },
                KeySchema: &KeySchema{
                    PartitionKey: "pk",
                },
                TableClass: TableClass_STANDARD,
            }

            Expect(validator.Validate(spec)).To(Succeed())
        })

        It("rejects an invalid table name (too short)", func() {
            spec := &AwsDynamodbSpec{
                TableName:  "ab", // violates min_len 3
                BillingMode: BillingMode_PAY_PER_REQUEST,
                AttributeDefinitions: []*AttributeDefinition{
                    {
                        AttributeName: "pk",
                        AttributeType: AttributeType_STRING,
                    },
                },
                KeySchema: &KeySchema{
                    PartitionKey: "pk",
                },
                TableClass: TableClass_STANDARD,
            }

            Expect(validator.Validate(spec)).ToNot(Succeed())
        })

        It("enforces the billing_mode/provisioned_throughput CEL rule", func() {
            spec := &AwsDynamodbSpec{
                TableName:  "myTable",
                BillingMode: BillingMode_PROVISIONED,
                // ProvisionedThroughput intentionally omitted => should fail
                AttributeDefinitions: []*AttributeDefinition{
                    {
                        AttributeName: "pk",
                        AttributeType: AttributeType_STRING,
                    },
                },
                KeySchema: &KeySchema{
                    PartitionKey: "pk",
                },
                TableClass: TableClass_STANDARD,
            }

            Expect(validator.Validate(spec)).ToNot(Succeed())
        })
    })
})