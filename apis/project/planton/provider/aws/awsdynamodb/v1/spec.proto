syntax = "proto3";

package project.planton.provider.aws.awsdynamodb.v1;

// AwsDynamodbSpec defines desired configuration for an Amazon DynamoDB table.
message AwsDynamodbSpec {
  // User-defined table name (unique per AWS account and region).
  string table_name = 1;

  // AWS region where the table will be created, e.g. "us-east-1".
  string region = 2;

  // Billing mode: "PROVISIONED" (default) or "PAY_PER_REQUEST".
  string billing_mode = 3;

  // Provisioned read capacity units; required when billing_mode = "PROVISIONED".
  int64 read_capacity = 4;

  // Provisioned write capacity units; required when billing_mode = "PROVISIONED".
  int64 write_capacity = 5;

  // Attributes used in the primary key or indexes.
  repeated AttributeDefinition attribute_definitions = 6;

  // Primary key definition for the table.
  KeySchema key_schema = 7;

  // Definitions for global secondary indexes (GSIs).
  repeated GlobalSecondaryIndex global_secondary_indexes = 8;

  // Definitions for local secondary indexes (LSIs).
  repeated LocalSecondaryIndex local_secondary_indexes = 9;

  // When true, DynamoDB Streams are enabled for the table.
  bool stream_enabled = 10;

  // Stream view type if stream_enabled = true: "NEW_IMAGE", "OLD_IMAGE", "NEW_AND_OLD_IMAGES", or "KEYS_ONLY".
  string stream_view_type = 11;

  // Time-to-live (TTL) settings.
  TtlSpecification ttl = 12;

  // Server-side encryption (SSE) configuration.
  ServerSideEncryption sse_specification = 13;

  // Enables point-in-time recovery (continuous backups).
  bool point_in_time_recovery_enabled = 14;

  // Table class: "STANDARD" (default) or "STANDARD_INFREQUENT_ACCESS".
  string table_class = 15;

  // Prevents the table from being deleted when true.
  bool deletion_protection_enabled = 16;

  // Enables Contributor Insights metrics for the table.
  bool contributor_insights_enabled = 17;

  // Resource tags applied to the table.
  map<string, string> tags = 18;

  // Autoscaling settings for provisioned capacity.
  AutoScalingSpecification autoscaling = 19;
}

// Defines a single attribute used by the table or an index.
message AttributeDefinition {
  // Attribute name (case-sensitive).
  string name = 1;

  // Attribute data type: "S" (string), "N" (number), or "B" (binary).
  string type = 2;
}

// Describes the primary key schema.
message KeySchema {
  // Partition (hash) key attribute name.
  string partition_key = 1;

  // Optional sort (range) key attribute name.
  string sort_key = 2;
}

// Global secondary index configuration.
message GlobalSecondaryIndex {
  // Index name.
  string name = 1;

  // Key schema for the index.
  KeySchema key_schema = 2;

  // Projection type: "ALL", "KEYS_ONLY", or "INCLUDE".
  string projection_type = 3;

  // Attributes to project when projection_type = "INCLUDE".
  repeated string non_key_attributes = 4;

  // Provisioned read capacity units for this GSI (ignored when billing_mode = "PAY_PER_REQUEST").
  int64 read_capacity = 5;

  // Provisioned write capacity units for this GSI (ignored when billing_mode = "PAY_PER_REQUEST").
  int64 write_capacity = 6;
}

// Local secondary index configuration.
message LocalSecondaryIndex {
  // Index name.
  string name = 1;

  // Sort key attribute name for the index.
  string sort_key = 2;

  // Projection type: "ALL", "KEYS_ONLY", or "INCLUDE".
  string projection_type = 3;

  // Attributes to project when projection_type = "INCLUDE".
  repeated string non_key_attributes = 4;
}

// TTL (time-to-live) configuration.
message TtlSpecification {
  // When true, TTL is enabled for the table.
  bool enabled = 1;

  // Attribute that stores the epoch timestamp for item expiry.
  string attribute_name = 2;
}

// Server-side encryption configuration.
message ServerSideEncryption {
  // When true, SSE is enabled.
  bool enabled = 1;

  // ARN of the customer managed KMS key; omit to use the AWS owned key.
  string kms_key_arn = 2;
}

// Autoscaling settings for provisioned capacity.
message AutoScalingSpecification {
  // Target utilization percentage for read capacity (20-90).
  int32 read_target_utilization = 1;

  // Minimum provisioned read capacity units.
  int64 read_min_capacity = 2;

  // Maximum provisioned read capacity units.
  int64 read_max_capacity = 3;

  // Target utilization percentage for write capacity (20-90).
  int32 write_target_utilization = 4;

  // Minimum provisioned write capacity units.
  int64 write_min_capacity = 5;

  // Maximum provisioned write capacity units.
  int64 write_max_capacity = 6;
}