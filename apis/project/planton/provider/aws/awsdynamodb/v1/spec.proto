syntax = "proto3";

package project.planton.provider.aws.awsdynamodb.v1;

// AwsDynamodbSpec describes an Amazon DynamoDB table.
message AwsDynamodbSpec {
  // Table name, unique per AWS account & region.
  string table_name = 1;

  // Primary partition (hash) key attribute name.
  string hash_key = 2;

  // Primary sort (range) key attribute name (optional).
  string range_key = 3;

  // Attribute definitions used by keys and indexes.
  repeated AttributeDefinition attributes = 4;

  // Billing/capacity configuration (choose one).
  oneof capacity {
    // true ⇒ PAY_PER_REQUEST (on–demand); false/omitted ⇒ use provisioned_throughput.
    bool on_demand = 5;
    // Provisioned read/write capacity settings.
    ProvisionedThroughput provisioned_throughput = 6;
  }

  // Global secondary indexes to create.
  repeated GlobalSecondaryIndex global_secondary_indexes = 7;

  // Local secondary indexes to create.
  repeated LocalSecondaryIndex local_secondary_indexes = 8;

  // DynamoDB Streams settings (empty ⇒ disabled).
  StreamSpecification stream_specification = 9;

  // Time-to-live settings for automatic item expiry.
  TtlSpecification ttl_specification = 10;

  // Server-side encryption settings (empty ⇒ AWS-owned CMK).
  SseSpecification sse_specification = 11;

  // Enable point-in-time recovery (continuous backups).
  bool point_in_time_recovery = 12;

  // Table class selection.
  TableClass table_class = 13;

  // Key-value tags applied to the table.
  map<string, string> tags = 14;
}

// Attribute definition.
message AttributeDefinition {
  // Attribute name.
  string name = 1;
  // Data type: S (string), N (number), B (binary).
  AttributeType type = 2;
}

enum AttributeType {
  ATTRIBUTE_TYPE_UNSPECIFIED = 0;
  S = 1;
  N = 2;
  B = 3;
}

// Provisioned throughput settings.
message ProvisionedThroughput {
  // Read capacity units.
  int64 read_capacity_units = 1;
  // Write capacity units.
  int64 write_capacity_units = 2;
}

// Key schema element.
message KeySchemaElement {
  // Attribute name in the key.
  string attribute_name = 1;
  // HASH or RANGE.
  KeyType key_type = 2;
}

enum KeyType {
  KEY_TYPE_UNSPECIFIED = 0;
  HASH = 1;
  RANGE = 2;
}

// Projection settings for indexes.
message Projection {
  // Projection type: KEYS_ONLY, INCLUDE, ALL.
  ProjectionType projection_type = 1;
  // Attributes to include when projection_type == INCLUDE.
  repeated string non_key_attributes = 2;
}

enum ProjectionType {
  PROJECTION_TYPE_UNSPECIFIED = 0;
  KEYS_ONLY = 1;
  INCLUDE = 2;
  ALL = 3;
}

// Global secondary index definition.
message GlobalSecondaryIndex {
  // Index name.
  string name = 1;
  // Key schema for the index.
  repeated KeySchemaElement key_schema = 2;
  // Projection definition.
  Projection projection = 3;
  // Provisioned throughput (ignored for PAY_PER_REQUEST).
  ProvisionedThroughput provisioned_throughput = 4;
}

// Local secondary index definition.
message LocalSecondaryIndex {
  // Index name.
  string name = 1;
  // Key schema (must share HASH with table).
  repeated KeySchemaElement key_schema = 2;
  // Projection definition.
  Projection projection = 3;
}

// DynamoDB Streams configuration.
message StreamSpecification {
  // Enable/disable streams.
  bool enabled = 1;
  // View type emitted to the stream.
  StreamViewType view_type = 2;
}

enum StreamViewType {
  STREAM_VIEW_TYPE_UNSPECIFIED = 0;
  NEW_IMAGE = 1;
  OLD_IMAGE = 2;
  NEW_AND_OLD_IMAGES = 3;
  STREAM_KEYS_ONLY = 4; // renamed to avoid package-level naming collision
}

// Time-to-live configuration.
message TtlSpecification {
  // Enable/disable TTL.
  bool enabled = 1;
  // Attribute storing the expiration epoch timestamp.
  string attribute_name = 2;
}

// Server-side encryption configuration.
message SseSpecification {
  // Enable/disable SSE.
  bool enabled = 1;
  // ARN of the customer-managed KMS key (optional).
  string kms_key_arn = 2;
}

// Table class.
enum TableClass {
  TABLE_CLASS_UNSPECIFIED = 0;
  STANDARD = 1;
  STANDARD_INFREQUENT_ACCESS = 2;
}