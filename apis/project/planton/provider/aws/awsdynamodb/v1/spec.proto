syntax = "proto3";

package project.planton.provider.aws.awsdynamodb.v1;

import "buf/validate/validate.proto";

// AwsDynamodbSpec defines the desired state of an Amazon DynamoDB table.
message AwsDynamodbSpec {
  // Name of the DynamoDB table. Must be unique within an AWS account and region.
  string table_name = 1 [
    (buf.validate.field).string = {min_len: 3, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"},
    (buf.validate.field).required = true
  ];

  // Definition of every attribute that will be used in key-schemas or indexes.
  repeated AttributeDefinition attribute_definitions = 2 [
    (buf.validate.field).repeated = {min_items: 1}
  ];

  // Primary key definition for the table.
  KeySchema key_schema = 3 [
    (buf.validate.field).required = true
  ];

  // Billing mode for the table (PROVISIONED or PAY_PER_REQUEST).
  BillingMode billing_mode = 4 [
    (buf.validate.field).enum = {defined_only: true, not_in: [0]}
  ];

  // Provisioned throughput settings. Required when billing_mode is PROVISIONED.
  ProvisionedThroughput provisioned_throughput = 5;

  // Configuration blocks for global secondary indexes (GSI).
  repeated GlobalSecondaryIndex global_secondary_indexes = 6 [
    (buf.validate.field).repeated = {max_items: 20}
  ];

  // Configuration blocks for local secondary indexes (LSI).
  repeated LocalSecondaryIndex local_secondary_indexes = 7 [
    (buf.validate.field).repeated = {max_items: 5}
  ];

  // Configuration for DynamoDB Streams.
  StreamSpecification stream_specification = 8;

  // Key/value tags to attach to the table.
  map<string, string> tags = 9 [
    (buf.validate.field).map = {max_pairs: 50}
  ];

  // Time-to-live (TTL) settings.
  TimeToLiveSpecification ttl_specification = 10;

  // Point-in-time recovery (PITR) switch.
  PointInTimeRecovery point_in_time_recovery = 11;

  // Server-side encryption (SSE) configuration.
  ServerSideEncryption sse_specification = 12;

  // Storage class for the table.
  TableClass table_class = 13 [
    (buf.validate.field).enum = {defined_only: true, not_in: [0]}
  ];

  // When true, prevents accidental deletion of the table.
  bool deletion_protection_enabled = 14;
}

// -----------------------------
// Supporting message types
// -----------------------------

// Describes an attribute name and data type.
message AttributeDefinition {
  string name = 1 [ 
    (buf.validate.field).string = {min_len: 1, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"},
    (buf.validate.field).required = true
  ];
  AttributeType type = 2 [
    (buf.validate.field).enum = {defined_only: true, not_in: [0]},
    (buf.validate.field).required = true
  ];
}

// Allowed DynamoDB attribute data types.
enum AttributeType {
  ATTRIBUTE_TYPE_UNSPECIFIED = 0;
  STRING = 1; // "S"
  NUMBER = 2; // "N"
  BINARY = 3; // "B"
}

// Defines the tableâ€™s primary key schema.
message KeySchema {
  string hash_key = 1 [
    (buf.validate.field).string = {min_len: 1, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"},
    (buf.validate.field).required = true
  ];
  string range_key = 2 [
    (buf.validate.field).string = {min_len: 1, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"}
  ];
}

// Billing options for capacity management.
enum BillingMode {
  BILLING_MODE_UNSPECIFIED = 0;
  PROVISIONED = 1;     // User-defined RCUs/WCUs
  PAY_PER_REQUEST = 2; // On-demand
}

// Provisioned throughput settings.
message ProvisionedThroughput {
  int64 read_capacity = 1 [ (buf.validate.field).int64 = {gte: 1} ];
  int64 write_capacity = 2 [ (buf.validate.field).int64 = {gte: 1} ];

  // Optional auto-scaling policy.
  Autoscaling autoscaling = 3;
}

// Auto-scaling configuration for RCUs/WCUs.
message Autoscaling {
  bool enabled = 1;                       // Enable auto-scaling
  int64 min_capacity = 2 [ (buf.validate.field).int64 = {gte: 1} ];                 // Minimum capacity units
  int64 max_capacity = 3 [ (buf.validate.field).int64 = {gte: 1} ];                 // Maximum capacity units
  int32 target_utilization_percent = 4 [ (buf.validate.field).int32 = {gte: 1, lte: 100} ];   // Target utilization percentage (e.g. 70)
}

// Configuration block for a global secondary index.
message GlobalSecondaryIndex {
  string name = 1 [ 
    (buf.validate.field).string = {min_len: 3, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"},
    (buf.validate.field).required = true
  ];
  KeySchema key_schema = 2 [ (buf.validate.field).required = true ];                         // Index key schema
  Projection projection = 3 [ (buf.validate.field).required = true ];                        // Attributes projected into the index
  ProvisionedThroughput provisioned_throughput = 4; // Throughput settings (ignored if PAY_PER_REQUEST)
}

// Configuration block for a local secondary index.
message LocalSecondaryIndex {
  string name = 1 [ 
    (buf.validate.field).string = {min_len: 3, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"},
    (buf.validate.field).required = true
  ];
  KeySchema key_schema = 2 [ (buf.validate.field).required = true ]; // Index key schema (must reuse table hash key)
  Projection projection = 3 [ (buf.validate.field).required = true ]; // Attributes projected into the index
}

// Defines which non-key attributes are copied into an index.
message Projection {
  ProjectionType type = 1 [ 
    (buf.validate.field).enum = {defined_only: true, not_in: [0]},
    (buf.validate.field).required = true
  ];            // Projection type
  repeated string non_key_attributes = 2 [ 
    (buf.validate.field).repeated = {
      max_items: 20,
      items: {string: {min_len: 1, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"}}
    }
  ]; // Used when type = INCLUDE
}

// Valid projection types.
enum ProjectionType {
  PROJECTION_TYPE_UNSPECIFIED = 0;
  KEYS_ONLY = 1;
  INCLUDE = 2;
  ALL = 3;
}

// DynamoDB Streams configuration.
message StreamSpecification {
  bool enabled = 1;                // Enable stream
  StreamViewType view_type = 2 [ 
    (buf.validate.field).enum = {defined_only: true, not_in: [0]}
  ];    // Which item images are written to the stream
}

// Possible stream view types.
enum StreamViewType {
  STREAM_VIEW_TYPE_UNSPECIFIED = 0;
  NEW_IMAGE = 1;
  OLD_IMAGE = 2;
  NEW_AND_OLD_IMAGES = 3;
  STREAM_VIEW_KEYS_ONLY = 4; // Renamed to avoid duplicate enum names across the file
}

// Time-to-live settings.
message TimeToLiveSpecification {
  bool enabled = 1;          // Enable TTL
  string attribute_name = 2 [ 
    (buf.validate.field).string = {min_len: 1, max_len: 255, pattern: "^[a-zA-Z0-9_.\\-]+$"}
  ]; // Name of the TTL attribute
}

// Point-in-time recovery settings.
message PointInTimeRecovery {
  bool enabled = 1; // Enable PITR
}

// Server-side encryption settings.
message ServerSideEncryption {
  bool enabled = 1;       // Enable SSE
  string kms_key_arn = 2 [ 
    (buf.validate.field).string = {min_len: 20, max_len: 2048, pattern: "^arn:aws:kms:[a-z0-9\\-]+:[0-9]{12}:key/.+"}
  ]; // Optional customer-managed CMK ARN
}

// Supported DynamoDB table classes.
enum TableClass {
  TABLE_CLASS_UNSPECIFIED = 0;
  STANDARD = 1;
  STANDARD_INFREQUENT_ACCESS = 2;
}