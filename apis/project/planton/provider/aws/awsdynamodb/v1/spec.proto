syntax = "proto3";

package project.planton.provider.aws.awsdynamodb.v1;

// AwsDynamodbSpec models the configuration of an Amazon DynamoDB table.
message AwsDynamodbSpec {
  // Human-readable name of the DynamoDB table; must be unique per AWS account.
  string table_name = 1;

  // Billing model for read/write capacity: PROVISIONED or PAY_PER_REQUEST (On-Demand).
  BillingMode billing_mode = 2;

  // Provisioned read capacity units (RCU) when billing_mode is PROVISIONED.
  int64 read_capacity = 3;

  // Provisioned write capacity units (WCU) when billing_mode is PROVISIONED.
  int64 write_capacity = 4;

  // List of attributes that describe the key schema and indexes.
  repeated AttributeDefinition attribute_definitions = 5;

  // Definition of the table's partition (HASH) and optional sort (RANGE) key.
  repeated KeySchemaElement key_schema = 6;

  // Global secondary indexes to be created with the table.
  repeated GlobalSecondaryIndex global_secondary_indexes = 7;

  // Local secondary indexes to be created with the table (same partition key).
  repeated LocalSecondaryIndex local_secondary_indexes = 8;

  // Configure DynamoDB Streams; omit for disabled.
  StreamSpecification stream_specification = 9;

  // Enable point-in-time recovery (continuous backups).
  bool point_in_time_recovery_enabled = 10;

  // Configure TTL on a specific attribute; omit to disable.
  TimeToLiveSpecification ttl_specification = 11;

  // Enable server-side encryption at rest (true = AWS owned key unless kms_key_arn set).
  bool sse_enabled = 12;

  // Customer-managed KMS key ARN for server-side encryption; required when using CMK.
  string kms_key_arn = 13;

  // Whether the table data is replicated across multiple AWS regions.
  bool multi_region_replication_enabled = 14;

  // Tags to apply to the table for cost allocation, automation, and access control.
  map<string, string> tags = 15;

  // Table class: STANDARD or STANDARD_INFREQUENT_ACCESS to optimize storage cost.
  TableClass table_class = 16;

  // Contributor Insights enablement flag for real-time access pattern analytics.
  bool contributor_insights_enabled = 17;

  // Enable deletion protection to avoid accidental table removal.
  bool deletion_protection_enabled = 18;

  // List of AWS regions (e.g., "us-east-1") to replicate to if multi_region_replication_enabled.
  repeated string replication_regions = 19;

  // ---------------------- Nested types & enums ----------------------

  // Billing options for the table.
  enum BillingMode {
    BILLING_MODE_UNSPECIFIED = 0;
    PROVISIONED = 1;
    PAY_PER_REQUEST = 2;
  }

  // DynamoDB scalar attribute types.
  enum AttributeType {
    ATTRIBUTE_TYPE_UNSPECIFIED = 0;
    STRING = 1;  // UTF-8 string
    NUMBER = 2;  // Numeric value
    BINARY = 3;  // Binary data
  }

  // Identifies whether a key is HASH (partition) or RANGE (sort).
  enum KeyType {
    KEY_TYPE_UNSPECIFIED = 0;
    HASH = 1;
    RANGE = 2;
  }

  // Projection options for secondary indexes.
  enum ProjectionType {
    PROJECTION_TYPE_UNSPECIFIED = 0;
    ALL = 1;
    KEYS_ONLY = 2;
    INCLUDE = 3;
  }

  // Table storage classes.
  enum TableClass {
    TABLE_CLASS_UNSPECIFIED = 0;
    STANDARD = 1;
    STANDARD_INFREQUENT_ACCESS = 2;
  }

  // Attribute definition maps a name to its scalar type.
  message AttributeDefinition {
    // Name of the attribute.
    string attribute_name = 1;
    // Data type of the attribute (S | N | B).
    AttributeType attribute_type = 2;
  }

  // Describes a key element (partition or sort key).
  message KeySchemaElement {
    // Attribute name to use as key.
    string attribute_name = 1;
    // Specifies whether the attribute is HASH or RANGE key.
    KeyType key_type = 2;
  }

  // Projection parameters for a secondary index.
  message Projection {
    // How attributes are projected into the index.
    ProjectionType projection_type = 1;
    // List of non-key attributes to include when projection_type = INCLUDE.
    repeated string non_key_attributes = 2;
  }

  // Provisioned throughput override for a global secondary index.
  message ProvisionedThroughputOverride {
    // Read capacity units for the index.
    int64 read_capacity = 1;
    // Write capacity units for the index.
    int64 write_capacity = 2;
  }

  // Global secondary index definition.
  message GlobalSecondaryIndex {
    // Index name.
    string index_name = 1;
    // Key schema specific to this index.
    repeated KeySchemaElement key_schema = 2;
    // Projection parameters.
    Projection projection = 3;
    // Billing and capacity for the index (ignored if PAY_PER_REQUEST).
    ProvisionedThroughputOverride provisioned_throughput = 4;
  }

  // Local secondary index definition (shares HASH key with the table).
  message LocalSecondaryIndex {
    // Index name.
    string index_name = 1;
    // Key schema for the LSI (must share HASH key with table).
    repeated KeySchemaElement key_schema = 2;
    // Projection parameters.
    Projection projection = 3;
  }

  // DynamoDB stream configuration.
  message StreamSpecification {
    // Enable or disable streams.
    bool enabled = 1;
    // The view type of the stream.
    StreamViewType view_type = 2;
  }

  // Stream view types.
  enum StreamViewType {
    STREAM_VIEW_TYPE_UNSPECIFIED = 0;
    NEW_IMAGE = 1;
    OLD_IMAGE = 2;
    NEW_AND_OLD_IMAGES = 3;
    KEYS_ONLY = 4;
  }

  // Time-to-live (TTL) configuration.
  message TimeToLiveSpecification {
    // Enable or disable TTL.
    bool enabled = 1;
    // Attribute name that stores the expiration timestamp (in Unix epoch seconds).
    string attribute_name = 2;
  }
}