syntax = "proto3";

package project.planton.provider.aws.awsdynamodb.v1;

import "google/protobuf/struct.proto";

// AwsDynamodbSpec describes the desired state of an Amazon DynamoDB table.
message AwsDynamodbSpec {
  // Human-readable table name (must be unique within an AWS account/region).
  string table_name = 1;

  // All attributes referenced by the table key schema and indexes.
  repeated Attribute attributes = 2;

  // Primary key definition (partition key and optional sort key).
  KeySchema key_schema = 3;

  // Billing mode: "PROVISIONED" (manual/auto-scaled RCUs/WCUs) or "PAY_PER_REQUEST" (on-demand).
  string billing_mode = 4;

  // Table-level throughput settings (required when billing_mode = PROVISIONED).
  ProvisionedThroughput provisioned_throughput = 5;

  // Global secondary indexes (up to 20 per table).
  repeated GlobalSecondaryIndex global_secondary_indexes = 6;

  // Local secondary indexes (up to 5 per table, share the same partition key).
  repeated LocalSecondaryIndex local_secondary_indexes = 7;

  // Real-time stream of item changes.
  StreamSpecification stream_specification = 8;

  // Time-to-live configuration for automatic item expiry.
  TimeToLive ttl = 9;

  // At-rest encryption settings.
  ServerSideEncryption server_side_encryption = 10;

  // Point-in-time recovery (continuous backups).
  PointInTimeRecovery point_in_time_recovery = 11;

  // Table storage class: "STANDARD" or "STANDARD_INFREQUENT_ACCESS".
  string table_class = 12;

  // Resource tags for cost allocation and access control.
  repeated Tag tags = 13;

  // Read-capacity auto-scaling policy (only for PROVISIONED tables).
  AutoScalingSettings read_autoscaling = 14;

  // Write-capacity auto-scaling policy (only for PROVISIONED tables).
  AutoScalingSettings write_autoscaling = 15;

  // Free-form extensions for rarely used settings.
  google.protobuf.Struct extra = 16;
}

// Name/type pair for an item attribute.
message Attribute {
  // Attribute name.
  string name = 1;
  // Scalar type code: "S" (String), "N" (Number), "B" (Binary).
  string type = 2;
}

// Defines the table's composite primary key.
message KeySchema {
  // Partition (hash) key attribute name.
  string hash_key = 1;
  // Optional sort (range) key attribute name.
  string range_key = 2;
}

// Provisioned read/write capacity units.
message ProvisionedThroughput {
  // Maximum strongly consistent reads per second.
  int64 read_capacity_units = 1;
  // Maximum writes per second.
  int64 write_capacity_units = 2;
}

// Attributes that appear in an index.
message Projection {
  // Projection type: "ALL", "KEYS_ONLY", or "INCLUDE".
  string type = 1;
  // Whitelisted non-key attributes (only when type = "INCLUDE").
  repeated string non_key_attributes = 2;
}

// Global secondary index definition.
message GlobalSecondaryIndex {
  // Index name.
  string name = 1;
  // Partition key for the index.
  string hash_key = 2;
  // Optional sort key for the index.
  string range_key = 3;
  // Attributes projected into the index.
  Projection projection = 4;
  // Dedicated throughput for the index (ignored in PAY_PER_REQUEST mode).
  ProvisionedThroughput provisioned_throughput = 5;
}

// Local secondary index definition.
message LocalSecondaryIndex {
  // Index name.
  string name = 1;
  // Sort key attribute (partition key is the same as the table).
  string range_key = 2;
  // Attributes projected into the index.
  Projection projection = 3;
}

// Stream settings for capturing table mutations.
message StreamSpecification {
  // Enable DynamoDB Streams.
  bool enabled = 1;
  // View type: "KEYS_ONLY", "NEW_IMAGE", "OLD_IMAGE", or "NEW_AND_OLD_IMAGES".
  string view_type = 2;
}

// Automatic deletion of expired items.
message TimeToLive {
  // Activate TTL.
  bool enabled = 1;
  // Attribute that stores UNIX epoch seconds.
  string attribute_name = 2;
}

// At-rest encryption configuration.
message ServerSideEncryption {
  // Enable encryption.
  bool enabled = 1;
  // Optional customer-managed KMS key ARN.
  string kms_key_arn = 2;
}

// Continuous backups and PITR.
message PointInTimeRecovery {
  // Activate PITR.
  bool enabled = 1;
}

// Tag key/value pair.
message Tag {
  string key = 1;
  string value = 2;
}

// Auto-scaling target tracking policy.
message AutoScalingSettings {
  // Desired utilization percentage (10-90).
  int32 target_utilization_percent = 1;
  // Maximum capacity units allowed.
  int64 max_capacity_units = 2;
}