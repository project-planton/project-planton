// Code generated by project-planton's Pulumi mapping layer. DO NOT EDIT.

package awsdynamodb

import (
    awsdynamodbpb "github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1"
    "github.com/pulumi/pulumi-aws/sdk/v6/go/aws/dynamodb"
    "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// expandTableTtl converts the protobuf-based TimeToLiveSpecification coming from the
// deployment spec into the structure expected by the Pulumi AWS provider.
//
// When the caller passes a nil specification, the function returns nil as well so
// that no TTL block is rendered in the resulting state. Otherwise, the TTL block
// is always returned to make the desired configuration explicit – even when TTL
// is disabled – in order to avoid provider-side defaulting that could introduce
// unnecessary diffs during previews.
func expandTableTtl(spec *awsdynamodbpb.TimeToLiveSpecification) *dynamodb.TableTtlArgs {
    if spec == nil {
        return nil
    }

    // Base TTL args with the enabled flag populated.
    ttlArgs := &dynamodb.TableTtlArgs{
        Enabled: pulumi.Bool(spec.GetTtlEnabled()),
    }

    // AttributeName must be supplied only when TTL is enabled, otherwise the
    // provider raises an error.
    if spec.GetTtlEnabled() {
        ttlArgs.AttributeName = pulumi.String(spec.GetAttributeName())
    }

    return ttlArgs
}
