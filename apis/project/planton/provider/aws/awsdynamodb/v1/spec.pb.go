// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsdynamodb/v1/spec.proto

package awsdynamodbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Billing options available for a table or global secondary index.
type BillingMode int32

const (
	BillingMode_BILLING_MODE_UNSPECIFIED BillingMode = 0
	BillingMode_PROVISIONED              BillingMode = 1 // Fixed RCUs/WCUs with optional auto-scaling.
	BillingMode_PAY_PER_REQUEST          BillingMode = 2 // On-demand capacity.
)

// Enum value maps for BillingMode.
var (
	BillingMode_name = map[int32]string{
		0: "BILLING_MODE_UNSPECIFIED",
		1: "PROVISIONED",
		2: "PAY_PER_REQUEST",
	}
	BillingMode_value = map[string]int32{
		"BILLING_MODE_UNSPECIFIED": 0,
		"PROVISIONED":              1,
		"PAY_PER_REQUEST":          2,
	}
)

func (x BillingMode) Enum() *BillingMode {
	p := new(BillingMode)
	*p = x
	return p
}

func (x BillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0].Descriptor()
}

func (BillingMode) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0]
}

func (x BillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingMode.Descriptor instead.
func (BillingMode) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

// Scalar attribute data types supported by DynamoDB.
type AttributeType int32

const (
	AttributeType_ATTRIBUTE_TYPE_UNSPECIFIED AttributeType = 0
	AttributeType_STRING                     AttributeType = 1 // "S"
	AttributeType_NUMBER                     AttributeType = 2 // "N"
	AttributeType_BINARY                     AttributeType = 3 // "B"
)

// Enum value maps for AttributeType.
var (
	AttributeType_name = map[int32]string{
		0: "ATTRIBUTE_TYPE_UNSPECIFIED",
		1: "STRING",
		2: "NUMBER",
		3: "BINARY",
	}
	AttributeType_value = map[string]int32{
		"ATTRIBUTE_TYPE_UNSPECIFIED": 0,
		"STRING":                     1,
		"NUMBER":                     2,
		"BINARY":                     3,
	}
)

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1].Descriptor()
}

func (AttributeType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1]
}

func (x AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeType.Descriptor instead.
func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

// Projection strategies for an index.
type ProjectionType int32

const (
	ProjectionType_PROJECTION_TYPE_UNSPECIFIED ProjectionType = 0
	ProjectionType_ALL                         ProjectionType = 1 // All attributes.
	ProjectionType_KEYS_ONLY_PROJECTION        ProjectionType = 2 // Only key attributes (renamed to avoid duplicate symbol).
	ProjectionType_INCLUDE                     ProjectionType = 3 // Specific non-key attributes.
)

// Enum value maps for ProjectionType.
var (
	ProjectionType_name = map[int32]string{
		0: "PROJECTION_TYPE_UNSPECIFIED",
		1: "ALL",
		2: "KEYS_ONLY_PROJECTION",
		3: "INCLUDE",
	}
	ProjectionType_value = map[string]int32{
		"PROJECTION_TYPE_UNSPECIFIED": 0,
		"ALL":                         1,
		"KEYS_ONLY_PROJECTION":        2,
		"INCLUDE":                     3,
	}
)

func (x ProjectionType) Enum() *ProjectionType {
	p := new(ProjectionType)
	*p = x
	return p
}

func (x ProjectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProjectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2].Descriptor()
}

func (ProjectionType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2]
}

func (x ProjectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProjectionType.Descriptor instead.
func (ProjectionType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

// View types for DynamoDB Streams.
type StreamViewType int32

const (
	StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED StreamViewType = 0
	StreamViewType_NEW_IMAGE                    StreamViewType = 1 // Only the new item image.
	StreamViewType_OLD_IMAGE                    StreamViewType = 2 // Only the old item image.
	StreamViewType_NEW_AND_OLD_IMAGES           StreamViewType = 3 // Both the new and the old images of the item.
	StreamViewType_KEYS_ONLY                    StreamViewType = 4 // Only the key attributes of the modified item.
)

// Enum value maps for StreamViewType.
var (
	StreamViewType_name = map[int32]string{
		0: "STREAM_VIEW_TYPE_UNSPECIFIED",
		1: "NEW_IMAGE",
		2: "OLD_IMAGE",
		3: "NEW_AND_OLD_IMAGES",
		4: "KEYS_ONLY",
	}
	StreamViewType_value = map[string]int32{
		"STREAM_VIEW_TYPE_UNSPECIFIED": 0,
		"NEW_IMAGE":                    1,
		"OLD_IMAGE":                    2,
		"NEW_AND_OLD_IMAGES":           3,
		"KEYS_ONLY":                    4,
	}
)

func (x StreamViewType) Enum() *StreamViewType {
	p := new(StreamViewType)
	*p = x
	return p
}

func (x StreamViewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamViewType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3].Descriptor()
}

func (StreamViewType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3]
}

func (x StreamViewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamViewType.Descriptor instead.
func (StreamViewType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

// Storage classes for DynamoDB tables.
type TableClass int32

const (
	TableClass_TABLE_CLASS_UNSPECIFIED    TableClass = 0
	TableClass_STANDARD                   TableClass = 1 // Standard storage class.
	TableClass_STANDARD_INFREQUENT_ACCESS TableClass = 2 // Lower-cost infrequent access class.
)

// Enum value maps for TableClass.
var (
	TableClass_name = map[int32]string{
		0: "TABLE_CLASS_UNSPECIFIED",
		1: "STANDARD",
		2: "STANDARD_INFREQUENT_ACCESS",
	}
	TableClass_value = map[string]int32{
		"TABLE_CLASS_UNSPECIFIED":    0,
		"STANDARD":                   1,
		"STANDARD_INFREQUENT_ACCESS": 2,
	}
)

func (x TableClass) Enum() *TableClass {
	p := new(TableClass)
	*p = x
	return p
}

func (x TableClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableClass) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4].Descriptor()
}

func (TableClass) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4]
}

func (x TableClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableClass.Descriptor instead.
func (TableClass) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

// AwsDynamodbSpec defines the desired configuration of an Amazon DynamoDB table.
type AwsDynamodbSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique name of the DynamoDB table (per AWS account & region).
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Set of attribute definitions referenced by keys and indexes.
	Attributes []*AttributeDefinition `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	// Name of the primary partition (hash) key.
	PartitionKey string `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	// Optional name of the primary sort (range) key; leave empty if the table is simple-key.
	SortKey string `protobuf:"bytes,4,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	// Table-level billing mode.
	BillingMode BillingMode `protobuf:"varint,5,opt,name=billing_mode,json=billingMode,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.BillingMode" json:"billing_mode,omitempty"`
	// Read capacity units when billing_mode == PROVISIONED.
	ProvisionedReadCapacity int64 `protobuf:"varint,6,opt,name=provisioned_read_capacity,json=provisionedReadCapacity,proto3" json:"provisioned_read_capacity,omitempty"`
	// Write capacity units when billing_mode == PROVISIONED.
	ProvisionedWriteCapacity int64 `protobuf:"varint,7,opt,name=provisioned_write_capacity,json=provisionedWriteCapacity,proto3" json:"provisioned_write_capacity,omitempty"`
	// Optional auto-scaling settings for provisioned throughput.
	Autoscaling *AutoscalingConfig `protobuf:"bytes,8,opt,name=autoscaling,proto3" json:"autoscaling,omitempty"`
	// Local secondary indexes (max 5) that share the same partition key.
	LocalSecondaryIndexes []*LocalSecondaryIndex `protobuf:"bytes,9,rep,name=local_secondary_indexes,json=localSecondaryIndexes,proto3" json:"local_secondary_indexes,omitempty"`
	// Global secondary indexes providing additional access patterns.
	GlobalSecondaryIndexes []*GlobalSecondaryIndex `protobuf:"bytes,10,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	// Enables DynamoDB Streams for the table.
	StreamEnabled bool `protobuf:"varint,11,opt,name=stream_enabled,json=streamEnabled,proto3" json:"stream_enabled,omitempty"`
	// Determines what information is written to the stream (required when stream_enabled).
	StreamViewType StreamViewType `protobuf:"varint,12,opt,name=stream_view_type,json=streamViewType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.StreamViewType" json:"stream_view_type,omitempty"`
	// Name of the attribute used for automatic item expiration (TTL); empty to disable TTL.
	TtlAttributeName string `protobuf:"bytes,13,opt,name=ttl_attribute_name,json=ttlAttributeName,proto3" json:"ttl_attribute_name,omitempty"`
	// Enables continuous backups for point-in-time recovery.
	PointInTimeRecoveryEnabled bool `protobuf:"varint,14,opt,name=point_in_time_recovery_enabled,json=pointInTimeRecoveryEnabled,proto3" json:"point_in_time_recovery_enabled,omitempty"`
	// Server-side encryption configuration.
	Encryption *ServerSideEncryption `protobuf:"bytes,15,opt,name=encryption,proto3" json:"encryption,omitempty"`
	// Storage class of the table.
	TableClass TableClass `protobuf:"varint,16,opt,name=table_class,json=tableClass,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.TableClass" json:"table_class,omitempty"`
	// Protects the table from accidental deletion.
	DeletionProtectionEnabled bool `protobuf:"varint,17,opt,name=deletion_protection_enabled,json=deletionProtectionEnabled,proto3" json:"deletion_protection_enabled,omitempty"`
	// Enables contributor insights for analyzing traffic patterns.
	ContributorInsightsEnabled bool `protobuf:"varint,18,opt,name=contributor_insights_enabled,json=contributorInsightsEnabled,proto3" json:"contributor_insights_enabled,omitempty"`
	// Metadata tags applied to the table.
	Tags          []*Tag `protobuf:"bytes,19,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec) Reset() {
	*x = AwsDynamodbSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec) ProtoMessage() {}

func (x *AwsDynamodbSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsDynamodbSpec) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AwsDynamodbSpec) GetAttributes() []*AttributeDefinition {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *AwsDynamodbSpec) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *AwsDynamodbSpec) GetBillingMode() BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return BillingMode_BILLING_MODE_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetProvisionedReadCapacity() int64 {
	if x != nil {
		return x.ProvisionedReadCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetProvisionedWriteCapacity() int64 {
	if x != nil {
		return x.ProvisionedWriteCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetAutoscaling() *AutoscalingConfig {
	if x != nil {
		return x.Autoscaling
	}
	return nil
}

func (x *AwsDynamodbSpec) GetLocalSecondaryIndexes() []*LocalSecondaryIndex {
	if x != nil {
		return x.LocalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetGlobalSecondaryIndexes() []*GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetStreamEnabled() bool {
	if x != nil {
		return x.StreamEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetStreamViewType() StreamViewType {
	if x != nil {
		return x.StreamViewType
	}
	return StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetTtlAttributeName() string {
	if x != nil {
		return x.TtlAttributeName
	}
	return ""
}

func (x *AwsDynamodbSpec) GetPointInTimeRecoveryEnabled() bool {
	if x != nil {
		return x.PointInTimeRecoveryEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetEncryption() *ServerSideEncryption {
	if x != nil {
		return x.Encryption
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTableClass() TableClass {
	if x != nil {
		return x.TableClass
	}
	return TableClass_TABLE_CLASS_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetDeletionProtectionEnabled() bool {
	if x != nil {
		return x.DeletionProtectionEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetContributorInsightsEnabled() bool {
	if x != nil {
		return x.ContributorInsightsEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Defines a DynamoDB attribute (column) and its scalar data type.
type AttributeDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                 // Attribute (column) name.
	Type          AttributeType          `protobuf:"varint,2,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AttributeType" json:"type,omitempty"` // Scalar type: S (string), N (number), B (binary).
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *AttributeDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributeDefinition) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_ATTRIBUTE_TYPE_UNSPECIFIED
}

// Server-side encryption settings.
type ServerSideEncryption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                       // When true, data is encrypted at rest.
	KmsKeyArn     string                 `protobuf:"bytes,2,opt,name=kms_key_arn,json=kmsKeyArn,proto3" json:"kms_key_arn,omitempty"` // Optional customer-managed KMS key ARN.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerSideEncryption) Reset() {
	*x = ServerSideEncryption{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerSideEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSideEncryption) ProtoMessage() {}

func (x *ServerSideEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSideEncryption.ProtoReflect.Descriptor instead.
func (*ServerSideEncryption) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *ServerSideEncryption) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ServerSideEncryption) GetKmsKeyArn() string {
	if x != nil {
		return x.KmsKeyArn
	}
	return ""
}

// Auto-scaling configuration for provisioned capacity.
type AutoscalingConfig struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Enabled                  bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`                                                                     // Enables auto-scaling for the table/index.
	MinReadCapacity          int64                  `protobuf:"varint,2,opt,name=min_read_capacity,json=minReadCapacity,proto3" json:"min_read_capacity,omitempty"`                            // Minimum read capacity units.
	MaxReadCapacity          int64                  `protobuf:"varint,3,opt,name=max_read_capacity,json=maxReadCapacity,proto3" json:"max_read_capacity,omitempty"`                            // Maximum read capacity units.
	MinWriteCapacity         int64                  `protobuf:"varint,4,opt,name=min_write_capacity,json=minWriteCapacity,proto3" json:"min_write_capacity,omitempty"`                         // Minimum write capacity units.
	MaxWriteCapacity         int64                  `protobuf:"varint,5,opt,name=max_write_capacity,json=maxWriteCapacity,proto3" json:"max_write_capacity,omitempty"`                         // Maximum write capacity units.
	TargetUtilizationPercent int32                  `protobuf:"varint,6,opt,name=target_utilization_percent,json=targetUtilizationPercent,proto3" json:"target_utilization_percent,omitempty"` // Desired utilization percentage (10-90).
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AutoscalingConfig) Reset() {
	*x = AutoscalingConfig{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoscalingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingConfig) ProtoMessage() {}

func (x *AutoscalingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingConfig.ProtoReflect.Descriptor instead.
func (*AutoscalingConfig) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

func (x *AutoscalingConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AutoscalingConfig) GetMinReadCapacity() int64 {
	if x != nil {
		return x.MinReadCapacity
	}
	return 0
}

func (x *AutoscalingConfig) GetMaxReadCapacity() int64 {
	if x != nil {
		return x.MaxReadCapacity
	}
	return 0
}

func (x *AutoscalingConfig) GetMinWriteCapacity() int64 {
	if x != nil {
		return x.MinWriteCapacity
	}
	return 0
}

func (x *AutoscalingConfig) GetMaxWriteCapacity() int64 {
	if x != nil {
		return x.MaxWriteCapacity
	}
	return 0
}

func (x *AutoscalingConfig) GetTargetUtilizationPercent() int32 {
	if x != nil {
		return x.TargetUtilizationPercent
	}
	return 0
}

// Specification for a local secondary index.
type LocalSecondaryIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                      // Index name.
	SortKey       string                 `protobuf:"bytes,2,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"` // Alternate sort key attribute.
	Projection    *Projection            `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`          // Attributes projected into the index.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalSecondaryIndex) Reset() {
	*x = LocalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalSecondaryIndex) ProtoMessage() {}

func (x *LocalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*LocalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

func (x *LocalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LocalSecondaryIndex) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *LocalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

// Specification for a global secondary index.
type GlobalSecondaryIndex struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Name                     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                                // Index name.
	PartitionKey             string                 `protobuf:"bytes,2,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`                                                            // Partition (hash) key attribute.
	SortKey                  string                 `protobuf:"bytes,3,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`                                                                           // Optional sort (range) key attribute.
	BillingMode              BillingMode            `protobuf:"varint,4,opt,name=billing_mode,json=billingMode,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.BillingMode" json:"billing_mode,omitempty"` // Billing mode for the index (inherits table if UNSPECIFIED).
	ProvisionedReadCapacity  int64                  `protobuf:"varint,5,opt,name=provisioned_read_capacity,json=provisionedReadCapacity,proto3" json:"provisioned_read_capacity,omitempty"`                        // RCUs when billing_mode == PROVISIONED.
	ProvisionedWriteCapacity int64                  `protobuf:"varint,6,opt,name=provisioned_write_capacity,json=provisionedWriteCapacity,proto3" json:"provisioned_write_capacity,omitempty"`                     // WCUs when billing_mode == PROVISIONED.
	Autoscaling              *AutoscalingConfig     `protobuf:"bytes,7,opt,name=autoscaling,proto3" json:"autoscaling,omitempty"`                                                                                  // Auto-scaling config for the index.
	Projection               *Projection            `protobuf:"bytes,8,opt,name=projection,proto3" json:"projection,omitempty"`                                                                                    // Attributes projected into the index.
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GlobalSecondaryIndex) Reset() {
	*x = GlobalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecondaryIndex) ProtoMessage() {}

func (x *GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{5}
}

func (x *GlobalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetBillingMode() BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return BillingMode_BILLING_MODE_UNSPECIFIED
}

func (x *GlobalSecondaryIndex) GetProvisionedReadCapacity() int64 {
	if x != nil {
		return x.ProvisionedReadCapacity
	}
	return 0
}

func (x *GlobalSecondaryIndex) GetProvisionedWriteCapacity() int64 {
	if x != nil {
		return x.ProvisionedWriteCapacity
	}
	return 0
}

func (x *GlobalSecondaryIndex) GetAutoscaling() *AutoscalingConfig {
	if x != nil {
		return x.Autoscaling
	}
	return nil
}

func (x *GlobalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

// Controls which attributes are copied from the source table into an index.
type Projection struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             ProjectionType         `protobuf:"varint,1,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.ProjectionType" json:"type,omitempty"` // Projection strategy.
	NonKeyAttributes []string               `protobuf:"bytes,2,rep,name=non_key_attributes,json=nonKeyAttributes,proto3" json:"non_key_attributes,omitempty"`                // Extra attributes (type == INCLUDE).
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Projection) Reset() {
	*x = Projection{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection) ProtoMessage() {}

func (x *Projection) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection.ProtoReflect.Descriptor instead.
func (*Projection) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{6}
}

func (x *Projection) GetType() ProjectionType {
	if x != nil {
		return x.Type
	}
	return ProjectionType_PROJECTION_TYPE_UNSPECIFIED
}

func (x *Projection) GetNonKeyAttributes() []string {
	if x != nil {
		return x.NonKeyAttributes
	}
	return nil
}

// Simple key/value tag.
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     // Tag key.
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Tag value.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{7}
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_project_planton_provider_aws_awsdynamodb_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc = "" +
	"\n" +
	"6project/planton/provider/aws/awsdynamodb/v1/spec.proto\x12+project.planton.provider.aws.awsdynamodb.v1\"\x87\v\n" +
	"\x0fAwsDynamodbSpec\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12`\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.AttributeDefinitionR\n" +
	"attributes\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\x12\x19\n" +
	"\bsort_key\x18\x04 \x01(\tR\asortKey\x12[\n" +
	"\fbilling_mode\x18\x05 \x01(\x0e28.project.planton.provider.aws.awsdynamodb.v1.BillingModeR\vbillingMode\x12:\n" +
	"\x19provisioned_read_capacity\x18\x06 \x01(\x03R\x17provisionedReadCapacity\x12<\n" +
	"\x1aprovisioned_write_capacity\x18\a \x01(\x03R\x18provisionedWriteCapacity\x12`\n" +
	"\vautoscaling\x18\b \x01(\v2>.project.planton.provider.aws.awsdynamodb.v1.AutoscalingConfigR\vautoscaling\x12x\n" +
	"\x17local_secondary_indexes\x18\t \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndexR\x15localSecondaryIndexes\x12{\n" +
	"\x18global_secondary_indexes\x18\n" +
	" \x03(\v2A.project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndexR\x16globalSecondaryIndexes\x12%\n" +
	"\x0estream_enabled\x18\v \x01(\bR\rstreamEnabled\x12e\n" +
	"\x10stream_view_type\x18\f \x01(\x0e2;.project.planton.provider.aws.awsdynamodb.v1.StreamViewTypeR\x0estreamViewType\x12,\n" +
	"\x12ttl_attribute_name\x18\r \x01(\tR\x10ttlAttributeName\x12B\n" +
	"\x1epoint_in_time_recovery_enabled\x18\x0e \x01(\bR\x1apointInTimeRecoveryEnabled\x12a\n" +
	"\n" +
	"encryption\x18\x0f \x01(\v2A.project.planton.provider.aws.awsdynamodb.v1.ServerSideEncryptionR\n" +
	"encryption\x12X\n" +
	"\vtable_class\x18\x10 \x01(\x0e27.project.planton.provider.aws.awsdynamodb.v1.TableClassR\n" +
	"tableClass\x12>\n" +
	"\x1bdeletion_protection_enabled\x18\x11 \x01(\bR\x19deletionProtectionEnabled\x12@\n" +
	"\x1ccontributor_insights_enabled\x18\x12 \x01(\bR\x1acontributorInsightsEnabled\x12D\n" +
	"\x04tags\x18\x13 \x03(\v20.project.planton.provider.aws.awsdynamodb.v1.TagR\x04tags\"y\n" +
	"\x13AttributeDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12N\n" +
	"\x04type\x18\x02 \x01(\x0e2:.project.planton.provider.aws.awsdynamodb.v1.AttributeTypeR\x04type\"P\n" +
	"\x14ServerSideEncryption\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1e\n" +
	"\vkms_key_arn\x18\x02 \x01(\tR\tkmsKeyArn\"\x9f\x02\n" +
	"\x11AutoscalingConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12*\n" +
	"\x11min_read_capacity\x18\x02 \x01(\x03R\x0fminReadCapacity\x12*\n" +
	"\x11max_read_capacity\x18\x03 \x01(\x03R\x0fmaxReadCapacity\x12,\n" +
	"\x12min_write_capacity\x18\x04 \x01(\x03R\x10minWriteCapacity\x12,\n" +
	"\x12max_write_capacity\x18\x05 \x01(\x03R\x10maxWriteCapacity\x12<\n" +
	"\x1atarget_utilization_percent\x18\x06 \x01(\x05R\x18targetUtilizationPercent\"\x9d\x01\n" +
	"\x13LocalSecondaryIndex\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bsort_key\x18\x02 \x01(\tR\asortKey\x12W\n" +
	"\n" +
	"projection\x18\x03 \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionR\n" +
	"projection\"\xfc\x03\n" +
	"\x14GlobalSecondaryIndex\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rpartition_key\x18\x02 \x01(\tR\fpartitionKey\x12\x19\n" +
	"\bsort_key\x18\x03 \x01(\tR\asortKey\x12[\n" +
	"\fbilling_mode\x18\x04 \x01(\x0e28.project.planton.provider.aws.awsdynamodb.v1.BillingModeR\vbillingMode\x12:\n" +
	"\x19provisioned_read_capacity\x18\x05 \x01(\x03R\x17provisionedReadCapacity\x12<\n" +
	"\x1aprovisioned_write_capacity\x18\x06 \x01(\x03R\x18provisionedWriteCapacity\x12`\n" +
	"\vautoscaling\x18\a \x01(\v2>.project.planton.provider.aws.awsdynamodb.v1.AutoscalingConfigR\vautoscaling\x12W\n" +
	"\n" +
	"projection\x18\b \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionR\n" +
	"projection\"\x8b\x01\n" +
	"\n" +
	"Projection\x12O\n" +
	"\x04type\x18\x01 \x01(\x0e2;.project.planton.provider.aws.awsdynamodb.v1.ProjectionTypeR\x04type\x12,\n" +
	"\x12non_key_attributes\x18\x02 \x03(\tR\x10nonKeyAttributes\"-\n" +
	"\x03Tag\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value*Q\n" +
	"\vBillingMode\x12\x1c\n" +
	"\x18BILLING_MODE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vPROVISIONED\x10\x01\x12\x13\n" +
	"\x0fPAY_PER_REQUEST\x10\x02*S\n" +
	"\rAttributeType\x12\x1e\n" +
	"\x1aATTRIBUTE_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06STRING\x10\x01\x12\n" +
	"\n" +
	"\x06NUMBER\x10\x02\x12\n" +
	"\n" +
	"\x06BINARY\x10\x03*a\n" +
	"\x0eProjectionType\x12\x1f\n" +
	"\x1bPROJECTION_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\x18\n" +
	"\x14KEYS_ONLY_PROJECTION\x10\x02\x12\v\n" +
	"\aINCLUDE\x10\x03*w\n" +
	"\x0eStreamViewType\x12 \n" +
	"\x1cSTREAM_VIEW_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tNEW_IMAGE\x10\x01\x12\r\n" +
	"\tOLD_IMAGE\x10\x02\x12\x16\n" +
	"\x12NEW_AND_OLD_IMAGES\x10\x03\x12\r\n" +
	"\tKEYS_ONLY\x10\x04*W\n" +
	"\n" +
	"TableClass\x12\x1b\n" +
	"\x17TABLE_CLASS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bSTANDARD\x10\x01\x12\x1e\n" +
	"\x1aSTANDARD_INFREQUENT_ACCESS\x10\x02B\xfa\x02\n" +
	"/com.project.planton.provider.aws.awsdynamodb.v1B\tSpecProtoP\x01Zigithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1;awsdynamodbv1\xa2\x02\x05PPPAA\xaa\x02+Project.Planton.Provider.Aws.Awsdynamodb.V1\xca\x02+Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\xe2\x027Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\\GPBMetadata\xea\x020Project::Planton::Provider::Aws::Awsdynamodb::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = []any{
	(BillingMode)(0),             // 0: project.planton.provider.aws.awsdynamodb.v1.BillingMode
	(AttributeType)(0),           // 1: project.planton.provider.aws.awsdynamodb.v1.AttributeType
	(ProjectionType)(0),          // 2: project.planton.provider.aws.awsdynamodb.v1.ProjectionType
	(StreamViewType)(0),          // 3: project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	(TableClass)(0),              // 4: project.planton.provider.aws.awsdynamodb.v1.TableClass
	(*AwsDynamodbSpec)(nil),      // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec
	(*AttributeDefinition)(nil),  // 6: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	(*ServerSideEncryption)(nil), // 7: project.planton.provider.aws.awsdynamodb.v1.ServerSideEncryption
	(*AutoscalingConfig)(nil),    // 8: project.planton.provider.aws.awsdynamodb.v1.AutoscalingConfig
	(*LocalSecondaryIndex)(nil),  // 9: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	(*GlobalSecondaryIndex)(nil), // 10: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	(*Projection)(nil),           // 11: project.planton.provider.aws.awsdynamodb.v1.Projection
	(*Tag)(nil),                  // 12: project.planton.provider.aws.awsdynamodb.v1.Tag
}
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = []int32{
	6,  // 0: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.attributes:type_name -> project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	0,  // 1: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.billing_mode:type_name -> project.planton.provider.aws.awsdynamodb.v1.BillingMode
	8,  // 2: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.autoscaling:type_name -> project.planton.provider.aws.awsdynamodb.v1.AutoscalingConfig
	9,  // 3: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.local_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	10, // 4: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.global_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	3,  // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.stream_view_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	7,  // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.encryption:type_name -> project.planton.provider.aws.awsdynamodb.v1.ServerSideEncryption
	4,  // 7: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.table_class:type_name -> project.planton.provider.aws.awsdynamodb.v1.TableClass
	12, // 8: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.tags:type_name -> project.planton.provider.aws.awsdynamodb.v1.Tag
	1,  // 9: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AttributeType
	11, // 10: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	0,  // 11: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.billing_mode:type_name -> project.planton.provider.aws.awsdynamodb.v1.BillingMode
	8,  // 12: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.autoscaling:type_name -> project.planton.provider.aws.awsdynamodb.v1.AutoscalingConfig
	11, // 13: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	2,  // 14: project.planton.provider.aws.awsdynamodb.v1.Projection.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.ProjectionType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() }
func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awsdynamodb_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsdynamodb_v1_spec_proto = out.File
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = nil
}
