// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsdynamodb/v1/spec.proto

package awsdynamodbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Allowed scalar attribute types in DynamoDB.
type ScalarAttributeType int32

const (
	ScalarAttributeType_ATTRIBUTE_TYPE_UNSPECIFIED ScalarAttributeType = 0
	// String
	ScalarAttributeType_S ScalarAttributeType = 1
	// Number
	ScalarAttributeType_N ScalarAttributeType = 2
	// Binary
	ScalarAttributeType_B ScalarAttributeType = 3
)

// Enum value maps for ScalarAttributeType.
var (
	ScalarAttributeType_name = map[int32]string{
		0: "ATTRIBUTE_TYPE_UNSPECIFIED",
		1: "S",
		2: "N",
		3: "B",
	}
	ScalarAttributeType_value = map[string]int32{
		"ATTRIBUTE_TYPE_UNSPECIFIED": 0,
		"S":                          1,
		"N":                          2,
		"B":                          3,
	}
)

func (x ScalarAttributeType) Enum() *ScalarAttributeType {
	p := new(ScalarAttributeType)
	*p = x
	return p
}

func (x ScalarAttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScalarAttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0].Descriptor()
}

func (ScalarAttributeType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0]
}

func (x ScalarAttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScalarAttributeType.Descriptor instead.
func (ScalarAttributeType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

// Billing modes supported by DynamoDB.
type BillingMode int32

const (
	BillingMode_BILLING_MODE_UNSPECIFIED BillingMode = 0
	// Pay per request pricing model.
	BillingMode_PAY_PER_REQUEST BillingMode = 1
	// Provisioned throughput pricing model.
	BillingMode_PROVISIONED BillingMode = 2
)

// Enum value maps for BillingMode.
var (
	BillingMode_name = map[int32]string{
		0: "BILLING_MODE_UNSPECIFIED",
		1: "PAY_PER_REQUEST",
		2: "PROVISIONED",
	}
	BillingMode_value = map[string]int32{
		"BILLING_MODE_UNSPECIFIED": 0,
		"PAY_PER_REQUEST":          1,
		"PROVISIONED":              2,
	}
)

func (x BillingMode) Enum() *BillingMode {
	p := new(BillingMode)
	*p = x
	return p
}

func (x BillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1].Descriptor()
}

func (BillingMode) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1]
}

func (x BillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingMode.Descriptor instead.
func (BillingMode) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

type StreamViewType int32

const (
	StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED StreamViewType = 0
	// Only the key attributes of the modified item.
	StreamViewType_KEYS_ONLY StreamViewType = 1
	// New image of the entire item.
	StreamViewType_NEW_IMAGE StreamViewType = 2
	// Old image of the entire item.
	StreamViewType_OLD_IMAGE StreamViewType = 3
	// Both the new and the old images of the item.
	StreamViewType_NEW_AND_OLD_IMAGES StreamViewType = 4
)

// Enum value maps for StreamViewType.
var (
	StreamViewType_name = map[int32]string{
		0: "STREAM_VIEW_TYPE_UNSPECIFIED",
		1: "KEYS_ONLY",
		2: "NEW_IMAGE",
		3: "OLD_IMAGE",
		4: "NEW_AND_OLD_IMAGES",
	}
	StreamViewType_value = map[string]int32{
		"STREAM_VIEW_TYPE_UNSPECIFIED": 0,
		"KEYS_ONLY":                    1,
		"NEW_IMAGE":                    2,
		"OLD_IMAGE":                    3,
		"NEW_AND_OLD_IMAGES":           4,
	}
)

func (x StreamViewType) Enum() *StreamViewType {
	p := new(StreamViewType)
	*p = x
	return p
}

func (x StreamViewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamViewType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2].Descriptor()
}

func (StreamViewType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2]
}

func (x StreamViewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamViewType.Descriptor instead.
func (StreamViewType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

type SseType int32

const (
	SseType_SSE_TYPE_UNSPECIFIED SseType = 0
	// AES-256 encryption using an AWS owned key.
	SseType_AWS_MANAGED SseType = 1
	// Encryption using a customer managed KMS key.
	SseType_CUSTOMER_MANAGED SseType = 2
)

// Enum value maps for SseType.
var (
	SseType_name = map[int32]string{
		0: "SSE_TYPE_UNSPECIFIED",
		1: "AWS_MANAGED",
		2: "CUSTOMER_MANAGED",
	}
	SseType_value = map[string]int32{
		"SSE_TYPE_UNSPECIFIED": 0,
		"AWS_MANAGED":          1,
		"CUSTOMER_MANAGED":     2,
	}
)

func (x SseType) Enum() *SseType {
	p := new(SseType)
	*p = x
	return p
}

func (x SseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SseType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3].Descriptor()
}

func (SseType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3]
}

func (x SseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SseType.Descriptor instead.
func (SseType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

// Table storage class.
type TableClass int32

const (
	TableClass_TABLE_CLASS_UNSPECIFIED TableClass = 0
	// Standard table class for general-purpose workloads.
	TableClass_STANDARD TableClass = 1
	// Cost-optimized infrequent access table class.
	TableClass_STANDARD_INFREQUENT_ACCESS TableClass = 2
)

// Enum value maps for TableClass.
var (
	TableClass_name = map[int32]string{
		0: "TABLE_CLASS_UNSPECIFIED",
		1: "STANDARD",
		2: "STANDARD_INFREQUENT_ACCESS",
	}
	TableClass_value = map[string]int32{
		"TABLE_CLASS_UNSPECIFIED":    0,
		"STANDARD":                   1,
		"STANDARD_INFREQUENT_ACCESS": 2,
	}
)

func (x TableClass) Enum() *TableClass {
	p := new(TableClass)
	*p = x
	return p
}

func (x TableClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableClass) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4].Descriptor()
}

func (TableClass) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4]
}

func (x TableClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableClass.Descriptor instead.
func (TableClass) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

type Projection_ProjectionType int32

const (
	Projection_PROJECTION_TYPE_UNSPECIFIED Projection_ProjectionType = 0
	// All table attributes are projected.
	Projection_ALL Projection_ProjectionType = 1
	// Only key attributes are projected.
	Projection_KEYS_ONLY Projection_ProjectionType = 2
	// Only key attributes and specified non-key attributes are projected.
	Projection_INCLUDE Projection_ProjectionType = 3
)

// Enum value maps for Projection_ProjectionType.
var (
	Projection_ProjectionType_name = map[int32]string{
		0: "PROJECTION_TYPE_UNSPECIFIED",
		1: "ALL",
		2: "KEYS_ONLY",
		3: "INCLUDE",
	}
	Projection_ProjectionType_value = map[string]int32{
		"PROJECTION_TYPE_UNSPECIFIED": 0,
		"ALL":                         1,
		"KEYS_ONLY":                   2,
		"INCLUDE":                     3,
	}
)

func (x Projection_ProjectionType) Enum() *Projection_ProjectionType {
	p := new(Projection_ProjectionType)
	*p = x
	return p
}

func (x Projection_ProjectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Projection_ProjectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5].Descriptor()
}

func (Projection_ProjectionType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5]
}

func (x Projection_ProjectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Projection_ProjectionType.Descriptor instead.
func (Projection_ProjectionType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2, 0}
}

// Specification for an Amazon DynamoDB table.
type AwsDynamodbSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the DynamoDB table. Must be unique within the AWS account and region.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Definitions of all attributes used as primary keys or indexes.
	AttributeDefinitions []*AttributeDefinition `protobuf:"bytes,2,rep,name=attribute_definitions,json=attributeDefinitions,proto3" json:"attribute_definitions,omitempty"`
	// Partition key (hash key) for the primary key schema.
	HashKey string `protobuf:"bytes,3,opt,name=hash_key,json=hashKey,proto3" json:"hash_key,omitempty"`
	// Sort key (range key) for the primary key schema, optional.
	RangeKey string `protobuf:"bytes,4,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	// Billing mode that controls how you are charged for read/write throughput.
	BillingMode BillingMode `protobuf:"varint,5,opt,name=billing_mode,json=billingMode,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.BillingMode" json:"billing_mode,omitempty"`
	// Provisioned read capacity units (RCU); required when billing_mode is PROVISIONED.
	ReadCapacity int64 `protobuf:"varint,6,opt,name=read_capacity,json=readCapacity,proto3" json:"read_capacity,omitempty"`
	// Provisioned write capacity units (WCU); required when billing_mode is PROVISIONED.
	WriteCapacity int64 `protobuf:"varint,7,opt,name=write_capacity,json=writeCapacity,proto3" json:"write_capacity,omitempty"`
	// Configuration for global secondary indexes.
	GlobalSecondaryIndexes []*GlobalSecondaryIndex `protobuf:"bytes,8,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	// Configuration for local secondary indexes.
	LocalSecondaryIndexes []*LocalSecondaryIndex `protobuf:"bytes,9,rep,name=local_secondary_indexes,json=localSecondaryIndexes,proto3" json:"local_secondary_indexes,omitempty"`
	// Time-to-live settings for automatic item expiration.
	Ttl *TtlSpec `protobuf:"bytes,10,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// DynamoDB Streams configuration.
	Stream *StreamSpec `protobuf:"bytes,11,opt,name=stream,proto3" json:"stream,omitempty"`
	// Server-side encryption settings.
	ServerSideEncryption *SseSpec `protobuf:"bytes,12,opt,name=server_side_encryption,json=serverSideEncryption,proto3" json:"server_side_encryption,omitempty"`
	// Enables point-in-time recovery (PITR) for continuous backups.
	PointInTimeRecovery bool `protobuf:"varint,13,opt,name=point_in_time_recovery,json=pointInTimeRecovery,proto3" json:"point_in_time_recovery,omitempty"`
	// Arbitrary key/value metadata to attach to the table.
	Tags map[string]string `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Storage class of the table which affects cost and performance.
	TableClass TableClass `protobuf:"varint,15,opt,name=table_class,json=tableClass,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.TableClass" json:"table_class,omitempty"`
	// Prevents accidental deletion when set to true.
	DeletionProtection bool `protobuf:"varint,16,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Enables contributor insights for advanced metrics and analysis.
	ContributorInsights bool `protobuf:"varint,17,opt,name=contributor_insights,json=contributorInsights,proto3" json:"contributor_insights,omitempty"`
	// Replica configurations for creating a global table.
	Replicas      []*ReplicaSpec `protobuf:"bytes,18,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec) Reset() {
	*x = AwsDynamodbSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec) ProtoMessage() {}

func (x *AwsDynamodbSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsDynamodbSpec) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AwsDynamodbSpec) GetAttributeDefinitions() []*AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

func (x *AwsDynamodbSpec) GetHashKey() string {
	if x != nil {
		return x.HashKey
	}
	return ""
}

func (x *AwsDynamodbSpec) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *AwsDynamodbSpec) GetBillingMode() BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return BillingMode_BILLING_MODE_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetReadCapacity() int64 {
	if x != nil {
		return x.ReadCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetWriteCapacity() int64 {
	if x != nil {
		return x.WriteCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetGlobalSecondaryIndexes() []*GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetLocalSecondaryIndexes() []*LocalSecondaryIndex {
	if x != nil {
		return x.LocalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTtl() *TtlSpec {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *AwsDynamodbSpec) GetStream() *StreamSpec {
	if x != nil {
		return x.Stream
	}
	return nil
}

func (x *AwsDynamodbSpec) GetServerSideEncryption() *SseSpec {
	if x != nil {
		return x.ServerSideEncryption
	}
	return nil
}

func (x *AwsDynamodbSpec) GetPointInTimeRecovery() bool {
	if x != nil {
		return x.PointInTimeRecovery
	}
	return false
}

func (x *AwsDynamodbSpec) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTableClass() TableClass {
	if x != nil {
		return x.TableClass
	}
	return TableClass_TABLE_CLASS_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *AwsDynamodbSpec) GetContributorInsights() bool {
	if x != nil {
		return x.ContributorInsights
	}
	return false
}

func (x *AwsDynamodbSpec) GetReplicas() []*ReplicaSpec {
	if x != nil {
		return x.Replicas
	}
	return nil
}

// Attribute definition describing a single attribute and its data type.
type AttributeDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the attribute.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Scalar data type of the attribute.
	Type          ScalarAttributeType `protobuf:"varint,2,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.ScalarAttributeType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *AttributeDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributeDefinition) GetType() ScalarAttributeType {
	if x != nil {
		return x.Type
	}
	return ScalarAttributeType_ATTRIBUTE_TYPE_UNSPECIFIED
}

// Projection configuration for secondary indexes.
type Projection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Determines which attributes are copied into the index.
	Type Projection_ProjectionType `protobuf:"varint,1,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.Projection_ProjectionType" json:"type,omitempty"`
	// List of non-key attribute names to include when type is INCLUDE.
	NonKeyAttributes []string `protobuf:"bytes,2,rep,name=non_key_attributes,json=nonKeyAttributes,proto3" json:"non_key_attributes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Projection) Reset() {
	*x = Projection{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection) ProtoMessage() {}

func (x *Projection) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection.ProtoReflect.Descriptor instead.
func (*Projection) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *Projection) GetType() Projection_ProjectionType {
	if x != nil {
		return x.Type
	}
	return Projection_PROJECTION_TYPE_UNSPECIFIED
}

func (x *Projection) GetNonKeyAttributes() []string {
	if x != nil {
		return x.NonKeyAttributes
	}
	return nil
}

// Configuration for a global secondary index (GSI).
type GlobalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the GSI.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Partition key for the index.
	HashKey string `protobuf:"bytes,2,opt,name=hash_key,json=hashKey,proto3" json:"hash_key,omitempty"`
	// Optional sort key for the index.
	RangeKey string `protobuf:"bytes,3,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	// Index projection definition.
	Projection *Projection `protobuf:"bytes,4,opt,name=projection,proto3" json:"projection,omitempty"`
	// Provisioned read capacity units for the index when billing_mode is PROVISIONED.
	ReadCapacity int64 `protobuf:"varint,5,opt,name=read_capacity,json=readCapacity,proto3" json:"read_capacity,omitempty"`
	// Provisioned write capacity units for the index when billing_mode is PROVISIONED.
	WriteCapacity int64 `protobuf:"varint,6,opt,name=write_capacity,json=writeCapacity,proto3" json:"write_capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalSecondaryIndex) Reset() {
	*x = GlobalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecondaryIndex) ProtoMessage() {}

func (x *GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

func (x *GlobalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetHashKey() string {
	if x != nil {
		return x.HashKey
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

func (x *GlobalSecondaryIndex) GetReadCapacity() int64 {
	if x != nil {
		return x.ReadCapacity
	}
	return 0
}

func (x *GlobalSecondaryIndex) GetWriteCapacity() int64 {
	if x != nil {
		return x.WriteCapacity
	}
	return 0
}

// Configuration for a local secondary index (LSI).
type LocalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the LSI.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Sort key for the index (partition key is same as table hash_key).
	RangeKey string `protobuf:"bytes,2,opt,name=range_key,json=rangeKey,proto3" json:"range_key,omitempty"`
	// Index projection definition.
	Projection    *Projection `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalSecondaryIndex) Reset() {
	*x = LocalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalSecondaryIndex) ProtoMessage() {}

func (x *LocalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*LocalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

func (x *LocalSecondaryIndex) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LocalSecondaryIndex) GetRangeKey() string {
	if x != nil {
		return x.RangeKey
	}
	return ""
}

func (x *LocalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

// Time-to-live specification.
type TtlSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enables TTL when true.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Name of the attribute that stores the expiration timestamp (in epoch seconds).
	AttributeName string `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TtlSpec) Reset() {
	*x = TtlSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TtlSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TtlSpec) ProtoMessage() {}

func (x *TtlSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TtlSpec.ProtoReflect.Descriptor instead.
func (*TtlSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{5}
}

func (x *TtlSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *TtlSpec) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

// Streams specification.
type StreamSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enables DynamoDB Streams when true.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Determines the information written to the stream.
	ViewType      StreamViewType `protobuf:"varint,2,opt,name=view_type,json=viewType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.StreamViewType" json:"view_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSpec) Reset() {
	*x = StreamSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSpec) ProtoMessage() {}

func (x *StreamSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSpec.ProtoReflect.Descriptor instead.
func (*StreamSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{6}
}

func (x *StreamSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *StreamSpec) GetViewType() StreamViewType {
	if x != nil {
		return x.ViewType
	}
	return StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED
}

// Server-side encryption specification.
type SseSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enables SSE when true.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Type of encryption key to use.
	Type SseType `protobuf:"varint,2,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.SseType" json:"type,omitempty"`
	// ARN of the customer managed KMS key; required when type is CUSTOMER_MANAGED.
	KmsKeyArn     string `protobuf:"bytes,3,opt,name=kms_key_arn,json=kmsKeyArn,proto3" json:"kms_key_arn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SseSpec) Reset() {
	*x = SseSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SseSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SseSpec) ProtoMessage() {}

func (x *SseSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SseSpec.ProtoReflect.Descriptor instead.
func (*SseSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{7}
}

func (x *SseSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SseSpec) GetType() SseType {
	if x != nil {
		return x.Type
	}
	return SseType_SSE_TYPE_UNSPECIFIED
}

func (x *SseSpec) GetKmsKeyArn() string {
	if x != nil {
		return x.KmsKeyArn
	}
	return ""
}

// Replica configuration for global tables.
type ReplicaSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AWS region of the replica.
	RegionName string `protobuf:"bytes,1,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	// Enables point-in-time recovery on the replica.
	PointInTimeRecovery bool `protobuf:"varint,2,opt,name=point_in_time_recovery,json=pointInTimeRecovery,proto3" json:"point_in_time_recovery,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReplicaSpec) Reset() {
	*x = ReplicaSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaSpec) ProtoMessage() {}

func (x *ReplicaSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaSpec.ProtoReflect.Descriptor instead.
func (*ReplicaSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{8}
}

func (x *ReplicaSpec) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *ReplicaSpec) GetPointInTimeRecovery() bool {
	if x != nil {
		return x.PointInTimeRecovery
	}
	return false
}

var File_project_planton_provider_aws_awsdynamodb_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc = "" +
	"\n" +
	"6project/planton/provider/aws/awsdynamodb/v1/spec.proto\x12+project.planton.provider.aws.awsdynamodb.v1\"\xe2\n" +
	"\n" +
	"\x0fAwsDynamodbSpec\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12u\n" +
	"\x15attribute_definitions\x18\x02 \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.AttributeDefinitionR\x14attributeDefinitions\x12\x19\n" +
	"\bhash_key\x18\x03 \x01(\tR\ahashKey\x12\x1b\n" +
	"\trange_key\x18\x04 \x01(\tR\brangeKey\x12[\n" +
	"\fbilling_mode\x18\x05 \x01(\x0e28.project.planton.provider.aws.awsdynamodb.v1.BillingModeR\vbillingMode\x12#\n" +
	"\rread_capacity\x18\x06 \x01(\x03R\freadCapacity\x12%\n" +
	"\x0ewrite_capacity\x18\a \x01(\x03R\rwriteCapacity\x12{\n" +
	"\x18global_secondary_indexes\x18\b \x03(\v2A.project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndexR\x16globalSecondaryIndexes\x12x\n" +
	"\x17local_secondary_indexes\x18\t \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndexR\x15localSecondaryIndexes\x12F\n" +
	"\x03ttl\x18\n" +
	" \x01(\v24.project.planton.provider.aws.awsdynamodb.v1.TtlSpecR\x03ttl\x12O\n" +
	"\x06stream\x18\v \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.StreamSpecR\x06stream\x12j\n" +
	"\x16server_side_encryption\x18\f \x01(\v24.project.planton.provider.aws.awsdynamodb.v1.SseSpecR\x14serverSideEncryption\x123\n" +
	"\x16point_in_time_recovery\x18\r \x01(\bR\x13pointInTimeRecovery\x12Z\n" +
	"\x04tags\x18\x0e \x03(\v2F.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntryR\x04tags\x12X\n" +
	"\vtable_class\x18\x0f \x01(\x0e27.project.planton.provider.aws.awsdynamodb.v1.TableClassR\n" +
	"tableClass\x12/\n" +
	"\x13deletion_protection\x18\x10 \x01(\bR\x12deletionProtection\x121\n" +
	"\x14contributor_insights\x18\x11 \x01(\bR\x13contributorInsights\x12T\n" +
	"\breplicas\x18\x12 \x03(\v28.project.planton.provider.aws.awsdynamodb.v1.ReplicaSpecR\breplicas\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x7f\n" +
	"\x13AttributeDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12T\n" +
	"\x04type\x18\x02 \x01(\x0e2@.project.planton.provider.aws.awsdynamodb.v1.ScalarAttributeTypeR\x04type\"\xee\x01\n" +
	"\n" +
	"Projection\x12Z\n" +
	"\x04type\x18\x01 \x01(\x0e2F.project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionTypeR\x04type\x12,\n" +
	"\x12non_key_attributes\x18\x02 \x03(\tR\x10nonKeyAttributes\"V\n" +
	"\x0eProjectionType\x12\x1f\n" +
	"\x1bPROJECTION_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\r\n" +
	"\tKEYS_ONLY\x10\x02\x12\v\n" +
	"\aINCLUDE\x10\x03\"\x87\x02\n" +
	"\x14GlobalSecondaryIndex\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\bhash_key\x18\x02 \x01(\tR\ahashKey\x12\x1b\n" +
	"\trange_key\x18\x03 \x01(\tR\brangeKey\x12W\n" +
	"\n" +
	"projection\x18\x04 \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionR\n" +
	"projection\x12#\n" +
	"\rread_capacity\x18\x05 \x01(\x03R\freadCapacity\x12%\n" +
	"\x0ewrite_capacity\x18\x06 \x01(\x03R\rwriteCapacity\"\x9f\x01\n" +
	"\x13LocalSecondaryIndex\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\trange_key\x18\x02 \x01(\tR\brangeKey\x12W\n" +
	"\n" +
	"projection\x18\x03 \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionR\n" +
	"projection\"J\n" +
	"\aTtlSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12%\n" +
	"\x0eattribute_name\x18\x02 \x01(\tR\rattributeName\"\x80\x01\n" +
	"\n" +
	"StreamSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12X\n" +
	"\tview_type\x18\x02 \x01(\x0e2;.project.planton.provider.aws.awsdynamodb.v1.StreamViewTypeR\bviewType\"\x8d\x01\n" +
	"\aSseSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12H\n" +
	"\x04type\x18\x02 \x01(\x0e24.project.planton.provider.aws.awsdynamodb.v1.SseTypeR\x04type\x12\x1e\n" +
	"\vkms_key_arn\x18\x03 \x01(\tR\tkmsKeyArn\"c\n" +
	"\vReplicaSpec\x12\x1f\n" +
	"\vregion_name\x18\x01 \x01(\tR\n" +
	"regionName\x123\n" +
	"\x16point_in_time_recovery\x18\x02 \x01(\bR\x13pointInTimeRecovery*J\n" +
	"\x13ScalarAttributeType\x12\x1e\n" +
	"\x1aATTRIBUTE_TYPE_UNSPECIFIED\x10\x00\x12\x05\n" +
	"\x01S\x10\x01\x12\x05\n" +
	"\x01N\x10\x02\x12\x05\n" +
	"\x01B\x10\x03*Q\n" +
	"\vBillingMode\x12\x1c\n" +
	"\x18BILLING_MODE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fPAY_PER_REQUEST\x10\x01\x12\x0f\n" +
	"\vPROVISIONED\x10\x02*w\n" +
	"\x0eStreamViewType\x12 \n" +
	"\x1cSTREAM_VIEW_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tKEYS_ONLY\x10\x01\x12\r\n" +
	"\tNEW_IMAGE\x10\x02\x12\r\n" +
	"\tOLD_IMAGE\x10\x03\x12\x16\n" +
	"\x12NEW_AND_OLD_IMAGES\x10\x04*J\n" +
	"\aSseType\x12\x18\n" +
	"\x14SSE_TYPE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vAWS_MANAGED\x10\x01\x12\x14\n" +
	"\x10CUSTOMER_MANAGED\x10\x02*W\n" +
	"\n" +
	"TableClass\x12\x1b\n" +
	"\x17TABLE_CLASS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bSTANDARD\x10\x01\x12\x1e\n" +
	"\x1aSTANDARD_INFREQUENT_ACCESS\x10\x02B\xfa\x02\n" +
	"/com.project.planton.provider.aws.awsdynamodb.v1B\tSpecProtoP\x01Zigithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1;awsdynamodbv1\xa2\x02\x05PPPAA\xaa\x02+Project.Planton.Provider.Aws.Awsdynamodb.V1\xca\x02+Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\xe2\x027Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\\GPBMetadata\xea\x020Project::Planton::Provider::Aws::Awsdynamodb::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = []any{
	(ScalarAttributeType)(0),       // 0: project.planton.provider.aws.awsdynamodb.v1.ScalarAttributeType
	(BillingMode)(0),               // 1: project.planton.provider.aws.awsdynamodb.v1.BillingMode
	(StreamViewType)(0),            // 2: project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	(SseType)(0),                   // 3: project.planton.provider.aws.awsdynamodb.v1.SseType
	(TableClass)(0),                // 4: project.planton.provider.aws.awsdynamodb.v1.TableClass
	(Projection_ProjectionType)(0), // 5: project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionType
	(*AwsDynamodbSpec)(nil),        // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec
	(*AttributeDefinition)(nil),    // 7: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	(*Projection)(nil),             // 8: project.planton.provider.aws.awsdynamodb.v1.Projection
	(*GlobalSecondaryIndex)(nil),   // 9: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	(*LocalSecondaryIndex)(nil),    // 10: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	(*TtlSpec)(nil),                // 11: project.planton.provider.aws.awsdynamodb.v1.TtlSpec
	(*StreamSpec)(nil),             // 12: project.planton.provider.aws.awsdynamodb.v1.StreamSpec
	(*SseSpec)(nil),                // 13: project.planton.provider.aws.awsdynamodb.v1.SseSpec
	(*ReplicaSpec)(nil),            // 14: project.planton.provider.aws.awsdynamodb.v1.ReplicaSpec
	nil,                            // 15: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntry
}
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = []int32{
	7,  // 0: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.attribute_definitions:type_name -> project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	1,  // 1: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.billing_mode:type_name -> project.planton.provider.aws.awsdynamodb.v1.BillingMode
	9,  // 2: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.global_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	10, // 3: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.local_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	11, // 4: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ttl:type_name -> project.planton.provider.aws.awsdynamodb.v1.TtlSpec
	12, // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.stream:type_name -> project.planton.provider.aws.awsdynamodb.v1.StreamSpec
	13, // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.server_side_encryption:type_name -> project.planton.provider.aws.awsdynamodb.v1.SseSpec
	15, // 7: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.tags:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntry
	4,  // 8: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.table_class:type_name -> project.planton.provider.aws.awsdynamodb.v1.TableClass
	14, // 9: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.replicas:type_name -> project.planton.provider.aws.awsdynamodb.v1.ReplicaSpec
	0,  // 10: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.ScalarAttributeType
	5,  // 11: project.planton.provider.aws.awsdynamodb.v1.Projection.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionType
	8,  // 12: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	8,  // 13: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	2,  // 14: project.planton.provider.aws.awsdynamodb.v1.StreamSpec.view_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	3,  // 15: project.planton.provider.aws.awsdynamodb.v1.SseSpec.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.SseType
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() }
func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awsdynamodb_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsdynamodb_v1_spec_proto = out.File
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = nil
}
