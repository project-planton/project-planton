// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsdynamodb/v1/spec.proto

package awsdynamodbv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Billing modes supported by DynamoDB.
type BillingMode int32

const (
	BillingMode_BILLING_MODE_UNSPECIFIED BillingMode = 0
	BillingMode_PROVISIONED              BillingMode = 1
	BillingMode_PAY_PER_REQUEST          BillingMode = 2
)

// Enum value maps for BillingMode.
var (
	BillingMode_name = map[int32]string{
		0: "BILLING_MODE_UNSPECIFIED",
		1: "PROVISIONED",
		2: "PAY_PER_REQUEST",
	}
	BillingMode_value = map[string]int32{
		"BILLING_MODE_UNSPECIFIED": 0,
		"PROVISIONED":              1,
		"PAY_PER_REQUEST":          2,
	}
)

func (x BillingMode) Enum() *BillingMode {
	p := new(BillingMode)
	*p = x
	return p
}

func (x BillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0].Descriptor()
}

func (BillingMode) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0]
}

func (x BillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingMode.Descriptor instead.
func (BillingMode) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

// Scalar attribute data types.
type AttributeType int32

const (
	AttributeType_ATTRIBUTE_TYPE_UNSPECIFIED AttributeType = 0
	AttributeType_S                          AttributeType = 1
	AttributeType_N                          AttributeType = 2
	AttributeType_B                          AttributeType = 3
)

// Enum value maps for AttributeType.
var (
	AttributeType_name = map[int32]string{
		0: "ATTRIBUTE_TYPE_UNSPECIFIED",
		1: "S",
		2: "N",
		3: "B",
	}
	AttributeType_value = map[string]int32{
		"ATTRIBUTE_TYPE_UNSPECIFIED": 0,
		"S":                          1,
		"N":                          2,
		"B":                          3,
	}
)

func (x AttributeType) Enum() *AttributeType {
	p := new(AttributeType)
	*p = x
	return p
}

func (x AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1].Descriptor()
}

func (AttributeType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1]
}

func (x AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributeType.Descriptor instead.
func (AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

// Key element roles.
type KeyType int32

const (
	KeyType_KEY_TYPE_UNSPECIFIED KeyType = 0
	KeyType_HASH                 KeyType = 1 // Partition key
	KeyType_RANGE                KeyType = 2 // Sort key
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "HASH",
		2: "RANGE",
	}
	KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED": 0,
		"HASH":                 1,
		"RANGE":                2,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

// Types of data that can be written to a stream.
type StreamViewType int32

const (
	StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED StreamViewType = 0
	StreamViewType_NEW_IMAGE                    StreamViewType = 1
	StreamViewType_OLD_IMAGE                    StreamViewType = 2
	StreamViewType_NEW_AND_OLD_IMAGES           StreamViewType = 3
	StreamViewType_KEYS_ONLY                    StreamViewType = 4
)

// Enum value maps for StreamViewType.
var (
	StreamViewType_name = map[int32]string{
		0: "STREAM_VIEW_TYPE_UNSPECIFIED",
		1: "NEW_IMAGE",
		2: "OLD_IMAGE",
		3: "NEW_AND_OLD_IMAGES",
		4: "KEYS_ONLY",
	}
	StreamViewType_value = map[string]int32{
		"STREAM_VIEW_TYPE_UNSPECIFIED": 0,
		"NEW_IMAGE":                    1,
		"OLD_IMAGE":                    2,
		"NEW_AND_OLD_IMAGES":           3,
		"KEYS_ONLY":                    4,
	}
)

func (x StreamViewType) Enum() *StreamViewType {
	p := new(StreamViewType)
	*p = x
	return p
}

func (x StreamViewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamViewType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3].Descriptor()
}

func (StreamViewType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3]
}

func (x StreamViewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamViewType.Descriptor instead.
func (StreamViewType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

// Encryption key types.
type SSEType int32

const (
	SSEType_SSE_TYPE_UNSPECIFIED SSEType = 0
	SSEType_AWS_OWNED            SSEType = 1 // DynamoDB-owned key (default)
	SSEType_AWS_MANAGED          SSEType = 2 // AWS managed key in KMS
	SSEType_CUSTOMER_MANAGED     SSEType = 3 // Customer managed KMS key
)

// Enum value maps for SSEType.
var (
	SSEType_name = map[int32]string{
		0: "SSE_TYPE_UNSPECIFIED",
		1: "AWS_OWNED",
		2: "AWS_MANAGED",
		3: "CUSTOMER_MANAGED",
	}
	SSEType_value = map[string]int32{
		"SSE_TYPE_UNSPECIFIED": 0,
		"AWS_OWNED":            1,
		"AWS_MANAGED":          2,
		"CUSTOMER_MANAGED":     3,
	}
)

func (x SSEType) Enum() *SSEType {
	p := new(SSEType)
	*p = x
	return p
}

func (x SSEType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SSEType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4].Descriptor()
}

func (SSEType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4]
}

func (x SSEType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SSEType.Descriptor instead.
func (SSEType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

// Projection type: ALL, KEYS_ONLY, or INCLUDE.
type Projection_ProjectionType int32

const (
	Projection_PROJECTION_TYPE_UNSPECIFIED Projection_ProjectionType = 0
	Projection_ALL                         Projection_ProjectionType = 1
	Projection_KEYS_ONLY                   Projection_ProjectionType = 2
	Projection_INCLUDE                     Projection_ProjectionType = 3
)

// Enum value maps for Projection_ProjectionType.
var (
	Projection_ProjectionType_name = map[int32]string{
		0: "PROJECTION_TYPE_UNSPECIFIED",
		1: "ALL",
		2: "KEYS_ONLY",
		3: "INCLUDE",
	}
	Projection_ProjectionType_value = map[string]int32{
		"PROJECTION_TYPE_UNSPECIFIED": 0,
		"ALL":                         1,
		"KEYS_ONLY":                   2,
		"INCLUDE":                     3,
	}
)

func (x Projection_ProjectionType) Enum() *Projection_ProjectionType {
	p := new(Projection_ProjectionType)
	*p = x
	return p
}

func (x Projection_ProjectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Projection_ProjectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5].Descriptor()
}

func (Projection_ProjectionType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5]
}

func (x Projection_ProjectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Projection_ProjectionType.Descriptor instead.
func (Projection_ProjectionType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{5, 0}
}

// AwsDynamodbSpec defines the desired state of an Amazon DynamoDB table.
type AwsDynamodbSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the DynamoDB table.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Billing mode for the table: PROVISIONED or PAY_PER_REQUEST.
	BillingMode BillingMode `protobuf:"varint,2,opt,name=billing_mode,json=billingMode,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.BillingMode" json:"billing_mode,omitempty"`
	// Provisioned read capacity units (ignored when billing_mode is PAY_PER_REQUEST).
	ReadCapacityUnits int64 `protobuf:"varint,3,opt,name=read_capacity_units,json=readCapacityUnits,proto3" json:"read_capacity_units,omitempty"`
	// Provisioned write capacity units (ignored when billing_mode is PAY_PER_REQUEST).
	WriteCapacityUnits int64 `protobuf:"varint,4,opt,name=write_capacity_units,json=writeCapacityUnits,proto3" json:"write_capacity_units,omitempty"`
	// Attribute definitions for the table's key schema and indexes.
	AttributeDefinitions []*AttributeDefinition `protobuf:"bytes,5,rep,name=attribute_definitions,json=attributeDefinitions,proto3" json:"attribute_definitions,omitempty"`
	// Primary key schema elements (partition and optional sort keys).
	KeySchema []*KeySchemaElement `protobuf:"bytes,6,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Local secondary indexes attached to the table.
	LocalSecondaryIndexes []*LocalSecondaryIndex `protobuf:"bytes,7,rep,name=local_secondary_indexes,json=localSecondaryIndexes,proto3" json:"local_secondary_indexes,omitempty"`
	// Global secondary indexes attached to the table.
	GlobalSecondaryIndexes []*GlobalSecondaryIndex `protobuf:"bytes,8,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	// List of tags to apply to the table.
	Tags []*Tag `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	// Enables Time to Live (TTL) on the specified attribute.
	Ttl *TTLSpecification `protobuf:"bytes,10,opt,name=ttl,proto3,oneof" json:"ttl,omitempty"`
	// Stream specification for DynamoDB Streams.
	StreamSpecification *StreamSpecification `protobuf:"bytes,11,opt,name=stream_specification,json=streamSpecification,proto3,oneof" json:"stream_specification,omitempty"`
	// Server-side encryption specification.
	SseSpecification *SSESpecification `protobuf:"bytes,12,opt,name=sse_specification,json=sseSpecification,proto3,oneof" json:"sse_specification,omitempty"`
	// Enables point-in-time recovery (continuous backups).
	PointInTimeRecovery bool `protobuf:"varint,13,opt,name=point_in_time_recovery,json=pointInTimeRecovery,proto3" json:"point_in_time_recovery,omitempty"`
	// Enables table deletion protection.
	DeletionProtection bool `protobuf:"varint,14,opt,name=deletion_protection,json=deletionProtection,proto3" json:"deletion_protection,omitempty"`
	// Configuration for Global Table replication across regions.
	Replicas      []*ReplicaSpecification `protobuf:"bytes,15,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec) Reset() {
	*x = AwsDynamodbSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec) ProtoMessage() {}

func (x *AwsDynamodbSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsDynamodbSpec) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AwsDynamodbSpec) GetBillingMode() BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return BillingMode_BILLING_MODE_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetReadCapacityUnits() int64 {
	if x != nil {
		return x.ReadCapacityUnits
	}
	return 0
}

func (x *AwsDynamodbSpec) GetWriteCapacityUnits() int64 {
	if x != nil {
		return x.WriteCapacityUnits
	}
	return 0
}

func (x *AwsDynamodbSpec) GetAttributeDefinitions() []*AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

func (x *AwsDynamodbSpec) GetKeySchema() []*KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *AwsDynamodbSpec) GetLocalSecondaryIndexes() []*LocalSecondaryIndex {
	if x != nil {
		return x.LocalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetGlobalSecondaryIndexes() []*GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTtl() *TTLSpecification {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *AwsDynamodbSpec) GetStreamSpecification() *StreamSpecification {
	if x != nil {
		return x.StreamSpecification
	}
	return nil
}

func (x *AwsDynamodbSpec) GetSseSpecification() *SSESpecification {
	if x != nil {
		return x.SseSpecification
	}
	return nil
}

func (x *AwsDynamodbSpec) GetPointInTimeRecovery() bool {
	if x != nil {
		return x.PointInTimeRecovery
	}
	return false
}

func (x *AwsDynamodbSpec) GetDeletionProtection() bool {
	if x != nil {
		return x.DeletionProtection
	}
	return false
}

func (x *AwsDynamodbSpec) GetReplicas() []*ReplicaSpecification {
	if x != nil {
		return x.Replicas
	}
	return nil
}

// Defines an attribute used in the table or indexes.
type AttributeDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attribute name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Attribute data type: S (string), N (number), B (binary).
	Type          AttributeType `protobuf:"varint,2,opt,name=type,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AttributeType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{1}
}

func (x *AttributeDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttributeDefinition) GetType() AttributeType {
	if x != nil {
		return x.Type
	}
	return AttributeType_ATTRIBUTE_TYPE_UNSPECIFIED
}

// Identifies a key element in a key schema.
type KeySchemaElement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attribute name for the key element.
	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	// Role of the key element: HASH (partition key) or RANGE (sort key).
	KeyType       KeyType `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.KeyType" json:"key_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeySchemaElement) Reset() {
	*x = KeySchemaElement{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeySchemaElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeySchemaElement) ProtoMessage() {}

func (x *KeySchemaElement) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeySchemaElement.ProtoReflect.Descriptor instead.
func (*KeySchemaElement) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{2}
}

func (x *KeySchemaElement) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *KeySchemaElement) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

// Local secondary index definition.
type LocalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index name.
	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// Key schema for the index (must reuse table partition key).
	KeySchema []*KeySchemaElement `protobuf:"bytes,2,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Projection configuration.
	Projection    *Projection `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalSecondaryIndex) Reset() {
	*x = LocalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalSecondaryIndex) ProtoMessage() {}

func (x *LocalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*LocalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{3}
}

func (x *LocalSecondaryIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *LocalSecondaryIndex) GetKeySchema() []*KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *LocalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

// Global secondary index definition.
type GlobalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index name.
	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// Key schema for the index (partition key and optional sort key).
	KeySchema []*KeySchemaElement `protobuf:"bytes,2,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Projection configuration.
	Projection *Projection `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`
	// Provisioned read capacity units (ignored when billing_mode is PAY_PER_REQUEST).
	ReadCapacityUnits int64 `protobuf:"varint,4,opt,name=read_capacity_units,json=readCapacityUnits,proto3" json:"read_capacity_units,omitempty"`
	// Provisioned write capacity units (ignored when billing_mode is PAY_PER_REQUEST).
	WriteCapacityUnits int64 `protobuf:"varint,5,opt,name=write_capacity_units,json=writeCapacityUnits,proto3" json:"write_capacity_units,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GlobalSecondaryIndex) Reset() {
	*x = GlobalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalSecondaryIndex) ProtoMessage() {}

func (x *GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{4}
}

func (x *GlobalSecondaryIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *GlobalSecondaryIndex) GetKeySchema() []*KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *GlobalSecondaryIndex) GetProjection() *Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

func (x *GlobalSecondaryIndex) GetReadCapacityUnits() int64 {
	if x != nil {
		return x.ReadCapacityUnits
	}
	return 0
}

func (x *GlobalSecondaryIndex) GetWriteCapacityUnits() int64 {
	if x != nil {
		return x.WriteCapacityUnits
	}
	return 0
}

// Projection settings for an index.
type Projection struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	ProjectionType Projection_ProjectionType `protobuf:"varint,1,opt,name=projection_type,json=projectionType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.Projection_ProjectionType" json:"projection_type,omitempty"`
	// Non-key attributes to include when projection_type is INCLUDE.
	NonKeyAttributes []string `protobuf:"bytes,2,rep,name=non_key_attributes,json=nonKeyAttributes,proto3" json:"non_key_attributes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Projection) Reset() {
	*x = Projection{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projection) ProtoMessage() {}

func (x *Projection) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projection.ProtoReflect.Descriptor instead.
func (*Projection) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{5}
}

func (x *Projection) GetProjectionType() Projection_ProjectionType {
	if x != nil {
		return x.ProjectionType
	}
	return Projection_PROJECTION_TYPE_UNSPECIFIED
}

func (x *Projection) GetNonKeyAttributes() []string {
	if x != nil {
		return x.NonKeyAttributes
	}
	return nil
}

// Key/value tag pair.
type Tag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tag key.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Tag value.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{6}
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Time-to-live specification.
type TTLSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enables TTL when true.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Name of the attribute that stores TTL epoch timestamp.
	AttributeName string `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TTLSpecification) Reset() {
	*x = TTLSpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TTLSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTLSpecification) ProtoMessage() {}

func (x *TTLSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTLSpecification.ProtoReflect.Descriptor instead.
func (*TTLSpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{7}
}

func (x *TTLSpecification) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *TTLSpecification) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

// Stream settings for the table.
type StreamSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When true, streams are enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Specifies what information is written to the stream.
	ViewType      StreamViewType `protobuf:"varint,2,opt,name=view_type,json=viewType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.StreamViewType" json:"view_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamSpecification) Reset() {
	*x = StreamSpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamSpecification) ProtoMessage() {}

func (x *StreamSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamSpecification.ProtoReflect.Descriptor instead.
func (*StreamSpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{8}
}

func (x *StreamSpecification) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *StreamSpecification) GetViewType() StreamViewType {
	if x != nil {
		return x.ViewType
	}
	return StreamViewType_STREAM_VIEW_TYPE_UNSPECIFIED
}

// Server-side encryption settings.
type SSESpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When true, server-side encryption is enabled.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Type of key used for encryption: AWS_OWNED, AWS_MANAGED, or CUSTOMER_MANAGED.
	SseType SSEType `protobuf:"varint,2,opt,name=sse_type,json=sseType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.SSEType" json:"sse_type,omitempty"`
	// ARN of the customer managed KMS key (required when sse_type is CUSTOMER_MANAGED).
	KmsKeyArn     string `protobuf:"bytes,3,opt,name=kms_key_arn,json=kmsKeyArn,proto3" json:"kms_key_arn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSESpecification) Reset() {
	*x = SSESpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSESpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSESpecification) ProtoMessage() {}

func (x *SSESpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSESpecification.ProtoReflect.Descriptor instead.
func (*SSESpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{9}
}

func (x *SSESpecification) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SSESpecification) GetSseType() SSEType {
	if x != nil {
		return x.SseType
	}
	return SSEType_SSE_TYPE_UNSPECIFIED
}

func (x *SSESpecification) GetKmsKeyArn() string {
	if x != nil {
		return x.KmsKeyArn
	}
	return ""
}

// Configuration for a regional replica in a Global Table.
type ReplicaSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AWS region for the replica.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Overrides for table-level settings in the replica.
	Override      *ReplicaOverride `protobuf:"bytes,2,opt,name=override,proto3,oneof" json:"override,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaSpecification) Reset() {
	*x = ReplicaSpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaSpecification) ProtoMessage() {}

func (x *ReplicaSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaSpecification.ProtoReflect.Descriptor instead.
func (*ReplicaSpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{10}
}

func (x *ReplicaSpecification) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ReplicaSpecification) GetOverride() *ReplicaOverride {
	if x != nil {
		return x.Override
	}
	return nil
}

// Per-replica overrides.
type ReplicaOverride struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enables point-in-time recovery on the replica.
	PointInTimeRecovery bool `protobuf:"varint,1,opt,name=point_in_time_recovery,json=pointInTimeRecovery,proto3" json:"point_in_time_recovery,omitempty"`
	// Overrides encryption settings for the replica.
	SseSpecification *SSESpecification `protobuf:"bytes,2,opt,name=sse_specification,json=sseSpecification,proto3,oneof" json:"sse_specification,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplicaOverride) Reset() {
	*x = ReplicaOverride{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaOverride) ProtoMessage() {}

func (x *ReplicaOverride) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaOverride.ProtoReflect.Descriptor instead.
func (*ReplicaOverride) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{11}
}

func (x *ReplicaOverride) GetPointInTimeRecovery() bool {
	if x != nil {
		return x.PointInTimeRecovery
	}
	return false
}

func (x *ReplicaOverride) GetSseSpecification() *SSESpecification {
	if x != nil {
		return x.SseSpecification
	}
	return nil
}

var File_project_planton_provider_aws_awsdynamodb_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc = "" +
	"\n" +
	"6project/planton/provider/aws/awsdynamodb/v1/spec.proto\x12+project.planton.provider.aws.awsdynamodb.v1\x1a\x1bbuf/validate/validate.proto\"\xb7\v\n" +
	"\x0fAwsDynamodbSpec\x12<\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x03\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\ttableName\x12e\n" +
	"\fbilling_mode\x18\x02 \x01(\x0e28.project.planton.provider.aws.awsdynamodb.v1.BillingModeB\b\xbaH\x05\x82\x01\x02 \x00R\vbillingMode\x127\n" +
	"\x13read_capacity_units\x18\x03 \x01(\x03B\a\xbaH\x04\"\x02(\x01R\x11readCapacityUnits\x129\n" +
	"\x14write_capacity_units\x18\x04 \x01(\x03B\a\xbaH\x04\"\x02(\x01R\x12writeCapacityUnits\x12\x7f\n" +
	"\x15attribute_definitions\x18\x05 \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.AttributeDefinitionB\b\xbaH\x05\x92\x01\x02\b\x01R\x14attributeDefinitions\x12f\n" +
	"\n" +
	"key_schema\x18\x06 \x03(\v2=.project.planton.provider.aws.awsdynamodb.v1.KeySchemaElementB\b\xbaH\x05\x92\x01\x02\b\x01R\tkeySchema\x12\x82\x01\n" +
	"\x17local_secondary_indexes\x18\a \x03(\v2@.project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndexB\b\xbaH\x05\x92\x01\x02\x10\x05R\x15localSecondaryIndexes\x12\x85\x01\n" +
	"\x18global_secondary_indexes\x18\b \x03(\v2A.project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndexB\b\xbaH\x05\x92\x01\x02\x10\x14R\x16globalSecondaryIndexes\x12N\n" +
	"\x04tags\x18\t \x03(\v20.project.planton.provider.aws.awsdynamodb.v1.TagB\b\xbaH\x05\x92\x01\x02\x102R\x04tags\x12T\n" +
	"\x03ttl\x18\n" +
	" \x01(\v2=.project.planton.provider.aws.awsdynamodb.v1.TTLSpecificationH\x00R\x03ttl\x88\x01\x01\x12x\n" +
	"\x14stream_specification\x18\v \x01(\v2@.project.planton.provider.aws.awsdynamodb.v1.StreamSpecificationH\x01R\x13streamSpecification\x88\x01\x01\x12o\n" +
	"\x11sse_specification\x18\f \x01(\v2=.project.planton.provider.aws.awsdynamodb.v1.SSESpecificationH\x02R\x10sseSpecification\x88\x01\x01\x123\n" +
	"\x16point_in_time_recovery\x18\r \x01(\bR\x13pointInTimeRecovery\x12/\n" +
	"\x13deletion_protection\x18\x0e \x01(\bR\x12deletionProtection\x12g\n" +
	"\breplicas\x18\x0f \x03(\v2A.project.planton.provider.aws.awsdynamodb.v1.ReplicaSpecificationB\b\xbaH\x05\x92\x01\x02\x10\x14R\breplicasB\x06\n" +
	"\x04_ttlB\x17\n" +
	"\x15_stream_specificationB\x14\n" +
	"\x12_sse_specification\"\xa2\x01\n" +
	"\x13AttributeDefinition\x121\n" +
	"\x04name\x18\x01 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x01\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\x04name\x12X\n" +
	"\x04type\x18\x02 \x01(\x0e2:.project.planton.provider.aws.awsdynamodb.v1.AttributeTypeB\b\xbaH\x05\x82\x01\x02 \x00R\x04type\"\xb3\x01\n" +
	"\x10KeySchemaElement\x12D\n" +
	"\x0eattribute_name\x18\x01 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x01\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\rattributeName\x12Y\n" +
	"\bkey_type\x18\x02 \x01(\x0e24.project.planton.provider.aws.awsdynamodb.v1.KeyTypeB\b\xbaH\x05\x82\x01\x02 \x00R\akeyType\"\x9c\x02\n" +
	"\x13LocalSecondaryIndex\x12<\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x03\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\tindexName\x12f\n" +
	"\n" +
	"key_schema\x18\x02 \x03(\v2=.project.planton.provider.aws.awsdynamodb.v1.KeySchemaElementB\b\xbaH\x05\x92\x01\x02\b\x02R\tkeySchema\x12_\n" +
	"\n" +
	"projection\x18\x03 \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"projection\"\x91\x03\n" +
	"\x14GlobalSecondaryIndex\x12<\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x03\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\tindexName\x12f\n" +
	"\n" +
	"key_schema\x18\x02 \x03(\v2=.project.planton.provider.aws.awsdynamodb.v1.KeySchemaElementB\b\xbaH\x05\x92\x01\x02\b\x01R\tkeySchema\x12_\n" +
	"\n" +
	"projection\x18\x03 \x01(\v27.project.planton.provider.aws.awsdynamodb.v1.ProjectionB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"projection\x127\n" +
	"\x13read_capacity_units\x18\x04 \x01(\x03B\a\xbaH\x04\"\x02(\x01R\x11readCapacityUnits\x129\n" +
	"\x14write_capacity_units\x18\x05 \x01(\x03B\a\xbaH\x04\"\x02(\x01R\x12writeCapacityUnits\"\x9e\x02\n" +
	"\n" +
	"Projection\x12y\n" +
	"\x0fprojection_type\x18\x01 \x01(\x0e2F.project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionTypeB\b\xbaH\x05\x82\x01\x02 \x00R\x0eprojectionType\x12=\n" +
	"\x12non_key_attributes\x18\x02 \x03(\tB\x0f\xbaH\f\x92\x01\t\"\ar\x05\x10\x01\x18\xff\x01R\x10nonKeyAttributes\"V\n" +
	"\x0eProjectionType\x12\x1f\n" +
	"\x1bPROJECTION_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\r\n" +
	"\tKEYS_ONLY\x10\x02\x12\v\n" +
	"\aINCLUDE\x10\x03\"[\n" +
	"\x03Tag\x124\n" +
	"\x03key\x18\x01 \x01(\tB\"\xbaH\x1fr\x1d\x10\x01\x18\x80\x012\x16^[a-zA-Z0-9_.:/=+@-]+$R\x03key\x12\x1e\n" +
	"\x05value\x18\x02 \x01(\tB\b\xbaH\x05r\x03\x18\x80\x02R\x05value\"r\n" +
	"\x10TTLSpecification\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12D\n" +
	"\x0eattribute_name\x18\x02 \x01(\tB\x1d\xbaH\x1ar\x18\x10\x01\x18\xff\x012\x11^[a-zA-Z0-9_.-]+$R\rattributeName\"\x93\x01\n" +
	"\x13StreamSpecification\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12b\n" +
	"\tview_type\x18\x02 \x01(\x0e2;.project.planton.provider.aws.awsdynamodb.v1.StreamViewTypeB\b\xbaH\x05\x82\x01\x02 \x00R\bviewType\"\xb3\x01\n" +
	"\x10SSESpecification\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12Y\n" +
	"\bsse_type\x18\x02 \x01(\x0e24.project.planton.provider.aws.awsdynamodb.v1.SSETypeB\b\xbaH\x05\x82\x01\x02 \x00R\asseType\x12*\n" +
	"\vkms_key_arn\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x14\x18\x80\x10R\tkmsKeyArn\"\xb7\x01\n" +
	"\x14ReplicaSpecification\x123\n" +
	"\x06region\x18\x01 \x01(\tB\x1b\xbaH\x18r\x162\x14^[a-z]{2}-[a-z]+-\\d$R\x06region\x12]\n" +
	"\boverride\x18\x02 \x01(\v2<.project.planton.provider.aws.awsdynamodb.v1.ReplicaOverrideH\x00R\boverride\x88\x01\x01B\v\n" +
	"\t_override\"\xcd\x01\n" +
	"\x0fReplicaOverride\x123\n" +
	"\x16point_in_time_recovery\x18\x01 \x01(\bR\x13pointInTimeRecovery\x12o\n" +
	"\x11sse_specification\x18\x02 \x01(\v2=.project.planton.provider.aws.awsdynamodb.v1.SSESpecificationH\x00R\x10sseSpecification\x88\x01\x01B\x14\n" +
	"\x12_sse_specification*Q\n" +
	"\vBillingMode\x12\x1c\n" +
	"\x18BILLING_MODE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vPROVISIONED\x10\x01\x12\x13\n" +
	"\x0fPAY_PER_REQUEST\x10\x02*D\n" +
	"\rAttributeType\x12\x1e\n" +
	"\x1aATTRIBUTE_TYPE_UNSPECIFIED\x10\x00\x12\x05\n" +
	"\x01S\x10\x01\x12\x05\n" +
	"\x01N\x10\x02\x12\x05\n" +
	"\x01B\x10\x03*8\n" +
	"\aKeyType\x12\x18\n" +
	"\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04HASH\x10\x01\x12\t\n" +
	"\x05RANGE\x10\x02*w\n" +
	"\x0eStreamViewType\x12 \n" +
	"\x1cSTREAM_VIEW_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tNEW_IMAGE\x10\x01\x12\r\n" +
	"\tOLD_IMAGE\x10\x02\x12\x16\n" +
	"\x12NEW_AND_OLD_IMAGES\x10\x03\x12\r\n" +
	"\tKEYS_ONLY\x10\x04*Y\n" +
	"\aSSEType\x12\x18\n" +
	"\x14SSE_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tAWS_OWNED\x10\x01\x12\x0f\n" +
	"\vAWS_MANAGED\x10\x02\x12\x14\n" +
	"\x10CUSTOMER_MANAGED\x10\x03B\xfa\x02\n" +
	"/com.project.planton.provider.aws.awsdynamodb.v1B\tSpecProtoP\x01Zigithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1;awsdynamodbv1\xa2\x02\x05PPPAA\xaa\x02+Project.Planton.Provider.Aws.Awsdynamodb.V1\xca\x02+Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\xe2\x027Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\\GPBMetadata\xea\x020Project::Planton::Provider::Aws::Awsdynamodb::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = []any{
	(BillingMode)(0),               // 0: project.planton.provider.aws.awsdynamodb.v1.BillingMode
	(AttributeType)(0),             // 1: project.planton.provider.aws.awsdynamodb.v1.AttributeType
	(KeyType)(0),                   // 2: project.planton.provider.aws.awsdynamodb.v1.KeyType
	(StreamViewType)(0),            // 3: project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	(SSEType)(0),                   // 4: project.planton.provider.aws.awsdynamodb.v1.SSEType
	(Projection_ProjectionType)(0), // 5: project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionType
	(*AwsDynamodbSpec)(nil),        // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec
	(*AttributeDefinition)(nil),    // 7: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	(*KeySchemaElement)(nil),       // 8: project.planton.provider.aws.awsdynamodb.v1.KeySchemaElement
	(*LocalSecondaryIndex)(nil),    // 9: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	(*GlobalSecondaryIndex)(nil),   // 10: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	(*Projection)(nil),             // 11: project.planton.provider.aws.awsdynamodb.v1.Projection
	(*Tag)(nil),                    // 12: project.planton.provider.aws.awsdynamodb.v1.Tag
	(*TTLSpecification)(nil),       // 13: project.planton.provider.aws.awsdynamodb.v1.TTLSpecification
	(*StreamSpecification)(nil),    // 14: project.planton.provider.aws.awsdynamodb.v1.StreamSpecification
	(*SSESpecification)(nil),       // 15: project.planton.provider.aws.awsdynamodb.v1.SSESpecification
	(*ReplicaSpecification)(nil),   // 16: project.planton.provider.aws.awsdynamodb.v1.ReplicaSpecification
	(*ReplicaOverride)(nil),        // 17: project.planton.provider.aws.awsdynamodb.v1.ReplicaOverride
}
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = []int32{
	0,  // 0: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.billing_mode:type_name -> project.planton.provider.aws.awsdynamodb.v1.BillingMode
	7,  // 1: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.attribute_definitions:type_name -> project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition
	8,  // 2: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.KeySchemaElement
	9,  // 3: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.local_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex
	10, // 4: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.global_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex
	12, // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.tags:type_name -> project.planton.provider.aws.awsdynamodb.v1.Tag
	13, // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ttl:type_name -> project.planton.provider.aws.awsdynamodb.v1.TTLSpecification
	14, // 7: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.stream_specification:type_name -> project.planton.provider.aws.awsdynamodb.v1.StreamSpecification
	15, // 8: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.sse_specification:type_name -> project.planton.provider.aws.awsdynamodb.v1.SSESpecification
	16, // 9: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.replicas:type_name -> project.planton.provider.aws.awsdynamodb.v1.ReplicaSpecification
	1,  // 10: project.planton.provider.aws.awsdynamodb.v1.AttributeDefinition.type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AttributeType
	2,  // 11: project.planton.provider.aws.awsdynamodb.v1.KeySchemaElement.key_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.KeyType
	8,  // 12: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.KeySchemaElement
	11, // 13: project.planton.provider.aws.awsdynamodb.v1.LocalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	8,  // 14: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.KeySchemaElement
	11, // 15: project.planton.provider.aws.awsdynamodb.v1.GlobalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection
	5,  // 16: project.planton.provider.aws.awsdynamodb.v1.Projection.projection_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.Projection.ProjectionType
	3,  // 17: project.planton.provider.aws.awsdynamodb.v1.StreamSpecification.view_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.StreamViewType
	4,  // 18: project.planton.provider.aws.awsdynamodb.v1.SSESpecification.sse_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.SSEType
	17, // 19: project.planton.provider.aws.awsdynamodb.v1.ReplicaSpecification.override:type_name -> project.planton.provider.aws.awsdynamodb.v1.ReplicaOverride
	15, // 20: project.planton.provider.aws.awsdynamodb.v1.ReplicaOverride.sse_specification:type_name -> project.planton.provider.aws.awsdynamodb.v1.SSESpecification
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() }
func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awsdynamodb_v1_spec_proto != nil {
		return
	}
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0].OneofWrappers = []any{}
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[10].OneofWrappers = []any{}
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsdynamodb_v1_spec_proto = out.File
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = nil
}
