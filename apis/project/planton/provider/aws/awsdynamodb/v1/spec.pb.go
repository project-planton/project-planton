// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsdynamodb/v1/spec.proto

package awsdynamodbv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Billing options for the table.
type AwsDynamodbSpec_BillingMode int32

const (
	AwsDynamodbSpec_BILLING_MODE_UNSPECIFIED AwsDynamodbSpec_BillingMode = 0
	AwsDynamodbSpec_PROVISIONED              AwsDynamodbSpec_BillingMode = 1
	AwsDynamodbSpec_PAY_PER_REQUEST          AwsDynamodbSpec_BillingMode = 2
)

// Enum value maps for AwsDynamodbSpec_BillingMode.
var (
	AwsDynamodbSpec_BillingMode_name = map[int32]string{
		0: "BILLING_MODE_UNSPECIFIED",
		1: "PROVISIONED",
		2: "PAY_PER_REQUEST",
	}
	AwsDynamodbSpec_BillingMode_value = map[string]int32{
		"BILLING_MODE_UNSPECIFIED": 0,
		"PROVISIONED":              1,
		"PAY_PER_REQUEST":          2,
	}
)

func (x AwsDynamodbSpec_BillingMode) Enum() *AwsDynamodbSpec_BillingMode {
	p := new(AwsDynamodbSpec_BillingMode)
	*p = x
	return p
}

func (x AwsDynamodbSpec_BillingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_BillingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0].Descriptor()
}

func (AwsDynamodbSpec_BillingMode) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[0]
}

func (x AwsDynamodbSpec_BillingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_BillingMode.Descriptor instead.
func (AwsDynamodbSpec_BillingMode) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 0}
}

// DynamoDB scalar attribute types.
type AwsDynamodbSpec_AttributeType int32

const (
	AwsDynamodbSpec_ATTRIBUTE_TYPE_UNSPECIFIED AwsDynamodbSpec_AttributeType = 0
	AwsDynamodbSpec_STRING                     AwsDynamodbSpec_AttributeType = 1 // UTF-8 string
	AwsDynamodbSpec_NUMBER                     AwsDynamodbSpec_AttributeType = 2 // Numeric value
	AwsDynamodbSpec_BINARY                     AwsDynamodbSpec_AttributeType = 3 // Binary data
)

// Enum value maps for AwsDynamodbSpec_AttributeType.
var (
	AwsDynamodbSpec_AttributeType_name = map[int32]string{
		0: "ATTRIBUTE_TYPE_UNSPECIFIED",
		1: "STRING",
		2: "NUMBER",
		3: "BINARY",
	}
	AwsDynamodbSpec_AttributeType_value = map[string]int32{
		"ATTRIBUTE_TYPE_UNSPECIFIED": 0,
		"STRING":                     1,
		"NUMBER":                     2,
		"BINARY":                     3,
	}
)

func (x AwsDynamodbSpec_AttributeType) Enum() *AwsDynamodbSpec_AttributeType {
	p := new(AwsDynamodbSpec_AttributeType)
	*p = x
	return p
}

func (x AwsDynamodbSpec_AttributeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_AttributeType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1].Descriptor()
}

func (AwsDynamodbSpec_AttributeType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[1]
}

func (x AwsDynamodbSpec_AttributeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_AttributeType.Descriptor instead.
func (AwsDynamodbSpec_AttributeType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 1}
}

// Identifies whether a key is HASH (partition) or RANGE (sort).
type AwsDynamodbSpec_KeyType int32

const (
	AwsDynamodbSpec_KEY_TYPE_UNSPECIFIED AwsDynamodbSpec_KeyType = 0
	AwsDynamodbSpec_HASH                 AwsDynamodbSpec_KeyType = 1
	AwsDynamodbSpec_RANGE                AwsDynamodbSpec_KeyType = 2
)

// Enum value maps for AwsDynamodbSpec_KeyType.
var (
	AwsDynamodbSpec_KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "HASH",
		2: "RANGE",
	}
	AwsDynamodbSpec_KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED": 0,
		"HASH":                 1,
		"RANGE":                2,
	}
)

func (x AwsDynamodbSpec_KeyType) Enum() *AwsDynamodbSpec_KeyType {
	p := new(AwsDynamodbSpec_KeyType)
	*p = x
	return p
}

func (x AwsDynamodbSpec_KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2].Descriptor()
}

func (AwsDynamodbSpec_KeyType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[2]
}

func (x AwsDynamodbSpec_KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_KeyType.Descriptor instead.
func (AwsDynamodbSpec_KeyType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 2}
}

// Projection options for secondary indexes.
type AwsDynamodbSpec_ProjectionType int32

const (
	AwsDynamodbSpec_PROJECTION_TYPE_UNSPECIFIED AwsDynamodbSpec_ProjectionType = 0
	AwsDynamodbSpec_ALL                         AwsDynamodbSpec_ProjectionType = 1
	AwsDynamodbSpec_KEYS_ONLY                   AwsDynamodbSpec_ProjectionType = 2
	AwsDynamodbSpec_INCLUDE                     AwsDynamodbSpec_ProjectionType = 3
)

// Enum value maps for AwsDynamodbSpec_ProjectionType.
var (
	AwsDynamodbSpec_ProjectionType_name = map[int32]string{
		0: "PROJECTION_TYPE_UNSPECIFIED",
		1: "ALL",
		2: "KEYS_ONLY",
		3: "INCLUDE",
	}
	AwsDynamodbSpec_ProjectionType_value = map[string]int32{
		"PROJECTION_TYPE_UNSPECIFIED": 0,
		"ALL":                         1,
		"KEYS_ONLY":                   2,
		"INCLUDE":                     3,
	}
)

func (x AwsDynamodbSpec_ProjectionType) Enum() *AwsDynamodbSpec_ProjectionType {
	p := new(AwsDynamodbSpec_ProjectionType)
	*p = x
	return p
}

func (x AwsDynamodbSpec_ProjectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_ProjectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3].Descriptor()
}

func (AwsDynamodbSpec_ProjectionType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[3]
}

func (x AwsDynamodbSpec_ProjectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_ProjectionType.Descriptor instead.
func (AwsDynamodbSpec_ProjectionType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 3}
}

// Table storage classes.
type AwsDynamodbSpec_TableClass int32

const (
	AwsDynamodbSpec_TABLE_CLASS_UNSPECIFIED    AwsDynamodbSpec_TableClass = 0
	AwsDynamodbSpec_STANDARD                   AwsDynamodbSpec_TableClass = 1
	AwsDynamodbSpec_STANDARD_INFREQUENT_ACCESS AwsDynamodbSpec_TableClass = 2
)

// Enum value maps for AwsDynamodbSpec_TableClass.
var (
	AwsDynamodbSpec_TableClass_name = map[int32]string{
		0: "TABLE_CLASS_UNSPECIFIED",
		1: "STANDARD",
		2: "STANDARD_INFREQUENT_ACCESS",
	}
	AwsDynamodbSpec_TableClass_value = map[string]int32{
		"TABLE_CLASS_UNSPECIFIED":    0,
		"STANDARD":                   1,
		"STANDARD_INFREQUENT_ACCESS": 2,
	}
)

func (x AwsDynamodbSpec_TableClass) Enum() *AwsDynamodbSpec_TableClass {
	p := new(AwsDynamodbSpec_TableClass)
	*p = x
	return p
}

func (x AwsDynamodbSpec_TableClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_TableClass) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4].Descriptor()
}

func (AwsDynamodbSpec_TableClass) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[4]
}

func (x AwsDynamodbSpec_TableClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_TableClass.Descriptor instead.
func (AwsDynamodbSpec_TableClass) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 4}
}

// Stream view types.
type AwsDynamodbSpec_StreamSpecification_StreamViewType int32

const (
	AwsDynamodbSpec_StreamSpecification_STREAM_VIEW_TYPE_UNSPECIFIED AwsDynamodbSpec_StreamSpecification_StreamViewType = 0
	AwsDynamodbSpec_StreamSpecification_NEW_IMAGE                    AwsDynamodbSpec_StreamSpecification_StreamViewType = 1
	AwsDynamodbSpec_StreamSpecification_OLD_IMAGE                    AwsDynamodbSpec_StreamSpecification_StreamViewType = 2
	AwsDynamodbSpec_StreamSpecification_NEW_AND_OLD_IMAGES           AwsDynamodbSpec_StreamSpecification_StreamViewType = 3
	AwsDynamodbSpec_StreamSpecification_KEYS_ONLY                    AwsDynamodbSpec_StreamSpecification_StreamViewType = 4
)

// Enum value maps for AwsDynamodbSpec_StreamSpecification_StreamViewType.
var (
	AwsDynamodbSpec_StreamSpecification_StreamViewType_name = map[int32]string{
		0: "STREAM_VIEW_TYPE_UNSPECIFIED",
		1: "NEW_IMAGE",
		2: "OLD_IMAGE",
		3: "NEW_AND_OLD_IMAGES",
		4: "KEYS_ONLY",
	}
	AwsDynamodbSpec_StreamSpecification_StreamViewType_value = map[string]int32{
		"STREAM_VIEW_TYPE_UNSPECIFIED": 0,
		"NEW_IMAGE":                    1,
		"OLD_IMAGE":                    2,
		"NEW_AND_OLD_IMAGES":           3,
		"KEYS_ONLY":                    4,
	}
)

func (x AwsDynamodbSpec_StreamSpecification_StreamViewType) Enum() *AwsDynamodbSpec_StreamSpecification_StreamViewType {
	p := new(AwsDynamodbSpec_StreamSpecification_StreamViewType)
	*p = x
	return p
}

func (x AwsDynamodbSpec_StreamSpecification_StreamViewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwsDynamodbSpec_StreamSpecification_StreamViewType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5].Descriptor()
}

func (AwsDynamodbSpec_StreamSpecification_StreamViewType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes[5]
}

func (x AwsDynamodbSpec_StreamSpecification_StreamViewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwsDynamodbSpec_StreamSpecification_StreamViewType.Descriptor instead.
func (AwsDynamodbSpec_StreamSpecification_StreamViewType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 7, 0}
}

// AwsDynamodbSpec models the configuration of an Amazon DynamoDB table.
type AwsDynamodbSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Human-readable name of the DynamoDB table; must be unique per AWS account.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Billing model for read/write capacity: PROVISIONED or PAY_PER_REQUEST (On-Demand).
	BillingMode AwsDynamodbSpec_BillingMode `protobuf:"varint,2,opt,name=billing_mode,json=billingMode,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_BillingMode" json:"billing_mode,omitempty"`
	// Provisioned read capacity units (RCU) when billing_mode is PROVISIONED.
	ReadCapacity int64 `protobuf:"varint,3,opt,name=read_capacity,json=readCapacity,proto3" json:"read_capacity,omitempty"`
	// Provisioned write capacity units (WCU) when billing_mode is PROVISIONED.
	WriteCapacity int64 `protobuf:"varint,4,opt,name=write_capacity,json=writeCapacity,proto3" json:"write_capacity,omitempty"`
	// List of attributes that describe the key schema and indexes.
	AttributeDefinitions []*AwsDynamodbSpec_AttributeDefinition `protobuf:"bytes,5,rep,name=attribute_definitions,json=attributeDefinitions,proto3" json:"attribute_definitions,omitempty"`
	// Definition of the table's partition (HASH) and optional sort (RANGE) key.
	KeySchema []*AwsDynamodbSpec_KeySchemaElement `protobuf:"bytes,6,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Global secondary indexes to be created with the table.
	GlobalSecondaryIndexes []*AwsDynamodbSpec_GlobalSecondaryIndex `protobuf:"bytes,7,rep,name=global_secondary_indexes,json=globalSecondaryIndexes,proto3" json:"global_secondary_indexes,omitempty"`
	// Local secondary indexes to be created with the table (same partition key).
	LocalSecondaryIndexes []*AwsDynamodbSpec_LocalSecondaryIndex `protobuf:"bytes,8,rep,name=local_secondary_indexes,json=localSecondaryIndexes,proto3" json:"local_secondary_indexes,omitempty"`
	// Configure DynamoDB Streams; omit for disabled.
	StreamSpecification *AwsDynamodbSpec_StreamSpecification `protobuf:"bytes,9,opt,name=stream_specification,json=streamSpecification,proto3" json:"stream_specification,omitempty"`
	// Enable point-in-time recovery (continuous backups).
	PointInTimeRecoveryEnabled bool `protobuf:"varint,10,opt,name=point_in_time_recovery_enabled,json=pointInTimeRecoveryEnabled,proto3" json:"point_in_time_recovery_enabled,omitempty"`
	// Configure TTL on a specific attribute; omit to disable.
	TtlSpecification *AwsDynamodbSpec_TimeToLiveSpecification `protobuf:"bytes,11,opt,name=ttl_specification,json=ttlSpecification,proto3" json:"ttl_specification,omitempty"`
	// Enable server-side encryption at rest (true = AWS owned key unless kms_key_arn set).
	SseEnabled bool `protobuf:"varint,12,opt,name=sse_enabled,json=sseEnabled,proto3" json:"sse_enabled,omitempty"`
	// Customer-managed KMS key ARN for server-side encryption; required when using CMK.
	KmsKeyArn string `protobuf:"bytes,13,opt,name=kms_key_arn,json=kmsKeyArn,proto3" json:"kms_key_arn,omitempty"`
	// Whether the table data is replicated across multiple AWS regions.
	MultiRegionReplicationEnabled bool `protobuf:"varint,14,opt,name=multi_region_replication_enabled,json=multiRegionReplicationEnabled,proto3" json:"multi_region_replication_enabled,omitempty"`
	// Tags to apply to the table for cost allocation, automation, and access control.
	Tags map[string]string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Table class: STANDARD or STANDARD_INFREQUENT_ACCESS to optimize storage cost.
	TableClass AwsDynamodbSpec_TableClass `protobuf:"varint,16,opt,name=table_class,json=tableClass,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_TableClass" json:"table_class,omitempty"`
	// Contributor Insights enablement flag for real-time access pattern analytics.
	ContributorInsightsEnabled bool `protobuf:"varint,17,opt,name=contributor_insights_enabled,json=contributorInsightsEnabled,proto3" json:"contributor_insights_enabled,omitempty"`
	// Enable deletion protection to avoid accidental table removal.
	DeletionProtectionEnabled bool `protobuf:"varint,18,opt,name=deletion_protection_enabled,json=deletionProtectionEnabled,proto3" json:"deletion_protection_enabled,omitempty"`
	// List of AWS regions (e.g., "us-east-1") to replicate to if multi_region_replication_enabled.
	ReplicationRegions []string `protobuf:"bytes,19,rep,name=replication_regions,json=replicationRegions,proto3" json:"replication_regions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AwsDynamodbSpec) Reset() {
	*x = AwsDynamodbSpec{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec) ProtoMessage() {}

func (x *AwsDynamodbSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsDynamodbSpec) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *AwsDynamodbSpec) GetBillingMode() AwsDynamodbSpec_BillingMode {
	if x != nil {
		return x.BillingMode
	}
	return AwsDynamodbSpec_BILLING_MODE_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetReadCapacity() int64 {
	if x != nil {
		return x.ReadCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetWriteCapacity() int64 {
	if x != nil {
		return x.WriteCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec) GetAttributeDefinitions() []*AwsDynamodbSpec_AttributeDefinition {
	if x != nil {
		return x.AttributeDefinitions
	}
	return nil
}

func (x *AwsDynamodbSpec) GetKeySchema() []*AwsDynamodbSpec_KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *AwsDynamodbSpec) GetGlobalSecondaryIndexes() []*AwsDynamodbSpec_GlobalSecondaryIndex {
	if x != nil {
		return x.GlobalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetLocalSecondaryIndexes() []*AwsDynamodbSpec_LocalSecondaryIndex {
	if x != nil {
		return x.LocalSecondaryIndexes
	}
	return nil
}

func (x *AwsDynamodbSpec) GetStreamSpecification() *AwsDynamodbSpec_StreamSpecification {
	if x != nil {
		return x.StreamSpecification
	}
	return nil
}

func (x *AwsDynamodbSpec) GetPointInTimeRecoveryEnabled() bool {
	if x != nil {
		return x.PointInTimeRecoveryEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetTtlSpecification() *AwsDynamodbSpec_TimeToLiveSpecification {
	if x != nil {
		return x.TtlSpecification
	}
	return nil
}

func (x *AwsDynamodbSpec) GetSseEnabled() bool {
	if x != nil {
		return x.SseEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetKmsKeyArn() string {
	if x != nil {
		return x.KmsKeyArn
	}
	return ""
}

func (x *AwsDynamodbSpec) GetMultiRegionReplicationEnabled() bool {
	if x != nil {
		return x.MultiRegionReplicationEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AwsDynamodbSpec) GetTableClass() AwsDynamodbSpec_TableClass {
	if x != nil {
		return x.TableClass
	}
	return AwsDynamodbSpec_TABLE_CLASS_UNSPECIFIED
}

func (x *AwsDynamodbSpec) GetContributorInsightsEnabled() bool {
	if x != nil {
		return x.ContributorInsightsEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetDeletionProtectionEnabled() bool {
	if x != nil {
		return x.DeletionProtectionEnabled
	}
	return false
}

func (x *AwsDynamodbSpec) GetReplicationRegions() []string {
	if x != nil {
		return x.ReplicationRegions
	}
	return nil
}

// Attribute definition maps a name to its scalar type.
type AwsDynamodbSpec_AttributeDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the attribute.
	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	// Data type of the attribute (S | N | B).
	AttributeType AwsDynamodbSpec_AttributeType `protobuf:"varint,2,opt,name=attribute_type,json=attributeType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_AttributeType" json:"attribute_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_AttributeDefinition) Reset() {
	*x = AwsDynamodbSpec_AttributeDefinition{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_AttributeDefinition) ProtoMessage() {}

func (x *AwsDynamodbSpec_AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AwsDynamodbSpec_AttributeDefinition) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *AwsDynamodbSpec_AttributeDefinition) GetAttributeType() AwsDynamodbSpec_AttributeType {
	if x != nil {
		return x.AttributeType
	}
	return AwsDynamodbSpec_ATTRIBUTE_TYPE_UNSPECIFIED
}

// Describes a key element (partition or sort key).
type AwsDynamodbSpec_KeySchemaElement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attribute name to use as key.
	AttributeName string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	// Specifies whether the attribute is HASH or RANGE key.
	KeyType       AwsDynamodbSpec_KeyType `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_KeyType" json:"key_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_KeySchemaElement) Reset() {
	*x = AwsDynamodbSpec_KeySchemaElement{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_KeySchemaElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_KeySchemaElement) ProtoMessage() {}

func (x *AwsDynamodbSpec_KeySchemaElement) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_KeySchemaElement.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_KeySchemaElement) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 2}
}

func (x *AwsDynamodbSpec_KeySchemaElement) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *AwsDynamodbSpec_KeySchemaElement) GetKeyType() AwsDynamodbSpec_KeyType {
	if x != nil {
		return x.KeyType
	}
	return AwsDynamodbSpec_KEY_TYPE_UNSPECIFIED
}

// Projection parameters for a secondary index.
type AwsDynamodbSpec_Projection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How attributes are projected into the index.
	ProjectionType AwsDynamodbSpec_ProjectionType `protobuf:"varint,1,opt,name=projection_type,json=projectionType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_ProjectionType" json:"projection_type,omitempty"`
	// List of non-key attributes to include when projection_type = INCLUDE.
	NonKeyAttributes []string `protobuf:"bytes,2,rep,name=non_key_attributes,json=nonKeyAttributes,proto3" json:"non_key_attributes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_Projection) Reset() {
	*x = AwsDynamodbSpec_Projection{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_Projection) ProtoMessage() {}

func (x *AwsDynamodbSpec_Projection) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_Projection.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_Projection) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 3}
}

func (x *AwsDynamodbSpec_Projection) GetProjectionType() AwsDynamodbSpec_ProjectionType {
	if x != nil {
		return x.ProjectionType
	}
	return AwsDynamodbSpec_PROJECTION_TYPE_UNSPECIFIED
}

func (x *AwsDynamodbSpec_Projection) GetNonKeyAttributes() []string {
	if x != nil {
		return x.NonKeyAttributes
	}
	return nil
}

// Provisioned throughput override for a global secondary index.
type AwsDynamodbSpec_ProvisionedThroughputOverride struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Read capacity units for the index.
	ReadCapacity int64 `protobuf:"varint,1,opt,name=read_capacity,json=readCapacity,proto3" json:"read_capacity,omitempty"`
	// Write capacity units for the index.
	WriteCapacity int64 `protobuf:"varint,2,opt,name=write_capacity,json=writeCapacity,proto3" json:"write_capacity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_ProvisionedThroughputOverride) Reset() {
	*x = AwsDynamodbSpec_ProvisionedThroughputOverride{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_ProvisionedThroughputOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_ProvisionedThroughputOverride) ProtoMessage() {}

func (x *AwsDynamodbSpec_ProvisionedThroughputOverride) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_ProvisionedThroughputOverride.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_ProvisionedThroughputOverride) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 4}
}

func (x *AwsDynamodbSpec_ProvisionedThroughputOverride) GetReadCapacity() int64 {
	if x != nil {
		return x.ReadCapacity
	}
	return 0
}

func (x *AwsDynamodbSpec_ProvisionedThroughputOverride) GetWriteCapacity() int64 {
	if x != nil {
		return x.WriteCapacity
	}
	return 0
}

// Global secondary index definition.
type AwsDynamodbSpec_GlobalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index name.
	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// Key schema specific to this index.
	KeySchema []*AwsDynamodbSpec_KeySchemaElement `protobuf:"bytes,2,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Projection parameters.
	Projection *AwsDynamodbSpec_Projection `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`
	// Billing and capacity for the index (ignored if PAY_PER_REQUEST).
	ProvisionedThroughput *AwsDynamodbSpec_ProvisionedThroughputOverride `protobuf:"bytes,4,opt,name=provisioned_throughput,json=provisionedThroughput,proto3" json:"provisioned_throughput,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) Reset() {
	*x = AwsDynamodbSpec_GlobalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_GlobalSecondaryIndex) ProtoMessage() {}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_GlobalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_GlobalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 5}
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) GetKeySchema() []*AwsDynamodbSpec_KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) GetProjection() *AwsDynamodbSpec_Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

func (x *AwsDynamodbSpec_GlobalSecondaryIndex) GetProvisionedThroughput() *AwsDynamodbSpec_ProvisionedThroughputOverride {
	if x != nil {
		return x.ProvisionedThroughput
	}
	return nil
}

// Local secondary index definition (shares HASH key with the table).
type AwsDynamodbSpec_LocalSecondaryIndex struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Index name.
	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// Key schema for the LSI (must share HASH key with table).
	KeySchema []*AwsDynamodbSpec_KeySchemaElement `protobuf:"bytes,2,rep,name=key_schema,json=keySchema,proto3" json:"key_schema,omitempty"`
	// Projection parameters.
	Projection    *AwsDynamodbSpec_Projection `protobuf:"bytes,3,opt,name=projection,proto3" json:"projection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) Reset() {
	*x = AwsDynamodbSpec_LocalSecondaryIndex{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_LocalSecondaryIndex) ProtoMessage() {}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_LocalSecondaryIndex.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_LocalSecondaryIndex) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 6}
}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) GetKeySchema() []*AwsDynamodbSpec_KeySchemaElement {
	if x != nil {
		return x.KeySchema
	}
	return nil
}

func (x *AwsDynamodbSpec_LocalSecondaryIndex) GetProjection() *AwsDynamodbSpec_Projection {
	if x != nil {
		return x.Projection
	}
	return nil
}

// DynamoDB stream configuration.
type AwsDynamodbSpec_StreamSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable or disable streams.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The view type of the stream.
	ViewType      AwsDynamodbSpec_StreamSpecification_StreamViewType `protobuf:"varint,2,opt,name=view_type,json=viewType,proto3,enum=project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec_StreamSpecification_StreamViewType" json:"view_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_StreamSpecification) Reset() {
	*x = AwsDynamodbSpec_StreamSpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_StreamSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_StreamSpecification) ProtoMessage() {}

func (x *AwsDynamodbSpec_StreamSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_StreamSpecification.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_StreamSpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 7}
}

func (x *AwsDynamodbSpec_StreamSpecification) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AwsDynamodbSpec_StreamSpecification) GetViewType() AwsDynamodbSpec_StreamSpecification_StreamViewType {
	if x != nil {
		return x.ViewType
	}
	return AwsDynamodbSpec_StreamSpecification_STREAM_VIEW_TYPE_UNSPECIFIED
}

// Time-to-live (TTL) configuration.
type AwsDynamodbSpec_TimeToLiveSpecification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable or disable TTL.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Attribute name that stores the expiration timestamp (in Unix epoch seconds).
	AttributeName string `protobuf:"bytes,2,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsDynamodbSpec_TimeToLiveSpecification) Reset() {
	*x = AwsDynamodbSpec_TimeToLiveSpecification{}
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsDynamodbSpec_TimeToLiveSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDynamodbSpec_TimeToLiveSpecification) ProtoMessage() {}

func (x *AwsDynamodbSpec_TimeToLiveSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDynamodbSpec_TimeToLiveSpecification.ProtoReflect.Descriptor instead.
func (*AwsDynamodbSpec_TimeToLiveSpecification) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP(), []int{0, 8}
}

func (x *AwsDynamodbSpec_TimeToLiveSpecification) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AwsDynamodbSpec_TimeToLiveSpecification) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

var File_project_planton_provider_aws_awsdynamodb_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc = "" +
	"\n" +
	"6project/planton/provider/aws/awsdynamodb/v1/spec.proto\x12+project.planton.provider.aws.awsdynamodb.v1\"\xba\x1d\n" +
	"\x0fAwsDynamodbSpec\x12\x1d\n" +
	"\n" +
	"table_name\x18\x01 \x01(\tR\ttableName\x12k\n" +
	"\fbilling_mode\x18\x02 \x01(\x0e2H.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.BillingModeR\vbillingMode\x12#\n" +
	"\rread_capacity\x18\x03 \x01(\x03R\freadCapacity\x12%\n" +
	"\x0ewrite_capacity\x18\x04 \x01(\x03R\rwriteCapacity\x12\x85\x01\n" +
	"\x15attribute_definitions\x18\x05 \x03(\v2P.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeDefinitionR\x14attributeDefinitions\x12l\n" +
	"\n" +
	"key_schema\x18\x06 \x03(\v2M.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElementR\tkeySchema\x12\x8b\x01\n" +
	"\x18global_secondary_indexes\x18\a \x03(\v2Q.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndexR\x16globalSecondaryIndexes\x12\x88\x01\n" +
	"\x17local_secondary_indexes\x18\b \x03(\v2P.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.LocalSecondaryIndexR\x15localSecondaryIndexes\x12\x83\x01\n" +
	"\x14stream_specification\x18\t \x01(\v2P.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecificationR\x13streamSpecification\x12B\n" +
	"\x1epoint_in_time_recovery_enabled\x18\n" +
	" \x01(\bR\x1apointInTimeRecoveryEnabled\x12\x81\x01\n" +
	"\x11ttl_specification\x18\v \x01(\v2T.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TimeToLiveSpecificationR\x10ttlSpecification\x12\x1f\n" +
	"\vsse_enabled\x18\f \x01(\bR\n" +
	"sseEnabled\x12\x1e\n" +
	"\vkms_key_arn\x18\r \x01(\tR\tkmsKeyArn\x12G\n" +
	" multi_region_replication_enabled\x18\x0e \x01(\bR\x1dmultiRegionReplicationEnabled\x12Z\n" +
	"\x04tags\x18\x0f \x03(\v2F.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntryR\x04tags\x12h\n" +
	"\vtable_class\x18\x10 \x01(\x0e2G.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TableClassR\n" +
	"tableClass\x12@\n" +
	"\x1ccontributor_insights_enabled\x18\x11 \x01(\bR\x1acontributorInsightsEnabled\x12>\n" +
	"\x1bdeletion_protection_enabled\x18\x12 \x01(\bR\x19deletionProtectionEnabled\x12/\n" +
	"\x13replication_regions\x18\x13 \x03(\tR\x12replicationRegions\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xaf\x01\n" +
	"\x13AttributeDefinition\x12%\n" +
	"\x0eattribute_name\x18\x01 \x01(\tR\rattributeName\x12q\n" +
	"\x0eattribute_type\x18\x02 \x01(\x0e2J.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeTypeR\rattributeType\x1a\x9a\x01\n" +
	"\x10KeySchemaElement\x12%\n" +
	"\x0eattribute_name\x18\x01 \x01(\tR\rattributeName\x12_\n" +
	"\bkey_type\x18\x02 \x01(\x0e2D.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeyTypeR\akeyType\x1a\xb0\x01\n" +
	"\n" +
	"Projection\x12t\n" +
	"\x0fprojection_type\x18\x01 \x01(\x0e2K.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProjectionTypeR\x0eprojectionType\x12,\n" +
	"\x12non_key_attributes\x18\x02 \x03(\tR\x10nonKeyAttributes\x1ak\n" +
	"\x1dProvisionedThroughputOverride\x12#\n" +
	"\rread_capacity\x18\x01 \x01(\x03R\freadCapacity\x12%\n" +
	"\x0ewrite_capacity\x18\x02 \x01(\x03R\rwriteCapacity\x1a\xa0\x03\n" +
	"\x14GlobalSecondaryIndex\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12l\n" +
	"\n" +
	"key_schema\x18\x02 \x03(\v2M.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElementR\tkeySchema\x12g\n" +
	"\n" +
	"projection\x18\x03 \x01(\v2G.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProjectionR\n" +
	"projection\x12\x91\x01\n" +
	"\x16provisioned_throughput\x18\x04 \x01(\v2Z.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProvisionedThroughputOverrideR\x15provisionedThroughput\x1a\x8b\x02\n" +
	"\x13LocalSecondaryIndex\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12l\n" +
	"\n" +
	"key_schema\x18\x02 \x03(\v2M.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElementR\tkeySchema\x12g\n" +
	"\n" +
	"projection\x18\x03 \x01(\v2G.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProjectionR\n" +
	"projection\x1a\xa6\x02\n" +
	"\x13StreamSpecification\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12|\n" +
	"\tview_type\x18\x02 \x01(\x0e2_.project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification.StreamViewTypeR\bviewType\"w\n" +
	"\x0eStreamViewType\x12 \n" +
	"\x1cSTREAM_VIEW_TYPE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tNEW_IMAGE\x10\x01\x12\r\n" +
	"\tOLD_IMAGE\x10\x02\x12\x16\n" +
	"\x12NEW_AND_OLD_IMAGES\x10\x03\x12\r\n" +
	"\tKEYS_ONLY\x10\x04\x1aZ\n" +
	"\x17TimeToLiveSpecification\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12%\n" +
	"\x0eattribute_name\x18\x02 \x01(\tR\rattributeName\"Q\n" +
	"\vBillingMode\x12\x1c\n" +
	"\x18BILLING_MODE_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vPROVISIONED\x10\x01\x12\x13\n" +
	"\x0fPAY_PER_REQUEST\x10\x02\"S\n" +
	"\rAttributeType\x12\x1e\n" +
	"\x1aATTRIBUTE_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06STRING\x10\x01\x12\n" +
	"\n" +
	"\x06NUMBER\x10\x02\x12\n" +
	"\n" +
	"\x06BINARY\x10\x03\"8\n" +
	"\aKeyType\x12\x18\n" +
	"\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04HASH\x10\x01\x12\t\n" +
	"\x05RANGE\x10\x02\"V\n" +
	"\x0eProjectionType\x12\x1f\n" +
	"\x1bPROJECTION_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\r\n" +
	"\tKEYS_ONLY\x10\x02\x12\v\n" +
	"\aINCLUDE\x10\x03\"W\n" +
	"\n" +
	"TableClass\x12\x1b\n" +
	"\x17TABLE_CLASS_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bSTANDARD\x10\x01\x12\x1e\n" +
	"\x1aSTANDARD_INFREQUENT_ACCESS\x10\x02B\xfa\x02\n" +
	"/com.project.planton.provider.aws.awsdynamodb.v1B\tSpecProtoP\x01Zigithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsdynamodb/v1;awsdynamodbv1\xa2\x02\x05PPPAA\xaa\x02+Project.Planton.Provider.Aws.Awsdynamodb.V1\xca\x02+Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\xe2\x027Project\\Planton\\Provider\\Aws\\Awsdynamodb\\V1\\GPBMetadata\xea\x020Project::Planton::Provider::Aws::Awsdynamodb::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = []any{
	(AwsDynamodbSpec_BillingMode)(0),                        // 0: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.BillingMode
	(AwsDynamodbSpec_AttributeType)(0),                      // 1: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeType
	(AwsDynamodbSpec_KeyType)(0),                            // 2: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeyType
	(AwsDynamodbSpec_ProjectionType)(0),                     // 3: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProjectionType
	(AwsDynamodbSpec_TableClass)(0),                         // 4: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TableClass
	(AwsDynamodbSpec_StreamSpecification_StreamViewType)(0), // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification.StreamViewType
	(*AwsDynamodbSpec)(nil),                                 // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec
	nil,                                                     // 7: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntry
	(*AwsDynamodbSpec_AttributeDefinition)(nil),             // 8: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeDefinition
	(*AwsDynamodbSpec_KeySchemaElement)(nil),                // 9: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElement
	(*AwsDynamodbSpec_Projection)(nil),                      // 10: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.Projection
	(*AwsDynamodbSpec_ProvisionedThroughputOverride)(nil),   // 11: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProvisionedThroughputOverride
	(*AwsDynamodbSpec_GlobalSecondaryIndex)(nil),            // 12: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndex
	(*AwsDynamodbSpec_LocalSecondaryIndex)(nil),             // 13: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.LocalSecondaryIndex
	(*AwsDynamodbSpec_StreamSpecification)(nil),             // 14: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification
	(*AwsDynamodbSpec_TimeToLiveSpecification)(nil),         // 15: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TimeToLiveSpecification
}
var file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = []int32{
	0,  // 0: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.billing_mode:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.BillingMode
	8,  // 1: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.attribute_definitions:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeDefinition
	9,  // 2: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElement
	12, // 3: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.global_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndex
	13, // 4: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.local_secondary_indexes:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.LocalSecondaryIndex
	14, // 5: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.stream_specification:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification
	15, // 6: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ttl_specification:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TimeToLiveSpecification
	7,  // 7: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.tags:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TagsEntry
	4,  // 8: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.table_class:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.TableClass
	1,  // 9: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeDefinition.attribute_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.AttributeType
	2,  // 10: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElement.key_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeyType
	3,  // 11: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.Projection.projection_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProjectionType
	9,  // 12: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndex.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElement
	10, // 13: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.Projection
	11, // 14: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.GlobalSecondaryIndex.provisioned_throughput:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.ProvisionedThroughputOverride
	9,  // 15: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.LocalSecondaryIndex.key_schema:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.KeySchemaElement
	10, // 16: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.LocalSecondaryIndex.projection:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.Projection
	5,  // 17: project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification.view_type:type_name -> project.planton.provider.aws.awsdynamodb.v1.AwsDynamodbSpec.StreamSpecification.StreamViewType
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() }
func file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awsdynamodb_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsdynamodb_v1_spec_proto = out.File
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awsdynamodb_v1_spec_proto_depIdxs = nil
}
