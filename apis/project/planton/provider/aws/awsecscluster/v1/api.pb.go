// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsecscluster/v1/api.proto

package awsecsclusterv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	shared "github.com/project-planton/project-planton/apis/project/planton/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AwsEcsCluster represents a containerized application deployed on AWS ECS.
// This resource manages ECS services that can run on either Fargate or EC2.
type AwsEcsCluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// api-version must be set to "aws.project-planton.org/v1".
	ApiVersion string `protobuf:"bytes,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// resource-kind for this ECS service resource, typically "AwsEcsCluster".
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// metadata captures identifying information (name, org, version, etc.)
	// and must pass standard validations for resource naming.
	Metadata *shared.CloudResourceMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec holds the core configuration data defining how the ECS service is deployed.
	Spec *AwsEcsClusterSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	// status holds runtime or post-deployment information.
	Status        *AwsEcsClusterStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsEcsCluster) Reset() {
	*x = AwsEcsCluster{}
	mi := &file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsEcsCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsEcsCluster) ProtoMessage() {}

func (x *AwsEcsCluster) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsEcsCluster.ProtoReflect.Descriptor instead.
func (*AwsEcsCluster) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *AwsEcsCluster) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *AwsEcsCluster) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AwsEcsCluster) GetMetadata() *shared.CloudResourceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AwsEcsCluster) GetSpec() *AwsEcsClusterSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AwsEcsCluster) GetStatus() *AwsEcsClusterStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// AwsEcsClusterStatus describes the status fields for an ECS service resource.
type AwsEcsClusterStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// stack_outputs captures the outputs returned by Pulumi/Terraform after provisioning.
	Outputs       *AwsEcsClusterStackOutputs `protobuf:"bytes,1,opt,name=outputs,proto3" json:"outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsEcsClusterStatus) Reset() {
	*x = AwsEcsClusterStatus{}
	mi := &file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsEcsClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsEcsClusterStatus) ProtoMessage() {}

func (x *AwsEcsClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsEcsClusterStatus.ProtoReflect.Descriptor instead.
func (*AwsEcsClusterStatus) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *AwsEcsClusterStatus) GetOutputs() *AwsEcsClusterStackOutputs {
	if x != nil {
		return x.Outputs
	}
	return nil
}

var File_project_planton_provider_aws_awsecscluster_v1_api_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDesc = "" +
	"\n" +
	"7project/planton/provider/aws/awsecscluster/v1/api.proto\x12-project.planton.provider.aws.awsecscluster.v1\x1a\x1bbuf/validate/validate.proto\x1a8project/planton/provider/aws/awsecscluster/v1/spec.proto\x1aAproject/planton/provider/aws/awsecscluster/v1/stack_outputs.proto\x1a%project/planton/shared/metadata.proto\"\x8a\x03\n" +
	"\rAwsEcsCluster\x12B\n" +
	"\vapi_version\x18\x01 \x01(\tB!\xbaH\x1er\x1c\n" +
	"\x1aaws.project-planton.org/v1R\n" +
	"apiVersion\x12(\n" +
	"\x04kind\x18\x02 \x01(\tB\x14\xbaH\x11r\x0f\n" +
	"\rAwsEcsClusterR\x04kind\x12Q\n" +
	"\bmetadata\x18\x03 \x01(\v2-.project.planton.shared.CloudResourceMetadataB\x06\xbaH\x03\xc8\x01\x01R\bmetadata\x12\\\n" +
	"\x04spec\x18\x04 \x01(\v2@.project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterSpecB\x06\xbaH\x03\xc8\x01\x01R\x04spec\x12Z\n" +
	"\x06status\x18\x05 \x01(\v2B.project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStatusR\x06status\"y\n" +
	"\x13AwsEcsClusterStatus\x12b\n" +
	"\aoutputs\x18\x01 \x01(\v2H.project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackOutputsR\aoutputsB\x87\x03\n" +
	"1com.project.planton.provider.aws.awsecscluster.v1B\bApiProtoP\x01Zmgithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecscluster/v1;awsecsclusterv1\xa2\x02\x05PPPAA\xaa\x02-Project.Planton.Provider.Aws.Awsecscluster.V1\xca\x02-Project\\Planton\\Provider\\Aws\\Awsecscluster\\V1\xe2\x029Project\\Planton\\Provider\\Aws\\Awsecscluster\\V1\\GPBMetadata\xea\x022Project::Planton::Provider::Aws::Awsecscluster::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDesc), len(file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDescData
}

var file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_project_planton_provider_aws_awsecscluster_v1_api_proto_goTypes = []any{
	(*AwsEcsCluster)(nil),                // 0: project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster
	(*AwsEcsClusterStatus)(nil),          // 1: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStatus
	(*shared.CloudResourceMetadata)(nil), // 2: project.planton.shared.CloudResourceMetadata
	(*AwsEcsClusterSpec)(nil),            // 3: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterSpec
	(*AwsEcsClusterStackOutputs)(nil),    // 4: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackOutputs
}
var file_project_planton_provider_aws_awsecscluster_v1_api_proto_depIdxs = []int32{
	2, // 0: project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster.metadata:type_name -> project.planton.shared.CloudResourceMetadata
	3, // 1: project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster.spec:type_name -> project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterSpec
	1, // 2: project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster.status:type_name -> project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStatus
	4, // 3: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStatus.outputs:type_name -> project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackOutputs
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsecscluster_v1_api_proto_init() }
func file_project_planton_provider_aws_awsecscluster_v1_api_proto_init() {
	if File_project_planton_provider_aws_awsecscluster_v1_api_proto != nil {
		return
	}
	file_project_planton_provider_aws_awsecscluster_v1_spec_proto_init()
	file_project_planton_provider_aws_awsecscluster_v1_stack_outputs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDesc), len(file_project_planton_provider_aws_awsecscluster_v1_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsecscluster_v1_api_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsecscluster_v1_api_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsecscluster_v1_api_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsecscluster_v1_api_proto = out.File
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_goTypes = nil
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_depIdxs = nil
}
