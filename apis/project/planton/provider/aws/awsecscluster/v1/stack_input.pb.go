// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsecscluster/v1/stack_input.proto

package awsecsclusterv1

import (
	v1 "github.com/project-planton/project-planton/apis/project/planton/credential/awscredential/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// aws-ecs-cluster stack-input
type AwsEcsClusterStackInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// target cloud-resource
	Target *AwsEcsCluster `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// provider-credential
	ProviderCredential *v1.AwsCredentialSpec `protobuf:"bytes,2,opt,name=provider_credential,json=providerCredential,proto3" json:"provider_credential,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AwsEcsClusterStackInput) Reset() {
	*x = AwsEcsClusterStackInput{}
	mi := &file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsEcsClusterStackInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsEcsClusterStackInput) ProtoMessage() {}

func (x *AwsEcsClusterStackInput) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsEcsClusterStackInput.ProtoReflect.Descriptor instead.
func (*AwsEcsClusterStackInput) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescGZIP(), []int{0}
}

func (x *AwsEcsClusterStackInput) GetTarget() *AwsEcsCluster {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *AwsEcsClusterStackInput) GetProviderCredential() *v1.AwsCredentialSpec {
	if x != nil {
		return x.ProviderCredential
	}
	return nil
}

var File_project_planton_provider_aws_awsecscluster_v1_stack_input_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDesc = "" +
	"\n" +
	"?project/planton/provider/aws/awsecscluster/v1/stack_input.proto\x12-project.planton.provider.aws.awsecscluster.v1\x1a6project/planton/credential/awscredential/v1/spec.proto\x1a7project/planton/provider/aws/awsecscluster/v1/api.proto\"\xe0\x01\n" +
	"\x17AwsEcsClusterStackInput\x12T\n" +
	"\x06target\x18\x01 \x01(\v2<.project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterR\x06target\x12o\n" +
	"\x13provider_credential\x18\x02 \x01(\v2>.project.planton.credential.awscredential.v1.AwsCredentialSpecR\x12providerCredentialB\x8e\x03\n" +
	"1com.project.planton.provider.aws.awsecscluster.v1B\x0fStackInputProtoP\x01Zmgithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsecscluster/v1;awsecsclusterv1\xa2\x02\x05PPPAA\xaa\x02-Project.Planton.Provider.Aws.Awsecscluster.V1\xca\x02-Project\\Planton\\Provider\\Aws\\Awsecscluster\\V1\xe2\x029Project\\Planton\\Provider\\Aws\\Awsecscluster\\V1\\GPBMetadata\xea\x022Project::Planton::Provider::Aws::Awsecscluster::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDesc), len(file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDescData
}

var file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_goTypes = []any{
	(*AwsEcsClusterStackInput)(nil), // 0: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackInput
	(*AwsEcsCluster)(nil),           // 1: project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster
	(*v1.AwsCredentialSpec)(nil),    // 2: project.planton.credential.awscredential.v1.AwsCredentialSpec
}
var file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackInput.target:type_name -> project.planton.provider.aws.awsecscluster.v1.AwsEcsCluster
	2, // 1: project.planton.provider.aws.awsecscluster.v1.AwsEcsClusterStackInput.provider_credential:type_name -> project.planton.credential.awscredential.v1.AwsCredentialSpec
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_init() }
func file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_init() {
	if File_project_planton_provider_aws_awsecscluster_v1_stack_input_proto != nil {
		return
	}
	file_project_planton_provider_aws_awsecscluster_v1_api_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDesc), len(file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsecscluster_v1_stack_input_proto = out.File
	file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_goTypes = nil
	file_project_planton_provider_aws_awsecscluster_v1_stack_input_proto_depIdxs = nil
}
