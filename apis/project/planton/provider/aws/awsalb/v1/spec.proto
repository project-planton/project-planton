syntax = "proto3";

package project.planton.provider.aws.awsalb.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";

// AwsAlbSpec captures the essential fields to create an Application Load Balancer on AWS.
message AwsAlbSpec {
  // list of subnet IDs in which to create the ALB. AWS requires at least two subnets
  // for ALBs, which also ensures high availability across multiple Availability Zones.
  // Typically use private subnets for internal ALBs or public subnets for internet-facing ALBs.
  repeated project.planton.shared.foreignkey.v1.StringValueOrRef subnets = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).repeated.min_items = 2,
    (project.planton.shared.foreignkey.v1.default_kind) = AwsVpc
  ];

  // list of security group IDs to attach to the ALB.
  repeated project.planton.shared.foreignkey.v1.StringValueOrRef security_groups = 2 [
    (project.planton.shared.foreignkey.v1.default_kind) = AwsSecurityGroup,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.security_group_id"
  ];

  // indicates whether the ALB is internal or internet-facing.
  // If true, the ALB is internal; if false (or not set), it is internet-facing.
  bool internal = 3;

  // indicates whether the ALB should have deletion protection enabled.
  // This prevents accidental deletion.
  bool delete_protection_enabled = 5;

  // sets the idle timeout in seconds for connections to the ALB.
  // If omitted, AWS default is 60 seconds.
  int32 idle_timeout_seconds = 6 [
    (project.planton.shared.options.recommended_default) = "60"
  ];

  // dns configuration allows the resource to manage Route53 DNS if enabled.
  AwsAlbDns dns = 7;

  // ssl configuration allows a single toggle for SSL, plus a certificate ARN if enabled.
  AwsAlbSsl ssl = 8;
}

// AwsAlbDns defines the Route53 DNS configuration for the ALB.
message AwsAlbDns {
  // enabled, when set to true, indicates that the ALB resource
  // should create DNS records in Route53 .
  bool enabled = 1;

  // route53_zone_id is the Route53 Hosted Zone ID where DNS records
  // will be created.
  project.planton.shared.foreignkey.v1.StringValueOrRef route53_zone_id = 2 [
    (project.planton.shared.foreignkey.v1.default_kind) = AwsRoute53Zone,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.zone_id"
  ];

  // hostnames is a list of domain names (e.g., ["app.example.com"])
  // that will point to this ALB.
  repeated string hostnames = 3 [
    (buf.validate.field).repeated = {
      unique: true
    }
  ];
}

// AwsAlbSsl defines a toggle for SSL, plus a certificate ARN required if enabled is true.
message AwsAlbSsl {
  bool enabled = 1;

  // Validation Removed: "certificate_arn must be set if ssl.enabled is true"
  //
  // Previously, we enforced a message-level CEL expression on AwsAlbSsl:
  //   "!this.enabled || (has(this.certificate_arn.value) || has(this.certificate_arn.value_from))"
  // to require a certificate ARN whenever SSL is enabled.
  //
  // However, this validation references an external type (`StringValueOrRef`) from
  // "project.planton.shared.foreignkey.v1", which causes issues in certain Java environments
  // (see https://github.com/bufbuild/protovalidate-java/issues/118) where cross-package
  // type resolution fails without extensive descriptor loading.
  //
  // Because of that open issue, we have removed the validation rule here. If this is
  // eventually resolved upstream or we change our approach to descriptor loading, we may
  // restore the rule at a later time.
  project.planton.shared.foreignkey.v1.StringValueOrRef certificate_arn = 2 [
    (project.planton.shared.foreignkey.v1.default_kind) = AwsCertManagerCert,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.cert_arn"
  ];
}
