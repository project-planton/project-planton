// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsvpc/v1/stack_outputs.proto

package awsvpcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// aws-vpc stack outputs
type AwsVpcStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of the vpc created on aws
	VpcId string `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// id of the internet-gateway
	InternetGatewayId string `protobuf:"bytes,2,opt,name=internet_gateway_id,json=internetGatewayId,proto3" json:"internet_gateway_id,omitempty"`
	// private subnets
	PrivateSubnets []*AwsVpcSubnetStackOutputs `protobuf:"bytes,3,rep,name=private_subnets,json=privateSubnets,proto3" json:"private_subnets,omitempty"`
	// public subnets
	PublicSubnets []*AwsVpcSubnetStackOutputs `protobuf:"bytes,4,rep,name=public_subnets,json=publicSubnets,proto3" json:"public_subnets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsVpcStackOutputs) Reset() {
	*x = AwsVpcStackOutputs{}
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsVpcStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcStackOutputs) ProtoMessage() {}

func (x *AwsVpcStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AwsVpcStackOutputs) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *AwsVpcStackOutputs) GetInternetGatewayId() string {
	if x != nil {
		return x.InternetGatewayId
	}
	return ""
}

func (x *AwsVpcStackOutputs) GetPrivateSubnets() []*AwsVpcSubnetStackOutputs {
	if x != nil {
		return x.PrivateSubnets
	}
	return nil
}

func (x *AwsVpcStackOutputs) GetPublicSubnets() []*AwsVpcSubnetStackOutputs {
	if x != nil {
		return x.PublicSubnets
	}
	return nil
}

// aws-vpc subnet outputs
type AwsVpcSubnetStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// subnet name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// subnet id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// subnet cidr
	Cidr string `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	// nat-gateway
	NatGateway    *AwsVpcNatGatewayStackOutputs `protobuf:"bytes,4,opt,name=nat_gateway,json=natGateway,proto3" json:"nat_gateway,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsVpcSubnetStackOutputs) Reset() {
	*x = AwsVpcSubnetStackOutputs{}
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsVpcSubnetStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcSubnetStackOutputs) ProtoMessage() {}

func (x *AwsVpcSubnetStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcSubnetStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcSubnetStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{1}
}

func (x *AwsVpcSubnetStackOutputs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetNatGateway() *AwsVpcNatGatewayStackOutputs {
	if x != nil {
		return x.NatGateway
	}
	return nil
}

// aws vpc nat-gateway outputs
type AwsVpcNatGatewayStackOutputs struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of the nat gateway
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// nat gateway private ip address
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty"`
	// nat gateway public ip address
	PublicIp      string `protobuf:"bytes,3,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsVpcNatGatewayStackOutputs) Reset() {
	*x = AwsVpcNatGatewayStackOutputs{}
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsVpcNatGatewayStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcNatGatewayStackOutputs) ProtoMessage() {}

func (x *AwsVpcNatGatewayStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcNatGatewayStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcNatGatewayStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{2}
}

func (x *AwsVpcNatGatewayStackOutputs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AwsVpcNatGatewayStackOutputs) GetPrivateIp() string {
	if x != nil {
		return x.PrivateIp
	}
	return ""
}

func (x *AwsVpcNatGatewayStackOutputs) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

var File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc = "" +
	"\n" +
	":project/planton/provider/aws/awsvpc/v1/stack_outputs.proto\x12&project.planton.provider.aws.awsvpc.v1\"\xaf\x02\n" +
	"\x12AwsVpcStackOutputs\x12\x15\n" +
	"\x06vpc_id\x18\x01 \x01(\tR\x05vpcId\x12.\n" +
	"\x13internet_gateway_id\x18\x02 \x01(\tR\x11internetGatewayId\x12i\n" +
	"\x0fprivate_subnets\x18\x03 \x03(\v2@.project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputsR\x0eprivateSubnets\x12g\n" +
	"\x0epublic_subnets\x18\x04 \x03(\v2@.project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputsR\rpublicSubnets\"\xb9\x01\n" +
	"\x18AwsVpcSubnetStackOutputs\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04cidr\x18\x03 \x01(\tR\x04cidr\x12e\n" +
	"\vnat_gateway\x18\x04 \x01(\v2D.project.planton.provider.aws.awsvpc.v1.AwsVpcNatGatewayStackOutputsR\n" +
	"natGateway\"j\n" +
	"\x1cAwsVpcNatGatewayStackOutputs\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"private_ip\x18\x02 \x01(\tR\tprivateIp\x12\x1b\n" +
	"\tpublic_ip\x18\x03 \x01(\tR\bpublicIpB\xdf\x02\n" +
	"*com.project.planton.provider.aws.awsvpc.v1B\x11StackOutputsProtoP\x01Z_github.com/project-planton/project-planton/apis/project/planton/provider/aws/awsvpc/v1;awsvpcv1\xa2\x02\x05PPPAA\xaa\x02&Project.Planton.Provider.Aws.Awsvpc.V1\xca\x02&Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\xe2\x022Project\\Planton\\Provider\\Aws\\Awsvpc\\V1\\GPBMetadata\xea\x02+Project::Planton::Provider::Aws::Awsvpc::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes = []any{
	(*AwsVpcStackOutputs)(nil),           // 0: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs
	(*AwsVpcSubnetStackOutputs)(nil),     // 1: project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	(*AwsVpcNatGatewayStackOutputs)(nil), // 2: project.planton.provider.aws.awsvpc.v1.AwsVpcNatGatewayStackOutputs
}
var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs.private_subnets:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	1, // 1: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs.public_subnets:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	2, // 2: project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs.nat_gateway:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcNatGatewayStackOutputs
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_init() }
func file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc), len(file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto = out.File
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs = nil
}
