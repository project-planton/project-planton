syntax = "proto3";

package project.planton.provider.aws.awsvpc.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/options/options.proto";

// AwsVpcSpec defines the specification required to deploy an AWS Virtual Private Cloud (VPC).
// This message encapsulates all configurations necessary for setting up a VPC, including CIDR blocks,
// availability zones, subnets, and various networking features like NAT gateways, DNS hostnames, and DNS support.
// An AWS VPC allows you to create a virtual network in the AWS cloud, where you can launch AWS resources in a
// logically isolated section with complete control over your virtual networking environment.
// With VPC, you can define your own IP address range, create subnets, and configure route tables and network gateways.
// This specification helps in automating the VPC creation process with specified configurations, ensuring a consistent
// and repeatable setup for your AWS environment.
message AwsVpcSpec {
  // The CIDR (Classless Inter-Domain Routing) block for the VPC.
  // This defines the IP address range for the VPC.
  // Example: "10.0.0.0/16" allows IP addresses from 10.0.0.0 to 10.0.255.255.
  string vpc_cidr = 1 [
    (buf.validate.field).required = true
  ];

  // The list of availability zones where the VPC will be spanned.
  // AWS regions are divided into multiple availability zones (AZs) for high availability.
  // Example: ["us-west-2a", "us-west-2b"] indicates that resources will be spread across these two AZs.
  repeated string availability_zones = 2;

  // The number of subnets to be created in each availability zone.
  // Subnets are segments of the VPC's IP address range where you can place groups of isolated resources.
  int32 subnets_per_availability_zone = 3 [
    (buf.validate.field).required = true,
    (project.planton.shared.options.recommended_default) = "1"
  ];

  // The number of hosts (IP addresses) in each subnet.
  // This determines the size of each subnet's CIDR block.
  int32 subnet_size = 4 [
    (buf.validate.field).required = true,
    (project.planton.shared.options.recommended_default) = "1"
  ];

  // Toggle to enable or disable a NAT (Network Address Translation) gateway for private subnets created in the VPC.
  // A NAT gateway allows instances in a private subnet to connect to the internet or other AWS services, but prevents
  // the internet from initiating a connection with those instances.
  bool is_nat_gateway_enabled = 5;

  // Toggle to enable or disable DNS hostnames in the VPC.
  // When enabled, instances with public IP addresses receive corresponding public DNS hostnames.
  // See AWS documentation: https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-hostnames
  bool is_dns_hostnames_enabled = 6;

  // Toggle to enable or disable DNS resolution in the VPC through the Amazon-provided DNS server.
  // When enabled, the Amazon DNS server resolves DNS hostnames for your instances.
  bool is_dns_support_enabled = 7;
}
