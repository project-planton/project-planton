// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsekscluster/v1/spec.proto

package awseksclusterv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AwsEksClusterSpec defines the specification for an AWS EKS (Elastic Kubernetes Service) cluster control plane.
// It captures the minimal fields needed to create a Kubernetes control plane (80/20 use-case configuration).
type AwsEksClusterSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// subnet_ids is the list of subnet IDs (in the cluster's VPC) where the EKS control plane will attach network interfaces.
	// Provide at least two subnets in distinct Availability Zones for high availability.
	SubnetIds []*v1.StringValueOrRef `protobuf:"bytes,1,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	// cluster_role_arn is the ARN of an IAM role for the EKS cluster to use when interacting with AWS services.
	// This role must have the AmazonEKSClusterPolicy attached.
	// Example: "arn:aws:iam::123456789012:role/EksClusterServiceRole"
	ClusterRoleArn *v1.StringValueOrRef `protobuf:"bytes,2,opt,name=cluster_role_arn,json=clusterRoleArn,proto3" json:"cluster_role_arn,omitempty"`
	// version is the Kubernetes version of the cluster control plane to deploy (e.g., "1.25").
	// Must match the pattern ^1\.(2[4-9]|3[0-9])$ (for example, "1.24", "1.25", etc.). If not set, the latest supported version is used.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// disable_public_endpoint determines if the cluster's API endpoint should be private-only.
	// If false (default), the cluster API endpoint is publicly accessible; if true, the endpoint is accessible only within the VPC.
	DisablePublicEndpoint bool `protobuf:"varint,4,opt,name=disable_public_endpoint,json=disablePublicEndpoint,proto3" json:"disable_public_endpoint,omitempty"`
	// public_access_cidrs restricts which IPv4 CIDR blocks can access the cluster's public API endpoint.
	// If this list is empty, AWS defaults to 0.0.0.0/0 (all IPv4 addresses). Each entry must be a valid IPv4 CIDR (e.g., "203.0.113.0/24").
	PublicAccessCidrs []string `protobuf:"bytes,5,rep,name=public_access_cidrs,json=publicAccessCidrs,proto3" json:"public_access_cidrs,omitempty"`
	// enable_control_plane_logs, if true, enables all control plane log types for the cluster (API, audit, authenticator, controller manager, scheduler) to CloudWatch.
	// Default is false, meaning control plane logging is disabled unless explicitly enabled.
	EnableControlPlaneLogs bool `protobuf:"varint,6,opt,name=enable_control_plane_logs,json=enableControlPlaneLogs,proto3" json:"enable_control_plane_logs,omitempty"`
	// kms_key_arn is an optional KMS Key ARN to use for envelope encryption of Kubernetes secrets.
	// If provided, this customer-managed KMS key will encrypt secrets; if not set, the cluster uses the default AWS-managed EKS key.
	KmsKeyArn     *v1.StringValueOrRef `protobuf:"bytes,7,opt,name=kms_key_arn,json=kmsKeyArn,proto3" json:"kms_key_arn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AwsEksClusterSpec) Reset() {
	*x = AwsEksClusterSpec{}
	mi := &file_project_planton_provider_aws_awsekscluster_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsEksClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsEksClusterSpec) ProtoMessage() {}

func (x *AwsEksClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsekscluster_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsEksClusterSpec.ProtoReflect.Descriptor instead.
func (*AwsEksClusterSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *AwsEksClusterSpec) GetSubnetIds() []*v1.StringValueOrRef {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *AwsEksClusterSpec) GetClusterRoleArn() *v1.StringValueOrRef {
	if x != nil {
		return x.ClusterRoleArn
	}
	return nil
}

func (x *AwsEksClusterSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AwsEksClusterSpec) GetDisablePublicEndpoint() bool {
	if x != nil {
		return x.DisablePublicEndpoint
	}
	return false
}

func (x *AwsEksClusterSpec) GetPublicAccessCidrs() []string {
	if x != nil {
		return x.PublicAccessCidrs
	}
	return nil
}

func (x *AwsEksClusterSpec) GetEnableControlPlaneLogs() bool {
	if x != nil {
		return x.EnableControlPlaneLogs
	}
	return false
}

func (x *AwsEksClusterSpec) GetKmsKeyArn() *v1.StringValueOrRef {
	if x != nil {
		return x.KmsKeyArn
	}
	return nil
}

var File_project_planton_provider_aws_awsekscluster_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDesc = "" +
	"\n" +
	"8project/planton/provider/aws/awsekscluster/v1/spec.proto\x12-project.planton.provider.aws.awsekscluster.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\x1a,project/planton/shared/options/options.proto\"\xd9\x05\n" +
	"\x11AwsEksClusterSpec\x12\x90\x01\n" +
	"\n" +
	"subnet_ids\x18\x01 \x03(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB9\xbaH\b\xc8\x01\x01\x92\x01\x02\b\x02\x88\xd4a\xd9\x01\x92\xd4a%status.outputs.private_subnets.[*].idR\tsubnetIds\x12\x88\x01\n" +
	"\x10cluster_role_arn\x18\x02 \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB&\xbaH\x03\xc8\x01\x01\x88\xd4a\xd0\x01\x92\xd4a\x17status.outputs.role_arnR\x0eclusterRoleArn\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x126\n" +
	"\x17disable_public_endpoint\x18\x04 \x01(\bR\x15disablePublicEndpoint\x12\x9f\x01\n" +
	"\x13public_access_cidrs\x18\x05 \x03(\tBo\xbaHl\x92\x01i\"gre2c^(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}/(?:[0-9]|[12]\\d|3[0-2])$R\x11publicAccessCidrs\x129\n" +
	"\x19enable_control_plane_logs\x18\x06 \x01(\bR\x16enableControlPlaneLogs\x12w\n" +
	"\vkms_key_arn\x18\a \x01(\v26.project.planton.shared.foreignkey.v1.StringValueOrRefB\x1f\x88\xd4a\xdc\x01\x92\xd4a\x16status.outputs.key_arnR\tkmsKeyArnB\x88\x03\n" +
	"1com.project.planton.provider.aws.awsekscluster.v1B\tSpecProtoP\x01Zmgithub.com/project-planton/project-planton/apis/project/planton/provider/aws/awsekscluster/v1;awseksclusterv1\xa2\x02\x05PPPAA\xaa\x02-Project.Planton.Provider.Aws.Awsekscluster.V1\xca\x02-Project\\Planton\\Provider\\Aws\\Awsekscluster\\V1\xe2\x029Project\\Planton\\Provider\\Aws\\Awsekscluster\\V1\\GPBMetadata\xea\x022Project::Planton::Provider::Aws::Awsekscluster::V1b\x06proto3"

var (
	file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDescData
}

var file_project_planton_provider_aws_awsekscluster_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_aws_awsekscluster_v1_spec_proto_goTypes = []any{
	(*AwsEksClusterSpec)(nil),   // 0: project.planton.provider.aws.awsekscluster.v1.AwsEksClusterSpec
	(*v1.StringValueOrRef)(nil), // 1: project.planton.shared.foreignkey.v1.StringValueOrRef
}
var file_project_planton_provider_aws_awsekscluster_v1_spec_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.aws.awsekscluster.v1.AwsEksClusterSpec.subnet_ids:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	1, // 1: project.planton.provider.aws.awsekscluster.v1.AwsEksClusterSpec.cluster_role_arn:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	1, // 2: project.planton.provider.aws.awsekscluster.v1.AwsEksClusterSpec.kms_key_arn:type_name -> project.planton.shared.foreignkey.v1.StringValueOrRef
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsekscluster_v1_spec_proto_init() }
func file_project_planton_provider_aws_awsekscluster_v1_spec_proto_init() {
	if File_project_planton_provider_aws_awsekscluster_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDesc), len(file_project_planton_provider_aws_awsekscluster_v1_spec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsekscluster_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsekscluster_v1_spec_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsekscluster_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsekscluster_v1_spec_proto = out.File
	file_project_planton_provider_aws_awsekscluster_v1_spec_proto_goTypes = nil
	file_project_planton_provider_aws_awsekscluster_v1_spec_proto_depIdxs = nil
}
