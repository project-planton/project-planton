syntax = "proto3";

package project.planton.provider.aws.awsekscluster.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";
import "project/planton/shared/options/options.proto";

// AwsEksClusterSpec defines the specification for an AWS EKS (Elastic Kubernetes Service) cluster control plane.
// It captures the minimal fields needed to create a Kubernetes control plane (80/20 use-case configuration).
message AwsEksClusterSpec {
  // subnet_ids is the list of subnet IDs (in the cluster's VPC) where the EKS control plane will attach network interfaces.
  // Provide at least two subnets in distinct Availability Zones for high availability.
  repeated project.planton.shared.foreignkey.v1.StringValueOrRef subnet_ids = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).repeated.min_items = 2,
    (project.planton.shared.foreignkey.v1.default_kind) = AwsVpc,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.private_subnets.[*].id"
  ];

  // cluster_role_arn is the ARN of an IAM role for the EKS cluster to use when interacting with AWS services.
  // This role must have the AmazonEKSClusterPolicy attached.
  // Example: "arn:aws:iam::123456789012:role/EksClusterServiceRole"
  project.planton.shared.foreignkey.v1.StringValueOrRef cluster_role_arn = 2 [
    (buf.validate.field).required = true,
    (project.planton.shared.foreignkey.v1.default_kind) = AwsIamRole,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.role_arn"
  ];

  // version is the Kubernetes version of the cluster control plane to deploy (e.g., "1.25").
  // Must match the pattern ^1\.(2[4-9]|3[0-9])$ (for example, "1.24", "1.25", etc.). If not set, the latest supported version is used.
  string version = 3;

  // disable_public_endpoint determines if the cluster's API endpoint should be private-only.
  // If false (default), the cluster API endpoint is publicly accessible; if true, the endpoint is accessible only within the VPC.
  bool disable_public_endpoint = 4;

  // public_access_cidrs restricts which IPv4 CIDR blocks can access the cluster's public API endpoint.
  // If this list is empty, AWS defaults to 0.0.0.0/0 (all IPv4 addresses). Each entry must be a valid IPv4 CIDR (e.g., "203.0.113.0/24").
  repeated string public_access_cidrs = 5 [(buf.validate.field).repeated.items.string.pattern = "^(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}/(?:[0-9]|[12]\\d|3[0-2])$"];

  // enable_control_plane_logs, if true, enables all control plane log types for the cluster (API, audit, authenticator, controller manager, scheduler) to CloudWatch.
  // Default is false, meaning control plane logging is disabled unless explicitly enabled.
  bool enable_control_plane_logs = 6;

  // kms_key_arn is an optional KMS Key ARN to use for envelope encryption of Kubernetes secrets.
  // If provided, this customer-managed KMS key will encrypt secrets; if not set, the cluster uses the default AWS-managed EKS key.
  project.planton.shared.foreignkey.v1.StringValueOrRef kms_key_arn = 7 [
    (project.planton.shared.foreignkey.v1.default_kind) = AwsKmsKey,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.key_arn"
  ];
}
