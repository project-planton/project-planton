syntax = "proto3";

package project.planton.provider.cloudflare.cloudflareworker.v1;

import "buf/validate/validate.proto";
import "project/planton/shared/foreignkey/v1/foreign_key.proto";

// CloudflareWorkerSpec defines user-provided configuration for deploying a Cloudflare Worker.
message CloudflareWorkerSpec {
  // A unique name for the Worker script (alphanumeric and hyphen characters only, no underscores).
  string script_name = 1 [(buf.validate.field).string.min_len = 1];

  // Reference or literal path/URL to the Worker script code bundle.
  project.planton.shared.foreignkey.v1.StringValueOrRef script_source = 2 [(buf.validate.field).required = true];

  // The Cloudflare account ID in which to create the worker.
  string account_id = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.len = 32,
    (buf.validate.field).string.pattern = "^[0-9a-fA-F]{32}$"
  ];

  // (Optional) One or more KV namespaces to bind to this Worker (referenced by CloudflareKVNamespace.namespace_id).
  repeated project.planton.shared.foreignkey.v1.ValueFromRef kv_bindings = 4 [
    (project.planton.shared.foreignkey.v1.default_kind) = CloudflareKvNamespace,
    (project.planton.shared.foreignkey.v1.default_kind_field_path) = "status.outputs.namespace_id"
  ];

  // (Optional) URL pattern to attach this Worker to (must correspond to a domain under an existing CloudflareDnsZone).
  string route_pattern = 5;

  // (Optional) Compatibility date for the Worker script (YYYY-MM-DD). If unset, defaults to today's date.
  string compatibility_date = 6 [(buf.validate.field).string.pattern = "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"];

  // (Optional) Billing/usage model for the Worker. Defaults to BUNDLED if unspecified.
  CloudflareWorkerUsageModel usage_model = 7;

  // (Optional) Plaintext environment variables to provide to the Worker script.
  map<string, string> env_vars = 8;
}

// Supported usage models for Cloudflare Workers.
enum CloudflareWorkerUsageModel {
  BUNDLED = 0;
  UNBOUND = 1;
}
