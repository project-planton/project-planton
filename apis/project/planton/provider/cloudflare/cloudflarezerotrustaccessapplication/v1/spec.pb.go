// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/provider/cloudflare/cloudflarezerotrustaccessapplication/v1/spec.proto

package cloudflarezerotrustaccessapplicationv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/project-planton/project-planton/apis/project/planton/shared/foreignkey/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * Types of access policies for Cloudflare Zero Trust Access Applications.
type CloudflareZeroTrustPolicyType int32

const (
	CloudflareZeroTrustPolicyType_ALLOW CloudflareZeroTrustPolicyType = 0
	CloudflareZeroTrustPolicyType_BLOCK CloudflareZeroTrustPolicyType = 1
)

// Enum value maps for CloudflareZeroTrustPolicyType.
var (
	CloudflareZeroTrustPolicyType_name = map[int32]string{
		0: "ALLOW",
		1: "BLOCK",
	}
	CloudflareZeroTrustPolicyType_value = map[string]int32{
		"ALLOW": 0,
		"BLOCK": 1,
	}
)

func (x CloudflareZeroTrustPolicyType) Enum() *CloudflareZeroTrustPolicyType {
	p := new(CloudflareZeroTrustPolicyType)
	*p = x
	return p
}

func (x CloudflareZeroTrustPolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudflareZeroTrustPolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_enumTypes[0].Descriptor()
}

func (CloudflareZeroTrustPolicyType) Type() protoreflect.EnumType {
	return &file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_enumTypes[0]
}

func (x CloudflareZeroTrustPolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudflareZeroTrustPolicyType.Descriptor instead.
func (CloudflareZeroTrustPolicyType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescGZIP(), []int{0}
}

// *
// **CloudflareZeroTrustAccessApplicationSpec** defines the configuration for a Cloudflare Zero Trust Access Application.
// This resource configures a Zero Trust access policy for a specific hostname within a Cloudflare DNS zone.
// It includes settings for who can access the application and how (e.g., allowed emails, MFA requirements).
type CloudflareZeroTrustAccessApplicationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The display name of the Zero Trust Access Application.
	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// The Cloudflare DNS zone ID (from a CloudflareDnsZone resource) for the domain.
	ZoneId string `protobuf:"bytes,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// The fully qualified domain name to protect (e.g., "app.example.com").
	Hostname string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The type of access policy for this application (ALLOW or BLOCK). Defaults to ALLOW if unspecified.
	PolicyType CloudflareZeroTrustPolicyType `protobuf:"varint,4,opt,name=policy_type,json=policyType,proto3,enum=project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustPolicyType" json:"policy_type,omitempty"`
	// A list of email addresses that are allowed access (applicable only when policy_type = ALLOW).
	AllowedEmails []string `protobuf:"bytes,5,rep,name=allowed_emails,json=allowedEmails,proto3" json:"allowed_emails,omitempty"`
	// The duration of each authenticated session, in minutes (default: 1440 minutes, i.e., 24 hours).
	SessionDurationMinutes int32 `protobuf:"varint,6,opt,name=session_duration_minutes,json=sessionDurationMinutes,proto3" json:"session_duration_minutes,omitempty"`
	// Whether multi-factor authentication (MFA) is required for access.
	RequireMfa bool `protobuf:"varint,7,opt,name=require_mfa,json=requireMfa,proto3" json:"require_mfa,omitempty"`
	// A list of allowed Google Workspace group email addresses (optional).
	AllowedGoogleGroups []string `protobuf:"bytes,8,rep,name=allowed_google_groups,json=allowedGoogleGroups,proto3" json:"allowed_google_groups,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CloudflareZeroTrustAccessApplicationSpec) Reset() {
	*x = CloudflareZeroTrustAccessApplicationSpec{}
	mi := &file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudflareZeroTrustAccessApplicationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudflareZeroTrustAccessApplicationSpec) ProtoMessage() {}

func (x *CloudflareZeroTrustAccessApplicationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudflareZeroTrustAccessApplicationSpec.ProtoReflect.Descriptor instead.
func (*CloudflareZeroTrustAccessApplicationSpec) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescGZIP(), []int{0}
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetPolicyType() CloudflareZeroTrustPolicyType {
	if x != nil {
		return x.PolicyType
	}
	return CloudflareZeroTrustPolicyType_ALLOW
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetAllowedEmails() []string {
	if x != nil {
		return x.AllowedEmails
	}
	return nil
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetSessionDurationMinutes() int32 {
	if x != nil {
		return x.SessionDurationMinutes
	}
	return 0
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetRequireMfa() bool {
	if x != nil {
		return x.RequireMfa
	}
	return false
}

func (x *CloudflareZeroTrustAccessApplicationSpec) GetAllowedGoogleGroups() []string {
	if x != nil {
		return x.AllowedGoogleGroups
	}
	return nil
}

var File_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto protoreflect.FileDescriptor

const file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDesc = "" +
	"\n" +
	"Vproject/planton/provider/cloudflare/cloudflarezerotrustaccessapplication/v1/spec.proto\x12Kproject.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1\x1a\x1bbuf/validate/validate.proto\x1a6project/planton/shared/foreignkey/v1/foreign_key.proto\"\x86\x04\n" +
	"(CloudflareZeroTrustAccessApplicationSpec\x122\n" +
	"\x10application_name\x18\x01 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0fapplicationName\x12>\n" +
	"\azone_id\x18\x02 \x01(\tB%\xbaH\x03\xc8\x01\x01\x88\xd4a\x88\x0e\x92\xd4a\x16status.outputs.zone_idR\x06zoneId\x12\"\n" +
	"\bhostname\x18\x03 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\bhostname\x12\x8b\x01\n" +
	"\vpolicy_type\x18\x04 \x01(\x0e2j.project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustPolicyTypeR\n" +
	"policyType\x12%\n" +
	"\x0eallowed_emails\x18\x05 \x03(\tR\rallowedEmails\x128\n" +
	"\x18session_duration_minutes\x18\x06 \x01(\x05R\x16sessionDurationMinutes\x12\x1f\n" +
	"\vrequire_mfa\x18\a \x01(\bR\n" +
	"requireMfa\x122\n" +
	"\x15allowed_google_groups\x18\b \x03(\tR\x13allowedGoogleGroups*5\n" +
	"\x1dCloudflareZeroTrustPolicyType\x12\t\n" +
	"\x05ALLOW\x10\x00\x12\t\n" +
	"\x05BLOCK\x10\x01B\xd4\x04\n" +
	"Ocom.project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1B\tSpecProtoP\x01Z\xa2\x01github.com/project-planton/project-planton/apis/project/planton/provider/cloudflare/cloudflarezerotrustaccessapplication/v1;cloudflarezerotrustaccessapplicationv1\xa2\x02\x05PPPCC\xaa\x02KProject.Planton.Provider.Cloudflare.Cloudflarezerotrustaccessapplication.V1\xca\x02KProject\\Planton\\Provider\\Cloudflare\\Cloudflarezerotrustaccessapplication\\V1\xe2\x02WProject\\Planton\\Provider\\Cloudflare\\Cloudflarezerotrustaccessapplication\\V1\\GPBMetadata\xea\x02PProject::Planton::Provider::Cloudflare::Cloudflarezerotrustaccessapplication::V1b\x06proto3"

var (
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescOnce sync.Once
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescData []byte
)

func file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescGZIP() []byte {
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDesc), len(file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDesc)))
	})
	return file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDescData
}

var file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_goTypes = []any{
	(CloudflareZeroTrustPolicyType)(0),               // 0: project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustPolicyType
	(*CloudflareZeroTrustAccessApplicationSpec)(nil), // 1: project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustAccessApplicationSpec
}
var file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_depIdxs = []int32{
	0, // 0: project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustAccessApplicationSpec.policy_type:type_name -> project.planton.provider.cloudflare.cloudflarezerotrustaccessapplication.v1.CloudflareZeroTrustPolicyType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_init()
}
func file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_init() {
	if File_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDesc), len(file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_depIdxs,
		EnumInfos:         file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_enumTypes,
		MessageInfos:      file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_msgTypes,
	}.Build()
	File_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto = out.File
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_goTypes = nil
	file_project_planton_provider_cloudflare_cloudflarezerotrustaccessapplication_v1_spec_proto_depIdxs = nil
}
