// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/shared/networking/enums/dnsrecordtype/dns_record_type.proto

package dnsrecordtype

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// dns record type
// the recommended best practice to prefix the entry with enum name has been intentionally ignored to ensure that the enum's value matches the dns record type.
type DnsRecordType int32

const (
	DnsRecordType_unspecified DnsRecordType = 0
	// host address
	DnsRecordType_A DnsRecordType = 1
	// ipv6 host address
	DnsRecordType_AAAA DnsRecordType = 2
	// auto resolved alias
	DnsRecordType_ALIAS DnsRecordType = 3
	// canonical name for an alias
	DnsRecordType_CNAME DnsRecordType = 4
	// mail exchange
	DnsRecordType_MX DnsRecordType = 5
	// name server
	DnsRecordType_NS DnsRecordType = 6
	// pointer
	DnsRecordType_PTR DnsRecordType = 7
	// start of authority
	DnsRecordType_SOA DnsRecordType = 8
	// location of service
	DnsRecordType_SRV DnsRecordType = 9
	// descriptive text
	DnsRecordType_TXT DnsRecordType = 10
)

// Enum value maps for DnsRecordType.
var (
	DnsRecordType_name = map[int32]string{
		0:  "unspecified",
		1:  "A",
		2:  "AAAA",
		3:  "ALIAS",
		4:  "CNAME",
		5:  "MX",
		6:  "NS",
		7:  "PTR",
		8:  "SOA",
		9:  "SRV",
		10: "TXT",
	}
	DnsRecordType_value = map[string]int32{
		"unspecified": 0,
		"A":           1,
		"AAAA":        2,
		"ALIAS":       3,
		"CNAME":       4,
		"MX":          5,
		"NS":          6,
		"PTR":         7,
		"SOA":         8,
		"SRV":         9,
		"TXT":         10,
	}
)

func (x DnsRecordType) Enum() *DnsRecordType {
	p := new(DnsRecordType)
	*p = x
	return p
}

func (x DnsRecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DnsRecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_enumTypes[0].Descriptor()
}

func (DnsRecordType) Type() protoreflect.EnumType {
	return &file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_enumTypes[0]
}

func (x DnsRecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DnsRecordType.Descriptor instead.
func (DnsRecordType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescGZIP(), []int{0}
}

var File_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto protoreflect.FileDescriptor

const file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDesc = "" +
	"\n" +
	"Kproject/planton/shared/networking/enums/dnsrecordtype/dns_record_type.proto\x125project.planton.shared.networking.enums.dnsrecordtype*{\n" +
	"\rDnsRecordType\x12\x0f\n" +
	"\vunspecified\x10\x00\x12\x05\n" +
	"\x01A\x10\x01\x12\b\n" +
	"\x04AAAA\x10\x02\x12\t\n" +
	"\x05ALIAS\x10\x03\x12\t\n" +
	"\x05CNAME\x10\x04\x12\x06\n" +
	"\x02MX\x10\x05\x12\x06\n" +
	"\x02NS\x10\x06\x12\a\n" +
	"\x03PTR\x10\a\x12\a\n" +
	"\x03SOA\x10\b\x12\a\n" +
	"\x03SRV\x10\t\x12\a\n" +
	"\x03TXT\x10\n" +
	"B\xb2\x03\n" +
	"9com.project.planton.shared.networking.enums.dnsrecordtypeB\x12DnsRecordTypeProtoP\x01Zegithub.com/project-planton/project-planton/apis/project/planton/shared/networking/enums/dnsrecordtype\xa2\x02\x06PPSNED\xaa\x025Project.Planton.Shared.Networking.Enums.Dnsrecordtype\xca\x025Project\\Planton\\Shared\\Networking\\Enums\\Dnsrecordtype\xe2\x02AProject\\Planton\\Shared\\Networking\\Enums\\Dnsrecordtype\\GPBMetadata\xea\x02:Project::Planton::Shared::Networking::Enums::Dnsrecordtypeb\x06proto3"

var (
	file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescOnce sync.Once
	file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescData []byte
)

func file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescGZIP() []byte {
	file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDesc), len(file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDesc)))
	})
	return file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDescData
}

var file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_goTypes = []any{
	(DnsRecordType)(0), // 0: project.planton.shared.networking.enums.dnsrecordtype.DnsRecordType
}
var file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_init() }
func file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_init() {
	if File_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDesc), len(file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_depIdxs,
		EnumInfos:         file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_enumTypes,
	}.Build()
	File_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto = out.File
	file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_goTypes = nil
	file_project_planton_shared_networking_enums_dnsrecordtype_dns_record_type_proto_depIdxs = nil
}
