// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/shared/cloudresourcekind/cloud_resource_kind.proto

package cloudresourcekind

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// cloud-resource-kind
type CloudResourceKind int32

const (
	CloudResourceKind_unspecified                 CloudResourceKind = 0
	CloudResourceKind_mongodb_atlas               CloudResourceKind = 1
	CloudResourceKind_aws_alb                     CloudResourceKind = 2
	CloudResourceKind_aws_cert_manager_cert       CloudResourceKind = 3
	CloudResourceKind_aws_cloudfront              CloudResourceKind = 4
	CloudResourceKind_aws_dynamodb                CloudResourceKind = 5
	CloudResourceKind_aws_ecr_repo                CloudResourceKind = 6
	CloudResourceKind_aws_ecs_cluster             CloudResourceKind = 7
	CloudResourceKind_aws_ecs_service             CloudResourceKind = 8
	CloudResourceKind_aws_eks_cluster             CloudResourceKind = 9
	CloudResourceKind_aws_iam_role                CloudResourceKind = 10
	CloudResourceKind_aws_lambda                  CloudResourceKind = 11
	CloudResourceKind_aws_rds_cluster             CloudResourceKind = 12
	CloudResourceKind_aws_rds_instance            CloudResourceKind = 13
	CloudResourceKind_aws_route53_zone            CloudResourceKind = 14
	CloudResourceKind_aws_s3_bucket               CloudResourceKind = 15
	CloudResourceKind_aws_secrets_manager         CloudResourceKind = 16
	CloudResourceKind_aws_security_group          CloudResourceKind = 17
	CloudResourceKind_aws_static_website          CloudResourceKind = 18
	CloudResourceKind_aws_vpc                     CloudResourceKind = 19
	CloudResourceKind_azure_aks_cluster           CloudResourceKind = 20
	CloudResourceKind_azure_key_vault             CloudResourceKind = 21
	CloudResourceKind_confluent_kafka             CloudResourceKind = 22
	CloudResourceKind_gcp_artifact_registry_repo  CloudResourceKind = 23
	CloudResourceKind_gcp_cloud_cdn               CloudResourceKind = 24
	CloudResourceKind_gcp_cloud_function          CloudResourceKind = 25
	CloudResourceKind_gcp_cloud_run               CloudResourceKind = 26
	CloudResourceKind_gcp_cloud_sql               CloudResourceKind = 27
	CloudResourceKind_gcp_dns_zone                CloudResourceKind = 28
	CloudResourceKind_gcp_gcs_bucket              CloudResourceKind = 29
	CloudResourceKind_gcp_gke_addon_bundle        CloudResourceKind = 30
	CloudResourceKind_gcp_gke_cluster             CloudResourceKind = 31
	CloudResourceKind_gcp_secrets_manager         CloudResourceKind = 32
	CloudResourceKind_gcp_static_website          CloudResourceKind = 33
	CloudResourceKind_argocd_kubernetes           CloudResourceKind = 34
	CloudResourceKind_cronjob_kubernetes          CloudResourceKind = 35
	CloudResourceKind_elasticsearch_kubernetes    CloudResourceKind = 36
	CloudResourceKind_gitlab_kubernetes           CloudResourceKind = 37
	CloudResourceKind_grafana_kubernetes          CloudResourceKind = 38
	CloudResourceKind_helm_release                CloudResourceKind = 39
	CloudResourceKind_jenkins_kubernetes          CloudResourceKind = 40
	CloudResourceKind_kafka_kubernetes            CloudResourceKind = 41
	CloudResourceKind_keycloak_kubernetes         CloudResourceKind = 42
	CloudResourceKind_kubernetes_http_endpoint    CloudResourceKind = 43
	CloudResourceKind_locust_kubernetes           CloudResourceKind = 44
	CloudResourceKind_microservice_kubernetes     CloudResourceKind = 45
	CloudResourceKind_mongodb_kubernetes          CloudResourceKind = 46
	CloudResourceKind_neo4j_kubernetes            CloudResourceKind = 47
	CloudResourceKind_openfga_kubernetes          CloudResourceKind = 48
	CloudResourceKind_postgres_kubernetes         CloudResourceKind = 49
	CloudResourceKind_prometheus_kubernetes       CloudResourceKind = 50
	CloudResourceKind_redis_kubernetes            CloudResourceKind = 51
	CloudResourceKind_signoz_kubernetes           CloudResourceKind = 52
	CloudResourceKind_solr_kubernetes             CloudResourceKind = 53
	CloudResourceKind_stack_job_runner_kubernetes CloudResourceKind = 54
)

// Enum value maps for CloudResourceKind.
var (
	CloudResourceKind_name = map[int32]string{
		0:  "unspecified",
		1:  "mongodb_atlas",
		2:  "aws_alb",
		3:  "aws_cert_manager_cert",
		4:  "aws_cloudfront",
		5:  "aws_dynamodb",
		6:  "aws_ecr_repo",
		7:  "aws_ecs_cluster",
		8:  "aws_ecs_service",
		9:  "aws_eks_cluster",
		10: "aws_iam_role",
		11: "aws_lambda",
		12: "aws_rds_cluster",
		13: "aws_rds_instance",
		14: "aws_route53_zone",
		15: "aws_s3_bucket",
		16: "aws_secrets_manager",
		17: "aws_security_group",
		18: "aws_static_website",
		19: "aws_vpc",
		20: "azure_aks_cluster",
		21: "azure_key_vault",
		22: "confluent_kafka",
		23: "gcp_artifact_registry_repo",
		24: "gcp_cloud_cdn",
		25: "gcp_cloud_function",
		26: "gcp_cloud_run",
		27: "gcp_cloud_sql",
		28: "gcp_dns_zone",
		29: "gcp_gcs_bucket",
		30: "gcp_gke_addon_bundle",
		31: "gcp_gke_cluster",
		32: "gcp_secrets_manager",
		33: "gcp_static_website",
		34: "argocd_kubernetes",
		35: "cronjob_kubernetes",
		36: "elasticsearch_kubernetes",
		37: "gitlab_kubernetes",
		38: "grafana_kubernetes",
		39: "helm_release",
		40: "jenkins_kubernetes",
		41: "kafka_kubernetes",
		42: "keycloak_kubernetes",
		43: "kubernetes_http_endpoint",
		44: "locust_kubernetes",
		45: "microservice_kubernetes",
		46: "mongodb_kubernetes",
		47: "neo4j_kubernetes",
		48: "openfga_kubernetes",
		49: "postgres_kubernetes",
		50: "prometheus_kubernetes",
		51: "redis_kubernetes",
		52: "signoz_kubernetes",
		53: "solr_kubernetes",
		54: "stack_job_runner_kubernetes",
	}
	CloudResourceKind_value = map[string]int32{
		"unspecified":                 0,
		"mongodb_atlas":               1,
		"aws_alb":                     2,
		"aws_cert_manager_cert":       3,
		"aws_cloudfront":              4,
		"aws_dynamodb":                5,
		"aws_ecr_repo":                6,
		"aws_ecs_cluster":             7,
		"aws_ecs_service":             8,
		"aws_eks_cluster":             9,
		"aws_iam_role":                10,
		"aws_lambda":                  11,
		"aws_rds_cluster":             12,
		"aws_rds_instance":            13,
		"aws_route53_zone":            14,
		"aws_s3_bucket":               15,
		"aws_secrets_manager":         16,
		"aws_security_group":          17,
		"aws_static_website":          18,
		"aws_vpc":                     19,
		"azure_aks_cluster":           20,
		"azure_key_vault":             21,
		"confluent_kafka":             22,
		"gcp_artifact_registry_repo":  23,
		"gcp_cloud_cdn":               24,
		"gcp_cloud_function":          25,
		"gcp_cloud_run":               26,
		"gcp_cloud_sql":               27,
		"gcp_dns_zone":                28,
		"gcp_gcs_bucket":              29,
		"gcp_gke_addon_bundle":        30,
		"gcp_gke_cluster":             31,
		"gcp_secrets_manager":         32,
		"gcp_static_website":          33,
		"argocd_kubernetes":           34,
		"cronjob_kubernetes":          35,
		"elasticsearch_kubernetes":    36,
		"gitlab_kubernetes":           37,
		"grafana_kubernetes":          38,
		"helm_release":                39,
		"jenkins_kubernetes":          40,
		"kafka_kubernetes":            41,
		"keycloak_kubernetes":         42,
		"kubernetes_http_endpoint":    43,
		"locust_kubernetes":           44,
		"microservice_kubernetes":     45,
		"mongodb_kubernetes":          46,
		"neo4j_kubernetes":            47,
		"openfga_kubernetes":          48,
		"postgres_kubernetes":         49,
		"prometheus_kubernetes":       50,
		"redis_kubernetes":            51,
		"signoz_kubernetes":           52,
		"solr_kubernetes":             53,
		"stack_job_runner_kubernetes": 54,
	}
)

func (x CloudResourceKind) Enum() *CloudResourceKind {
	p := new(CloudResourceKind)
	*p = x
	return p
}

func (x CloudResourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudResourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes[0].Descriptor()
}

func (CloudResourceKind) Type() protoreflect.EnumType {
	return &file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes[0]
}

func (x CloudResourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudResourceKind.Descriptor instead.
func (CloudResourceKind) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescGZIP(), []int{0}
}

var File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto protoreflect.FileDescriptor

var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc = []byte{
	0x0a, 0x42, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2a, 0xde,
	0x09, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62,
	0x5f, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x5f,
	0x61, 0x6c, 0x62, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x77, 0x73, 0x5f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x64, 0x62, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63,
	0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x61, 0x77, 0x73, 0x5f,
	0x65, 0x63, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x07, 0x12, 0x13, 0x0a,
	0x0f, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x6b, 0x73, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x61, 0x77, 0x73, 0x5f, 0x69,
	0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x61, 0x77, 0x73,
	0x5f, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x61, 0x77, 0x73,
	0x5f, 0x72, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x0c, 0x12, 0x14,
	0x0a, 0x10, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x35, 0x33, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x61, 0x77,
	0x73, 0x5f, 0x73, 0x33, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x0f, 0x12, 0x17, 0x0a,
	0x13, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x11, 0x12, 0x16,
	0x0a, 0x12, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x10, 0x12, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x5f, 0x76, 0x70,
	0x63, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x5f, 0x61, 0x6b, 0x73,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x15, 0x12,
	0x13, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x61, 0x66,
	0x6b, 0x61, 0x10, 0x16, 0x12, 0x1e, 0x0a, 0x1a, 0x67, 0x63, 0x70, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x10, 0x17, 0x12, 0x11, 0x0a, 0x0d, 0x67, 0x63, 0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x63, 0x64, 0x6e, 0x10, 0x18, 0x12, 0x16, 0x0a, 0x12, 0x67, 0x63, 0x70, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x19, 0x12,
	0x11, 0x0a, 0x0d, 0x67, 0x63, 0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x72, 0x75, 0x6e,
	0x10, 0x1a, 0x12, 0x11, 0x0a, 0x0d, 0x67, 0x63, 0x70, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x73, 0x71, 0x6c, 0x10, 0x1b, 0x12, 0x10, 0x0a, 0x0c, 0x67, 0x63, 0x70, 0x5f, 0x64, 0x6e, 0x73,
	0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x10, 0x1c, 0x12, 0x12, 0x0a, 0x0e, 0x67, 0x63, 0x70, 0x5f, 0x67,
	0x63, 0x73, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x10, 0x1d, 0x12, 0x18, 0x0a, 0x14, 0x67,
	0x63, 0x70, 0x5f, 0x67, 0x6b, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x5f, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f, 0x67, 0x63, 0x70, 0x5f, 0x67, 0x6b, 0x65,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x10, 0x1f, 0x12, 0x17, 0x0a, 0x13, 0x67, 0x63,
	0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x10, 0x20, 0x12, 0x16, 0x0a, 0x12, 0x67, 0x63, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x10, 0x21, 0x12, 0x15, 0x0a, 0x11, 0x61,
	0x72, 0x67, 0x6f, 0x63, 0x64, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x10, 0x22, 0x12, 0x16, 0x0a, 0x12, 0x63, 0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x5f, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x23, 0x12, 0x1c, 0x0a, 0x18, 0x65, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x24, 0x12, 0x15, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x25, 0x12,
	0x16, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x66, 0x61, 0x6e, 0x61, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x26, 0x12, 0x10, 0x0a, 0x0c, 0x68, 0x65, 0x6c, 0x6d, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x10, 0x27, 0x12, 0x16, 0x0a, 0x12, 0x6a, 0x65, 0x6e,
	0x6b, 0x69, 0x6e, 0x73, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10,
	0x28, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x29, 0x12, 0x17, 0x0a, 0x13, 0x6b, 0x65, 0x79, 0x63, 0x6c,
	0x6f, 0x61, 0x6b, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x2a,
	0x12, 0x1c, 0x0a, 0x18, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x10, 0x2b, 0x12, 0x15,
	0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x75, 0x73, 0x74, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x10, 0x2c, 0x12, 0x1b, 0x0a, 0x17, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x10, 0x2d, 0x12, 0x16, 0x0a, 0x12, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x2e, 0x12, 0x14, 0x0a, 0x10, 0x6e, 0x65,
	0x6f, 0x34, 0x6a, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x2f,
	0x12, 0x16, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x66, 0x67, 0x61, 0x5f, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x30, 0x12, 0x17, 0x0a, 0x13, 0x70, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10,
	0x31, 0x12, 0x19, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x5f,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x32, 0x12, 0x14, 0x0a, 0x10,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x10, 0x33, 0x12, 0x15, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x6f, 0x7a, 0x5f, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x34, 0x12, 0x13, 0x0a, 0x0f, 0x73, 0x6f, 0x6c,
	0x72, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x35, 0x12, 0x1f,
	0x0a, 0x1b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x10, 0x36, 0x42,
	0xe4, 0x02, 0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64,
	0x42, 0x16, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x58, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x6b, 0x69, 0x6e, 0x64, 0xa2, 0x02, 0x04, 0x50, 0x50, 0x53, 0x43, 0xaa, 0x02, 0x28, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0xca, 0x02, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e,
	0x64, 0xe2, 0x02, 0x34, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2b, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x3a, 0x3a, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescOnce sync.Once
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData = file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc
)

func file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescGZIP() []byte {
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData)
	})
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData
}

var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes = []any{
	(CloudResourceKind)(0), // 0: project.planton.shared.cloudresourcekind.CloudResourceKind
}
var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_init() }
func file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_init() {
	if File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs,
		EnumInfos:         file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes,
	}.Build()
	File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto = out.File
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc = nil
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes = nil
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs = nil
}
