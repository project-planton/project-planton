// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/shared/cloudresourcekind/cloud_resource_kind.proto

package cloudresourcekind

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CloudResourceKind int32

const (
	// 0: Default/unspecified
	CloudResourceKind_unspecified CloudResourceKind = 0
	// 1–49: Test/dev/custom
	CloudResourceKind_first_test_cloud_api_resource  CloudResourceKind = 1
	CloudResourceKind_second_test_cloud_api_resource CloudResourceKind = 2
	CloudResourceKind_third_test_cloud_api_resource  CloudResourceKind = 3
	// 50–199: saas platform resources
	CloudResourceKind_mongodb_atlas CloudResourceKind = 50
	// 200–399: AWS resources
	CloudResourceKind_aws_alb               CloudResourceKind = 200
	CloudResourceKind_aws_cert_manager_cert CloudResourceKind = 201
	CloudResourceKind_aws_cloudfront        CloudResourceKind = 202
	CloudResourceKind_aws_dynamodb          CloudResourceKind = 203
	CloudResourceKind_aws_ecr_repo          CloudResourceKind = 204
	CloudResourceKind_aws_ecs_cluster       CloudResourceKind = 205
	CloudResourceKind_aws_ecs_service       CloudResourceKind = 206
	CloudResourceKind_aws_eks_cluster       CloudResourceKind = 207
	CloudResourceKind_aws_iam_role          CloudResourceKind = 208
	CloudResourceKind_aws_lambda            CloudResourceKind = 209
	CloudResourceKind_aws_rds_cluster       CloudResourceKind = 210
	CloudResourceKind_aws_rds_instance      CloudResourceKind = 211
	CloudResourceKind_aws_route53_zone      CloudResourceKind = 212
	CloudResourceKind_aws_s3_bucket         CloudResourceKind = 213
	CloudResourceKind_aws_secrets_manager   CloudResourceKind = 214
	CloudResourceKind_aws_security_group    CloudResourceKind = 215
	CloudResourceKind_aws_static_website    CloudResourceKind = 216
	CloudResourceKind_aws_vpc               CloudResourceKind = 217
	// 400–599: Azure resources
	CloudResourceKind_azure_aks_cluster CloudResourceKind = 400
	CloudResourceKind_azure_key_vault   CloudResourceKind = 401
	// 600–799: GCP resources
	CloudResourceKind_gcp_artifact_registry_repo CloudResourceKind = 600
	CloudResourceKind_gcp_cloud_cdn              CloudResourceKind = 601
	CloudResourceKind_gcp_cloud_function         CloudResourceKind = 602
	CloudResourceKind_gcp_cloud_run              CloudResourceKind = 603
	CloudResourceKind_gcp_cloud_sql              CloudResourceKind = 604
	CloudResourceKind_gcp_dns_zone               CloudResourceKind = 605
	CloudResourceKind_gcp_gcs_bucket             CloudResourceKind = 606
	CloudResourceKind_gcp_gke_addon_bundle       CloudResourceKind = 607
	CloudResourceKind_gcp_gke_cluster            CloudResourceKind = 608
	CloudResourceKind_gcp_secrets_manager        CloudResourceKind = 609
	CloudResourceKind_gcp_static_website         CloudResourceKind = 610
	// 800–999: Kubernetes resources
	CloudResourceKind_argocd_kubernetes           CloudResourceKind = 800
	CloudResourceKind_cronjob_kubernetes          CloudResourceKind = 801
	CloudResourceKind_elasticsearch_kubernetes    CloudResourceKind = 802
	CloudResourceKind_gitlab_kubernetes           CloudResourceKind = 803
	CloudResourceKind_grafana_kubernetes          CloudResourceKind = 804
	CloudResourceKind_helm_release                CloudResourceKind = 805
	CloudResourceKind_jenkins_kubernetes          CloudResourceKind = 806
	CloudResourceKind_kafka_kubernetes            CloudResourceKind = 807
	CloudResourceKind_keycloak_kubernetes         CloudResourceKind = 808
	CloudResourceKind_kubernetes_http_endpoint    CloudResourceKind = 809
	CloudResourceKind_locust_kubernetes           CloudResourceKind = 810
	CloudResourceKind_microservice_kubernetes     CloudResourceKind = 811
	CloudResourceKind_mongodb_kubernetes          CloudResourceKind = 812
	CloudResourceKind_neo4j_kubernetes            CloudResourceKind = 813
	CloudResourceKind_openfga_kubernetes          CloudResourceKind = 814
	CloudResourceKind_postgres_kubernetes         CloudResourceKind = 815
	CloudResourceKind_prometheus_kubernetes       CloudResourceKind = 816
	CloudResourceKind_redis_kubernetes            CloudResourceKind = 817
	CloudResourceKind_signoz_kubernetes           CloudResourceKind = 818
	CloudResourceKind_solr_kubernetes             CloudResourceKind = 819
	CloudResourceKind_stack_job_runner_kubernetes CloudResourceKind = 820
)

// Enum value maps for CloudResourceKind.
var (
	CloudResourceKind_name = map[int32]string{
		0:   "unspecified",
		1:   "first_test_cloud_api_resource",
		2:   "second_test_cloud_api_resource",
		3:   "third_test_cloud_api_resource",
		50:  "mongodb_atlas",
		200: "aws_alb",
		201: "aws_cert_manager_cert",
		202: "aws_cloudfront",
		203: "aws_dynamodb",
		204: "aws_ecr_repo",
		205: "aws_ecs_cluster",
		206: "aws_ecs_service",
		207: "aws_eks_cluster",
		208: "aws_iam_role",
		209: "aws_lambda",
		210: "aws_rds_cluster",
		211: "aws_rds_instance",
		212: "aws_route53_zone",
		213: "aws_s3_bucket",
		214: "aws_secrets_manager",
		215: "aws_security_group",
		216: "aws_static_website",
		217: "aws_vpc",
		400: "azure_aks_cluster",
		401: "azure_key_vault",
		600: "gcp_artifact_registry_repo",
		601: "gcp_cloud_cdn",
		602: "gcp_cloud_function",
		603: "gcp_cloud_run",
		604: "gcp_cloud_sql",
		605: "gcp_dns_zone",
		606: "gcp_gcs_bucket",
		607: "gcp_gke_addon_bundle",
		608: "gcp_gke_cluster",
		609: "gcp_secrets_manager",
		610: "gcp_static_website",
		800: "argocd_kubernetes",
		801: "cronjob_kubernetes",
		802: "elasticsearch_kubernetes",
		803: "gitlab_kubernetes",
		804: "grafana_kubernetes",
		805: "helm_release",
		806: "jenkins_kubernetes",
		807: "kafka_kubernetes",
		808: "keycloak_kubernetes",
		809: "kubernetes_http_endpoint",
		810: "locust_kubernetes",
		811: "microservice_kubernetes",
		812: "mongodb_kubernetes",
		813: "neo4j_kubernetes",
		814: "openfga_kubernetes",
		815: "postgres_kubernetes",
		816: "prometheus_kubernetes",
		817: "redis_kubernetes",
		818: "signoz_kubernetes",
		819: "solr_kubernetes",
		820: "stack_job_runner_kubernetes",
	}
	CloudResourceKind_value = map[string]int32{
		"unspecified":                    0,
		"first_test_cloud_api_resource":  1,
		"second_test_cloud_api_resource": 2,
		"third_test_cloud_api_resource":  3,
		"mongodb_atlas":                  50,
		"aws_alb":                        200,
		"aws_cert_manager_cert":          201,
		"aws_cloudfront":                 202,
		"aws_dynamodb":                   203,
		"aws_ecr_repo":                   204,
		"aws_ecs_cluster":                205,
		"aws_ecs_service":                206,
		"aws_eks_cluster":                207,
		"aws_iam_role":                   208,
		"aws_lambda":                     209,
		"aws_rds_cluster":                210,
		"aws_rds_instance":               211,
		"aws_route53_zone":               212,
		"aws_s3_bucket":                  213,
		"aws_secrets_manager":            214,
		"aws_security_group":             215,
		"aws_static_website":             216,
		"aws_vpc":                        217,
		"azure_aks_cluster":              400,
		"azure_key_vault":                401,
		"gcp_artifact_registry_repo":     600,
		"gcp_cloud_cdn":                  601,
		"gcp_cloud_function":             602,
		"gcp_cloud_run":                  603,
		"gcp_cloud_sql":                  604,
		"gcp_dns_zone":                   605,
		"gcp_gcs_bucket":                 606,
		"gcp_gke_addon_bundle":           607,
		"gcp_gke_cluster":                608,
		"gcp_secrets_manager":            609,
		"gcp_static_website":             610,
		"argocd_kubernetes":              800,
		"cronjob_kubernetes":             801,
		"elasticsearch_kubernetes":       802,
		"gitlab_kubernetes":              803,
		"grafana_kubernetes":             804,
		"helm_release":                   805,
		"jenkins_kubernetes":             806,
		"kafka_kubernetes":               807,
		"keycloak_kubernetes":            808,
		"kubernetes_http_endpoint":       809,
		"locust_kubernetes":              810,
		"microservice_kubernetes":        811,
		"mongodb_kubernetes":             812,
		"neo4j_kubernetes":               813,
		"openfga_kubernetes":             814,
		"postgres_kubernetes":            815,
		"prometheus_kubernetes":          816,
		"redis_kubernetes":               817,
		"signoz_kubernetes":              818,
		"solr_kubernetes":                819,
		"stack_job_runner_kubernetes":    820,
	}
)

func (x CloudResourceKind) Enum() *CloudResourceKind {
	p := new(CloudResourceKind)
	*p = x
	return p
}

func (x CloudResourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudResourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes[0].Descriptor()
}

func (CloudResourceKind) Type() protoreflect.EnumType {
	return &file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes[0]
}

func (x CloudResourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudResourceKind.Descriptor instead.
func (CloudResourceKind) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescGZIP(), []int{0}
}

var File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto protoreflect.FileDescriptor

const file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc = "" +
	"\n" +
	"Bproject/planton/shared/cloudresourcekind/cloud_resource_kind.proto\x12(project.planton.shared.cloudresourcekind*\xe7\n" +
	"\n" +
	"\x11CloudResourceKind\x12\x0f\n" +
	"\vunspecified\x10\x00\x12!\n" +
	"\x1dfirst_test_cloud_api_resource\x10\x01\x12\"\n" +
	"\x1esecond_test_cloud_api_resource\x10\x02\x12!\n" +
	"\x1dthird_test_cloud_api_resource\x10\x03\x12\x11\n" +
	"\rmongodb_atlas\x102\x12\f\n" +
	"\aaws_alb\x10\xc8\x01\x12\x1a\n" +
	"\x15aws_cert_manager_cert\x10\xc9\x01\x12\x13\n" +
	"\x0eaws_cloudfront\x10\xca\x01\x12\x11\n" +
	"\faws_dynamodb\x10\xcb\x01\x12\x11\n" +
	"\faws_ecr_repo\x10\xcc\x01\x12\x14\n" +
	"\x0faws_ecs_cluster\x10\xcd\x01\x12\x14\n" +
	"\x0faws_ecs_service\x10\xce\x01\x12\x14\n" +
	"\x0faws_eks_cluster\x10\xcf\x01\x12\x11\n" +
	"\faws_iam_role\x10\xd0\x01\x12\x0f\n" +
	"\n" +
	"aws_lambda\x10\xd1\x01\x12\x14\n" +
	"\x0faws_rds_cluster\x10\xd2\x01\x12\x15\n" +
	"\x10aws_rds_instance\x10\xd3\x01\x12\x15\n" +
	"\x10aws_route53_zone\x10\xd4\x01\x12\x12\n" +
	"\raws_s3_bucket\x10\xd5\x01\x12\x18\n" +
	"\x13aws_secrets_manager\x10\xd6\x01\x12\x17\n" +
	"\x12aws_security_group\x10\xd7\x01\x12\x17\n" +
	"\x12aws_static_website\x10\xd8\x01\x12\f\n" +
	"\aaws_vpc\x10\xd9\x01\x12\x16\n" +
	"\x11azure_aks_cluster\x10\x90\x03\x12\x14\n" +
	"\x0fazure_key_vault\x10\x91\x03\x12\x1f\n" +
	"\x1agcp_artifact_registry_repo\x10\xd8\x04\x12\x12\n" +
	"\rgcp_cloud_cdn\x10\xd9\x04\x12\x17\n" +
	"\x12gcp_cloud_function\x10\xda\x04\x12\x12\n" +
	"\rgcp_cloud_run\x10\xdb\x04\x12\x12\n" +
	"\rgcp_cloud_sql\x10\xdc\x04\x12\x11\n" +
	"\fgcp_dns_zone\x10\xdd\x04\x12\x13\n" +
	"\x0egcp_gcs_bucket\x10\xde\x04\x12\x19\n" +
	"\x14gcp_gke_addon_bundle\x10\xdf\x04\x12\x14\n" +
	"\x0fgcp_gke_cluster\x10\xe0\x04\x12\x18\n" +
	"\x13gcp_secrets_manager\x10\xe1\x04\x12\x17\n" +
	"\x12gcp_static_website\x10\xe2\x04\x12\x16\n" +
	"\x11argocd_kubernetes\x10\xa0\x06\x12\x17\n" +
	"\x12cronjob_kubernetes\x10\xa1\x06\x12\x1d\n" +
	"\x18elasticsearch_kubernetes\x10\xa2\x06\x12\x16\n" +
	"\x11gitlab_kubernetes\x10\xa3\x06\x12\x17\n" +
	"\x12grafana_kubernetes\x10\xa4\x06\x12\x11\n" +
	"\fhelm_release\x10\xa5\x06\x12\x17\n" +
	"\x12jenkins_kubernetes\x10\xa6\x06\x12\x15\n" +
	"\x10kafka_kubernetes\x10\xa7\x06\x12\x18\n" +
	"\x13keycloak_kubernetes\x10\xa8\x06\x12\x1d\n" +
	"\x18kubernetes_http_endpoint\x10\xa9\x06\x12\x16\n" +
	"\x11locust_kubernetes\x10\xaa\x06\x12\x1c\n" +
	"\x17microservice_kubernetes\x10\xab\x06\x12\x17\n" +
	"\x12mongodb_kubernetes\x10\xac\x06\x12\x15\n" +
	"\x10neo4j_kubernetes\x10\xad\x06\x12\x17\n" +
	"\x12openfga_kubernetes\x10\xae\x06\x12\x18\n" +
	"\x13postgres_kubernetes\x10\xaf\x06\x12\x1a\n" +
	"\x15prometheus_kubernetes\x10\xb0\x06\x12\x15\n" +
	"\x10redis_kubernetes\x10\xb1\x06\x12\x16\n" +
	"\x11signoz_kubernetes\x10\xb2\x06\x12\x14\n" +
	"\x0fsolr_kubernetes\x10\xb3\x06\x12 \n" +
	"\x1bstack_job_runner_kubernetes\x10\xb4\x06B\xe4\x02\n" +
	",com.project.planton.shared.cloudresourcekindB\x16CloudResourceKindProtoP\x01ZXgithub.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind\xa2\x02\x04PPSC\xaa\x02(Project.Planton.Shared.Cloudresourcekind\xca\x02(Project\\Planton\\Shared\\Cloudresourcekind\xe2\x024Project\\Planton\\Shared\\Cloudresourcekind\\GPBMetadata\xea\x02+Project::Planton::Shared::Cloudresourcekindb\x06proto3"

var (
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescOnce sync.Once
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData []byte
)

func file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescGZIP() []byte {
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc), len(file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc)))
	})
	return file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDescData
}

var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes = []any{
	(CloudResourceKind)(0), // 0: project.planton.shared.cloudresourcekind.CloudResourceKind
}
var file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_init() }
func file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_init() {
	if File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc), len(file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs,
		EnumInfos:         file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_enumTypes,
	}.Build()
	File_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto = out.File
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_goTypes = nil
	file_project_planton_shared_cloudresourcekind_cloud_resource_kind_proto_depIdxs = nil
}
