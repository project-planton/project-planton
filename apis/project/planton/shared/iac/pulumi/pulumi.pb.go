// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/shared/iac/pulumi/pulumi.proto

package pulumi

import (
	v1 "github.com/project-planton/project-planton/apis/project/planton/credential/pulumibackendcredential/v1"
	iacgitrepo "github.com/project-planton/project-planton/apis/project/planton/shared/iac/iacgitrepo"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// pulumi stack info
type PulumiStackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pulumi stack operations
	Operations []*PulumiStackOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	// pulumi backend
	Backend *v1.PulumiBackendCredentialSpec `protobuf:"bytes,2,opt,name=backend,proto3" json:"backend,omitempty"`
	// pulumi project
	Project *PulumiProject `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	// pulumi stack name
	StackName string `protobuf:"bytes,4,opt,name=stack_name,json=stackName,proto3" json:"stack_name,omitempty"`
	// iac-module git-repo
	GitRepo *iacgitrepo.IacGitRepo `protobuf:"bytes,5,opt,name=git_repo,json=gitRepo,proto3" json:"git_repo,omitempty"`
}

func (x *PulumiStackInfo) Reset() {
	*x = PulumiStackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiStackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiStackInfo) ProtoMessage() {}

func (x *PulumiStackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiStackInfo.ProtoReflect.Descriptor instead.
func (*PulumiStackInfo) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescGZIP(), []int{0}
}

func (x *PulumiStackInfo) GetOperations() []*PulumiStackOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *PulumiStackInfo) GetBackend() *v1.PulumiBackendCredentialSpec {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *PulumiStackInfo) GetProject() *PulumiProject {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *PulumiStackInfo) GetStackName() string {
	if x != nil {
		return x.StackName
	}
	return ""
}

func (x *PulumiStackInfo) GetGitRepo() *iacgitrepo.IacGitRepo {
	if x != nil {
		return x.GitRepo
	}
	return nil
}

// pulumi stack operation
type PulumiStackOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pulumi operation
	Operation PulumiOperationType `protobuf:"varint,1,opt,name=operation,proto3,enum=project.planton.shared.iac.pulumi.PulumiOperationType" json:"operation,omitempty"`
	// run preview of pulumi operation
	Preview bool `protobuf:"varint,2,opt,name=preview,proto3" json:"preview,omitempty"`
}

func (x *PulumiStackOperation) Reset() {
	*x = PulumiStackOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiStackOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiStackOperation) ProtoMessage() {}

func (x *PulumiStackOperation) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiStackOperation.ProtoReflect.Descriptor instead.
func (*PulumiStackOperation) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescGZIP(), []int{1}
}

func (x *PulumiStackOperation) GetOperation() PulumiOperationType {
	if x != nil {
		return x.Operation
	}
	return PulumiOperationType_pulumi_operation_type_unspecified
}

func (x *PulumiStackOperation) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

// pulumi project
// information required to setup pulumi project https://www.pulumi.com/docs/concepts/projects/project-file/#attributes
type PulumiProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the pulumi project to be used for setting name attribute in Pulumi.yaml
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// name of the pulumi project to be used for setting runtime attribute in Pulumi.yaml
	Runtime PulumiProjectRuntime `protobuf:"varint,2,opt,name=runtime,proto3,enum=project.planton.shared.iac.pulumi.PulumiProjectRuntime" json:"runtime,omitempty"`
}

func (x *PulumiProject) Reset() {
	*x = PulumiProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PulumiProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulumiProject) ProtoMessage() {}

func (x *PulumiProject) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulumiProject.ProtoReflect.Descriptor instead.
func (*PulumiProject) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescGZIP(), []int{2}
}

func (x *PulumiProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PulumiProject) GetRuntime() PulumiProjectRuntime {
	if x != nil {
		return x.Runtime
	}
	return PulumiProjectRuntime_pulumi_project_runtime_unspecified
}

var File_project_planton_shared_iac_pulumi_pulumi_proto protoreflect.FileDescriptor

var file_project_planton_shared_iac_pulumi_pulumi_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x70, 0x75, 0x6c,
	0x75, 0x6d, 0x69, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x70, 0x75, 0x6c,
	0x75, 0x6d, 0x69, 0x1a, 0x40, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61,
	0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f,
	0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x69, 0x61,
	0x63, 0x2f, 0x69, 0x61, 0x63, 0x67, 0x69, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x69, 0x61, 0x63,
	0x5f, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x70, 0x75, 0x6c, 0x75,
	0x6d, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91,
	0x03, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x57, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x69, 0x61, 0x63, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d,
	0x69, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x6c, 0x0a, 0x07, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2e, 0x50,
	0x75, 0x6c, 0x75, 0x6d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x69, 0x61, 0x63, 0x2e, 0x69, 0x61, 0x63, 0x67, 0x69, 0x74, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x49,
	0x61, 0x63, 0x47, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x07, 0x67, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x70, 0x75, 0x6c, 0x75,
	0x6d, 0x69, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x22, 0x76, 0x0a, 0x0d, 0x50,
	0x75, 0x6c, 0x75, 0x6d, 0x69, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x51, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e,
	0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x70,
	0x75, 0x6c, 0x75, 0x6d, 0x69, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x42, 0xb1, 0x02, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x69, 0x61, 0x63, 0x2e, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x42, 0x0b, 0x50,
	0x75, 0x6c, 0x75, 0x6d, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2f, 0x69, 0x61, 0x63, 0x2f, 0x70, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0xa2,
	0x02, 0x05, 0x50, 0x50, 0x53, 0x49, 0x50, 0xaa, 0x02, 0x21, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x49, 0x61, 0x63, 0x2e, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0xca, 0x02, 0x21, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5c, 0x49, 0x61, 0x63, 0x5c, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0xe2,
	0x02, 0x2d, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x5c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x49, 0x61, 0x63, 0x5c, 0x50, 0x75, 0x6c,
	0x75, 0x6d, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x25, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x3a, 0x3a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x3a, 0x3a, 0x49, 0x61, 0x63, 0x3a,
	0x3a, 0x50, 0x75, 0x6c, 0x75, 0x6d, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescOnce sync.Once
	file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescData = file_project_planton_shared_iac_pulumi_pulumi_proto_rawDesc
)

func file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescGZIP() []byte {
	file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescData)
	})
	return file_project_planton_shared_iac_pulumi_pulumi_proto_rawDescData
}

var file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_planton_shared_iac_pulumi_pulumi_proto_goTypes = []any{
	(*PulumiStackInfo)(nil),                // 0: project.planton.shared.iac.pulumi.PulumiStackInfo
	(*PulumiStackOperation)(nil),           // 1: project.planton.shared.iac.pulumi.PulumiStackOperation
	(*PulumiProject)(nil),                  // 2: project.planton.shared.iac.pulumi.PulumiProject
	(*v1.PulumiBackendCredentialSpec)(nil), // 3: project.planton.credential.pulumibackendcredential.v1.PulumiBackendCredentialSpec
	(*iacgitrepo.IacGitRepo)(nil),          // 4: project.planton.shared.iac.iacgitrepo.IacGitRepo
	(PulumiOperationType)(0),               // 5: project.planton.shared.iac.pulumi.PulumiOperationType
	(PulumiProjectRuntime)(0),              // 6: project.planton.shared.iac.pulumi.PulumiProjectRuntime
}
var file_project_planton_shared_iac_pulumi_pulumi_proto_depIdxs = []int32{
	1, // 0: project.planton.shared.iac.pulumi.PulumiStackInfo.operations:type_name -> project.planton.shared.iac.pulumi.PulumiStackOperation
	3, // 1: project.planton.shared.iac.pulumi.PulumiStackInfo.backend:type_name -> project.planton.credential.pulumibackendcredential.v1.PulumiBackendCredentialSpec
	2, // 2: project.planton.shared.iac.pulumi.PulumiStackInfo.project:type_name -> project.planton.shared.iac.pulumi.PulumiProject
	4, // 3: project.planton.shared.iac.pulumi.PulumiStackInfo.git_repo:type_name -> project.planton.shared.iac.iacgitrepo.IacGitRepo
	5, // 4: project.planton.shared.iac.pulumi.PulumiStackOperation.operation:type_name -> project.planton.shared.iac.pulumi.PulumiOperationType
	6, // 5: project.planton.shared.iac.pulumi.PulumiProject.runtime:type_name -> project.planton.shared.iac.pulumi.PulumiProjectRuntime
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_project_planton_shared_iac_pulumi_pulumi_proto_init() }
func file_project_planton_shared_iac_pulumi_pulumi_proto_init() {
	if File_project_planton_shared_iac_pulumi_pulumi_proto != nil {
		return
	}
	file_project_planton_shared_iac_pulumi_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PulumiStackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PulumiStackOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PulumiProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_shared_iac_pulumi_pulumi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_iac_pulumi_pulumi_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_iac_pulumi_pulumi_proto_depIdxs,
		MessageInfos:      file_project_planton_shared_iac_pulumi_pulumi_proto_msgTypes,
	}.Build()
	File_project_planton_shared_iac_pulumi_pulumi_proto = out.File
	file_project_planton_shared_iac_pulumi_pulumi_proto_rawDesc = nil
	file_project_planton_shared_iac_pulumi_pulumi_proto_goTypes = nil
	file_project_planton_shared_iac_pulumi_pulumi_proto_depIdxs = nil
}
