// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: project/planton/shared/gcp/gcp.proto

package gcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// google service account
type GoogleServiceAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// service-account email
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// base64 encoded key of the service account
	KeyBase64     string `protobuf:"bytes,2,opt,name=key_base64,json=keyBase64,proto3" json:"key_base64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoogleServiceAccount) Reset() {
	*x = GoogleServiceAccount{}
	mi := &file_project_planton_shared_gcp_gcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleServiceAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleServiceAccount) ProtoMessage() {}

func (x *GoogleServiceAccount) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_gcp_gcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleServiceAccount.ProtoReflect.Descriptor instead.
func (*GoogleServiceAccount) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_gcp_gcp_proto_rawDescGZIP(), []int{0}
}

func (x *GoogleServiceAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GoogleServiceAccount) GetKeyBase64() string {
	if x != nil {
		return x.KeyBase64
	}
	return ""
}

var File_project_planton_shared_gcp_gcp_proto protoreflect.FileDescriptor

const file_project_planton_shared_gcp_gcp_proto_rawDesc = "" +
	"\n" +
	"$project/planton/shared/gcp/gcp.proto\x12\x1aproject.planton.shared.gcp\"K\n" +
	"\x14GoogleServiceAccount\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"key_base64\x18\x02 \x01(\tR\tkeyBase64B\x82\x02\n" +
	"\x1ecom.project.planton.shared.gcpB\bGcpProtoP\x01ZJgithub.com/project-planton/project-planton/apis/project/planton/shared/gcp\xa2\x02\x04PPSG\xaa\x02\x1aProject.Planton.Shared.Gcp\xca\x02\x1aProject\\Planton\\Shared\\Gcp\xe2\x02&Project\\Planton\\Shared\\Gcp\\GPBMetadata\xea\x02\x1dProject::Planton::Shared::Gcpb\x06proto3"

var (
	file_project_planton_shared_gcp_gcp_proto_rawDescOnce sync.Once
	file_project_planton_shared_gcp_gcp_proto_rawDescData []byte
)

func file_project_planton_shared_gcp_gcp_proto_rawDescGZIP() []byte {
	file_project_planton_shared_gcp_gcp_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_gcp_gcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_project_planton_shared_gcp_gcp_proto_rawDesc), len(file_project_planton_shared_gcp_gcp_proto_rawDesc)))
	})
	return file_project_planton_shared_gcp_gcp_proto_rawDescData
}

var file_project_planton_shared_gcp_gcp_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_project_planton_shared_gcp_gcp_proto_goTypes = []any{
	(*GoogleServiceAccount)(nil), // 0: project.planton.shared.gcp.GoogleServiceAccount
}
var file_project_planton_shared_gcp_gcp_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_shared_gcp_gcp_proto_init() }
func file_project_planton_shared_gcp_gcp_proto_init() {
	if File_project_planton_shared_gcp_gcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_project_planton_shared_gcp_gcp_proto_rawDesc), len(file_project_planton_shared_gcp_gcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_gcp_gcp_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_gcp_gcp_proto_depIdxs,
		MessageInfos:      file_project_planton_shared_gcp_gcp_proto_msgTypes,
	}.Build()
	File_project_planton_shared_gcp_gcp_proto = out.File
	file_project_planton_shared_gcp_gcp_proto_goTypes = nil
	file_project_planton_shared_gcp_gcp_proto_depIdxs = nil
}
