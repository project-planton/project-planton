// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/shared/tofu/enums.proto

package tofu

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// tofu operation type
// the recommended best practice to prefix the entry with enum name has been intentionally ignored
// to allow users to specify a user-friendly name in the input.
type TofuOperationType int32

const (
	TofuOperationType_tofu_operation_type_unspecified TofuOperationType = 0
	TofuOperationType_init                            TofuOperationType = 1
	TofuOperationType_refresh                         TofuOperationType = 2
	TofuOperationType_plan                            TofuOperationType = 3
	TofuOperationType_apply                           TofuOperationType = 4
	TofuOperationType_destroy                         TofuOperationType = 5
)

// Enum value maps for TofuOperationType.
var (
	TofuOperationType_name = map[int32]string{
		0: "tofu_operation_type_unspecified",
		1: "init",
		2: "refresh",
		3: "plan",
		4: "apply",
		5: "destroy",
	}
	TofuOperationType_value = map[string]int32{
		"tofu_operation_type_unspecified": 0,
		"init":                            1,
		"refresh":                         2,
		"plan":                            3,
		"apply":                           4,
		"destroy":                         5,
	}
)

func (x TofuOperationType) Enum() *TofuOperationType {
	p := new(TofuOperationType)
	*p = x
	return p
}

func (x TofuOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TofuOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_shared_tofu_enums_proto_enumTypes[0].Descriptor()
}

func (TofuOperationType) Type() protoreflect.EnumType {
	return &file_project_planton_shared_tofu_enums_proto_enumTypes[0]
}

func (x TofuOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TofuOperationType.Descriptor instead.
func (TofuOperationType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_shared_tofu_enums_proto_rawDescGZIP(), []int{0}
}

type TofuBackendType int32

const (
	// Unspecified or unknown backend type.
	TofuBackendType_tofu_backend_type_unspecified TofuBackendType = 0
	// Local filesystem backend (the default if none is configured).
	TofuBackendType_local TofuBackendType = 1
	// Amazon S3-based backend for remote state storage.
	TofuBackendType_s3 TofuBackendType = 2
	// Terraform Cloud or Terraform Enterprise remote backend.
	TofuBackendType_remote TofuBackendType = 3
	// Google Cloud Storage backend for storing state.
	TofuBackendType_gcs TofuBackendType = 4
	// Azure Resource Manager backend using Azure Blob Storage.
	TofuBackendType_azurerm TofuBackendType = 5
	// Consul key-value store backend for state storage and locking.
	TofuBackendType_consul TofuBackendType = 6
	// Generic HTTP backend for state storage.
	TofuBackendType_http TofuBackendType = 7
	// etcdv3 key-value store backend.
	TofuBackendType_etcdv3 TofuBackendType = 8
	// Joyent Manta object storage backend.
	TofuBackendType_manta TofuBackendType = 9
	// OpenStack Swift object storage backend.
	TofuBackendType_swift TofuBackendType = 10
	// JFrog Artifactory-based backend for state storage.
	TofuBackendType_artifactory TofuBackendType = 11
	// Alibaba Cloud Object Storage Service (OSS) backend.
	TofuBackendType_oss TofuBackendType = 12
)

// Enum value maps for TofuBackendType.
var (
	TofuBackendType_name = map[int32]string{
		0:  "tofu_backend_type_unspecified",
		1:  "local",
		2:  "s3",
		3:  "remote",
		4:  "gcs",
		5:  "azurerm",
		6:  "consul",
		7:  "http",
		8:  "etcdv3",
		9:  "manta",
		10: "swift",
		11: "artifactory",
		12: "oss",
	}
	TofuBackendType_value = map[string]int32{
		"tofu_backend_type_unspecified": 0,
		"local":                         1,
		"s3":                            2,
		"remote":                        3,
		"gcs":                           4,
		"azurerm":                       5,
		"consul":                        6,
		"http":                          7,
		"etcdv3":                        8,
		"manta":                         9,
		"swift":                         10,
		"artifactory":                   11,
		"oss":                           12,
	}
)

func (x TofuBackendType) Enum() *TofuBackendType {
	p := new(TofuBackendType)
	*p = x
	return p
}

func (x TofuBackendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TofuBackendType) Descriptor() protoreflect.EnumDescriptor {
	return file_project_planton_shared_tofu_enums_proto_enumTypes[1].Descriptor()
}

func (TofuBackendType) Type() protoreflect.EnumType {
	return &file_project_planton_shared_tofu_enums_proto_enumTypes[1]
}

func (x TofuBackendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TofuBackendType.Descriptor instead.
func (TofuBackendType) EnumDescriptor() ([]byte, []int) {
	return file_project_planton_shared_tofu_enums_proto_rawDescGZIP(), []int{1}
}

var File_project_planton_shared_tofu_enums_proto protoreflect.FileDescriptor

var file_project_planton_shared_tofu_enums_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x74, 0x6f, 0x66, 0x75, 0x2f, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x74, 0x6f, 0x66, 0x75, 0x2a, 0x71, 0x0a, 0x11, 0x54, 0x6f, 0x66, 0x75, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x74,
	0x6f, 0x66, 0x75, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x10, 0x05, 0x2a, 0xbb, 0x01, 0x0a, 0x0f, 0x54, 0x6f,
	0x66, 0x75, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x1d, 0x74, 0x6f, 0x66, 0x75, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x73,
	0x33, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x67, 0x63, 0x73, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x72, 0x6d, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x10,
	0x06, 0x12, 0x08, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x65,
	0x74, 0x63, 0x64, 0x76, 0x33, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x6d, 0x61, 0x6e, 0x74, 0x61,
	0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x77, 0x69, 0x66, 0x74, 0x10, 0x0a, 0x12, 0x0f, 0x0a,
	0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x0b, 0x12, 0x07,
	0x0a, 0x03, 0x6f, 0x73, 0x73, 0x10, 0x0c, 0x42, 0x8a, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x74, 0x6f, 0x66, 0x75, 0x42, 0x0a, 0x45, 0x6e, 0x75,
	0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2f, 0x74, 0x6f, 0x66, 0x75, 0xa2, 0x02, 0x04, 0x50, 0x50, 0x53, 0x54, 0xaa, 0x02, 0x1b,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x6f, 0x66, 0x75, 0xca, 0x02, 0x1b, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5c, 0x54, 0x6f, 0x66, 0x75, 0xe2, 0x02, 0x27, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x5c, 0x54, 0x6f, 0x66, 0x75, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x1e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x50,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x3a, 0x3a,
	0x54, 0x6f, 0x66, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_shared_tofu_enums_proto_rawDescOnce sync.Once
	file_project_planton_shared_tofu_enums_proto_rawDescData = file_project_planton_shared_tofu_enums_proto_rawDesc
)

func file_project_planton_shared_tofu_enums_proto_rawDescGZIP() []byte {
	file_project_planton_shared_tofu_enums_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_tofu_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_shared_tofu_enums_proto_rawDescData)
	})
	return file_project_planton_shared_tofu_enums_proto_rawDescData
}

var file_project_planton_shared_tofu_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_project_planton_shared_tofu_enums_proto_goTypes = []any{
	(TofuOperationType)(0), // 0: project.planton.shared.tofu.TofuOperationType
	(TofuBackendType)(0),   // 1: project.planton.shared.tofu.TofuBackendType
}
var file_project_planton_shared_tofu_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_project_planton_shared_tofu_enums_proto_init() }
func file_project_planton_shared_tofu_enums_proto_init() {
	if File_project_planton_shared_tofu_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_shared_tofu_enums_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_tofu_enums_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_tofu_enums_proto_depIdxs,
		EnumInfos:         file_project_planton_shared_tofu_enums_proto_enumTypes,
	}.Build()
	File_project_planton_shared_tofu_enums_proto = out.File
	file_project_planton_shared_tofu_enums_proto_rawDesc = nil
	file_project_planton_shared_tofu_enums_proto_goTypes = nil
	file_project_planton_shared_tofu_enums_proto_depIdxs = nil
}
