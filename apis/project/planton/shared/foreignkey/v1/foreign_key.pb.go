// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/shared/foreignkey/v1/foreign_key.proto

package foreignkeyv1

import (
	cloudresourcekind "github.com/project-planton/project-planton/apis/project/planton/shared/cloudresourcekind"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValueFromRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind      cloudresourcekind.CloudResourceKind `protobuf:"varint,1,opt,name=kind,proto3,enum=project.planton.shared.cloudresourcekind.CloudResourceKind" json:"kind,omitempty"`
	Env       string                              `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Name      string                              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FieldPath string                              `protobuf:"bytes,4,opt,name=field_path,json=fieldPath,proto3" json:"field_path,omitempty"`
}

func (x *ValueFromRef) Reset() {
	*x = ValueFromRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueFromRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueFromRef) ProtoMessage() {}

func (x *ValueFromRef) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueFromRef.ProtoReflect.Descriptor instead.
func (*ValueFromRef) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescGZIP(), []int{0}
}

func (x *ValueFromRef) GetKind() cloudresourcekind.CloudResourceKind {
	if x != nil {
		return x.Kind
	}
	return cloudresourcekind.CloudResourceKind(0)
}

func (x *ValueFromRef) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ValueFromRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ValueFromRef) GetFieldPath() string {
	if x != nil {
		return x.FieldPath
	}
	return ""
}

type StringValueOrRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     string        `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ValueFrom *ValueFromRef `protobuf:"bytes,2,opt,name=value_from,json=valueFrom,proto3" json:"value_from,omitempty"`
}

func (x *StringValueOrRef) Reset() {
	*x = StringValueOrRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringValueOrRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringValueOrRef) ProtoMessage() {}

func (x *StringValueOrRef) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringValueOrRef.ProtoReflect.Descriptor instead.
func (*StringValueOrRef) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescGZIP(), []int{1}
}

func (x *StringValueOrRef) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringValueOrRef) GetValueFrom() *ValueFromRef {
	if x != nil {
		return x.ValueFrom
	}
	return nil
}

type Int32ValueOrRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     int32         `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	ValueFrom *ValueFromRef `protobuf:"bytes,2,opt,name=value_from,json=valueFrom,proto3" json:"value_from,omitempty"`
}

func (x *Int32ValueOrRef) Reset() {
	*x = Int32ValueOrRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32ValueOrRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32ValueOrRef) ProtoMessage() {}

func (x *Int32ValueOrRef) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32ValueOrRef.ProtoReflect.Descriptor instead.
func (*Int32ValueOrRef) Descriptor() ([]byte, []int) {
	return file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescGZIP(), []int{2}
}

func (x *Int32ValueOrRef) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Int32ValueOrRef) GetValueFrom() *ValueFromRef {
	if x != nil {
		return x.ValueFrom
	}
	return nil
}

var file_project_planton_shared_foreignkey_v1_foreign_key_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*cloudresourcekind.CloudResourceKind)(nil),
		Field:         200001,
		Name:          "project.planton.shared.foreignkey.v1.default_kind",
		Tag:           "varint,200001,opt,name=default_kind,enum=project.planton.shared.cloudresourcekind.CloudResourceKind",
		Filename:      "project/planton/shared/foreignkey/v1/foreign_key.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         200002,
		Name:          "project.planton.shared.foreignkey.v1.default_kind_field_path",
		Tag:           "bytes,200002,opt,name=default_kind_field_path",
		Filename:      "project/planton/shared/foreignkey/v1/foreign_key.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional project.planton.shared.cloudresourcekind.CloudResourceKind default_kind = 200001;
	E_DefaultKind = &file_project_planton_shared_foreignkey_v1_foreign_key_proto_extTypes[0]
	// optional string default_kind_field_path = 200002;
	E_DefaultKindFieldPath = &file_project_planton_shared_foreignkey_v1_foreign_key_proto_extTypes[1]
)

var File_project_planton_shared_foreignkey_v1_foreign_key_proto protoreflect.FileDescriptor

var file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDesc = []byte{
	0x0a, 0x36, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x6b, 0x65, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x42,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x65, 0x66, 0x12, 0x4f, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x7b, 0x0a, 0x10, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x72, 0x52, 0x65, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x51, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x66, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x7a, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x72, 0x52, 0x65, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x51, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x66, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x3a, 0x7f, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xc1, 0x9a, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x6b, 0x69, 0x6e, 0x64, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x3a, 0x56, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xc2, 0x9a, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4b, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x42, 0xd3, 0x02,
	0x0a, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x66, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x61, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x76, 0x31,
	0xa2, 0x02, 0x04, 0x50, 0x50, 0x53, 0x46, 0xaa, 0x02, 0x24, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x24, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x5c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b,
	0x65, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x30, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c,
	0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5c, 0x46,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x3a, 0x3a, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x6b, 0x65, 0x79, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescOnce sync.Once
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescData = file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDesc
)

func file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescGZIP() []byte {
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescOnce.Do(func() {
		file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescData)
	})
	return file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDescData
}

var file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_planton_shared_foreignkey_v1_foreign_key_proto_goTypes = []any{
	(*ValueFromRef)(nil),                     // 0: project.planton.shared.foreignkey.v1.ValueFromRef
	(*StringValueOrRef)(nil),                 // 1: project.planton.shared.foreignkey.v1.StringValueOrRef
	(*Int32ValueOrRef)(nil),                  // 2: project.planton.shared.foreignkey.v1.Int32ValueOrRef
	(cloudresourcekind.CloudResourceKind)(0), // 3: project.planton.shared.cloudresourcekind.CloudResourceKind
	(*descriptorpb.FieldOptions)(nil),        // 4: google.protobuf.FieldOptions
}
var file_project_planton_shared_foreignkey_v1_foreign_key_proto_depIdxs = []int32{
	3, // 0: project.planton.shared.foreignkey.v1.ValueFromRef.kind:type_name -> project.planton.shared.cloudresourcekind.CloudResourceKind
	0, // 1: project.planton.shared.foreignkey.v1.StringValueOrRef.value_from:type_name -> project.planton.shared.foreignkey.v1.ValueFromRef
	0, // 2: project.planton.shared.foreignkey.v1.Int32ValueOrRef.value_from:type_name -> project.planton.shared.foreignkey.v1.ValueFromRef
	4, // 3: project.planton.shared.foreignkey.v1.default_kind:extendee -> google.protobuf.FieldOptions
	4, // 4: project.planton.shared.foreignkey.v1.default_kind_field_path:extendee -> google.protobuf.FieldOptions
	3, // 5: project.planton.shared.foreignkey.v1.default_kind:type_name -> project.planton.shared.cloudresourcekind.CloudResourceKind
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	3, // [3:5] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_shared_foreignkey_v1_foreign_key_proto_init() }
func file_project_planton_shared_foreignkey_v1_foreign_key_proto_init() {
	if File_project_planton_shared_foreignkey_v1_foreign_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ValueFromRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*StringValueOrRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Int32ValueOrRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_shared_foreignkey_v1_foreign_key_proto_goTypes,
		DependencyIndexes: file_project_planton_shared_foreignkey_v1_foreign_key_proto_depIdxs,
		MessageInfos:      file_project_planton_shared_foreignkey_v1_foreign_key_proto_msgTypes,
		ExtensionInfos:    file_project_planton_shared_foreignkey_v1_foreign_key_proto_extTypes,
	}.Build()
	File_project_planton_shared_foreignkey_v1_foreign_key_proto = out.File
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_rawDesc = nil
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_goTypes = nil
	file_project_planton_shared_foreignkey_v1_foreign_key_proto_depIdxs = nil
}
