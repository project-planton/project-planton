// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/provider/kubernetes/stackjobrunnerkubernetes/v1/documentation.proto

//# Overview
//
//The **Stack Job Runner Kubernetes API Resource** provides a consistent and standardized interface for deploying and managing Stack Job Runners on Kubernetes clusters within our infrastructure. This resource simplifies the execution of infrastructure-as-code (IaC) stack jobs in a Kubernetes environment, allowing users to automate deployments, updates, and management of cloud resources efficiently.
//
//## Purpose
//
//We developed this API resource to streamline the deployment and execution of Stack Jobs on Kubernetes clusters. By offering a unified interface, it reduces the complexity involved in setting up and running IaC tasks, enabling users to:
//
//- **Automate Infrastructure Management**: Run stack jobs to deploy and manage cloud resources across different environments.
//- **Simplify Configuration**: Abstract the complexities of setting up Stack Job Runners on Kubernetes, including environment settings and provider configurations.
//- **Integrate Seamlessly**: Utilize existing Kubernetes cluster credentials and integrate with other Kubernetes-native resources.
//- **Optimize Resource Usage**: Efficiently manage resources by leveraging Kubernetes scheduling and scaling capabilities.
//- **Focus on Development**: Allow developers and DevOps teams to concentrate on writing and managing IaC code rather than handling execution environments.
//
//## Key Features
//
//- **Consistent Interface**: Aligns with our existing APIs for deploying open-source software, microservices, and cloud infrastructure.
//- **Simplified Deployment**: Automates the provisioning of Stack Job Runners, including necessary configurations and resource settings.
//- **Seamless Integration**: Works with provided Kubernetes cluster credentials to set up the Kubernetes provider in the stack job.
//- **Scalability**: Leverages Kubernetes to scale Stack Job Runners based on workload demands.
//- **Resource Management**: Allows for efficient scheduling and resource allocation within Kubernetes clusters.
//
//## Use Cases
//
//- **Infrastructure Automation**: Automate the deployment, update, and management of cloud resources using IaC tools within Kubernetes.
//- **Continuous Deployment**: Integrate with CI/CD pipelines to execute stack jobs as part of continuous deployment processes.
//- **Multi-Cloud Management**: Manage resources across different cloud providers by running stack jobs in a Kubernetes environment.
//- **Environment Consistency**: Ensure consistent execution environments for stack jobs across development, staging, and production.
//- **Resource Optimization**: Utilize Kubernetes features like auto-scaling and resource quotas to optimize the execution of stack jobs.
//
//## Future Enhancements
//
//As this resource is currently in a partial implementation phase, future updates will include:
//
//- **Advanced Configuration Options**: Support for customizing resource requests and limits, node selectors, and tolerations.
//- **Enhanced Security Features**: Integration with Kubernetes RBAC and secret management for secure execution of stack jobs.
//- **Monitoring and Logging**: Improved support for logging and monitoring of stack job executions using Kubernetes-native tools.
//- **Automation and CI/CD Integration**: Streamlined processes for integrating with continuous integration and deployment pipelines.
//- **Comprehensive Documentation**: Expanded usage examples, best practices, and troubleshooting guides.

package stackjobrunnerkubernetesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto protoreflect.FileDescriptor

var file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_rawDesc = []byte{
	0x0a, 0x53, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x8c, 0x04, 0x0a, 0x43, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x12,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x8d, 0x01, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x6a,
	0x6f, 0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x50, 0x50, 0x50, 0x4b, 0x53, 0xaa, 0x02, 0x3f, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x3f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x4b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f, 0x62, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x44, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x3a, 0x3a, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x6a, 0x6f,
	0x62, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_goTypes = []any{}
var file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() {
	file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_init()
}
func file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_init() {
	if File_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_depIdxs,
	}.Build()
	File_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto = out.File
	file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_rawDesc = nil
	file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_goTypes = nil
	file_project_planton_provider_kubernetes_stackjobrunnerkubernetes_v1_documentation_proto_depIdxs = nil
}
