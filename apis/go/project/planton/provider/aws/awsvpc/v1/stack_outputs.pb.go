// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: project/planton/provider/aws/awsvpc/v1/stack_outputs.proto

package awsvpcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// aws-vpc stack outputs
type AwsVpcStackOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the vpc created on aws
	VpcId string `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// id of the internet-gateway
	InternetGatewayId string `protobuf:"bytes,2,opt,name=internet_gateway_id,json=internetGatewayId,proto3" json:"internet_gateway_id,omitempty"`
	// private subnets
	PrivateSubnets []*AwsVpcSubnetStackOutputs `protobuf:"bytes,3,rep,name=private_subnets,json=privateSubnets,proto3" json:"private_subnets,omitempty"`
	// public subnets
	PublicSubnets []*AwsVpcSubnetStackOutputs `protobuf:"bytes,4,rep,name=public_subnets,json=publicSubnets,proto3" json:"public_subnets,omitempty"`
}

func (x *AwsVpcStackOutputs) Reset() {
	*x = AwsVpcStackOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsVpcStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcStackOutputs) ProtoMessage() {}

func (x *AwsVpcStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{0}
}

func (x *AwsVpcStackOutputs) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *AwsVpcStackOutputs) GetInternetGatewayId() string {
	if x != nil {
		return x.InternetGatewayId
	}
	return ""
}

func (x *AwsVpcStackOutputs) GetPrivateSubnets() []*AwsVpcSubnetStackOutputs {
	if x != nil {
		return x.PrivateSubnets
	}
	return nil
}

func (x *AwsVpcStackOutputs) GetPublicSubnets() []*AwsVpcSubnetStackOutputs {
	if x != nil {
		return x.PublicSubnets
	}
	return nil
}

// aws-vpc subnet outputs
type AwsVpcSubnetStackOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subnet name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// subnet id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// subnet cidr
	Cidr string `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	// nat-gateway
	NatGateway *AwsVpcNatGatewayStackOutputs `protobuf:"bytes,4,opt,name=nat_gateway,json=natGateway,proto3" json:"nat_gateway,omitempty"`
}

func (x *AwsVpcSubnetStackOutputs) Reset() {
	*x = AwsVpcSubnetStackOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsVpcSubnetStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcSubnetStackOutputs) ProtoMessage() {}

func (x *AwsVpcSubnetStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcSubnetStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcSubnetStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{1}
}

func (x *AwsVpcSubnetStackOutputs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *AwsVpcSubnetStackOutputs) GetNatGateway() *AwsVpcNatGatewayStackOutputs {
	if x != nil {
		return x.NatGateway
	}
	return nil
}

// aws vpc nat-gateway outputs
type AwsVpcNatGatewayStackOutputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of the nat gateway
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// nat gateway private ip address
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty"`
	// nat gateway public ip address
	PublicIp string `protobuf:"bytes,3,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
}

func (x *AwsVpcNatGatewayStackOutputs) Reset() {
	*x = AwsVpcNatGatewayStackOutputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsVpcNatGatewayStackOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsVpcNatGatewayStackOutputs) ProtoMessage() {}

func (x *AwsVpcNatGatewayStackOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsVpcNatGatewayStackOutputs.ProtoReflect.Descriptor instead.
func (*AwsVpcNatGatewayStackOutputs) Descriptor() ([]byte, []int) {
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP(), []int{2}
}

func (x *AwsVpcNatGatewayStackOutputs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AwsVpcNatGatewayStackOutputs) GetPrivateIp() string {
	if x != nil {
		return x.PrivateIp
	}
	return ""
}

func (x *AwsVpcNatGatewayStackOutputs) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

var File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto protoreflect.FileDescriptor

var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x61,
	0x77, 0x73, 0x76, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x76, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x22, 0xaf, 0x02, 0x0a, 0x12, 0x41, 0x77, 0x73, 0x56, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x70, 0x63,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x64, 0x12, 0x69, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x76, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x56, 0x70, 0x63, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x67, 0x0a,
	0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x76, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x77, 0x73, 0x56, 0x70, 0x63, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x41, 0x77, 0x73, 0x56, 0x70,
	0x63, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x65, 0x0a, 0x0b, 0x6e,
	0x61, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x44, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x61, 0x77, 0x73, 0x76, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x56, 0x70, 0x63,
	0x4e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x22, 0x6a, 0x0a, 0x1c, 0x41, 0x77, 0x73, 0x56, 0x70, 0x63, 0x4e, 0x61, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x42, 0xe2,
	0x02, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x76, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x62, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f,
	0x61, 0x77, 0x73, 0x2f, 0x61, 0x77, 0x73, 0x76, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x77,
	0x73, 0x76, 0x70, 0x63, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x50, 0x50, 0x50, 0x41, 0x41, 0xaa, 0x02,
	0x26, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x77, 0x73, 0x2e, 0x41, 0x77,
	0x73, 0x76, 0x70, 0x63, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x26, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5c, 0x41, 0x77, 0x73, 0x5c, 0x41, 0x77, 0x73, 0x76, 0x70, 0x63, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x32, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x6e, 0x74,
	0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5c, 0x41, 0x77, 0x73, 0x5c,
	0x41, 0x77, 0x73, 0x76, 0x70, 0x63, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x2b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3a,
	0x3a, 0x50, 0x6c, 0x61, 0x6e, 0x74, 0x6f, 0x6e, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x3a, 0x3a, 0x41, 0x77, 0x73, 0x3a, 0x3a, 0x41, 0x77, 0x73, 0x76, 0x70, 0x63, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescOnce sync.Once
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData = file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc
)

func file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescGZIP() []byte {
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescOnce.Do(func() {
		file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData)
	})
	return file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDescData
}

var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes = []any{
	(*AwsVpcStackOutputs)(nil),           // 0: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs
	(*AwsVpcSubnetStackOutputs)(nil),     // 1: project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	(*AwsVpcNatGatewayStackOutputs)(nil), // 2: project.planton.provider.aws.awsvpc.v1.AwsVpcNatGatewayStackOutputs
}
var file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs = []int32{
	1, // 0: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs.private_subnets:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	1, // 1: project.planton.provider.aws.awsvpc.v1.AwsVpcStackOutputs.public_subnets:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs
	2, // 2: project.planton.provider.aws.awsvpc.v1.AwsVpcSubnetStackOutputs.nat_gateway:type_name -> project.planton.provider.aws.awsvpc.v1.AwsVpcNatGatewayStackOutputs
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_init() }
func file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_init() {
	if File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AwsVpcStackOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AwsVpcSubnetStackOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AwsVpcNatGatewayStackOutputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes,
		DependencyIndexes: file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs,
		MessageInfos:      file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_msgTypes,
	}.Build()
	File_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto = out.File
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_rawDesc = nil
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_goTypes = nil
	file_project_planton_provider_aws_awsvpc_v1_stack_outputs_proto_depIdxs = nil
}
